
Air Purifier V1b.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000f90c  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000f90c  0000f90c  0001f90c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000004dc  20000000  0000f914  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00001ca0  200004e0  0000fdf8  000204e0  2**3
                  ALLOC
  4 .stack        00002000  20002180  00011a98  000204e0  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  000204dc  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020504  2**0
                  CONTENTS, READONLY
  7 .debug_info   00019028  00000000  00000000  0002055d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000ed8  00000000  00000000  00039585  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00007304  00000000  00000000  0003a45d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000004e0  00000000  00000000  00041761  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000750  00000000  00000000  00041c41  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001390c  00000000  00000000  00042391  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00003250  00000000  00000000  00055c9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00079fc6  00000000  00000000  00058eed  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001a28  00000000  00000000  000d2eb4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	80 41 00 20 19 01 00 00 15 01 00 00 15 01 00 00     .A. ............
	...
      2c:	15 01 00 00 00 00 00 00 00 00 00 00 15 01 00 00     ................
      3c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      4c:	cd 37 00 00 11 48 00 00 15 01 00 00 15 01 00 00     .7...H..........
      5c:	15 01 00 00 15 01 00 00 69 48 00 00 15 01 00 00     ........iH......
      6c:	dd 17 00 00 15 01 00 00 59 19 00 00 15 01 00 00     ........Y.......
      7c:	fd 44 00 00 15 01 00 00 19 47 00 00 15 01 00 00     .D.......G......
      8c:	dd 43 00 00 15 01 00 00 00 00 00 00 00 00 00 00     .C..............
      9c:	05 0b 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      ac:	15 01 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200004e0 	.word	0x200004e0
      d4:	00000000 	.word	0x00000000
      d8:	0000f914 	.word	0x0000f914

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200004e4 	.word	0x200004e4
     108:	0000f914 	.word	0x0000f914
     10c:	0000f914 	.word	0x0000f914
     110:	00000000 	.word	0x00000000

00000114 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     114:	e7fe      	b.n	114 <Dummy_Handler>
	...

00000118 <Reset_Handler>:
{
     118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     11a:	4a2a      	ldr	r2, [pc, #168]	; (1c4 <Reset_Handler+0xac>)
     11c:	4b2a      	ldr	r3, [pc, #168]	; (1c8 <Reset_Handler+0xb0>)
     11e:	429a      	cmp	r2, r3
     120:	d011      	beq.n	146 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     122:	001a      	movs	r2, r3
     124:	4b29      	ldr	r3, [pc, #164]	; (1cc <Reset_Handler+0xb4>)
     126:	429a      	cmp	r2, r3
     128:	d20d      	bcs.n	146 <Reset_Handler+0x2e>
     12a:	4a29      	ldr	r2, [pc, #164]	; (1d0 <Reset_Handler+0xb8>)
     12c:	3303      	adds	r3, #3
     12e:	1a9b      	subs	r3, r3, r2
     130:	089b      	lsrs	r3, r3, #2
     132:	3301      	adds	r3, #1
     134:	009b      	lsls	r3, r3, #2
     136:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     138:	4823      	ldr	r0, [pc, #140]	; (1c8 <Reset_Handler+0xb0>)
     13a:	4922      	ldr	r1, [pc, #136]	; (1c4 <Reset_Handler+0xac>)
     13c:	588c      	ldr	r4, [r1, r2]
     13e:	5084      	str	r4, [r0, r2]
     140:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     142:	429a      	cmp	r2, r3
     144:	d1fa      	bne.n	13c <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     146:	4a23      	ldr	r2, [pc, #140]	; (1d4 <Reset_Handler+0xbc>)
     148:	4b23      	ldr	r3, [pc, #140]	; (1d8 <Reset_Handler+0xc0>)
     14a:	429a      	cmp	r2, r3
     14c:	d20a      	bcs.n	164 <Reset_Handler+0x4c>
     14e:	43d3      	mvns	r3, r2
     150:	4921      	ldr	r1, [pc, #132]	; (1d8 <Reset_Handler+0xc0>)
     152:	185b      	adds	r3, r3, r1
     154:	2103      	movs	r1, #3
     156:	438b      	bics	r3, r1
     158:	3304      	adds	r3, #4
     15a:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     15c:	2100      	movs	r1, #0
     15e:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     160:	4293      	cmp	r3, r2
     162:	d1fc      	bne.n	15e <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     164:	4a1d      	ldr	r2, [pc, #116]	; (1dc <Reset_Handler+0xc4>)
     166:	21ff      	movs	r1, #255	; 0xff
     168:	4b1d      	ldr	r3, [pc, #116]	; (1e0 <Reset_Handler+0xc8>)
     16a:	438b      	bics	r3, r1
     16c:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     16e:	39fd      	subs	r1, #253	; 0xfd
     170:	2390      	movs	r3, #144	; 0x90
     172:	005b      	lsls	r3, r3, #1
     174:	4a1b      	ldr	r2, [pc, #108]	; (1e4 <Reset_Handler+0xcc>)
     176:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     178:	4a1b      	ldr	r2, [pc, #108]	; (1e8 <Reset_Handler+0xd0>)
     17a:	78d3      	ldrb	r3, [r2, #3]
     17c:	2503      	movs	r5, #3
     17e:	43ab      	bics	r3, r5
     180:	2402      	movs	r4, #2
     182:	4323      	orrs	r3, r4
     184:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     186:	78d3      	ldrb	r3, [r2, #3]
     188:	270c      	movs	r7, #12
     18a:	43bb      	bics	r3, r7
     18c:	2608      	movs	r6, #8
     18e:	4333      	orrs	r3, r6
     190:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     192:	4b16      	ldr	r3, [pc, #88]	; (1ec <Reset_Handler+0xd4>)
     194:	7b98      	ldrb	r0, [r3, #14]
     196:	2230      	movs	r2, #48	; 0x30
     198:	4390      	bics	r0, r2
     19a:	2220      	movs	r2, #32
     19c:	4310      	orrs	r0, r2
     19e:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     1a0:	7b99      	ldrb	r1, [r3, #14]
     1a2:	43b9      	bics	r1, r7
     1a4:	4331      	orrs	r1, r6
     1a6:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     1a8:	7b9a      	ldrb	r2, [r3, #14]
     1aa:	43aa      	bics	r2, r5
     1ac:	4322      	orrs	r2, r4
     1ae:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     1b0:	4a0f      	ldr	r2, [pc, #60]	; (1f0 <Reset_Handler+0xd8>)
     1b2:	6853      	ldr	r3, [r2, #4]
     1b4:	2180      	movs	r1, #128	; 0x80
     1b6:	430b      	orrs	r3, r1
     1b8:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     1ba:	4b0e      	ldr	r3, [pc, #56]	; (1f4 <Reset_Handler+0xdc>)
     1bc:	4798      	blx	r3
        main();
     1be:	4b0e      	ldr	r3, [pc, #56]	; (1f8 <Reset_Handler+0xe0>)
     1c0:	4798      	blx	r3
     1c2:	e7fe      	b.n	1c2 <Reset_Handler+0xaa>
     1c4:	0000f914 	.word	0x0000f914
     1c8:	20000000 	.word	0x20000000
     1cc:	200004dc 	.word	0x200004dc
     1d0:	20000004 	.word	0x20000004
     1d4:	200004e0 	.word	0x200004e0
     1d8:	20002180 	.word	0x20002180
     1dc:	e000ed00 	.word	0xe000ed00
     1e0:	00000000 	.word	0x00000000
     1e4:	41007000 	.word	0x41007000
     1e8:	41005000 	.word	0x41005000
     1ec:	41004800 	.word	0x41004800
     1f0:	41004000 	.word	0x41004000
     1f4:	00008b8d 	.word	0x00008b8d
     1f8:	00003fd5 	.word	0x00003fd5

000001fc <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
	// Keep the default device state after reset
	SystemCoreClock = __SYSTEM_CLOCK;
     1fc:	4a01      	ldr	r2, [pc, #4]	; (204 <SystemInit+0x8>)
     1fe:	4b02      	ldr	r3, [pc, #8]	; (208 <SystemInit+0xc>)
     200:	601a      	str	r2, [r3, #0]
	return;
}
     202:	4770      	bx	lr
     204:	000f4240 	.word	0x000f4240
     208:	20000000 	.word	0x20000000

0000020c <_ZL14boundary_checkPhhhP10bme680_dev>:
			gde027w3.drawString(200, 20, co_min_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
			gde027w3.drawString(200, 30, no2_min_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
			
			gde027w3.drawString(200, 40, nh3_max_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
			gde027w3.drawString(200, 50, co_max_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
			gde027w3.drawString(200, 60, no2_max_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
     20c:	b530      	push	{r4, r5, lr}
     20e:	2800      	cmp	r0, #0
     210:	d015      	beq.n	23e <_ZL14boundary_checkPhhhP10bme680_dev+0x32>
     212:	7804      	ldrb	r4, [r0, #0]
     214:	428c      	cmp	r4, r1
     216:	da05      	bge.n	224 <_ZL14boundary_checkPhhhP10bme680_dev+0x18>
     218:	7001      	strb	r1, [r0, #0]
     21a:	2446      	movs	r4, #70	; 0x46
     21c:	5d19      	ldrb	r1, [r3, r4]
     21e:	2501      	movs	r5, #1
			
			gde027w3.RefreshPartial(200, 10, 50, 70);//x,y,w,h
     220:	4329      	orrs	r1, r5
     222:	5519      	strb	r1, [r3, r4]
     224:	7804      	ldrb	r4, [r0, #0]
     226:	2100      	movs	r1, #0
     228:	4294      	cmp	r4, r2
     22a:	dd06      	ble.n	23a <_ZL14boundary_checkPhhhP10bme680_dev+0x2e>
     22c:	7002      	strb	r2, [r0, #0]
     22e:	3146      	adds	r1, #70	; 0x46
			//gde027w3.DisplayFrame(); //update whole display
			
            if(cnt <= 5)break; //success
     230:	5c5a      	ldrb	r2, [r3, r1]
     232:	2002      	movs	r0, #2
            delay_ms(200);
     234:	4302      	orrs	r2, r0
     236:	545a      	strb	r2, [r3, r1]
     238:	2100      	movs	r1, #0
            temp_nh3_ADC=readADC(2); //muxpos input   13 11
     23a:	0008      	movs	r0, r1
     23c:	bd30      	pop	{r4, r5, pc}
     23e:	2101      	movs	r1, #1
     240:	4249      	negs	r1, r1
			temp_co_ADC=readADC(3);
     242:	e7fa      	b.n	23a <_ZL14boundary_checkPhhhP10bme680_dev+0x2e>

00000244 <_ZL14null_ptr_checkPK10bme680_dev>:
     244:	2800      	cmp	r0, #0
     246:	d00a      	beq.n	25e <_ZL14null_ptr_checkPK10bme680_dev+0x1a>
			temp_no2_ADC=readADC(4);
     248:	6c83      	ldr	r3, [r0, #72]	; 0x48
     24a:	2b00      	cmp	r3, #0
     24c:	d00a      	beq.n	264 <_ZL14null_ptr_checkPK10bme680_dev+0x20>
     24e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
     250:	2b00      	cmp	r3, #0
     252:	d00a      	beq.n	26a <_ZL14null_ptr_checkPK10bme680_dev+0x26>
     254:	6d03      	ldr	r3, [r0, #80]	; 0x50
     256:	4258      	negs	r0, r3
     258:	4158      	adcs	r0, r3
     25a:	4240      	negs	r0, r0
     25c:	4770      	bx	lr
     25e:	2001      	movs	r0, #1
				 temp_nh3_ADC2=readADC(2); //muxpos input   13 11
     260:	4240      	negs	r0, r0
     262:	e7fb      	b.n	25c <_ZL14null_ptr_checkPK10bme680_dev+0x18>
     264:	2001      	movs	r0, #1
     266:	4240      	negs	r0, r0
     268:	e7f8      	b.n	25c <_ZL14null_ptr_checkPK10bme680_dev+0x18>
     26a:	2001      	movs	r0, #1
     26c:	4240      	negs	r0, r0
     26e:	e7f5      	b.n	25c <_ZL14null_ptr_checkPK10bme680_dev+0x18>

00000270 <_ZL12set_mem_pagehP10bme680_dev>:
     270:	b530      	push	{r4, r5, lr}
     272:	b083      	sub	sp, #12
     274:	0004      	movs	r4, r0
     276:	000d      	movs	r5, r1
     278:	0008      	movs	r0, r1
     27a:	4b19      	ldr	r3, [pc, #100]	; (2e0 <_ZL12set_mem_pagehP10bme680_dev+0x70>)
     27c:	4798      	blx	r3
     27e:	2800      	cmp	r0, #0
     280:	d116      	bne.n	2b0 <_ZL12set_mem_pagehP10bme680_dev+0x40>
     282:	227f      	movs	r2, #127	; 0x7f
     284:	0fe3      	lsrs	r3, r4, #31
     286:	17d1      	asrs	r1, r2, #31
     288:	42a2      	cmp	r2, r4
     28a:	414b      	adcs	r3, r1
     28c:	011b      	lsls	r3, r3, #4
     28e:	78ea      	ldrb	r2, [r5, #3]
     290:	429a      	cmp	r2, r3
     292:	d00d      	beq.n	2b0 <_ZL12set_mem_pagehP10bme680_dev+0x40>
     294:	70eb      	strb	r3, [r5, #3]
     296:	7868      	ldrb	r0, [r5, #1]
     298:	2301      	movs	r3, #1
     29a:	466a      	mov	r2, sp
     29c:	3207      	adds	r2, #7
     29e:	21f3      	movs	r1, #243	; 0xf3
        }
	
	while(gde027w3.update_inprogress);
     2a0:	6cac      	ldr	r4, [r5, #72]	; 0x48
     2a2:	47a0      	blx	r4
     2a4:	2354      	movs	r3, #84	; 0x54
     2a6:	54e8      	strb	r0, [r5, r3]
     2a8:	2800      	cmp	r0, #0
	
	//after done show values on display
	//have to save values in program flash manually, since EEPROM will get deleted during erase cycle
	
	
char nh3_string[10]={0,0,0,0,0,0,0,0,0,0};
     2aa:	d003      	beq.n	2b4 <_ZL12set_mem_pagehP10bme680_dev+0x44>
     2ac:	2002      	movs	r0, #2
     2ae:	4240      	negs	r0, r0
     2b0:	b003      	add	sp, #12
     2b2:	bd30      	pop	{r4, r5, pc}
char co_string[10]={0,0,0,0,0,0,0,0,0,0};
     2b4:	466b      	mov	r3, sp
     2b6:	1dda      	adds	r2, r3, #7
     2b8:	7813      	ldrb	r3, [r2, #0]
     2ba:	2110      	movs	r1, #16
char no2_string[10]={0,0,0,0,0,0,0,0,0,0};
     2bc:	438b      	bics	r3, r1
     2be:	78e8      	ldrb	r0, [r5, #3]
     2c0:	4001      	ands	r1, r0
     2c2:	430b      	orrs	r3, r1

char calib_string[22]="Calibration Complete!";
     2c4:	7013      	strb	r3, [r2, #0]
     2c6:	7868      	ldrb	r0, [r5, #1]
     2c8:	2301      	movs	r3, #1
     2ca:	2173      	movs	r1, #115	; 0x73
     2cc:	6cec      	ldr	r4, [r5, #76]	; 0x4c
     2ce:	47a0      	blx	r4
     2d0:	2254      	movs	r2, #84	; 0x54
     2d2:	54a8      	strb	r0, [r5, r2]
     2d4:	2800      	cmp	r0, #0

char nh3_string_mark[10]={'N','H','3',':',0,0,0,0,0,0};
     2d6:	d0eb      	beq.n	2b0 <_ZL12set_mem_pagehP10bme680_dev+0x40>
     2d8:	2002      	movs	r0, #2
     2da:	4240      	negs	r0, r0
     2dc:	e7e8      	b.n	2b0 <_ZL12set_mem_pagehP10bme680_dev+0x40>
     2de:	46c0      	nop			; (mov r8, r8)
     2e0:	00000245 	.word	0x00000245

000002e4 <_ZL12get_mem_pageP10bme680_dev>:
     2e4:	b530      	push	{r4, r5, lr}
     2e6:	b083      	sub	sp, #12
     2e8:	0004      	movs	r4, r0
char co_string_mark[10]={'C','O',':',0,0,0,0,0,0,0};
     2ea:	4b0d      	ldr	r3, [pc, #52]	; (320 <_ZL12get_mem_pageP10bme680_dev+0x3c>)
     2ec:	4798      	blx	r3
     2ee:	2800      	cmp	r0, #0
     2f0:	d001      	beq.n	2f6 <_ZL12get_mem_pageP10bme680_dev+0x12>
     2f2:	b003      	add	sp, #12
     2f4:	bd30      	pop	{r4, r5, pc}
     2f6:	7860      	ldrb	r0, [r4, #1]
     2f8:	2301      	movs	r3, #1
     2fa:	466a      	mov	r2, sp
char no2_string_mark[10]={'N','O','2',':',0,0,0,0,0,0};
     2fc:	3207      	adds	r2, #7
     2fe:	21f3      	movs	r1, #243	; 0xf3
     300:	6ca5      	ldr	r5, [r4, #72]	; 0x48
     302:	47a8      	blx	r5
     304:	2254      	movs	r2, #84	; 0x54
     306:	54a0      	strb	r0, [r4, r2]
     308:	2800      	cmp	r0, #0
	
	temp_nh3_ADC_min=abs(temp_nh3_ADC_max-temp_nh3_ADC_min);
	temp_co_ADC_min=abs( temp_co_ADC_max-temp_co_ADC_min);
	temp_no2_ADC_min=abs(temp_no2_ADC_max-temp_no2_ADC_min);
	
	intToStr(temp_nh3_ADC,nh3_string,2);
     30a:	d105      	bne.n	318 <_ZL12get_mem_pageP10bme680_dev+0x34>
     30c:	466b      	mov	r3, sp
     30e:	79da      	ldrb	r2, [r3, #7]
     310:	2310      	movs	r3, #16
     312:	4013      	ands	r3, r2
	intToStr(temp_co_ADC,co_string,2);
     314:	70e3      	strb	r3, [r4, #3]
     316:	e7ec      	b.n	2f2 <_ZL12get_mem_pageP10bme680_dev+0xe>
     318:	2002      	movs	r0, #2
     31a:	4240      	negs	r0, r0
	intToStr(temp_no2_ADC,no2_string,2);
     31c:	e7e9      	b.n	2f2 <_ZL12get_mem_pageP10bme680_dev+0xe>
     31e:	46c0      	nop			; (mov r8, r8)
     320:	00000245 	.word	0x00000245

00000324 <_Z10PinConfigsv>:
	temp_nh3_ADC_min=abs(temp_nh3_ADC_max-temp_nh3_ADC_min);
     324:	4a0d      	ldr	r2, [pc, #52]	; (35c <_Z10PinConfigsv+0x38>)
     326:	4b0e      	ldr	r3, [pc, #56]	; (360 <_Z10PinConfigsv+0x3c>)
     328:	601a      	str	r2, [r3, #0]
     32a:	4b0e      	ldr	r3, [pc, #56]	; (364 <_Z10PinConfigsv+0x40>)
     32c:	4a0e      	ldr	r2, [pc, #56]	; (368 <_Z10PinConfigsv+0x44>)
     32e:	629a      	str	r2, [r3, #40]	; 0x28
	
	intToStr(temp_nh3_ADC_min,nh3_min_string,2);
     330:	4a0e      	ldr	r2, [pc, #56]	; (36c <_Z10PinConfigsv+0x48>)
     332:	629a      	str	r2, [r3, #40]	; 0x28
     334:	4a0e      	ldr	r2, [pc, #56]	; (370 <_Z10PinConfigsv+0x4c>)
     336:	629a      	str	r2, [r3, #40]	; 0x28
     338:	490e      	ldr	r1, [pc, #56]	; (374 <_Z10PinConfigsv+0x50>)
	temp_co_ADC_min=abs( temp_co_ADC_max-temp_co_ADC_min);
     33a:	6299      	str	r1, [r3, #40]	; 0x28
     33c:	4a0e      	ldr	r2, [pc, #56]	; (378 <_Z10PinConfigsv+0x54>)
     33e:	629a      	str	r2, [r3, #40]	; 0x28
     340:	4a0e      	ldr	r2, [pc, #56]	; (37c <_Z10PinConfigsv+0x58>)
     342:	629a      	str	r2, [r3, #40]	; 0x28
     344:	4a0e      	ldr	r2, [pc, #56]	; (380 <_Z10PinConfigsv+0x5c>)
	intToStr(temp_co_ADC_min,co_min_string,2);
     346:	629a      	str	r2, [r3, #40]	; 0x28
     348:	4a0e      	ldr	r2, [pc, #56]	; (384 <_Z10PinConfigsv+0x60>)
     34a:	629a      	str	r2, [r3, #40]	; 0x28
     34c:	480e      	ldr	r0, [pc, #56]	; (388 <_Z10PinConfigsv+0x64>)
     34e:	4a0f      	ldr	r2, [pc, #60]	; (38c <_Z10PinConfigsv+0x68>)
	temp_no2_ADC_min=abs(temp_no2_ADC_max-temp_no2_ADC_min);
     350:	6010      	str	r0, [r2, #0]
     352:	22a8      	movs	r2, #168	; 0xa8
     354:	5099      	str	r1, [r3, r2]
     356:	490e      	ldr	r1, [pc, #56]	; (390 <_Z10PinConfigsv+0x6c>)
     358:	5099      	str	r1, [r3, r2]
     35a:	4770      	bx	lr
	intToStr(temp_no2_ADC_min,no2_min_string,2);
     35c:	0801d0c0 	.word	0x0801d0c0
     360:	41004408 	.word	0x41004408
     364:	41004400 	.word	0x41004400
	//intToStr(temp_nh3_ADC_max,nh3_max_string,2);
	//intToStr(temp_co_ADC_max,co_max_string,2);
	//intToStr(temp_no2_ADC_max,no2_max_string,2);
	
		
	gde027w3.ClearFrame();
     368:	50012000 	.word	0x50012000
     36c:	54010001 	.word	0x54010001
     370:	52010300 	.word	0x52010300
	//gde027w3.drawString(200, 40, nh3_max_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
	//gde027w3.drawString(200, 50, co_max_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
	//gde027w3.drawString(200, 60, no2_max_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
	
	
	gde027w3.drawString(180, 40, calib_string , GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
     374:	53010c00 	.word	0x53010c00
     378:	d5010004 	.word	0xd5010004
     37c:	d20100ca 	.word	0xd20100ca
     380:	d3010030 	.word	0xd3010030
     384:	d6010300 	.word	0xd6010300
     388:	00800004 	.word	0x00800004
	
	gde027w3.drawString(100, 60, nh3_string_mark, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
     38c:	41004488 	.word	0x41004488
     390:	d0010040 	.word	0xd0010040

00000394 <_Z11ClockConfigv>:
     394:	b510      	push	{r4, lr}
     396:	4b88      	ldr	r3, [pc, #544]	; (5b8 <_Z11ClockConfigv+0x224>)
     398:	699a      	ldr	r2, [r3, #24]
	gde027w3.drawString(100, 70, co_string_mark, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
     39a:	2004      	movs	r0, #4
     39c:	4302      	orrs	r2, r0
     39e:	619a      	str	r2, [r3, #24]
     3a0:	4a86      	ldr	r2, [pc, #536]	; (5bc <_Z11ClockConfigv+0x228>)
     3a2:	6812      	ldr	r2, [r2, #0]
     3a4:	04d2      	lsls	r2, r2, #19
     3a6:	6999      	ldr	r1, [r3, #24]
     3a8:	0e52      	lsrs	r2, r2, #25
	gde027w3.drawString(100, 80, no2_string_mark, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
     3aa:	0412      	lsls	r2, r2, #16
     3ac:	4c84      	ldr	r4, [pc, #528]	; (5c0 <_Z11ClockConfigv+0x22c>)
     3ae:	4021      	ands	r1, r4
     3b0:	430a      	orrs	r2, r1
     3b2:	619a      	str	r2, [r3, #24]
     3b4:	699a      	ldr	r2, [r3, #24]
     3b6:	2102      	movs	r1, #2
     3b8:	430a      	orrs	r2, r1
	
	gde027w3.drawString(150, 60, nh3_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
     3ba:	619a      	str	r2, [r3, #24]
     3bc:	6a19      	ldr	r1, [r3, #32]
     3be:	4a81      	ldr	r2, [pc, #516]	; (5c4 <_Z11ClockConfigv+0x230>)
     3c0:	4011      	ands	r1, r2
     3c2:	6219      	str	r1, [r3, #32]
     3c4:	4980      	ldr	r1, [pc, #512]	; (5c8 <_Z11ClockConfigv+0x234>)
     3c6:	684a      	ldr	r2, [r1, #4]
     3c8:	241e      	movs	r4, #30
	gde027w3.drawString(150, 70, co_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
     3ca:	43a2      	bics	r2, r4
     3cc:	4302      	orrs	r2, r0
     3ce:	604a      	str	r2, [r1, #4]
     3d0:	2200      	movs	r2, #0
     3d2:	849a      	strh	r2, [r3, #36]	; 0x24
     3d4:	0019      	movs	r1, r3
     3d6:	3210      	adds	r2, #16
     3d8:	68cb      	ldr	r3, [r1, #12]
	gde027w3.drawString(150, 80, no2_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
     3da:	421a      	tst	r2, r3
     3dc:	d0fc      	beq.n	3d8 <_Z11ClockConfigv+0x44>
     3de:	4976      	ldr	r1, [pc, #472]	; (5b8 <_Z11ClockConfigv+0x224>)
     3e0:	4b7a      	ldr	r3, [pc, #488]	; (5cc <_Z11ClockConfigv+0x238>)
     3e2:	62cb      	str	r3, [r1, #44]	; 0x2c
     3e4:	4b75      	ldr	r3, [pc, #468]	; (5bc <_Z11ClockConfigv+0x228>)
     3e6:	681b      	ldr	r3, [r3, #0]
     3e8:	0e9b      	lsrs	r3, r3, #26
     3ea:	029b      	lsls	r3, r3, #10
	
	gde027w3.DisplayFrame(); //update whole display
     3ec:	4a78      	ldr	r2, [pc, #480]	; (5d0 <_Z11ClockConfigv+0x23c>)
     3ee:	6812      	ldr	r2, [r2, #0]
     3f0:	0592      	lsls	r2, r2, #22
	while(gde027w3.update_inprogress);
     3f2:	0d92      	lsrs	r2, r2, #22
     3f4:	4313      	orrs	r3, r2
     3f6:	628b      	str	r3, [r1, #40]	; 0x28
     3f8:	4b76      	ldr	r3, [pc, #472]	; (5d4 <_Z11ClockConfigv+0x240>)
     3fa:	848b      	strh	r3, [r1, #36]	; 0x24

}
     3fc:	2210      	movs	r2, #16
     3fe:	68cb      	ldr	r3, [r1, #12]
     400:	421a      	tst	r2, r3
     402:	d0fc      	beq.n	3fe <_Z11ClockConfigv+0x6a>
     404:	2280      	movs	r2, #128	; 0x80
     406:	0052      	lsls	r2, r2, #1
     408:	4b73      	ldr	r3, [pc, #460]	; (5d8 <_Z11ClockConfigv+0x244>)
     40a:	609a      	str	r2, [r3, #8]
     40c:	001a      	movs	r2, r3
     40e:	7853      	ldrb	r3, [r2, #1]
     410:	09db      	lsrs	r3, r3, #7
     412:	d1fc      	bne.n	40e <_Z11ClockConfigv+0x7a>
     414:	4a71      	ldr	r2, [pc, #452]	; (5dc <_Z11ClockConfigv+0x248>)
     416:	4b70      	ldr	r3, [pc, #448]	; (5d8 <_Z11ClockConfigv+0x244>)
     418:	605a      	str	r2, [r3, #4]
     41a:	001a      	movs	r2, r3
     41c:	7853      	ldrb	r3, [r2, #1]
     41e:	09db      	lsrs	r3, r3, #7
     420:	d1fc      	bne.n	41c <_Z11ClockConfigv+0x88>
     422:	4a6f      	ldr	r2, [pc, #444]	; (5e0 <_Z11ClockConfigv+0x24c>)
     424:	4b6c      	ldr	r3, [pc, #432]	; (5d8 <_Z11ClockConfigv+0x244>)
     426:	805a      	strh	r2, [r3, #2]
     428:	001a      	movs	r2, r3
     42a:	7853      	ldrb	r3, [r2, #1]
     42c:	09db      	lsrs	r3, r3, #7
     42e:	d1fc      	bne.n	42a <_Z11ClockConfigv+0x96>
    while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
	GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID_SERCOM1_CORE| GCLK_CLKCTRL_GEN_GCLK0 | GCLK_CLKCTRL_CLKEN; 
    while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
	
	// 2. Configure the Generic Clock 1 to take the OSC32K //max div is 2^16
	GCLK->GENDIV.reg = GCLK_GENDIV_ID(1) | GCLK_GENDIV_DIV (1);
     430:	2202      	movs	r2, #2
     432:	32ff      	adds	r2, #255	; 0xff
     434:	4b68      	ldr	r3, [pc, #416]	; (5d8 <_Z11ClockConfigv+0x244>)
     436:	609a      	str	r2, [r3, #8]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1);
     438:	001a      	movs	r2, r3
     43a:	7853      	ldrb	r3, [r2, #1]
     43c:	09db      	lsrs	r3, r3, #7
     43e:	d1fc      	bne.n	43a <_Z11ClockConfigv+0xa6>
    GCLK->GENCTRL.reg =  GCLK_GENCTRL_IDC |GCLK_GENCTRL_ID(1) | GCLK_GENCTRL_GENEN| GCLK_GENCTRL_SRC_OSC32K;
     440:	4a68      	ldr	r2, [pc, #416]	; (5e4 <_Z11ClockConfigv+0x250>)
     442:	4b65      	ldr	r3, [pc, #404]	; (5d8 <_Z11ClockConfigv+0x244>)
     444:	605a      	str	r2, [r3, #4]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     446:	001a      	movs	r2, r3
     448:	7853      	ldrb	r3, [r2, #1]
     44a:	09db      	lsrs	r3, r3, #7
     44c:	d1fc      	bne.n	448 <_Z11ClockConfigv+0xb4>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_WDT|  GCLK_CLKCTRL_GEN_GCLK1 | GCLK_CLKCTRL_CLKEN;
     44e:	4a66      	ldr	r2, [pc, #408]	; (5e8 <_Z11ClockConfigv+0x254>)
     450:	4b61      	ldr	r3, [pc, #388]	; (5d8 <_Z11ClockConfigv+0x244>)
     452:	805a      	strh	r2, [r3, #2]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     454:	001a      	movs	r2, r3
     456:	7853      	ldrb	r3, [r2, #1]
     458:	09db      	lsrs	r3, r3, #7
     45a:	d1fc      	bne.n	456 <_Z11ClockConfigv+0xc2>
	//GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_EVSYS_0|  GCLK_CLKCTRL_GEN_GCLK1 | GCLK_CLKCTRL_CLKEN;
	//while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
	
	// 3. Configure the Generic Clock 2 to take the OSC8M, 8mhz out //max div is 31?!?
	GCLK->GENDIV.reg = GCLK_GENDIV_ID(2) | GCLK_GENDIV_DIV (1);
     45c:	2281      	movs	r2, #129	; 0x81
     45e:	0052      	lsls	r2, r2, #1
     460:	4b5d      	ldr	r3, [pc, #372]	; (5d8 <_Z11ClockConfigv+0x244>)
     462:	609a      	str	r2, [r3, #8]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1);
     464:	001a      	movs	r2, r3
     466:	7853      	ldrb	r3, [r2, #1]
     468:	09db      	lsrs	r3, r3, #7
     46a:	d1fc      	bne.n	466 <_Z11ClockConfigv+0xd2>
	GCLK->GENCTRL.reg =  GCLK_GENCTRL_ID(2) | GCLK_GENCTRL_GENEN| GCLK_GENCTRL_SRC_OSC8M; //source clk
     46c:	4a5f      	ldr	r2, [pc, #380]	; (5ec <_Z11ClockConfigv+0x258>)
     46e:	4b5a      	ldr	r3, [pc, #360]	; (5d8 <_Z11ClockConfigv+0x244>)
     470:	605a      	str	r2, [r3, #4]
    while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY );
     472:	001a      	movs	r2, r3
     474:	7853      	ldrb	r3, [r2, #1]
     476:	b25b      	sxtb	r3, r3
     478:	2b00      	cmp	r3, #0
     47a:	dbfb      	blt.n	474 <_Z11ClockConfigv+0xe0>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_SERCOM0_CORE| GCLK_CLKCTRL_GEN_GCLK2 | GCLK_CLKCTRL_CLKEN;
     47c:	4a5c      	ldr	r2, [pc, #368]	; (5f0 <_Z11ClockConfigv+0x25c>)
     47e:	4b56      	ldr	r3, [pc, #344]	; (5d8 <_Z11ClockConfigv+0x244>)
     480:	805a      	strh	r2, [r3, #2]
    while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY );
     482:	001a      	movs	r2, r3
     484:	7853      	ldrb	r3, [r2, #1]
     486:	b25b      	sxtb	r3, r3
     488:	2b00      	cmp	r3, #0
     48a:	dbfb      	blt.n	484 <_Z11ClockConfigv+0xf0>
	
	// 4. Configure the Generic Clock 3 to take the OSC32K, div by 32,
	GCLK->GENDIV.reg =   GCLK_GENDIV_ID(3) | GCLK_GENDIV_DIV(32);
     48c:	4a59      	ldr	r2, [pc, #356]	; (5f4 <_Z11ClockConfigv+0x260>)
     48e:	4b52      	ldr	r3, [pc, #328]	; (5d8 <_Z11ClockConfigv+0x244>)
     490:	609a      	str	r2, [r3, #8]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1);
     492:	001a      	movs	r2, r3
     494:	7853      	ldrb	r3, [r2, #1]
     496:	09db      	lsrs	r3, r3, #7
     498:	d1fc      	bne.n	494 <_Z11ClockConfigv+0x100>
	GCLK->GENCTRL.reg =  GCLK_GENCTRL_ID(3) | GCLK_GENCTRL_GENEN| GCLK_GENCTRL_SRC_OSC32K;
     49a:	4a57      	ldr	r2, [pc, #348]	; (5f8 <_Z11ClockConfigv+0x264>)
     49c:	4b4e      	ldr	r3, [pc, #312]	; (5d8 <_Z11ClockConfigv+0x244>)
     49e:	605a      	str	r2, [r3, #4]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     4a0:	001a      	movs	r2, r3
     4a2:	7853      	ldrb	r3, [r2, #1]
     4a4:	09db      	lsrs	r3, r3, #7
     4a6:	d1fc      	bne.n	4a2 <_Z11ClockConfigv+0x10e>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_RTC|  GCLK_CLKCTRL_GEN_GCLK3 | GCLK_CLKCTRL_CLKEN;
     4a8:	4a54      	ldr	r2, [pc, #336]	; (5fc <_Z11ClockConfigv+0x268>)
     4aa:	4b4b      	ldr	r3, [pc, #300]	; (5d8 <_Z11ClockConfigv+0x244>)
     4ac:	805a      	strh	r2, [r3, #2]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     4ae:	001a      	movs	r2, r3
     4b0:	7853      	ldrb	r3, [r2, #1]
     4b2:	09db      	lsrs	r3, r3, #7
     4b4:	d1fc      	bne.n	4b0 <_Z11ClockConfigv+0x11c>
	
	// 5. Configure the Generic Clock 4 to take the OSC8M, div by 20
	GCLK->GENDIV.reg =   GCLK_GENDIV_ID(4) |GCLK_GENDIV_DIV(20);  //Div by 20, 400khz //max div is 256
     4b6:	4a52      	ldr	r2, [pc, #328]	; (600 <_Z11ClockConfigv+0x26c>)
     4b8:	4b47      	ldr	r3, [pc, #284]	; (5d8 <_Z11ClockConfigv+0x244>)
     4ba:	609a      	str	r2, [r3, #8]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1);	  
     4bc:	001a      	movs	r2, r3
     4be:	7853      	ldrb	r3, [r2, #1]
     4c0:	09db      	lsrs	r3, r3, #7
     4c2:	d1fc      	bne.n	4be <_Z11ClockConfigv+0x12a>
	GCLK->GENCTRL.reg =  GCLK_GENCTRL_IDC |GCLK_GENCTRL_ID(4) |GCLK_GENCTRL_GENEN|GCLK_GENCTRL_SRC_OSC8M;
     4c4:	4a4f      	ldr	r2, [pc, #316]	; (604 <_Z11ClockConfigv+0x270>)
     4c6:	4b44      	ldr	r3, [pc, #272]	; (5d8 <_Z11ClockConfigv+0x244>)
     4c8:	605a      	str	r2, [r3, #4]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     4ca:	001a      	movs	r2, r3
     4cc:	7853      	ldrb	r3, [r2, #1]
     4ce:	09db      	lsrs	r3, r3, #7
     4d0:	d1fc      	bne.n	4cc <_Z11ClockConfigv+0x138>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_SERCOM2_CORE| GCLK_CLKCTRL_GEN_GCLK4 | GCLK_CLKCTRL_CLKEN;
     4d2:	4a4d      	ldr	r2, [pc, #308]	; (608 <_Z11ClockConfigv+0x274>)
     4d4:	4b40      	ldr	r3, [pc, #256]	; (5d8 <_Z11ClockConfigv+0x244>)
     4d6:	805a      	strh	r2, [r3, #2]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     4d8:	001a      	movs	r2, r3
     4da:	7853      	ldrb	r3, [r2, #1]
     4dc:	09db      	lsrs	r3, r3, #7
     4de:	d1fc      	bne.n	4da <_Z11ClockConfigv+0x146>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_SERCOM3_CORE| GCLK_CLKCTRL_GEN_GCLK4 | GCLK_CLKCTRL_CLKEN;
     4e0:	4a4a      	ldr	r2, [pc, #296]	; (60c <_Z11ClockConfigv+0x278>)
     4e2:	4b3d      	ldr	r3, [pc, #244]	; (5d8 <_Z11ClockConfigv+0x244>)
     4e4:	805a      	strh	r2, [r3, #2]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     4e6:	001a      	movs	r2, r3
     4e8:	7853      	ldrb	r3, [r2, #1]
     4ea:	09db      	lsrs	r3, r3, #7
     4ec:	d1fc      	bne.n	4e8 <_Z11ClockConfigv+0x154>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_SERCOM4_CORE| GCLK_CLKCTRL_GEN_GCLK4 | GCLK_CLKCTRL_CLKEN;
     4ee:	4a48      	ldr	r2, [pc, #288]	; (610 <_Z11ClockConfigv+0x27c>)
     4f0:	4b39      	ldr	r3, [pc, #228]	; (5d8 <_Z11ClockConfigv+0x244>)
     4f2:	805a      	strh	r2, [r3, #2]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     4f4:	001a      	movs	r2, r3
     4f6:	7853      	ldrb	r3, [r2, #1]
     4f8:	09db      	lsrs	r3, r3, #7
     4fa:	d1fc      	bne.n	4f6 <_Z11ClockConfigv+0x162>
		

	// 6. Configure the Generic Clock 5 to take the OSC8M, div by 40
	GCLK->GENDIV.reg =   GCLK_GENDIV_ID(5) |GCLK_GENDIV_DIV(40);  //Div by 40, 200khz
     4fc:	4a45      	ldr	r2, [pc, #276]	; (614 <_Z11ClockConfigv+0x280>)
     4fe:	4b36      	ldr	r3, [pc, #216]	; (5d8 <_Z11ClockConfigv+0x244>)
     500:	609a      	str	r2, [r3, #8]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1);	  
     502:	001a      	movs	r2, r3
     504:	7853      	ldrb	r3, [r2, #1]
     506:	09db      	lsrs	r3, r3, #7
     508:	d1fc      	bne.n	504 <_Z11ClockConfigv+0x170>
	GCLK->GENCTRL.reg =  GCLK_GENCTRL_IDC |GCLK_GENCTRL_ID(5) |GCLK_GENCTRL_GENEN|GCLK_GENCTRL_SRC_OSC8M;
     50a:	4a43      	ldr	r2, [pc, #268]	; (618 <_Z11ClockConfigv+0x284>)
     50c:	4b32      	ldr	r3, [pc, #200]	; (5d8 <_Z11ClockConfigv+0x244>)
     50e:	605a      	str	r2, [r3, #4]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1 );	
     510:	001a      	movs	r2, r3
     512:	7853      	ldrb	r3, [r2, #1]
     514:	09db      	lsrs	r3, r3, #7
     516:	d1fc      	bne.n	512 <_Z11ClockConfigv+0x17e>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_TCC0_TCC1| GCLK_CLKCTRL_GEN_GCLK5 | GCLK_CLKCTRL_CLKEN;
     518:	4a40      	ldr	r2, [pc, #256]	; (61c <_Z11ClockConfigv+0x288>)
     51a:	4b2f      	ldr	r3, [pc, #188]	; (5d8 <_Z11ClockConfigv+0x244>)
     51c:	805a      	strh	r2, [r3, #2]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     51e:	001a      	movs	r2, r3
     520:	7853      	ldrb	r3, [r2, #1]
     522:	09db      	lsrs	r3, r3, #7
     524:	d1fc      	bne.n	520 <_Z11ClockConfigv+0x18c>
	
	// 7. Configure the Generic Clock 6 to take the GCLK_GENCTRL_SRC_OSC8M, div by 80
	GCLK->GENDIV.reg =   GCLK_GENDIV_ID(6) |GCLK_GENDIV_DIV(80);  
     526:	4a3e      	ldr	r2, [pc, #248]	; (620 <_Z11ClockConfigv+0x28c>)
     528:	4b2b      	ldr	r3, [pc, #172]	; (5d8 <_Z11ClockConfigv+0x244>)
     52a:	609a      	str	r2, [r3, #8]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1);	  
     52c:	001a      	movs	r2, r3
     52e:	7853      	ldrb	r3, [r2, #1]
     530:	09db      	lsrs	r3, r3, #7
     532:	d1fc      	bne.n	52e <_Z11ClockConfigv+0x19a>
	GCLK->GENCTRL.reg =  GCLK_GENCTRL_IDC |GCLK_GENCTRL_ID(6) |GCLK_GENCTRL_GENEN|GCLK_GENCTRL_SRC_OSC8M;
     534:	4a3b      	ldr	r2, [pc, #236]	; (624 <_Z11ClockConfigv+0x290>)
     536:	4b28      	ldr	r3, [pc, #160]	; (5d8 <_Z11ClockConfigv+0x244>)
     538:	605a      	str	r2, [r3, #4]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1 );	
     53a:	001a      	movs	r2, r3
     53c:	7853      	ldrb	r3, [r2, #1]
     53e:	09db      	lsrs	r3, r3, #7
     540:	d1fc      	bne.n	53c <_Z11ClockConfigv+0x1a8>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_TCC2_TC3| GCLK_CLKCTRL_GEN_GCLK6 | GCLK_CLKCTRL_CLKEN;
     542:	4a39      	ldr	r2, [pc, #228]	; (628 <_Z11ClockConfigv+0x294>)
     544:	4b24      	ldr	r3, [pc, #144]	; (5d8 <_Z11ClockConfigv+0x244>)
     546:	805a      	strh	r2, [r3, #2]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     548:	001a      	movs	r2, r3
     54a:	7853      	ldrb	r3, [r2, #1]
     54c:	09db      	lsrs	r3, r3, #7
     54e:	d1fc      	bne.n	54a <_Z11ClockConfigv+0x1b6>
	
	// 8. Configure the Generic Clock 7 to take the OSC8M, div by 4
	GCLK->GENDIV.reg =   GCLK_GENDIV_ID(7) | GCLK_GENDIV_DIV(4);  // Div by 4
     550:	4a36      	ldr	r2, [pc, #216]	; (62c <_Z11ClockConfigv+0x298>)
     552:	4b21      	ldr	r3, [pc, #132]	; (5d8 <_Z11ClockConfigv+0x244>)
     554:	609a      	str	r2, [r3, #8]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1);
     556:	001a      	movs	r2, r3
     558:	7853      	ldrb	r3, [r2, #1]
     55a:	09db      	lsrs	r3, r3, #7
     55c:	d1fc      	bne.n	558 <_Z11ClockConfigv+0x1c4>
	GCLK->GENCTRL.reg =  GCLK_GENCTRL_IDC |	GCLK_GENCTRL_ID(7) | GCLK_GENCTRL_GENEN|GCLK_GENCTRL_SRC_OSC8M;
     55e:	4a34      	ldr	r2, [pc, #208]	; (630 <_Z11ClockConfigv+0x29c>)
     560:	4b1d      	ldr	r3, [pc, #116]	; (5d8 <_Z11ClockConfigv+0x244>)
     562:	605a      	str	r2, [r3, #4]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     564:	001a      	movs	r2, r3
     566:	7853      	ldrb	r3, [r2, #1]
     568:	09db      	lsrs	r3, r3, #7
     56a:	d1fc      	bne.n	566 <_Z11ClockConfigv+0x1d2>
	//GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID_ADC| GCLK_CLKCTRL_GEN_GCLK7 | GCLK_CLKCTRL_CLKEN;       
   // while (GCLK->STATUS.bit.SYNCBUSY == 1 );
	GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID_TC4_TC5|GCLK_CLKCTRL_GEN_GCLK7 | GCLK_CLKCTRL_CLKEN;
     56c:	4a31      	ldr	r2, [pc, #196]	; (634 <_Z11ClockConfigv+0x2a0>)
     56e:	4b1a      	ldr	r3, [pc, #104]	; (5d8 <_Z11ClockConfigv+0x244>)
     570:	805a      	strh	r2, [r3, #2]
	while (GCLK->STATUS.bit.SYNCBUSY == 1 );
     572:	001a      	movs	r2, r3
     574:	7853      	ldrb	r3, [r2, #1]
     576:	09db      	lsrs	r3, r3, #7
     578:	d1fc      	bne.n	574 <_Z11ClockConfigv+0x1e0>
	GCLK->CLKCTRL.reg =  GCLK_CLKCTRL_ID_EIC|  GCLK_CLKCTRL_GEN_GCLK7 | GCLK_CLKCTRL_CLKEN; 
     57a:	4a2f      	ldr	r2, [pc, #188]	; (638 <_Z11ClockConfigv+0x2a4>)
     57c:	4b16      	ldr	r3, [pc, #88]	; (5d8 <_Z11ClockConfigv+0x244>)
     57e:	805a      	strh	r2, [r3, #2]
	while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     580:	001a      	movs	r2, r3
     582:	7853      	ldrb	r3, [r2, #1]
     584:	09db      	lsrs	r3, r3, #7
     586:	d1fc      	bne.n	582 <_Z11ClockConfigv+0x1ee>
	
	// 9. Configure the Generic Clock 8 to take the OSC8M, div by 3
	GCLK->GENDIV.reg =   GCLK_GENDIV_ID(8) | GCLK_GENDIV_DIV(3);  // Div by 3
     588:	22c2      	movs	r2, #194	; 0xc2
     58a:	0092      	lsls	r2, r2, #2
     58c:	4b12      	ldr	r3, [pc, #72]	; (5d8 <_Z11ClockConfigv+0x244>)
     58e:	609a      	str	r2, [r3, #8]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1);
     590:	001a      	movs	r2, r3
     592:	7853      	ldrb	r3, [r2, #1]
     594:	09db      	lsrs	r3, r3, #7
     596:	d1fc      	bne.n	592 <_Z11ClockConfigv+0x1fe>
	GCLK->GENCTRL.reg =  GCLK_GENCTRL_IDC |	GCLK_GENCTRL_ID(8) | GCLK_GENCTRL_GENEN|GCLK_GENCTRL_SRC_OSC8M;
     598:	4a28      	ldr	r2, [pc, #160]	; (63c <_Z11ClockConfigv+0x2a8>)
     59a:	4b0f      	ldr	r3, [pc, #60]	; (5d8 <_Z11ClockConfigv+0x244>)
     59c:	605a      	str	r2, [r3, #4]
    while ( GCLK->STATUS.bit.SYNCBUSY == 1 );
     59e:	001a      	movs	r2, r3
     5a0:	7853      	ldrb	r3, [r2, #1]
     5a2:	09db      	lsrs	r3, r3, #7
     5a4:	d1fc      	bne.n	5a0 <_Z11ClockConfigv+0x20c>
	GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID_ADC| GCLK_CLKCTRL_GEN_GCLK8 | GCLK_CLKCTRL_CLKEN;       
     5a6:	4a26      	ldr	r2, [pc, #152]	; (640 <_Z11ClockConfigv+0x2ac>)
     5a8:	4b0b      	ldr	r3, [pc, #44]	; (5d8 <_Z11ClockConfigv+0x244>)
     5aa:	805a      	strh	r2, [r3, #2]
    while (GCLK->STATUS.bit.SYNCBUSY == 1 );
     5ac:	001a      	movs	r2, r3
     5ae:	7853      	ldrb	r3, [r2, #1]
     5b0:	09db      	lsrs	r3, r3, #7
     5b2:	d1fc      	bne.n	5ae <_Z11ClockConfigv+0x21a>
	 
}	
     5b4:	bd10      	pop	{r4, pc}
     5b6:	46c0      	nop			; (mov r8, r8)
     5b8:	40000800 	.word	0x40000800
     5bc:	00806024 	.word	0x00806024
     5c0:	ff80ffff 	.word	0xff80ffff
     5c4:	fffffcff 	.word	0xfffffcff
     5c8:	41004000 	.word	0x41004000
     5cc:	0000bb80 	.word	0x0000bb80
     5d0:	00806028 	.word	0x00806028
     5d4:	0000050a 	.word	0x0000050a
     5d8:	40000c00 	.word	0x40000c00
     5dc:	00030700 	.word	0x00030700
     5e0:	00004015 	.word	0x00004015
     5e4:	00030401 	.word	0x00030401
     5e8:	00004103 	.word	0x00004103
     5ec:	00010602 	.word	0x00010602
     5f0:	00004214 	.word	0x00004214
     5f4:	00002003 	.word	0x00002003
     5f8:	00010403 	.word	0x00010403
     5fc:	00004304 	.word	0x00004304
     600:	00001404 	.word	0x00001404
     604:	00030604 	.word	0x00030604
     608:	00004416 	.word	0x00004416
     60c:	00004417 	.word	0x00004417
     610:	00004418 	.word	0x00004418
     614:	00002805 	.word	0x00002805
     618:	00030605 	.word	0x00030605
     61c:	0000451a 	.word	0x0000451a
     620:	00005006 	.word	0x00005006
     624:	00030606 	.word	0x00030606
     628:	0000461b 	.word	0x0000461b
     62c:	00000407 	.word	0x00000407
     630:	00030607 	.word	0x00030607
     634:	0000471c 	.word	0x0000471c
     638:	00004705 	.word	0x00004705
     63c:	00030608 	.word	0x00030608
     640:	0000481e 	.word	0x0000481e

00000644 <_Z12PWM_FAN_initv>:
// 1. Enable TCC0 in power manager
//  2. Configure Counter
//  3. Enable Counter Interrupt (TCC0)

// 1. Enable TCC0 in power manager
 REG_PM_APBCMASK |= PM_APBCMASK_TCC0;
     644:	4a19      	ldr	r2, [pc, #100]	; (6ac <_Z12PWM_FAN_initv+0x68>)
     646:	6811      	ldr	r1, [r2, #0]
     648:	2380      	movs	r3, #128	; 0x80
     64a:	005b      	lsls	r3, r3, #1
     64c:	430b      	orrs	r3, r1
     64e:	6013      	str	r3, [r2, #0]
// 2. Configure Counter
//REG_TCC0_WAVE |= TCC_WAVE_WAVEGEN_NPWM;//|TCC_WAVE_POL(0xF); 
  REG_TCC0_WAVE |= TCC_WAVE_WAVEGEN_DSTOP|TCC_WAVE_POL(0xF);       // Setup dual slope PWM on TCC0, interrupt at top, update on bot
     650:	4a17      	ldr	r2, [pc, #92]	; (6b0 <_Z12PWM_FAN_initv+0x6c>)
     652:	6811      	ldr	r1, [r2, #0]
     654:	4b17      	ldr	r3, [pc, #92]	; (6b4 <_Z12PWM_FAN_initv+0x70>)
     656:	430b      	orrs	r3, r1
     658:	6013      	str	r3, [r2, #0]
  while (TCC0->SYNCBUSY.bit.WAVE==1);               // Wait for synchronization 
     65a:	4a17      	ldr	r2, [pc, #92]	; (6b8 <_Z12PWM_FAN_initv+0x74>)
     65c:	6893      	ldr	r3, [r2, #8]
     65e:	065b      	lsls	r3, r3, #25
     660:	d4fc      	bmi.n	65c <_Z12PWM_FAN_initv+0x18>
  // Each timer counts up to a maximum or TOP value set by the PER register,
  // this determines the frequency of the PWM operation: 
  REG_TCC0_PER = 99;         // @, 4mhz/2*100=20khz 
     662:	2263      	movs	r2, #99	; 0x63
     664:	4b15      	ldr	r3, [pc, #84]	; (6bc <_Z12PWM_FAN_initv+0x78>)
     666:	601a      	str	r2, [r3, #0]
  while(TCC0->SYNCBUSY.bit.PER==1);                // Wait for synchronization
     668:	4a13      	ldr	r2, [pc, #76]	; (6b8 <_Z12PWM_FAN_initv+0x74>)
     66a:	6893      	ldr	r3, [r2, #8]
     66c:	061b      	lsls	r3, r3, #24
     66e:	d4fc      	bmi.n	66a <_Z12PWM_FAN_initv+0x26>
  // Set the PWM signal to output
  REG_TCC0_CC2 = 0;        					//pa18 wo[2]
     670:	2200      	movs	r2, #0
     672:	4b13      	ldr	r3, [pc, #76]	; (6c0 <_Z12PWM_FAN_initv+0x7c>)
     674:	601a      	str	r2, [r3, #0]
  while(TCC0->SYNCBUSY.bit.CC2==1);                // Wait for synchronization
     676:	4a10      	ldr	r2, [pc, #64]	; (6b8 <_Z12PWM_FAN_initv+0x74>)
     678:	6893      	ldr	r3, [r2, #8]
     67a:	055b      	lsls	r3, r3, #21
     67c:	d4fc      	bmi.n	678 <_Z12PWM_FAN_initv+0x34>
  
//3. Enable Counter Interrupt (TCC0)
  //enable interrupts
  TCC0->INTENSET.reg = 0;                 // disable all interrupts
     67e:	4b0e      	ldr	r3, [pc, #56]	; (6b8 <_Z12PWM_FAN_initv+0x74>)
     680:	2200      	movs	r2, #0
     682:	629a      	str	r2, [r3, #40]	; 0x28
  TCC0->INTENSET.bit.OVF = 1;          // enable overflow
     684:	6a99      	ldr	r1, [r3, #40]	; 0x28
     686:	2001      	movs	r0, #1
     688:	4301      	orrs	r1, r0
     68a:	6299      	str	r1, [r3, #40]	; 0x28
  TCC0->INTFLAG.bit.OVF = 1;
     68c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     68e:	4302      	orrs	r2, r0
     690:	62da      	str	r2, [r3, #44]	; 0x2c

  //enable output
  REG_TCC0_CTRLA |=  TCC_CTRLA_ENABLE;             // Enable the TCC0 output
     692:	681a      	ldr	r2, [r3, #0]
     694:	2102      	movs	r1, #2
     696:	430a      	orrs	r2, r1
     698:	601a      	str	r2, [r3, #0]
  while (TCC0->SYNCBUSY.bit.ENABLE==1);              // Wait for synchronization
     69a:	001a      	movs	r2, r3
     69c:	6893      	ldr	r3, [r2, #8]
     69e:	079b      	lsls	r3, r3, #30
     6a0:	d4fc      	bmi.n	69c <_Z12PWM_FAN_initv+0x58>
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
     6a2:	2280      	movs	r2, #128	; 0x80
     6a4:	0212      	lsls	r2, r2, #8
     6a6:	4b07      	ldr	r3, [pc, #28]	; (6c4 <_Z12PWM_FAN_initv+0x80>)
     6a8:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(TCC0_IRQn);
}	
     6aa:	4770      	bx	lr
     6ac:	40000420 	.word	0x40000420
     6b0:	4200203c 	.word	0x4200203c
     6b4:	000f0007 	.word	0x000f0007
     6b8:	42002000 	.word	0x42002000
     6bc:	42002040 	.word	0x42002040
     6c0:	4200204c 	.word	0x4200204c
     6c4:	e000e100 	.word	0xe000e100

000006c8 <_Z12PWM_LED_initv>:
// 1. Enable TCC2 in power manager
//  2. Configure Counter
//  3. Enable Counter Interrupt (TCC2)

// 1. Enable TCC2 in power manager
 REG_PM_APBCMASK |= PM_APBCMASK_TCC2;
     6c8:	4a19      	ldr	r2, [pc, #100]	; (730 <_Z12PWM_LED_initv+0x68>)
     6ca:	6811      	ldr	r1, [r2, #0]
     6cc:	2380      	movs	r3, #128	; 0x80
     6ce:	00db      	lsls	r3, r3, #3
     6d0:	430b      	orrs	r3, r1
     6d2:	6013      	str	r3, [r2, #0]
// 2. Configure Counter
//REG_TCC2_WAVE |= TCC_WAVE_WAVEGEN_NPWM;//|TCC_WAVE_POL(0xF); 
  REG_TCC2_WAVE |= TCC_WAVE_WAVEGEN_DSTOP|TCC_WAVE_POL(0xF);       // Setup dual slope PWM on TCC2, interrupt at top, update on bot
     6d4:	4a17      	ldr	r2, [pc, #92]	; (734 <_Z12PWM_LED_initv+0x6c>)
     6d6:	6811      	ldr	r1, [r2, #0]
     6d8:	4b17      	ldr	r3, [pc, #92]	; (738 <_Z12PWM_LED_initv+0x70>)
     6da:	430b      	orrs	r3, r1
     6dc:	6013      	str	r3, [r2, #0]
  while (TCC2->SYNCBUSY.bit.WAVE==1);               // Wait for synchronization 
     6de:	4a17      	ldr	r2, [pc, #92]	; (73c <_Z12PWM_LED_initv+0x74>)
     6e0:	6893      	ldr	r3, [r2, #8]
     6e2:	065b      	lsls	r3, r3, #25
     6e4:	d4fc      	bmi.n	6e0 <_Z12PWM_LED_initv+0x18>
  // Each timer counts up to a maximum or TOP value set by the PER register,
  // this determines the frequency of the PWM operation: 
  REG_TCC2_PER = 255;         //@50hz, 8khz/2*80=50hz
     6e6:	22ff      	movs	r2, #255	; 0xff
     6e8:	4b15      	ldr	r3, [pc, #84]	; (740 <_Z12PWM_LED_initv+0x78>)
     6ea:	601a      	str	r2, [r3, #0]
  while(TCC2->SYNCBUSY.bit.PER==1);                // Wait for synchronization
     6ec:	4a13      	ldr	r2, [pc, #76]	; (73c <_Z12PWM_LED_initv+0x74>)
     6ee:	6893      	ldr	r3, [r2, #8]
     6f0:	061b      	lsls	r3, r3, #24
     6f2:	d4fc      	bmi.n	6ee <_Z12PWM_LED_initv+0x26>
  // Set the PWM signal to output
  REG_TCC2_CC0 = 0;        					//pa00 wo[0]
     6f4:	2200      	movs	r2, #0
     6f6:	4b13      	ldr	r3, [pc, #76]	; (744 <_Z12PWM_LED_initv+0x7c>)
     6f8:	601a      	str	r2, [r3, #0]
  while(TCC2->SYNCBUSY.bit.CC0==1);                // Wait for synchronization
     6fa:	4a10      	ldr	r2, [pc, #64]	; (73c <_Z12PWM_LED_initv+0x74>)
     6fc:	6893      	ldr	r3, [r2, #8]
     6fe:	05db      	lsls	r3, r3, #23
     700:	d4fc      	bmi.n	6fc <_Z12PWM_LED_initv+0x34>
  
//3. Enable Counter Interrupt (TCC2)
  //enable interrupts
  TCC2->INTENSET.reg = 0;                 // disable all interrupts
     702:	4b0e      	ldr	r3, [pc, #56]	; (73c <_Z12PWM_LED_initv+0x74>)
     704:	2200      	movs	r2, #0
     706:	629a      	str	r2, [r3, #40]	; 0x28
  TCC2->INTENSET.bit.OVF = 1;          // enable overflow
     708:	6a99      	ldr	r1, [r3, #40]	; 0x28
     70a:	2001      	movs	r0, #1
     70c:	4301      	orrs	r1, r0
     70e:	6299      	str	r1, [r3, #40]	; 0x28
  TCC2->INTFLAG.bit.OVF = 1;
     710:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     712:	4302      	orrs	r2, r0
     714:	62da      	str	r2, [r3, #44]	; 0x2c

  //enable output
  REG_TCC2_CTRLA |=  TCC_CTRLA_ENABLE;             // Enable the TCC2 output
     716:	681a      	ldr	r2, [r3, #0]
     718:	2102      	movs	r1, #2
     71a:	430a      	orrs	r2, r1
     71c:	601a      	str	r2, [r3, #0]
  while (TCC2->SYNCBUSY.bit.ENABLE==1);              // Wait for synchronization
     71e:	001a      	movs	r2, r3
     720:	6893      	ldr	r3, [r2, #8]
     722:	079b      	lsls	r3, r3, #30
     724:	d4fc      	bmi.n	720 <_Z12PWM_LED_initv+0x58>
     726:	2280      	movs	r2, #128	; 0x80
     728:	0292      	lsls	r2, r2, #10
     72a:	4b07      	ldr	r3, [pc, #28]	; (748 <_Z12PWM_LED_initv+0x80>)
     72c:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(TCC2_IRQn);
}
     72e:	4770      	bx	lr
     730:	40000420 	.word	0x40000420
     734:	4200283c 	.word	0x4200283c
     738:	000f0007 	.word	0x000f0007
     73c:	42002800 	.word	0x42002800
     740:	42002840 	.word	0x42002840
     744:	42002844 	.word	0x42002844
     748:	e000e100 	.word	0xe000e100

0000074c <_Z16init_4ms_counterv>:
//  2. Configure Counter
//  3. Enable Counter Interrupt (TC4)
//  4. Enable Counter

// 1. Enable TC4 in power manager
	REG_PM_APBCMASK |= PM_APBCMASK_TC4;
     74c:	4a1a      	ldr	r2, [pc, #104]	; (7b8 <_Z16init_4ms_counterv+0x6c>)
     74e:	6811      	ldr	r1, [r2, #0]
     750:	2380      	movs	r3, #128	; 0x80
     752:	015b      	lsls	r3, r3, #5
     754:	430b      	orrs	r3, r1
     756:	6013      	str	r3, [r2, #0]
	TC4->COUNT8.CTRLA.reg &= ~TC_CTRLA_ENABLE;
     758:	4b18      	ldr	r3, [pc, #96]	; (7bc <_Z16init_4ms_counterv+0x70>)
     75a:	881a      	ldrh	r2, [r3, #0]
     75c:	2102      	movs	r1, #2
     75e:	438a      	bics	r2, r1
     760:	801a      	strh	r2, [r3, #0]
	
	//using TC4 as 4ms timer
//  2. Configure Counter	
	TC4->COUNT8.CTRLA.reg |= TC_CTRLA_MODE_COUNT8;  // Set Timer counter Mode to 8 bits
     762:	881a      	ldrh	r2, [r3, #0]
     764:	3102      	adds	r1, #2
     766:	430a      	orrs	r2, r1
     768:	801a      	strh	r2, [r3, #0]
	while (TC4->COUNT8.STATUS.bit.SYNCBUSY == 1); // wait for sync
     76a:	001a      	movs	r2, r3
     76c:	7bd3      	ldrb	r3, [r2, #15]
     76e:	09db      	lsrs	r3, r3, #7
     770:	d1fc      	bne.n	76c <_Z16init_4ms_counterv+0x20>
	TC4->COUNT8.CTRLA.reg |= TC_CTRLA_WAVEGEN_MFRQ; // Set TC as normal match Frq
     772:	4a12      	ldr	r2, [pc, #72]	; (7bc <_Z16init_4ms_counterv+0x70>)
     774:	8813      	ldrh	r3, [r2, #0]
     776:	2120      	movs	r1, #32
     778:	430b      	orrs	r3, r1
     77a:	8013      	strh	r3, [r2, #0]
	while (TC4->COUNT8.STATUS.bit.SYNCBUSY == 1); // wait for sync
     77c:	7bd3      	ldrb	r3, [r2, #15]
     77e:	09db      	lsrs	r3, r3, #7
     780:	d1fc      	bne.n	77c <_Z16init_4ms_counterv+0x30>
	
	TC4->COUNT8.CC[0].reg =124; //125	//2mhz/125/64=4ms
     782:	227c      	movs	r2, #124	; 0x7c
     784:	4b0d      	ldr	r3, [pc, #52]	; (7bc <_Z16init_4ms_counterv+0x70>)
     786:	761a      	strb	r2, [r3, #24]
	while (TC4->COUNT8.STATUS.bit.SYNCBUSY == 1);
     788:	001a      	movs	r2, r3
     78a:	7bd3      	ldrb	r3, [r2, #15]
     78c:	09db      	lsrs	r3, r3, #7
     78e:	d1fc      	bne.n	78a <_Z16init_4ms_counterv+0x3e>
	
//  3. Enable Counter Interrupt (TC4)	
	 TC4->COUNT8.INTENSET.reg = 0;              // disable all interrupts
     790:	4b0a      	ldr	r3, [pc, #40]	; (7bc <_Z16init_4ms_counterv+0x70>)
     792:	2200      	movs	r2, #0
     794:	735a      	strb	r2, [r3, #13]
	 TC4->COUNT8.INTENSET.bit.MC0 = 1;
     796:	7b5a      	ldrb	r2, [r3, #13]
     798:	2110      	movs	r1, #16
     79a:	430a      	orrs	r2, r1
     79c:	735a      	strb	r2, [r3, #13]
	
//  4. Enable Counter	
	TC4->COUNT8.CTRLA.reg |=  TC_CTRLA_PRESCALER_DIV64 |TC_CTRLA_RUNSTDBY|TC_CTRLA_ENABLE;       // Set the counter to 8-bit mode
     79e:	881a      	ldrh	r2, [r3, #0]
     7a0:	4907      	ldr	r1, [pc, #28]	; (7c0 <_Z16init_4ms_counterv+0x74>)
     7a2:	430a      	orrs	r2, r1
     7a4:	801a      	strh	r2, [r3, #0]
	// Divide the counter: 2mhz/64/125=4ms
	while (TC4->COUNT8.STATUS.bit.SYNCBUSY == 1);
     7a6:	001a      	movs	r2, r3
     7a8:	7bd3      	ldrb	r3, [r2, #15]
     7aa:	09db      	lsrs	r3, r3, #7
     7ac:	d1fc      	bne.n	7a8 <_Z16init_4ms_counterv+0x5c>
     7ae:	2280      	movs	r2, #128	; 0x80
     7b0:	0312      	lsls	r2, r2, #12
     7b2:	4b04      	ldr	r3, [pc, #16]	; (7c4 <_Z16init_4ms_counterv+0x78>)
     7b4:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(TC4_IRQn);
	
}
     7b6:	4770      	bx	lr
     7b8:	40000420 	.word	0x40000420
     7bc:	42003000 	.word	0x42003000
     7c0:	00000d02 	.word	0x00000d02
     7c4:	e000e100 	.word	0xe000e100

000007c8 <_Z19ConfigureInterruptsv>:
	//a. Enable the EIC.
	//b. Configure the EIC to perform edge (rising or falling) detection or level (high or low) detection.
	//c. Enable the External Interrupts so that it is able to cause an interrupt event.
	
	// Enable EIC clock in power manager
	PM->APBAMASK.reg |= PM_APBAMASK_EIC;
     7c8:	4a10      	ldr	r2, [pc, #64]	; (80c <_Z19ConfigureInterruptsv+0x44>)
     7ca:	6993      	ldr	r3, [r2, #24]
     7cc:	2140      	movs	r1, #64	; 0x40
     7ce:	430b      	orrs	r3, r1
     7d0:	6193      	str	r3, [r2, #24]
	
	//extint3=falling, ccs811
	//extint6=fall, logic inverted, actually rising, motor rpm ping
	REG_EIC_CONFIG0=EIC_CONFIG_SENSE3_FALL|EIC_CONFIG_SENSE6_FALL; //3
     7d2:	4b0f      	ldr	r3, [pc, #60]	; (810 <_Z19ConfigureInterruptsv+0x48>)
     7d4:	4a0f      	ldr	r2, [pc, #60]	; (814 <_Z19ConfigureInterruptsv+0x4c>)
     7d6:	601a      	str	r2, [r3, #0]
	REG_EIC_CONFIG0|=EIC_CONFIG_FILTEN6;
     7d8:	6819      	ldr	r1, [r3, #0]
     7da:	2280      	movs	r2, #128	; 0x80
     7dc:	0512      	lsls	r2, r2, #20
     7de:	430a      	orrs	r2, r1
     7e0:	601a      	str	r2, [r3, #0]
	//extint13=rise, display update finised
	REG_EIC_CONFIG1=EIC_CONFIG_SENSE5_RISE|EIC_CONFIG_FILTEN5; //13,
     7e2:	2290      	movs	r2, #144	; 0x90
     7e4:	0412      	lsls	r2, r2, #16
     7e6:	4b0c      	ldr	r3, [pc, #48]	; (818 <_Z19ConfigureInterruptsv+0x50>)
     7e8:	601a      	str	r2, [r3, #0]
	
	REG_EIC_CTRL |= EIC_CTRL_ENABLE; //read and enable
     7ea:	4b0c      	ldr	r3, [pc, #48]	; (81c <_Z19ConfigureInterruptsv+0x54>)
     7ec:	781a      	ldrb	r2, [r3, #0]
     7ee:	2102      	movs	r1, #2
     7f0:	430a      	orrs	r2, r1
     7f2:	701a      	strb	r2, [r3, #0]
	
	//clear all flags here!!
	REG_EIC_INTFLAG=0;
     7f4:	2100      	movs	r1, #0
     7f6:	4a0a      	ldr	r2, [pc, #40]	; (820 <_Z19ConfigureInterruptsv+0x58>)
     7f8:	6011      	str	r1, [r2, #0]
	
	//external interrupts on 3,6,13
	REG_EIC_INTENSET=(1<<3)|(1<<6)|(1<<13);
     7fa:	490a      	ldr	r1, [pc, #40]	; (824 <_Z19ConfigureInterruptsv+0x5c>)
     7fc:	4a0a      	ldr	r2, [pc, #40]	; (828 <_Z19ConfigureInterruptsv+0x60>)
     7fe:	6011      	str	r1, [r2, #0]
	
	//4. Enable EIC function in ARM NVIC Interrupt Controller
	while(EIC->STATUS.bit.SYNCBUSY & EIC_STATUS_SYNCBUSY); //wait till syncbusy clears
     800:	785b      	ldrb	r3, [r3, #1]
     802:	2210      	movs	r2, #16
     804:	4b09      	ldr	r3, [pc, #36]	; (82c <_Z19ConfigureInterruptsv+0x64>)
     806:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ( EIC_IRQn );
		
}
     808:	4770      	bx	lr
     80a:	46c0      	nop			; (mov r8, r8)
     80c:	40000400 	.word	0x40000400
     810:	40001818 	.word	0x40001818
     814:	02002000 	.word	0x02002000
     818:	4000181c 	.word	0x4000181c
     81c:	40001800 	.word	0x40001800
     820:	40001810 	.word	0x40001810
     824:	00002048 	.word	0x00002048
     828:	4000180c 	.word	0x4000180c
     82c:	e000e100 	.word	0xe000e100

00000830 <_Z8init_ADCv>:


void init_ADC()
{
	REG_PM_APBCMASK |= PM_APBCMASK_ADC;
     830:	4a26      	ldr	r2, [pc, #152]	; (8cc <_Z8init_ADCv+0x9c>)
     832:	6811      	ldr	r1, [r2, #0]
     834:	2380      	movs	r3, #128	; 0x80
     836:	025b      	lsls	r3, r3, #9
     838:	430b      	orrs	r3, r1
     83a:	6013      	str	r3, [r2, #0]
	
	// Load in the fixed device ADC calibration constants 
	ADC->CALIB.reg = ADC_CALIB_BIAS_CAL((*(uint32_t *) ADC_FUSES_BIASCAL_ADDR >> ADC_FUSES_BIASCAL_Pos)) |
     83c:	4b24      	ldr	r3, [pc, #144]	; (8d0 <_Z8init_ADCv+0xa0>)
     83e:	681b      	ldr	r3, [r3, #0]
     840:	015b      	lsls	r3, r3, #5
     842:	22e0      	movs	r2, #224	; 0xe0
     844:	00d2      	lsls	r2, r2, #3
     846:	4013      	ands	r3, r2
					 ADC_CALIB_LINEARITY_CAL((*(uint64_t *) ADC_FUSES_LINEARITY_0_ADDR >> ADC_FUSES_LINEARITY_0_Pos));
     848:	4a22      	ldr	r2, [pc, #136]	; (8d4 <_Z8init_ADCv+0xa4>)
     84a:	6851      	ldr	r1, [r2, #4]
     84c:	0149      	lsls	r1, r1, #5
     84e:	6812      	ldr	r2, [r2, #0]
     850:	0ed2      	lsrs	r2, r2, #27
     852:	430a      	orrs	r2, r1
     854:	21ff      	movs	r1, #255	; 0xff
     856:	400a      	ands	r2, r1
	ADC->CALIB.reg = ADC_CALIB_BIAS_CAL((*(uint32_t *) ADC_FUSES_BIASCAL_ADDR >> ADC_FUSES_BIASCAL_Pos)) |
     858:	4313      	orrs	r3, r2
     85a:	4a1f      	ldr	r2, [pc, #124]	; (8d8 <_Z8init_ADCv+0xa8>)
     85c:	8513      	strh	r3, [r2, #40]	; 0x28
	//target is 250khz
	//from 2mhz clock
	
	//adc pins 2,3,4 in use
	
	REG_ADC_REFCTRL = ADC_REFCTRL_REFSEL_INTVCC0; //vccana=3.3v/1.48
     85e:	2301      	movs	r3, #1
     860:	4a1e      	ldr	r2, [pc, #120]	; (8dc <_Z8init_ADCv+0xac>)
     862:	7013      	strb	r3, [r2, #0]
	REG_ADC_AVGCTRL= ADC_AVGCTRL_SAMPLENUM_256|ADC_AVGCTRL_ADJRES(6); // right shift by 5,take 256 samples, right shifts automatically by 4
     864:	3997      	subs	r1, #151	; 0x97
     866:	4a1e      	ldr	r2, [pc, #120]	; (8e0 <_Z8init_ADCv+0xb0>)
     868:	7011      	strb	r1, [r2, #0]
	REG_ADC_SAMPCTRL = ADC_SAMPCTRL_SAMPLEN(1);// Sampling time, (sampleEN+1)(clkadc/2);
     86a:	4a1e      	ldr	r2, [pc, #120]	; (8e4 <_Z8init_ADCv+0xb4>)
     86c:	7013      	strb	r3, [r2, #0]
	while (ADC->STATUS.bit.SYNCBUSY==1);				
     86e:	4a1a      	ldr	r2, [pc, #104]	; (8d8 <_Z8init_ADCv+0xa8>)
     870:	7e53      	ldrb	r3, [r2, #25]
     872:	09db      	lsrs	r3, r3, #7
     874:	d1fc      	bne.n	870 <_Z8init_ADCv+0x40>
	//single ended mode, 
	REG_ADC_CTRLB= ADC_CTRLB_PRESCALER_DIV8|ADC_CTRLB_RESSEL_16BIT;//|ADC_CTRLB_DIFFMODE;//|ADC_CTRLB_CORREN;//divide 2.6667mhz clock by 8 to get 333khz
     876:	2288      	movs	r2, #136	; 0x88
     878:	0052      	lsls	r2, r2, #1
     87a:	4b1b      	ldr	r3, [pc, #108]	; (8e8 <_Z8init_ADCv+0xb8>)
     87c:	801a      	strh	r2, [r3, #0]
	while (ADC->STATUS.bit.SYNCBUSY==1);
     87e:	4a16      	ldr	r2, [pc, #88]	; (8d8 <_Z8init_ADCv+0xa8>)
     880:	7e53      	ldrb	r3, [r2, #25]
     882:	09db      	lsrs	r3, r3, #7
     884:	d1fc      	bne.n	880 <_Z8init_ADCv+0x50>
	REG_ADC_INPUTCTRL=  2|ADC_INPUTCTRL_MUXNEG_IOGND;//|ADC_INPUTCTRL_GAIN_DIV2; //pins2-5 in use, not set yet
     886:	4a19      	ldr	r2, [pc, #100]	; (8ec <_Z8init_ADCv+0xbc>)
     888:	4b19      	ldr	r3, [pc, #100]	; (8f0 <_Z8init_ADCv+0xc0>)
     88a:	601a      	str	r2, [r3, #0]
	while (ADC->STATUS.bit.SYNCBUSY==1);
     88c:	4a12      	ldr	r2, [pc, #72]	; (8d8 <_Z8init_ADCv+0xa8>)
     88e:	7e53      	ldrb	r3, [r2, #25]
     890:	09db      	lsrs	r3, r3, #7
     892:	d1fc      	bne.n	88e <_Z8init_ADCv+0x5e>
	
	
	//interrupt flags clearing
	REG_ADC_INTFLAG=0xf;
     894:	220f      	movs	r2, #15
     896:	4b17      	ldr	r3, [pc, #92]	; (8f4 <_Z8init_ADCv+0xc4>)
     898:	701a      	strb	r2, [r3, #0]
    //interrupt enable

	REG_ADC_INTENSET=ADC_INTENSET_RESRDY;
     89a:	2001      	movs	r0, #1
     89c:	3a0e      	subs	r2, #14
     89e:	4b16      	ldr	r3, [pc, #88]	; (8f8 <_Z8init_ADCv+0xc8>)
     8a0:	701a      	strb	r2, [r3, #0]
	
	
	//ADC->INTENSET.bit.RESRDY=1; //set interrupt when result ready
	ADC->INTFLAG.bit.RESRDY=1; //clear flag
     8a2:	4b0d      	ldr	r3, [pc, #52]	; (8d8 <_Z8init_ADCv+0xa8>)
     8a4:	7e19      	ldrb	r1, [r3, #24]
     8a6:	4301      	orrs	r1, r0
     8a8:	7619      	strb	r1, [r3, #24]
	
	ADC->DBGCTRL.bit.DBGRUN=1; //run while debugging
     8aa:	212a      	movs	r1, #42	; 0x2a
     8ac:	5c5a      	ldrb	r2, [r3, r1]
     8ae:	4302      	orrs	r2, r0
     8b0:	545a      	strb	r2, [r3, r1]
	ADC->CTRLA.bit.ENABLE=1;
     8b2:	781a      	ldrb	r2, [r3, #0]
     8b4:	2102      	movs	r1, #2
     8b6:	430a      	orrs	r2, r1
     8b8:	701a      	strb	r2, [r3, #0]
	
	while (ADC->STATUS.bit.SYNCBUSY==1);
     8ba:	001a      	movs	r2, r3
     8bc:	7e53      	ldrb	r3, [r2, #25]
     8be:	09db      	lsrs	r3, r3, #7
     8c0:	d1fc      	bne.n	8bc <_Z8init_ADCv+0x8c>
     8c2:	2280      	movs	r2, #128	; 0x80
     8c4:	0412      	lsls	r2, r2, #16
     8c6:	4b0d      	ldr	r3, [pc, #52]	; (8fc <_Z8init_ADCv+0xcc>)
     8c8:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(ADC_IRQn);
	
}
     8ca:	4770      	bx	lr
     8cc:	40000420 	.word	0x40000420
     8d0:	00806024 	.word	0x00806024
     8d4:	00806020 	.word	0x00806020
     8d8:	42004000 	.word	0x42004000
     8dc:	42004001 	.word	0x42004001
     8e0:	42004002 	.word	0x42004002
     8e4:	42004003 	.word	0x42004003
     8e8:	42004004 	.word	0x42004004
     8ec:	00001902 	.word	0x00001902
     8f0:	42004010 	.word	0x42004010
     8f4:	42004018 	.word	0x42004018
     8f8:	42004017 	.word	0x42004017
     8fc:	e000e100 	.word	0xe000e100

00000900 <_Z12init_sercomsv>:
	//3. sercom2 init, uart pms7003
	//4. sercom3 init, uart bluetooth
	//5. sercom4 init, uart co2

	
	REG_PM_APBCMASK |=PM_APBCMASK_SERCOM0|PM_APBCMASK_SERCOM1|PM_APBCMASK_SERCOM2|PM_APBCMASK_SERCOM3|PM_APBCMASK_SERCOM4;
     900:	4a3d      	ldr	r2, [pc, #244]	; (9f8 <_Z12init_sercomsv+0xf8>)
     902:	6813      	ldr	r3, [r2, #0]
     904:	217c      	movs	r1, #124	; 0x7c
     906:	430b      	orrs	r3, r1
     908:	6013      	str	r3, [r2, #0]
	
//1. sercom0 init, i2c, 400khz
	REG_SERCOM0_I2CM_CTRLA=SERCOM_I2CM_CTRLA_SPEED(0x0)| //fast mode up to 400khz
     90a:	4a3c      	ldr	r2, [pc, #240]	; (9fc <_Z12init_sercomsv+0xfc>)
     90c:	4b3c      	ldr	r3, [pc, #240]	; (a00 <_Z12init_sercomsv+0x100>)
     90e:	601a      	str	r2, [r3, #0]
							SERCOM_I2CM_CTRLA_SDAHOLD(0x2)| // hold time
							//SERCOM_I2CM_CTRLA_RUNSTDBY|
							SERCOM_I2CM_CTRLA_MODE_I2C_MASTER; //0x5 to mode
							
	REG_SERCOM0_I2CM_CTRLB=SERCOM_I2CM_CTRLB_SMEN;//smart mode on, sends ack on read						
     910:	2280      	movs	r2, #128	; 0x80
     912:	0052      	lsls	r2, r2, #1
     914:	4b3b      	ldr	r3, [pc, #236]	; (a04 <_Z12init_sercomsv+0x104>)
     916:	601a      	str	r2, [r3, #0]
	while(SERCOM0->I2CM.SYNCBUSY.bit.SYSOP);						
     918:	4a39      	ldr	r2, [pc, #228]	; (a00 <_Z12init_sercomsv+0x100>)
     91a:	69d3      	ldr	r3, [r2, #28]
     91c:	075b      	lsls	r3, r3, #29
     91e:	d4fc      	bmi.n	91a <_Z12init_sercomsv+0x1a>
							
	SERCOM0->I2CM.BAUD.reg=SERCOM_I2CM_BAUD_BAUD(5);//set baud to ~400khz, 8mhz/(10+2*5+0.04)						
     920:	2205      	movs	r2, #5
     922:	4b37      	ldr	r3, [pc, #220]	; (a00 <_Z12init_sercomsv+0x100>)
     924:	60da      	str	r2, [r3, #12]
	while(SERCOM0->I2CM.SYNCBUSY.bit.SYSOP);						
     926:	001a      	movs	r2, r3
     928:	69d3      	ldr	r3, [r2, #28]
     92a:	075b      	lsls	r3, r3, #29
     92c:	d4fc      	bmi.n	928 <_Z12init_sercomsv+0x28>
	REG_SERCOM0_I2CM_CTRLA|=SERCOM_I2CM_CTRLA_ENABLE;
     92e:	4a34      	ldr	r2, [pc, #208]	; (a00 <_Z12init_sercomsv+0x100>)
     930:	6813      	ldr	r3, [r2, #0]
     932:	2102      	movs	r1, #2
     934:	430b      	orrs	r3, r1
     936:	6013      	str	r3, [r2, #0]
	while((SERCOM0->I2CM.SYNCBUSY.reg&SERCOM_I2CM_SYNCBUSY_ENABLE));					
     938:	0011      	movs	r1, r2
     93a:	2202      	movs	r2, #2
     93c:	69cb      	ldr	r3, [r1, #28]
     93e:	421a      	tst	r2, r3
     940:	d1fc      	bne.n	93c <_Z12init_sercomsv+0x3c>
	SERCOM0->I2CM.STATUS.bit.BUSSTATE=0x1; //force to idle mode from unknown state						
     942:	4a2f      	ldr	r2, [pc, #188]	; (a00 <_Z12init_sercomsv+0x100>)
     944:	8b53      	ldrh	r3, [r2, #26]
     946:	2130      	movs	r1, #48	; 0x30
     948:	438b      	bics	r3, r1
     94a:	2110      	movs	r1, #16
     94c:	430b      	orrs	r3, r1
     94e:	8353      	strh	r3, [r2, #26]
	while(SERCOM0->I2CM.SYNCBUSY.bit.SYSOP);
     950:	69d3      	ldr	r3, [r2, #28]
     952:	075b      	lsls	r3, r3, #29
     954:	d4fc      	bmi.n	950 <_Z12init_sercomsv+0x50>
	
	SERCOM0->I2CM.INTENSET.reg=SERCOM_I2CM_INTENSET_MB| SERCOM_I2CM_INTENSET_SB;
     956:	2203      	movs	r2, #3
     958:	4b29      	ldr	r3, [pc, #164]	; (a00 <_Z12init_sercomsv+0x100>)
     95a:	759a      	strb	r2, [r3, #22]
	//NVIC_EnableIRQ(SERCOM0_IRQn);		
	
	
//2. display spi 
	REG_SERCOM1_SPI_CTRLA=SERCOM_SPI_CTRLA_DIPO(0x0)|
     95c:	4a2a      	ldr	r2, [pc, #168]	; (a08 <_Z12init_sercomsv+0x108>)
     95e:	4b2b      	ldr	r3, [pc, #172]	; (a0c <_Z12init_sercomsv+0x10c>)
     960:	601a      	str	r2, [r3, #0]
							SERCOM_SPI_CTRLA_DOPO(0x2)| 
							SERCOM_SPI_CTRLA_MODE_SPI_MASTER; 
	while(SERCOM1->SPI.SYNCBUSY.bit.CTRLB);    
     962:	001a      	movs	r2, r3
     964:	69d3      	ldr	r3, [r2, #28]
     966:	075b      	lsls	r3, r3, #29
     968:	d4fc      	bmi.n	964 <_Z12init_sercomsv+0x64>
	SERCOM1->SPI.BAUD.reg = 6;   //48mhz/(2*baudreg+1) 
     96a:	4b28      	ldr	r3, [pc, #160]	; (a0c <_Z12init_sercomsv+0x10c>)
     96c:	2206      	movs	r2, #6
     96e:	731a      	strb	r2, [r3, #12]
	
	SERCOM1->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
     970:	681a      	ldr	r2, [r3, #0]
     972:	2102      	movs	r1, #2
     974:	430a      	orrs	r2, r1
     976:	601a      	str	r2, [r3, #0]
    while(SERCOM1->SPI.SYNCBUSY.reg & SERCOM_SPI_SYNCBUSY_ENABLE);
     978:	0019      	movs	r1, r3
     97a:	2202      	movs	r2, #2
     97c:	69cb      	ldr	r3, [r1, #28]
     97e:	421a      	tst	r2, r3
     980:	d1fc      	bne.n	97c <_Z12init_sercomsv+0x7c>
	
//3. sercom2 init, uart pms7003,9600bauds
	// msb first,tx pad0, rx pad1, 16x oversampling, arithmetic baud rate gen
	//Generic Clock 4 is used 
	SERCOM2->USART.CTRLA.reg=
     982:	4b23      	ldr	r3, [pc, #140]	; (a10 <_Z12init_sercomsv+0x110>)
     984:	4a23      	ldr	r2, [pc, #140]	; (a14 <_Z12init_sercomsv+0x114>)
     986:	601a      	str	r2, [r3, #0]
				SERCOM_USART_CTRLA_MODE_USART_INT_CLK|SERCOM_USART_CTRLA_FORM(0)|SERCOM_USART_CTRLA_DORD; //lsb first!!
	
	//S=16(samples),fref=400khz
	//(1-S*FBAUD/fREF)*65536=BAUD
	//BAUD=40370.176;
	SERCOM2->USART.BAUD.reg=40370; //for 9600bauds
     988:	4a23      	ldr	r2, [pc, #140]	; (a18 <_Z12init_sercomsv+0x118>)
     98a:	819a      	strh	r2, [r3, #12]
	//8bits, enable receiver
	SERCOM2->USART.CTRLB.reg=	SERCOM_USART_CTRLB_CHSIZE(0x0)|SERCOM_USART_CTRLB_RXEN;//|SERCOM_USART_CTRLB_TXEN; //for transmitter
     98c:	2280      	movs	r2, #128	; 0x80
     98e:	0292      	lsls	r2, r2, #10
     990:	605a      	str	r2, [r3, #4]
	while(SERCOM2->USART.SYNCBUSY.bit.CTRLB);
     992:	001a      	movs	r2, r3
     994:	69d3      	ldr	r3, [r2, #28]
     996:	075b      	lsls	r3, r3, #29
     998:	d4fc      	bmi.n	994 <_Z12init_sercomsv+0x94>
	
	SERCOM2->USART.INTENSET.reg=SERCOM_USART_INTFLAG_RXC; //receive interrupt
     99a:	4b1d      	ldr	r3, [pc, #116]	; (a10 <_Z12init_sercomsv+0x110>)
     99c:	2204      	movs	r2, #4
     99e:	759a      	strb	r2, [r3, #22]
	SERCOM2->USART.INTFLAG.reg=0xf;
     9a0:	320b      	adds	r2, #11
     9a2:	761a      	strb	r2, [r3, #24]
     9a4:	2180      	movs	r1, #128	; 0x80
     9a6:	0109      	lsls	r1, r1, #4
     9a8:	4a1c      	ldr	r2, [pc, #112]	; (a1c <_Z12init_sercomsv+0x11c>)
     9aa:	6011      	str	r1, [r2, #0]
	
	NVIC_EnableIRQ(SERCOM2_IRQn);
	
	SERCOM2->USART.CTRLA.reg|=SERCOM_USART_CTRLA_ENABLE;
     9ac:	681a      	ldr	r2, [r3, #0]
     9ae:	2102      	movs	r1, #2
     9b0:	430a      	orrs	r2, r1
     9b2:	601a      	str	r2, [r3, #0]
	while(SERCOM2->USART.SYNCBUSY.reg&SERCOM_USART_SYNCBUSY_ENABLE);	
     9b4:	0019      	movs	r1, r3
     9b6:	2202      	movs	r2, #2
     9b8:	69cb      	ldr	r3, [r1, #28]
     9ba:	421a      	tst	r2, r3
     9bc:	d1fc      	bne.n	9b8 <_Z12init_sercomsv+0xb8>
//4. sercom3 init, uart bluetooth, 4 wire
	
//5. sercom4 init, uart co2,
	// msb first,	tx pad 2, rx pad3, 16x oversampling
	//Generic Clock 4 is used with, 400khz clk
	SERCOM4->USART.CTRLA.reg=	SERCOM_USART_CTRLA_RXPO(3)|SERCOM_USART_CTRLA_TXPO(1)|SERCOM_USART_CTRLA_SAMPR(0)|
     9be:	4b18      	ldr	r3, [pc, #96]	; (a20 <_Z12init_sercomsv+0x120>)
     9c0:	4a14      	ldr	r2, [pc, #80]	; (a14 <_Z12init_sercomsv+0x114>)
     9c2:	601a      	str	r2, [r3, #0]
	//FBAUD= ( fREF/ S) (1 –BAUD/65,536)
	//fREF=400khz, S=16,Fbaud=9600
	//FBAUD*( S/fREF)=(1–(BAUD/65536))
	//(1-FBAUD*S/fREF)*65536=BAUD
	//BAUD=40370.176;
	SERCOM4->USART.BAUD.reg=40370; //9600
     9c4:	4a14      	ldr	r2, [pc, #80]	; (a18 <_Z12init_sercomsv+0x118>)
     9c6:	819a      	strh	r2, [r3, #12]
	//8bits, enable receiver
	SERCOM4->USART.CTRLB.reg=SERCOM_USART_CTRLB_CHSIZE(0x0)|SERCOM_USART_CTRLB_RXEN| SERCOM_USART_CTRLB_TXEN;
     9c8:	22c0      	movs	r2, #192	; 0xc0
     9ca:	0292      	lsls	r2, r2, #10
     9cc:	605a      	str	r2, [r3, #4]
	while(SERCOM4->USART.SYNCBUSY.bit.CTRLB);
     9ce:	001a      	movs	r2, r3
     9d0:	69d3      	ldr	r3, [r2, #28]
     9d2:	075b      	lsls	r3, r3, #29
     9d4:	d4fc      	bmi.n	9d0 <_Z12init_sercomsv+0xd0>
	//receive interrupt,data register empty flag
	SERCOM4->USART.INTENSET.reg=SERCOM_USART_INTFLAG_RXC| SERCOM_USART_INTFLAG_TXC;
     9d6:	4b12      	ldr	r3, [pc, #72]	; (a20 <_Z12init_sercomsv+0x120>)
     9d8:	2206      	movs	r2, #6
     9da:	759a      	strb	r2, [r3, #22]
     9dc:	2180      	movs	r1, #128	; 0x80
     9de:	0189      	lsls	r1, r1, #6
     9e0:	4a0e      	ldr	r2, [pc, #56]	; (a1c <_Z12init_sercomsv+0x11c>)
     9e2:	6011      	str	r1, [r2, #0]
	//SERCOM4->USART.INTFLAG.reg=SERCOM_USART_INTFLAG_RXC| SERCOM_USART_INTFLAG_TXC;
	NVIC_EnableIRQ(SERCOM4_IRQn);
	
	SERCOM4->USART.CTRLA.reg|=SERCOM_USART_CTRLA_ENABLE;
     9e4:	681a      	ldr	r2, [r3, #0]
     9e6:	2102      	movs	r1, #2
     9e8:	430a      	orrs	r2, r1
     9ea:	601a      	str	r2, [r3, #0]
	while(SERCOM4->USART.SYNCBUSY.reg&SERCOM_USART_SYNCBUSY_ENABLE);
     9ec:	0019      	movs	r1, r3
     9ee:	2202      	movs	r2, #2
     9f0:	69cb      	ldr	r3, [r1, #28]
     9f2:	421a      	tst	r2, r3
     9f4:	d1fc      	bne.n	9f0 <_Z12init_sercomsv+0xf0>
	

	
}
     9f6:	4770      	bx	lr
     9f8:	40000420 	.word	0x40000420
     9fc:	00200014 	.word	0x00200014
     a00:	42000800 	.word	0x42000800
     a04:	42000804 	.word	0x42000804
     a08:	0002000c 	.word	0x0002000c
     a0c:	42000c00 	.word	0x42000c00
     a10:	42001000 	.word	0x42001000
     a14:	40310004 	.word	0x40310004
     a18:	ffff9db2 	.word	0xffff9db2
     a1c:	e000e100 	.word	0xe000e100
     a20:	42001800 	.word	0x42001800

00000a24 <_Z8init_RTCv>:


void init_RTC()
{
	REG_PM_APBAMASK |= PM_APBAMASK_RTC;
     a24:	4a13      	ldr	r2, [pc, #76]	; (a74 <_Z8init_RTCv+0x50>)
     a26:	6813      	ldr	r3, [r2, #0]
     a28:	2120      	movs	r1, #32
     a2a:	430b      	orrs	r3, r1
     a2c:	6013      	str	r3, [r2, #0]
	
	RTC->MODE2.CTRL.reg = RTC_MODE2_CTRL_SWRST; //reset
     a2e:	2201      	movs	r2, #1
     a30:	4b11      	ldr	r3, [pc, #68]	; (a78 <_Z8init_RTCv+0x54>)
     a32:	801a      	strh	r2, [r3, #0]
	while (RTC->MODE2.STATUS.bit.SYNCBUSY ||  RTC->MODE2.CTRL.bit.SWRST);
     a34:	001a      	movs	r2, r3
     a36:	7a93      	ldrb	r3, [r2, #10]
     a38:	09db      	lsrs	r3, r3, #7
     a3a:	d1fc      	bne.n	a36 <_Z8init_RTCv+0x12>
     a3c:	8813      	ldrh	r3, [r2, #0]
     a3e:	07db      	lsls	r3, r3, #31
     a40:	d4f9      	bmi.n	a36 <_Z8init_RTCv+0x12>
		
	RTC->MODE2.INTENSET.reg = RTC_MODE2_INTENSET_SYNCRDY;
     a42:	2240      	movs	r2, #64	; 0x40
     a44:	4b0c      	ldr	r3, [pc, #48]	; (a78 <_Z8init_RTCv+0x54>)
     a46:	71da      	strb	r2, [r3, #7]
	//RTC->MODE2.INTFLAG.bit.SYNCRDY=1; //clear flag
	
	//REG_RTC_MODE2_ALARM_MASK0= RTC_MODE2_MASK_SEL_YYMMDDHHMMSS;	
	REG_RTC_READREQ=RTC_READREQ_RREQ; //RTC_READREQ_RCONT;//| 
     a48:	4a0c      	ldr	r2, [pc, #48]	; (a7c <_Z8init_RTCv+0x58>)
     a4a:	4b0d      	ldr	r3, [pc, #52]	; (a80 <_Z8init_RTCv+0x5c>)
     a4c:	801a      	strh	r2, [r3, #0]
	//RTC->MODE2.READREQ.reg = RTC_READREQ_RCONT;//|RTC_READREQ_RREQ;  // continuous read sync
	while (RTC->MODE2.STATUS.bit.SYNCBUSY == 1 );
     a4e:	4a0a      	ldr	r2, [pc, #40]	; (a78 <_Z8init_RTCv+0x54>)
     a50:	7a93      	ldrb	r3, [r2, #10]
     a52:	09db      	lsrs	r3, r3, #7
     a54:	d1fc      	bne.n	a50 <_Z8init_RTCv+0x2c>
	RTC->MODE2.CTRL.reg =RTC_MODE2_CTRL_MODE_CLOCK| RTC_MODE2_CTRL_PRESCALER_DIV1024 | RTC_MODE2_CTRL_ENABLE; //div by 1024
     a56:	4a0b      	ldr	r2, [pc, #44]	; (a84 <_Z8init_RTCv+0x60>)
     a58:	4b07      	ldr	r3, [pc, #28]	; (a78 <_Z8init_RTCv+0x54>)
     a5a:	801a      	strh	r2, [r3, #0]
	while (RTC->MODE2.STATUS.bit.SYNCBUSY == 1 );
     a5c:	001a      	movs	r2, r3
     a5e:	7a93      	ldrb	r3, [r2, #10]
     a60:	09db      	lsrs	r3, r3, #7
     a62:	d1fc      	bne.n	a5e <_Z8init_RTCv+0x3a>

	while (RTC->MODE2.STATUS.bit.SYNCBUSY == 1 );
     a64:	4a04      	ldr	r2, [pc, #16]	; (a78 <_Z8init_RTCv+0x54>)
     a66:	7a93      	ldrb	r3, [r2, #10]
     a68:	09db      	lsrs	r3, r3, #7
     a6a:	d1fc      	bne.n	a66 <_Z8init_RTCv+0x42>
     a6c:	2208      	movs	r2, #8
     a6e:	4b06      	ldr	r3, [pc, #24]	; (a88 <_Z8init_RTCv+0x64>)
     a70:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(RTC_IRQn);
}
     a72:	4770      	bx	lr
     a74:	40000418 	.word	0x40000418
     a78:	40001400 	.word	0x40001400
     a7c:	ffff8000 	.word	0xffff8000
     a80:	40001402 	.word	0x40001402
     a84:	00000a0a 	.word	0x00000a0a
     a88:	e000e100 	.word	0xe000e100

00000a8c <_Z11delay_loopsm>:
	asm(".syntax unified");
	asm volatile (
		"1: SUBS %[loops], %[loops], #1 \n"
		"   BNE 1b \n"
		: [loops] "+r"(loops)
	);
     a8c:	3801      	subs	r0, #1
     a8e:	d1fd      	bne.n	a8c <_Z11delay_loopsm>
	asm(".syntax divided");
}
     a90:	4770      	bx	lr
	...

00000a94 <_Z8delay_mst>:
	for (uint16_t i=0; i < us; i++){
		_delay_us(1);
	}	
}

void delay_ms(uint16_t ms){
     a94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     a96:	1e05      	subs	r5, r0, #0
	for (uint16_t i=0; i < ms; i++){
     a98:	dd09      	ble.n	aae <_Z8delay_mst+0x1a>
     a9a:	2400      	movs	r4, #0
		_delay_ms(1);
     a9c:	26fa      	movs	r6, #250	; 0xfa
     a9e:	01b6      	lsls	r6, r6, #6
     aa0:	4f03      	ldr	r7, [pc, #12]	; (ab0 <_Z8delay_mst+0x1c>)
     aa2:	0030      	movs	r0, r6
     aa4:	47b8      	blx	r7
	for (uint16_t i=0; i < ms; i++){
     aa6:	3401      	adds	r4, #1
     aa8:	b2a4      	uxth	r4, r4
     aaa:	42ac      	cmp	r4, r5
     aac:	dbf9      	blt.n	aa2 <_Z8delay_mst+0xe>
	}	
}
     aae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     ab0:	00000a8d 	.word	0x00000a8d

00000ab4 <_ZL10delay_msecm>:
	
  return 0;
}


static void delay_msec(uint32_t ms){
     ab4:	b510      	push	{r4, lr}
  delay_ms(ms);
     ab6:	b280      	uxth	r0, r0
     ab8:	4b01      	ldr	r3, [pc, #4]	; (ac0 <_ZL10delay_msecm+0xc>)
     aba:	4798      	blx	r3
}
     abc:	bd10      	pop	{r4, pc}
     abe:	46c0      	nop			; (mov r8, r8)
     ac0:	00000a95 	.word	0x00000a95

00000ac4 <_Z7readADCh>:
}
*/
//to get adc results 
uint16_t readADC(uint8_t muxpos) 
{
	ADC_done=false;
     ac4:	2200      	movs	r2, #0
     ac6:	4b0b      	ldr	r3, [pc, #44]	; (af4 <_Z7readADCh+0x30>)
     ac8:	701a      	strb	r2, [r3, #0]
	//REG_ADC_SWTRIG=ADC_SWTRIG_FLUSH;
	//set mux from input
	//REG_ADC_INPUTCTRL= (uint32_t)ADC_INPUTCTRL_MUXNEG_GND|ADC_INPUTCTRL_GAIN_DIV2|muxpos;
	
	//REG_ADC_AVGCTRL= ADC_AVGCTRL_SAMPLENUM_16|ADC_AVGCTRL_ADJRES(4); //
	REG_ADC_INPUTCTRL= (uint32_t)muxpos|ADC_INPUTCTRL_MUXNEG_IOGND;//negative reference 	
     aca:	23c8      	movs	r3, #200	; 0xc8
     acc:	015b      	lsls	r3, r3, #5
     ace:	4318      	orrs	r0, r3
     ad0:	4b09      	ldr	r3, [pc, #36]	; (af8 <_Z7readADCh+0x34>)
     ad2:	6018      	str	r0, [r3, #0]
	while (ADC->STATUS.bit.SYNCBUSY==1);			
     ad4:	4a09      	ldr	r2, [pc, #36]	; (afc <_Z7readADCh+0x38>)
     ad6:	7e53      	ldrb	r3, [r2, #25]
     ad8:	09db      	lsrs	r3, r3, #7
     ada:	d1fc      	bne.n	ad6 <_Z7readADCh+0x12>
	REG_ADC_SWTRIG=ADC_SWTRIG_START; //starts a conversion
     adc:	2202      	movs	r2, #2
     ade:	4b08      	ldr	r3, [pc, #32]	; (b00 <_Z7readADCh+0x3c>)
     ae0:	701a      	strb	r2, [r3, #0]
	//while (ADC->INTFLAG.bit.RESRDY == 0);
	//ADC->INTFLAG.bit.RESRDY = 1;
	while(!ADC_done); //wait till adc is done
     ae2:	4a04      	ldr	r2, [pc, #16]	; (af4 <_Z7readADCh+0x30>)
     ae4:	7813      	ldrb	r3, [r2, #0]
     ae6:	2b00      	cmp	r3, #0
     ae8:	d0fc      	beq.n	ae4 <_Z7readADCh+0x20>
	/*
if(ADC->RESULT.reg >= 0x8000 )
{
	 return (0xffff-ADC->RESULT.reg);	
}*/
  return ADC->RESULT.reg;
     aea:	4b04      	ldr	r3, [pc, #16]	; (afc <_Z7readADCh+0x38>)
     aec:	8b58      	ldrh	r0, [r3, #26]
     aee:	b280      	uxth	r0, r0
}
     af0:	4770      	bx	lr
     af2:	46c0      	nop			; (mov r8, r8)
     af4:	20000500 	.word	0x20000500
     af8:	42004010 	.word	0x42004010
     afc:	42004000 	.word	0x42004000
     b00:	4200400c 	.word	0x4200400c

00000b04 <ADC_Handler>:

void ADC_Handler()
{
	if(ADC->INTFLAG.bit.RESRDY==1)
     b04:	4b06      	ldr	r3, [pc, #24]	; (b20 <ADC_Handler+0x1c>)
     b06:	7e1b      	ldrb	r3, [r3, #24]
     b08:	07db      	lsls	r3, r3, #31
     b0a:	d507      	bpl.n	b1c <ADC_Handler+0x18>
	{
		ADC_done=true;
     b0c:	2201      	movs	r2, #1
     b0e:	4b05      	ldr	r3, [pc, #20]	; (b24 <ADC_Handler+0x20>)
     b10:	701a      	strb	r2, [r3, #0]
		ADC->INTFLAG.bit.RESRDY=1; //clear flags
     b12:	4a03      	ldr	r2, [pc, #12]	; (b20 <ADC_Handler+0x1c>)
     b14:	7e13      	ldrb	r3, [r2, #24]
     b16:	2101      	movs	r1, #1
     b18:	430b      	orrs	r3, r1
     b1a:	7613      	strb	r3, [r2, #24]
	}
}
     b1c:	4770      	bx	lr
     b1e:	46c0      	nop			; (mov r8, r8)
     b20:	42004000 	.word	0x42004000
     b24:	20000500 	.word	0x20000500

00000b28 <_Z7reversePci>:
	return battery_char_cur;
}
*/

// reverses a string 'str' of length 'len'
void reverse(char *str, int len){
     b28:	b510      	push	{r4, lr}
	int i=0, j=len-1, temp;
     b2a:	3901      	subs	r1, #1
	while (i<j){
     b2c:	2900      	cmp	r1, #0
     b2e:	dd08      	ble.n	b42 <_Z7reversePci+0x1a>
     b30:	2300      	movs	r3, #0
		temp = str[i];
     b32:	5cc2      	ldrb	r2, [r0, r3]
		str[i] = str[j];
     b34:	5c44      	ldrb	r4, [r0, r1]
     b36:	54c4      	strb	r4, [r0, r3]
		str[j] = temp;
     b38:	5442      	strb	r2, [r0, r1]
		i++; j--;
     b3a:	3301      	adds	r3, #1
     b3c:	3901      	subs	r1, #1
	while (i<j){
     b3e:	428b      	cmp	r3, r1
     b40:	dbf7      	blt.n	b32 <_Z7reversePci+0xa>
	}
}
     b42:	bd10      	pop	{r4, pc}

00000b44 <_Z8intToStriPci>:
// Converts a given integer x to string str[].  d is the number
// of digits required in output. If d is more than the number
// of digits in x, then 0s are added at the beginning.
int intToStr(int x, char str[], int d) {
     b44:	b5f0      	push	{r4, r5, r6, r7, lr}
     b46:	46de      	mov	lr, fp
     b48:	4657      	mov	r7, sl
     b4a:	4646      	mov	r6, r8
     b4c:	b5c0      	push	{r6, r7, lr}
     b4e:	b082      	sub	sp, #8
     b50:	0005      	movs	r5, r0
     b52:	000f      	movs	r7, r1
     b54:	9101      	str	r1, [sp, #4]
     b56:	4692      	mov	sl, r2

	int i = 0;
	while (x) {
     b58:	2800      	cmp	r0, #0
     b5a:	d02f      	beq.n	bbc <_Z8intToStriPci+0x78>
     b5c:	2201      	movs	r2, #1
     b5e:	1a53      	subs	r3, r2, r1
     b60:	4698      	mov	r8, r3
		str[i++] = (x%10) + '0';
     b62:	4b17      	ldr	r3, [pc, #92]	; (bc0 <_Z8intToStriPci+0x7c>)
     b64:	469b      	mov	fp, r3
		x = x/10;
     b66:	4e17      	ldr	r6, [pc, #92]	; (bc4 <_Z8intToStriPci+0x80>)
     b68:	4643      	mov	r3, r8
     b6a:	19dc      	adds	r4, r3, r7
		str[i++] = (x%10) + '0';
     b6c:	210a      	movs	r1, #10
     b6e:	0028      	movs	r0, r5
     b70:	47d8      	blx	fp
     b72:	3130      	adds	r1, #48	; 0x30
     b74:	7039      	strb	r1, [r7, #0]
		x = x/10;
     b76:	210a      	movs	r1, #10
     b78:	0028      	movs	r0, r5
     b7a:	47b0      	blx	r6
     b7c:	0005      	movs	r5, r0
     b7e:	3701      	adds	r7, #1
	while (x) {
     b80:	2800      	cmp	r0, #0
     b82:	d1f1      	bne.n	b68 <_Z8intToStriPci+0x24>
	}
	// If number of digits required is more, then
	// add 0s at the beginning
	while (i < d)
     b84:	4554      	cmp	r4, sl
     b86:	da0b      	bge.n	ba0 <_Z8intToStriPci+0x5c>
     b88:	9a01      	ldr	r2, [sp, #4]
     b8a:	0013      	movs	r3, r2
     b8c:	4694      	mov	ip, r2
     b8e:	4464      	add	r4, ip
     b90:	4453      	add	r3, sl
     b92:	001a      	movs	r2, r3
	str[i++] = '0';
     b94:	2330      	movs	r3, #48	; 0x30
     b96:	7023      	strb	r3, [r4, #0]
     b98:	3401      	adds	r4, #1
	while (i < d)
     b9a:	4294      	cmp	r4, r2
     b9c:	d1fb      	bne.n	b96 <_Z8intToStriPci+0x52>
	str[i++] = '0';
     b9e:	4654      	mov	r4, sl
	reverse(str, i);
     ba0:	0021      	movs	r1, r4
     ba2:	9d01      	ldr	r5, [sp, #4]
     ba4:	0028      	movs	r0, r5
     ba6:	4b08      	ldr	r3, [pc, #32]	; (bc8 <_Z8intToStriPci+0x84>)
     ba8:	4798      	blx	r3
	str[i] = '\0';
     baa:	2300      	movs	r3, #0
     bac:	552b      	strb	r3, [r5, r4]
	
	
	return i;
}
     bae:	0020      	movs	r0, r4
     bb0:	b002      	add	sp, #8
     bb2:	bc1c      	pop	{r2, r3, r4}
     bb4:	4690      	mov	r8, r2
     bb6:	469a      	mov	sl, r3
     bb8:	46a3      	mov	fp, r4
     bba:	bdf0      	pop	{r4, r5, r6, r7, pc}
	int i = 0;
     bbc:	0004      	movs	r4, r0
     bbe:	e7e1      	b.n	b84 <_Z8intToStriPci+0x40>
     bc0:	00005f29 	.word	0x00005f29
     bc4:	00005d5d 	.word	0x00005d5d
     bc8:	00000b29 	.word	0x00000b29

00000bcc <_Z5ftoaddPci>:
		intToStr((int)fpart, res + i + 1, afterpoint);
	}
}
// rounds the floating part
void ftoad(double n, char *res, int afterpoint)
{
     bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
     bce:	46d6      	mov	lr, sl
     bd0:	464f      	mov	r7, r9
     bd2:	b580      	push	{r7, lr}
     bd4:	b085      	sub	sp, #20
     bd6:	9000      	str	r0, [sp, #0]
     bd8:	9101      	str	r1, [sp, #4]
     bda:	0015      	movs	r5, r2
     bdc:	1e1c      	subs	r4, r3, #0
	if(afterpoint != 0)
     bde:	d10e      	bne.n	bfe <_Z5ftoaddPci+0x32>
	{
		n=(double)round((double)n*(double)pow((double)10,(double)afterpoint));
		n/=(double)pow((double)10,(double)afterpoint);
	}
	else n=round(n);
     be0:	9800      	ldr	r0, [sp, #0]
     be2:	9901      	ldr	r1, [sp, #4]
     be4:	4b31      	ldr	r3, [pc, #196]	; (cac <_Z5ftoaddPci+0xe0>)
     be6:	4798      	blx	r3
	// Extract integer part
	int  ipart = (int)n;
     be8:	4b31      	ldr	r3, [pc, #196]	; (cb0 <_Z5ftoaddPci+0xe4>)
     bea:	4798      	blx	r3
	// Extract floating part
	double fpart =(double) ((double)(n) - (double)ipart);
	
	// convert integer part to string
	//int i = intToStr(ipart, res, 0);
	uint16_t  i = intToStr(ipart, res, 1); //forces to show 0 at the beginning
     bec:	2201      	movs	r2, #1
     bee:	0029      	movs	r1, r5
     bf0:	4b30      	ldr	r3, [pc, #192]	; (cb4 <_Z5ftoaddPci+0xe8>)
     bf2:	4798      	blx	r3
		// to handle cases like 233.007
		fpart = fpart* pow(10, afterpoint);
		if(fpart==10)fpart=1;
		intToStr((int)fpart, res + i + 1, afterpoint);
	}
}
     bf4:	b005      	add	sp, #20
     bf6:	bc0c      	pop	{r2, r3}
     bf8:	4691      	mov	r9, r2
     bfa:	469a      	mov	sl, r3
     bfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
		n=(double)round((double)n*(double)pow((double)10,(double)afterpoint));
     bfe:	4f2e      	ldr	r7, [pc, #184]	; (cb8 <_Z5ftoaddPci+0xec>)
     c00:	0018      	movs	r0, r3
     c02:	47b8      	blx	r7
     c04:	9002      	str	r0, [sp, #8]
     c06:	9103      	str	r1, [sp, #12]
     c08:	0002      	movs	r2, r0
     c0a:	000b      	movs	r3, r1
     c0c:	2000      	movs	r0, #0
     c0e:	492b      	ldr	r1, [pc, #172]	; (cbc <_Z5ftoaddPci+0xf0>)
     c10:	4e2b      	ldr	r6, [pc, #172]	; (cc0 <_Z5ftoaddPci+0xf4>)
     c12:	46b1      	mov	r9, r6
     c14:	47b0      	blx	r6
     c16:	4b2b      	ldr	r3, [pc, #172]	; (cc4 <_Z5ftoaddPci+0xf8>)
     c18:	469a      	mov	sl, r3
     c1a:	9a00      	ldr	r2, [sp, #0]
     c1c:	9b01      	ldr	r3, [sp, #4]
     c1e:	47d0      	blx	sl
     c20:	4b22      	ldr	r3, [pc, #136]	; (cac <_Z5ftoaddPci+0xe0>)
     c22:	4798      	blx	r3
     c24:	9000      	str	r0, [sp, #0]
     c26:	9101      	str	r1, [sp, #4]
		n/=(double)pow((double)10,(double)afterpoint);
     c28:	9a02      	ldr	r2, [sp, #8]
     c2a:	9b03      	ldr	r3, [sp, #12]
     c2c:	2000      	movs	r0, #0
     c2e:	4923      	ldr	r1, [pc, #140]	; (cbc <_Z5ftoaddPci+0xf0>)
     c30:	47b0      	blx	r6
     c32:	0002      	movs	r2, r0
     c34:	000b      	movs	r3, r1
     c36:	9800      	ldr	r0, [sp, #0]
     c38:	9901      	ldr	r1, [sp, #4]
     c3a:	4e23      	ldr	r6, [pc, #140]	; (cc8 <_Z5ftoaddPci+0xfc>)
     c3c:	47b0      	blx	r6
	int  ipart = (int)n;
     c3e:	9000      	str	r0, [sp, #0]
     c40:	9101      	str	r1, [sp, #4]
     c42:	4b1b      	ldr	r3, [pc, #108]	; (cb0 <_Z5ftoaddPci+0xe4>)
     c44:	4798      	blx	r3
     c46:	0006      	movs	r6, r0
	double fpart =(double) ((double)(n) - (double)ipart);
     c48:	47b8      	blx	r7
     c4a:	0002      	movs	r2, r0
     c4c:	000b      	movs	r3, r1
     c4e:	9800      	ldr	r0, [sp, #0]
     c50:	9901      	ldr	r1, [sp, #4]
     c52:	4f1e      	ldr	r7, [pc, #120]	; (ccc <_Z5ftoaddPci+0x100>)
     c54:	47b8      	blx	r7
     c56:	9000      	str	r0, [sp, #0]
     c58:	9101      	str	r1, [sp, #4]
	uint16_t  i = intToStr(ipart, res, 1); //forces to show 0 at the beginning
     c5a:	2201      	movs	r2, #1
     c5c:	0029      	movs	r1, r5
     c5e:	0030      	movs	r0, r6
     c60:	4b14      	ldr	r3, [pc, #80]	; (cb4 <_Z5ftoaddPci+0xe8>)
     c62:	4798      	blx	r3
		res[i] = '.';  // add dot
     c64:	0400      	lsls	r0, r0, #16
     c66:	0c06      	lsrs	r6, r0, #16
     c68:	232e      	movs	r3, #46	; 0x2e
     c6a:	55ab      	strb	r3, [r5, r6]
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
     c6c:	9a02      	ldr	r2, [sp, #8]
     c6e:	9b03      	ldr	r3, [sp, #12]
     c70:	2000      	movs	r0, #0
     c72:	4912      	ldr	r1, [pc, #72]	; (cbc <_Z5ftoaddPci+0xf0>)
     c74:	47c8      	blx	r9
		fpart = fpart* pow(10, afterpoint);
     c76:	9a00      	ldr	r2, [sp, #0]
     c78:	9b01      	ldr	r3, [sp, #4]
     c7a:	47d0      	blx	sl
     c7c:	9000      	str	r0, [sp, #0]
     c7e:	9101      	str	r1, [sp, #4]
		if(fpart==10)fpart=1;
     c80:	2200      	movs	r2, #0
     c82:	4b0e      	ldr	r3, [pc, #56]	; (cbc <_Z5ftoaddPci+0xf0>)
     c84:	4f12      	ldr	r7, [pc, #72]	; (cd0 <_Z5ftoaddPci+0x104>)
     c86:	47b8      	blx	r7
     c88:	2800      	cmp	r0, #0
     c8a:	d10a      	bne.n	ca2 <_Z5ftoaddPci+0xd6>
		intToStr((int)fpart, res + i + 1, afterpoint);
     c8c:	1c70      	adds	r0, r6, #1
     c8e:	182d      	adds	r5, r5, r0
     c90:	9800      	ldr	r0, [sp, #0]
     c92:	9901      	ldr	r1, [sp, #4]
     c94:	4b06      	ldr	r3, [pc, #24]	; (cb0 <_Z5ftoaddPci+0xe4>)
     c96:	4798      	blx	r3
     c98:	0022      	movs	r2, r4
     c9a:	0029      	movs	r1, r5
     c9c:	4b05      	ldr	r3, [pc, #20]	; (cb4 <_Z5ftoaddPci+0xe8>)
     c9e:	4798      	blx	r3
}
     ca0:	e7a8      	b.n	bf4 <_Z5ftoaddPci+0x28>
		if(fpart==10)fpart=1;
     ca2:	2200      	movs	r2, #0
     ca4:	4b0b      	ldr	r3, [pc, #44]	; (cd4 <_Z5ftoaddPci+0x108>)
     ca6:	9200      	str	r2, [sp, #0]
     ca8:	9301      	str	r3, [sp, #4]
     caa:	e7ef      	b.n	c8c <_Z5ftoaddPci+0xc0>
     cac:	000049c9 	.word	0x000049c9
     cb0:	0000849d 	.word	0x0000849d
     cb4:	00000b45 	.word	0x00000b45
     cb8:	00008505 	.word	0x00008505
     cbc:	40240000 	.word	0x40240000
     cc0:	00004a75 	.word	0x00004a75
     cc4:	00007931 	.word	0x00007931
     cc8:	000070c9 	.word	0x000070c9
     ccc:	00007e31 	.word	0x00007e31
     cd0:	00005f55 	.word	0x00005f55
     cd4:	3ff00000 	.word	0x3ff00000

00000cd8 <_ZN7PMS700316AQI_calc_indexesEv>:
}

//call after x seconds
//concentrations are in ug/m3
void PMS7003::AQI_calc_indexes()
{
     cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
     cda:	46de      	mov	lr, fp
     cdc:	4657      	mov	r7, sl
     cde:	464e      	mov	r6, r9
     ce0:	4645      	mov	r5, r8
     ce2:	b5e0      	push	{r5, r6, r7, lr}
     ce4:	b095      	sub	sp, #84	; 0x54
     ce6:	0004      	movs	r4, r0
	if(aqi_index >= PMS7003_sample_num_LONG) //after enought samples
     ce8:	8f85      	ldrh	r5, [r0, #60]	; 0x3c
     cea:	2d13      	cmp	r5, #19
     cec:	dc06      	bgt.n	cfc <_ZN7PMS700316AQI_calc_indexesEv+0x24>
		}
	}
	
	pms7003_values_done=true;
	}
}
     cee:	b015      	add	sp, #84	; 0x54
     cf0:	bc3c      	pop	{r2, r3, r4, r5}
     cf2:	4690      	mov	r8, r2
     cf4:	4699      	mov	r9, r3
     cf6:	46a2      	mov	sl, r4
     cf8:	46ab      	mov	fp, r5
     cfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	char helper[14]={0,0,0,0,0,0,0,0,0,0,0,0,0,0};
     cfc:	220e      	movs	r2, #14
     cfe:	2100      	movs	r1, #0
     d00:	a810      	add	r0, sp, #64	; 0x40
     d02:	4bdd      	ldr	r3, [pc, #884]	; (1078 <_ZN7PMS700316AQI_calc_indexesEv+0x3a0>)
     d04:	4798      	blx	r3
	strncpy(AQI_CATEGORY_PM2_5_CF1, helper, 14);
     d06:	2368      	movs	r3, #104	; 0x68
     d08:	469c      	mov	ip, r3
     d0a:	44a4      	add	ip, r4
     d0c:	4663      	mov	r3, ip
     d0e:	930c      	str	r3, [sp, #48]	; 0x30
     d10:	220e      	movs	r2, #14
     d12:	a910      	add	r1, sp, #64	; 0x40
     d14:	4660      	mov	r0, ip
     d16:	4ed9      	ldr	r6, [pc, #868]	; (107c <_ZN7PMS700316AQI_calc_indexesEv+0x3a4>)
     d18:	47b0      	blx	r6
	strncpy(AQI_CATEGORY_PM10_CF1, helper, 14);
     d1a:	2376      	movs	r3, #118	; 0x76
     d1c:	469c      	mov	ip, r3
     d1e:	44a4      	add	ip, r4
     d20:	4663      	mov	r3, ip
     d22:	930d      	str	r3, [sp, #52]	; 0x34
     d24:	220e      	movs	r2, #14
     d26:	a910      	add	r1, sp, #64	; 0x40
     d28:	4660      	mov	r0, ip
     d2a:	47b0      	blx	r6
	old_max_PM2_5_CF1=max_PM2_5_CF1;
     d2c:	68a2      	ldr	r2, [r4, #8]
     d2e:	68e3      	ldr	r3, [r4, #12]
     d30:	9200      	str	r2, [sp, #0]
     d32:	9301      	str	r3, [sp, #4]
     d34:	62a2      	str	r2, [r4, #40]	; 0x28
     d36:	62e3      	str	r3, [r4, #44]	; 0x2c
	old_min_PM2_5_CF1=min_PM2_5_CF1;
     d38:	6922      	ldr	r2, [r4, #16]
     d3a:	6963      	ldr	r3, [r4, #20]
     d3c:	9202      	str	r2, [sp, #8]
     d3e:	9303      	str	r3, [sp, #12]
     d40:	6322      	str	r2, [r4, #48]	; 0x30
     d42:	6363      	str	r3, [r4, #52]	; 0x34
	old_avg_PM2_5_CF1=avg_PM2_5_CF1;
     d44:	69a3      	ldr	r3, [r4, #24]
     d46:	4698      	mov	r8, r3
	max_PM2_5_CF1=0;
     d48:	2200      	movs	r2, #0
     d4a:	2300      	movs	r3, #0
     d4c:	60a2      	str	r2, [r4, #8]
     d4e:	60e3      	str	r3, [r4, #12]
	min_PM2_5_CF1=1024;
     d50:	2200      	movs	r2, #0
     d52:	4bcb      	ldr	r3, [pc, #812]	; (1080 <_ZN7PMS700316AQI_calc_indexesEv+0x3a8>)
     d54:	6122      	str	r2, [r4, #16]
     d56:	6163      	str	r3, [r4, #20]
	avg_PM2_5_CF1=0;
     d58:	2600      	movs	r6, #0
     d5a:	61a6      	str	r6, [r4, #24]
	old_max_PM10_CF1=max_PM10_CF1;
     d5c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
     d5e:	b29b      	uxth	r3, r3
     d60:	9304      	str	r3, [sp, #16]
     d62:	8763      	strh	r3, [r4, #58]	; 0x3a
	old_min_PM10_CF1=min_PM10_CF1;
     d64:	8c23      	ldrh	r3, [r4, #32]
     d66:	b29b      	uxth	r3, r3
     d68:	9306      	str	r3, [sp, #24]
     d6a:	8723      	strh	r3, [r4, #56]	; 0x38
	old_avg_PM10_CF1=avg_PM10_CF1;
     d6c:	69e3      	ldr	r3, [r4, #28]
     d6e:	469b      	mov	fp, r3
	max_PM10_CF1=0;
     d70:	8466      	strh	r6, [r4, #34]	; 0x22
	min_PM10_CF1=1024;
     d72:	2380      	movs	r3, #128	; 0x80
     d74:	00db      	lsls	r3, r3, #3
     d76:	4699      	mov	r9, r3
     d78:	8423      	strh	r3, [r4, #32]
	avg_PM10_CF1=0;
     d7a:	61e6      	str	r6, [r4, #28]
	old_avg_PM1_0_CF1=avg_PM1_0_CF1;
     d7c:	6820      	ldr	r0, [r4, #0]
	avg_PM1_0_CF1=0;
     d7e:	6026      	str	r6, [r4, #0]
	old_avg_PM1_0_CF1=round(old_avg_PM1_0_CF1/aqi_index);
     d80:	4fc0      	ldr	r7, [pc, #768]	; (1084 <_ZN7PMS700316AQI_calc_indexesEv+0x3ac>)
     d82:	0029      	movs	r1, r5
     d84:	47b8      	blx	r7
     d86:	4682      	mov	sl, r0
     d88:	65a0      	str	r0, [r4, #88]	; 0x58
	old_avg_PM2_5_CF1=round(old_avg_PM2_5_CF1/aqi_index);
     d8a:	0029      	movs	r1, r5
     d8c:	4640      	mov	r0, r8
     d8e:	47b8      	blx	r7
     d90:	4680      	mov	r8, r0
     d92:	65e0      	str	r0, [r4, #92]	; 0x5c
	old_avg_PM10_CF1=round(old_avg_PM10_CF1/aqi_index);
     d94:	0029      	movs	r1, r5
     d96:	4658      	mov	r0, fp
     d98:	47b8      	blx	r7
     d9a:	6620      	str	r0, [r4, #96]	; 0x60
	aqi_index=0;
     d9c:	87a6      	strh	r6, [r4, #60]	; 0x3c
	if(old_avg_PM1_0_CF1 > 1024){
     d9e:	45ca      	cmp	sl, r9
     da0:	d901      	bls.n	da6 <_ZN7PMS700316AQI_calc_indexesEv+0xce>
		old_avg_PM1_0_CF1=0;
     da2:	2300      	movs	r3, #0
     da4:	65a3      	str	r3, [r4, #88]	; 0x58
	if(old_avg_PM2_5_CF1 > 1024){
     da6:	2380      	movs	r3, #128	; 0x80
     da8:	00db      	lsls	r3, r3, #3
     daa:	4598      	cmp	r8, r3
     dac:	d901      	bls.n	db2 <_ZN7PMS700316AQI_calc_indexesEv+0xda>
		old_avg_PM2_5_CF1=0;
     dae:	2300      	movs	r3, #0
     db0:	65e3      	str	r3, [r4, #92]	; 0x5c
	if(old_avg_PM10_CF1 > 1024){
     db2:	2380      	movs	r3, #128	; 0x80
     db4:	00db      	lsls	r3, r3, #3
     db6:	4298      	cmp	r0, r3
     db8:	d901      	bls.n	dbe <_ZN7PMS700316AQI_calc_indexesEv+0xe6>
		old_avg_PM10_CF1=0;
     dba:	2300      	movs	r3, #0
     dbc:	6623      	str	r3, [r4, #96]	; 0x60
		if((double)old_min_PM2_5_CF1 < AQI_INDEXES_PM2_5[i][0] )
     dbe:	4ab2      	ldr	r2, [pc, #712]	; (1088 <_ZN7PMS700316AQI_calc_indexesEv+0x3b0>)
     dc0:	4bb2      	ldr	r3, [pc, #712]	; (108c <_ZN7PMS700316AQI_calc_indexesEv+0x3b4>)
     dc2:	9e02      	ldr	r6, [sp, #8]
     dc4:	9f03      	ldr	r7, [sp, #12]
     dc6:	0030      	movs	r0, r6
     dc8:	0039      	movs	r1, r7
     dca:	4db1      	ldr	r5, [pc, #708]	; (1090 <_ZN7PMS700316AQI_calc_indexesEv+0x3b8>)
     dcc:	47a8      	blx	r5
     dce:	2800      	cmp	r0, #0
     dd0:	d000      	beq.n	dd4 <_ZN7PMS700316AQI_calc_indexesEv+0xfc>
     dd2:	e1cb      	b.n	116c <_ZN7PMS700316AQI_calc_indexesEv+0x494>
     dd4:	2200      	movs	r2, #0
     dd6:	4baf      	ldr	r3, [pc, #700]	; (1094 <_ZN7PMS700316AQI_calc_indexesEv+0x3bc>)
     dd8:	0030      	movs	r0, r6
     dda:	0039      	movs	r1, r7
     ddc:	47a8      	blx	r5
     dde:	2800      	cmp	r0, #0
     de0:	d000      	beq.n	de4 <_ZN7PMS700316AQI_calc_indexesEv+0x10c>
     de2:	e1bb      	b.n	115c <_ZN7PMS700316AQI_calc_indexesEv+0x484>
     de4:	2200      	movs	r2, #0
     de6:	4bac      	ldr	r3, [pc, #688]	; (1098 <_ZN7PMS700316AQI_calc_indexesEv+0x3c0>)
     de8:	0030      	movs	r0, r6
     dea:	0039      	movs	r1, r7
     dec:	47a8      	blx	r5
     dee:	2800      	cmp	r0, #0
     df0:	d000      	beq.n	df4 <_ZN7PMS700316AQI_calc_indexesEv+0x11c>
     df2:	e1b5      	b.n	1160 <_ZN7PMS700316AQI_calc_indexesEv+0x488>
     df4:	2200      	movs	r2, #0
     df6:	4ba9      	ldr	r3, [pc, #676]	; (109c <_ZN7PMS700316AQI_calc_indexesEv+0x3c4>)
     df8:	0030      	movs	r0, r6
     dfa:	0039      	movs	r1, r7
     dfc:	47a8      	blx	r5
     dfe:	2800      	cmp	r0, #0
     e00:	d000      	beq.n	e04 <_ZN7PMS700316AQI_calc_indexesEv+0x12c>
     e02:	e1af      	b.n	1164 <_ZN7PMS700316AQI_calc_indexesEv+0x48c>
     e04:	2200      	movs	r2, #0
     e06:	4ba6      	ldr	r3, [pc, #664]	; (10a0 <_ZN7PMS700316AQI_calc_indexesEv+0x3c8>)
     e08:	0030      	movs	r0, r6
     e0a:	0039      	movs	r1, r7
     e0c:	47a8      	blx	r5
     e0e:	2800      	cmp	r0, #0
     e10:	d000      	beq.n	e14 <_ZN7PMS700316AQI_calc_indexesEv+0x13c>
     e12:	e1a9      	b.n	1168 <_ZN7PMS700316AQI_calc_indexesEv+0x490>
     e14:	2200      	movs	r2, #0
     e16:	4ba3      	ldr	r3, [pc, #652]	; (10a4 <_ZN7PMS700316AQI_calc_indexesEv+0x3cc>)
     e18:	0030      	movs	r0, r6
     e1a:	0039      	movs	r1, r7
     e1c:	47a8      	blx	r5
	for(i=1; i < 7;i++)
     e1e:	2306      	movs	r3, #6
		if((double)old_min_PM2_5_CF1 < AQI_INDEXES_PM2_5[i][0] )
     e20:	2800      	cmp	r0, #0
     e22:	d000      	beq.n	e26 <_ZN7PMS700316AQI_calc_indexesEv+0x14e>
     e24:	e1a3      	b.n	116e <_ZN7PMS700316AQI_calc_indexesEv+0x496>
			Ilow_PM2_5_CF1=AQI_INDEXES_PM2_5[6][2];
     e26:	2792      	movs	r7, #146	; 0x92
     e28:	37ff      	adds	r7, #255	; 0xff
		if((double)old_max_PM2_5_CF1 <= AQI_INDEXES_PM2_5[i][1] )
     e2a:	2200      	movs	r2, #0
     e2c:	4b9e      	ldr	r3, [pc, #632]	; (10a8 <_ZN7PMS700316AQI_calc_indexesEv+0x3d0>)
     e2e:	9800      	ldr	r0, [sp, #0]
     e30:	9901      	ldr	r1, [sp, #4]
     e32:	4d9e      	ldr	r5, [pc, #632]	; (10ac <_ZN7PMS700316AQI_calc_indexesEv+0x3d4>)
     e34:	47a8      	blx	r5
     e36:	2800      	cmp	r0, #0
     e38:	d000      	beq.n	e3c <_ZN7PMS700316AQI_calc_indexesEv+0x164>
     e3a:	e1ac      	b.n	1196 <_ZN7PMS700316AQI_calc_indexesEv+0x4be>
     e3c:	4a92      	ldr	r2, [pc, #584]	; (1088 <_ZN7PMS700316AQI_calc_indexesEv+0x3b0>)
     e3e:	4b9c      	ldr	r3, [pc, #624]	; (10b0 <_ZN7PMS700316AQI_calc_indexesEv+0x3d8>)
     e40:	9800      	ldr	r0, [sp, #0]
     e42:	9901      	ldr	r1, [sp, #4]
     e44:	47a8      	blx	r5
     e46:	2800      	cmp	r0, #0
     e48:	d000      	beq.n	e4c <_ZN7PMS700316AQI_calc_indexesEv+0x174>
     e4a:	e19a      	b.n	1182 <_ZN7PMS700316AQI_calc_indexesEv+0x4aa>
     e4c:	4a8e      	ldr	r2, [pc, #568]	; (1088 <_ZN7PMS700316AQI_calc_indexesEv+0x3b0>)
     e4e:	4b99      	ldr	r3, [pc, #612]	; (10b4 <_ZN7PMS700316AQI_calc_indexesEv+0x3dc>)
     e50:	9800      	ldr	r0, [sp, #0]
     e52:	9901      	ldr	r1, [sp, #4]
     e54:	47a8      	blx	r5
     e56:	2800      	cmp	r0, #0
     e58:	d000      	beq.n	e5c <_ZN7PMS700316AQI_calc_indexesEv+0x184>
     e5a:	e194      	b.n	1186 <_ZN7PMS700316AQI_calc_indexesEv+0x4ae>
     e5c:	4a96      	ldr	r2, [pc, #600]	; (10b8 <_ZN7PMS700316AQI_calc_indexesEv+0x3e0>)
     e5e:	4b97      	ldr	r3, [pc, #604]	; (10bc <_ZN7PMS700316AQI_calc_indexesEv+0x3e4>)
     e60:	9800      	ldr	r0, [sp, #0]
     e62:	9901      	ldr	r1, [sp, #4]
     e64:	47a8      	blx	r5
     e66:	2800      	cmp	r0, #0
     e68:	d000      	beq.n	e6c <_ZN7PMS700316AQI_calc_indexesEv+0x194>
     e6a:	e18e      	b.n	118a <_ZN7PMS700316AQI_calc_indexesEv+0x4b2>
     e6c:	4a92      	ldr	r2, [pc, #584]	; (10b8 <_ZN7PMS700316AQI_calc_indexesEv+0x3e0>)
     e6e:	4b94      	ldr	r3, [pc, #592]	; (10c0 <_ZN7PMS700316AQI_calc_indexesEv+0x3e8>)
     e70:	9800      	ldr	r0, [sp, #0]
     e72:	9901      	ldr	r1, [sp, #4]
     e74:	47a8      	blx	r5
     e76:	2800      	cmp	r0, #0
     e78:	d000      	beq.n	e7c <_ZN7PMS700316AQI_calc_indexesEv+0x1a4>
     e7a:	e188      	b.n	118e <_ZN7PMS700316AQI_calc_indexesEv+0x4b6>
     e7c:	4a91      	ldr	r2, [pc, #580]	; (10c4 <_ZN7PMS700316AQI_calc_indexesEv+0x3ec>)
     e7e:	4b92      	ldr	r3, [pc, #584]	; (10c8 <_ZN7PMS700316AQI_calc_indexesEv+0x3f0>)
     e80:	9800      	ldr	r0, [sp, #0]
     e82:	9901      	ldr	r1, [sp, #4]
     e84:	47a8      	blx	r5
     e86:	2800      	cmp	r0, #0
     e88:	d000      	beq.n	e8c <_ZN7PMS700316AQI_calc_indexesEv+0x1b4>
     e8a:	e182      	b.n	1192 <_ZN7PMS700316AQI_calc_indexesEv+0x4ba>
     e8c:	4a8d      	ldr	r2, [pc, #564]	; (10c4 <_ZN7PMS700316AQI_calc_indexesEv+0x3ec>)
     e8e:	4b8f      	ldr	r3, [pc, #572]	; (10cc <_ZN7PMS700316AQI_calc_indexesEv+0x3f4>)
     e90:	9800      	ldr	r0, [sp, #0]
     e92:	9901      	ldr	r1, [sp, #4]
     e94:	47a8      	blx	r5
	for( i=0; i < 7;i++)
     e96:	2306      	movs	r3, #6
		if((double)old_max_PM2_5_CF1 <= AQI_INDEXES_PM2_5[i][1] )
     e98:	2800      	cmp	r0, #0
     e9a:	d000      	beq.n	e9e <_ZN7PMS700316AQI_calc_indexesEv+0x1c6>
     e9c:	e17c      	b.n	1198 <_ZN7PMS700316AQI_calc_indexesEv+0x4c0>
			Imax_PM2_5_CF1=AQI_INDEXES_PM2_5[6][3];
     e9e:	26fa      	movs	r6, #250	; 0xfa
     ea0:	0076      	lsls	r6, r6, #1
		if(old_min_PM10_CF1 < AQI_INDEXES_PM10[i][0] )
     ea2:	9a06      	ldr	r2, [sp, #24]
     ea4:	0013      	movs	r3, r2
     ea6:	2a36      	cmp	r2, #54	; 0x36
     ea8:	dc00      	bgt.n	eac <_ZN7PMS700316AQI_calc_indexesEv+0x1d4>
     eaa:	e188      	b.n	11be <_ZN7PMS700316AQI_calc_indexesEv+0x4e6>
     eac:	2a9a      	cmp	r2, #154	; 0x9a
     eae:	dc00      	bgt.n	eb2 <_ZN7PMS700316AQI_calc_indexesEv+0x1da>
     eb0:	e17d      	b.n	11ae <_ZN7PMS700316AQI_calc_indexesEv+0x4d6>
     eb2:	2afe      	cmp	r2, #254	; 0xfe
     eb4:	dc00      	bgt.n	eb8 <_ZN7PMS700316AQI_calc_indexesEv+0x1e0>
     eb6:	e17c      	b.n	11b2 <_ZN7PMS700316AQI_calc_indexesEv+0x4da>
     eb8:	22b1      	movs	r2, #177	; 0xb1
     eba:	0052      	lsls	r2, r2, #1
     ebc:	4293      	cmp	r3, r2
     ebe:	dc00      	bgt.n	ec2 <_ZN7PMS700316AQI_calc_indexesEv+0x1ea>
     ec0:	e179      	b.n	11b6 <_ZN7PMS700316AQI_calc_indexesEv+0x4de>
     ec2:	3246      	adds	r2, #70	; 0x46
     ec4:	4293      	cmp	r3, r2
     ec6:	dc00      	bgt.n	eca <_ZN7PMS700316AQI_calc_indexesEv+0x1f2>
     ec8:	e177      	b.n	11ba <_ZN7PMS700316AQI_calc_indexesEv+0x4e2>
     eca:	3250      	adds	r2, #80	; 0x50
     ecc:	4293      	cmp	r3, r2
     ece:	dc00      	bgt.n	ed2 <_ZN7PMS700316AQI_calc_indexesEv+0x1fa>
     ed0:	e16b      	b.n	11aa <_ZN7PMS700316AQI_calc_indexesEv+0x4d2>
			Ilow_PM10_CF1=AQI_INDEXES_PM10[6][2];
     ed2:	2392      	movs	r3, #146	; 0x92
     ed4:	33ff      	adds	r3, #255	; 0xff
     ed6:	930f      	str	r3, [sp, #60]	; 0x3c
		if(old_max_PM10_CF1 <= AQI_INDEXES_PM10[i][1] )
     ed8:	9a04      	ldr	r2, [sp, #16]
     eda:	0013      	movs	r3, r2
     edc:	2a36      	cmp	r2, #54	; 0x36
     ede:	dc00      	bgt.n	ee2 <_ZN7PMS700316AQI_calc_indexesEv+0x20a>
     ee0:	e182      	b.n	11e8 <_ZN7PMS700316AQI_calc_indexesEv+0x510>
     ee2:	2a9a      	cmp	r2, #154	; 0x9a
     ee4:	dc00      	bgt.n	ee8 <_ZN7PMS700316AQI_calc_indexesEv+0x210>
     ee6:	e175      	b.n	11d4 <_ZN7PMS700316AQI_calc_indexesEv+0x4fc>
     ee8:	2afe      	cmp	r2, #254	; 0xfe
     eea:	dc00      	bgt.n	eee <_ZN7PMS700316AQI_calc_indexesEv+0x216>
     eec:	e174      	b.n	11d8 <_ZN7PMS700316AQI_calc_indexesEv+0x500>
     eee:	22b1      	movs	r2, #177	; 0xb1
     ef0:	0052      	lsls	r2, r2, #1
     ef2:	4293      	cmp	r3, r2
     ef4:	dc00      	bgt.n	ef8 <_ZN7PMS700316AQI_calc_indexesEv+0x220>
     ef6:	e171      	b.n	11dc <_ZN7PMS700316AQI_calc_indexesEv+0x504>
     ef8:	3246      	adds	r2, #70	; 0x46
     efa:	4293      	cmp	r3, r2
     efc:	dc00      	bgt.n	f00 <_ZN7PMS700316AQI_calc_indexesEv+0x228>
     efe:	e16f      	b.n	11e0 <_ZN7PMS700316AQI_calc_indexesEv+0x508>
     f00:	3250      	adds	r2, #80	; 0x50
     f02:	4293      	cmp	r3, r2
     f04:	dc00      	bgt.n	f08 <_ZN7PMS700316AQI_calc_indexesEv+0x230>
     f06:	e16d      	b.n	11e4 <_ZN7PMS700316AQI_calc_indexesEv+0x50c>
     f08:	3264      	adds	r2, #100	; 0x64
			Imax_PM10_CF1=AQI_INDEXES_PM10[6][3];
     f0a:	21fa      	movs	r1, #250	; 0xfa
     f0c:	0049      	lsls	r1, r1, #1
     f0e:	910e      	str	r1, [sp, #56]	; 0x38
		if(old_max_PM10_CF1 <= AQI_INDEXES_PM10[i][1] )
     f10:	4293      	cmp	r3, r2
     f12:	dc00      	bgt.n	f16 <_ZN7PMS700316AQI_calc_indexesEv+0x23e>
     f14:	e15c      	b.n	11d0 <_ZN7PMS700316AQI_calc_indexesEv+0x4f8>
double Iaq2_5_temp=(((double)Imax_PM2_5_CF1-(double)Ilow_PM2_5_CF1)/((double)old_max_PM2_5_CF1-(double)old_min_PM2_5_CF1))* 
     f16:	4d6e      	ldr	r5, [pc, #440]	; (10d0 <_ZN7PMS700316AQI_calc_indexesEv+0x3f8>)
     f18:	0038      	movs	r0, r7
     f1a:	47a8      	blx	r5
     f1c:	9008      	str	r0, [sp, #32]
     f1e:	9109      	str	r1, [sp, #36]	; 0x24
     f20:	0030      	movs	r0, r6
     f22:	47a8      	blx	r5
     f24:	9a08      	ldr	r2, [sp, #32]
     f26:	9b09      	ldr	r3, [sp, #36]	; 0x24
     f28:	4e6a      	ldr	r6, [pc, #424]	; (10d4 <_ZN7PMS700316AQI_calc_indexesEv+0x3fc>)
     f2a:	47b0      	blx	r6
     f2c:	900a      	str	r0, [sp, #40]	; 0x28
     f2e:	910b      	str	r1, [sp, #44]	; 0x2c
     f30:	9a02      	ldr	r2, [sp, #8]
     f32:	9b03      	ldr	r3, [sp, #12]
     f34:	9800      	ldr	r0, [sp, #0]
     f36:	9901      	ldr	r1, [sp, #4]
     f38:	47b0      	blx	r6
     f3a:	0002      	movs	r2, r0
     f3c:	000b      	movs	r3, r1
     f3e:	980a      	ldr	r0, [sp, #40]	; 0x28
     f40:	990b      	ldr	r1, [sp, #44]	; 0x2c
     f42:	4f65      	ldr	r7, [pc, #404]	; (10d8 <_ZN7PMS700316AQI_calc_indexesEv+0x400>)
     f44:	47b8      	blx	r7
     f46:	9000      	str	r0, [sp, #0]
     f48:	9101      	str	r1, [sp, #4]
((double)old_avg_PM2_5_CF1-(double)old_min_PM2_5_CF1)+(double)Ilow_PM2_5_CF1;	
     f4a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
     f4c:	47a8      	blx	r5
     f4e:	9a02      	ldr	r2, [sp, #8]
     f50:	9b03      	ldr	r3, [sp, #12]
     f52:	47b0      	blx	r6
     f54:	0002      	movs	r2, r0
     f56:	000b      	movs	r3, r1
double Iaq2_5_temp=(((double)Imax_PM2_5_CF1-(double)Ilow_PM2_5_CF1)/((double)old_max_PM2_5_CF1-(double)old_min_PM2_5_CF1))* 
     f58:	4960      	ldr	r1, [pc, #384]	; (10dc <_ZN7PMS700316AQI_calc_indexesEv+0x404>)
     f5a:	468b      	mov	fp, r1
     f5c:	9800      	ldr	r0, [sp, #0]
     f5e:	9901      	ldr	r1, [sp, #4]
     f60:	47d8      	blx	fp
((double)old_avg_PM2_5_CF1-(double)old_min_PM2_5_CF1)+(double)Ilow_PM2_5_CF1;	
     f62:	4b5f      	ldr	r3, [pc, #380]	; (10e0 <_ZN7PMS700316AQI_calc_indexesEv+0x408>)
     f64:	469a      	mov	sl, r3
     f66:	9a08      	ldr	r2, [sp, #32]
     f68:	9b09      	ldr	r3, [sp, #36]	; 0x24
     f6a:	47d0      	blx	sl
Iaq2_5=round(Iaq2_5_temp);
     f6c:	4b5d      	ldr	r3, [pc, #372]	; (10e4 <_ZN7PMS700316AQI_calc_indexesEv+0x40c>)
     f6e:	4699      	mov	r9, r3
     f70:	4798      	blx	r3
     f72:	4b5d      	ldr	r3, [pc, #372]	; (10e8 <_ZN7PMS700316AQI_calc_indexesEv+0x410>)
     f74:	4698      	mov	r8, r3
     f76:	4798      	blx	r3
     f78:	b287      	uxth	r7, r0
     f7a:	2364      	movs	r3, #100	; 0x64
     f7c:	52e7      	strh	r7, [r4, r3]
double Iaq10_temp=(((double)Imax_PM10_CF1-(double)Ilow_PM10_CF1)/((double)old_max_PM10_CF1-(double)old_min_PM10_CF1))* 
     f7e:	980f      	ldr	r0, [sp, #60]	; 0x3c
     f80:	47a8      	blx	r5
     f82:	9000      	str	r0, [sp, #0]
     f84:	9101      	str	r1, [sp, #4]
     f86:	9806      	ldr	r0, [sp, #24]
     f88:	47a8      	blx	r5
     f8a:	9002      	str	r0, [sp, #8]
     f8c:	9103      	str	r1, [sp, #12]
     f8e:	980e      	ldr	r0, [sp, #56]	; 0x38
     f90:	47a8      	blx	r5
     f92:	9a00      	ldr	r2, [sp, #0]
     f94:	9b01      	ldr	r3, [sp, #4]
     f96:	47b0      	blx	r6
     f98:	9006      	str	r0, [sp, #24]
     f9a:	9107      	str	r1, [sp, #28]
     f9c:	9804      	ldr	r0, [sp, #16]
     f9e:	47a8      	blx	r5
     fa0:	9a02      	ldr	r2, [sp, #8]
     fa2:	9b03      	ldr	r3, [sp, #12]
     fa4:	47b0      	blx	r6
     fa6:	0002      	movs	r2, r0
     fa8:	000b      	movs	r3, r1
     faa:	9806      	ldr	r0, [sp, #24]
     fac:	9907      	ldr	r1, [sp, #28]
     fae:	4e4a      	ldr	r6, [pc, #296]	; (10d8 <_ZN7PMS700316AQI_calc_indexesEv+0x400>)
     fb0:	47b0      	blx	r6
     fb2:	9004      	str	r0, [sp, #16]
     fb4:	9105      	str	r1, [sp, #20]
((double)old_avg_PM10_CF1-(double)old_min_PM10_CF1)+(double)Ilow_PM10_CF1;	
     fb6:	6e20      	ldr	r0, [r4, #96]	; 0x60
     fb8:	47a8      	blx	r5
     fba:	9a02      	ldr	r2, [sp, #8]
     fbc:	9b03      	ldr	r3, [sp, #12]
     fbe:	4d45      	ldr	r5, [pc, #276]	; (10d4 <_ZN7PMS700316AQI_calc_indexesEv+0x3fc>)
     fc0:	47a8      	blx	r5
     fc2:	0002      	movs	r2, r0
     fc4:	000b      	movs	r3, r1
double Iaq10_temp=(((double)Imax_PM10_CF1-(double)Ilow_PM10_CF1)/((double)old_max_PM10_CF1-(double)old_min_PM10_CF1))* 
     fc6:	9804      	ldr	r0, [sp, #16]
     fc8:	9905      	ldr	r1, [sp, #20]
     fca:	47d8      	blx	fp
((double)old_avg_PM10_CF1-(double)old_min_PM10_CF1)+(double)Ilow_PM10_CF1;	
     fcc:	9a00      	ldr	r2, [sp, #0]
     fce:	9b01      	ldr	r3, [sp, #4]
     fd0:	47d0      	blx	sl
Iaq10=round(Iaq10_temp);
     fd2:	47c8      	blx	r9
     fd4:	47c0      	blx	r8
     fd6:	b280      	uxth	r0, r0
     fd8:	2366      	movs	r3, #102	; 0x66
     fda:	52e0      	strh	r0, [r4, r3]
if(Iaq2_5 > 999 || Iaq2_5 < 0) Iaq2_5=0;
     fdc:	4b43      	ldr	r3, [pc, #268]	; (10ec <_ZN7PMS700316AQI_calc_indexesEv+0x414>)
     fde:	429f      	cmp	r7, r3
     fe0:	dc00      	bgt.n	fe4 <_ZN7PMS700316AQI_calc_indexesEv+0x30c>
     fe2:	e113      	b.n	120c <_ZN7PMS700316AQI_calc_indexesEv+0x534>
     fe4:	2200      	movs	r2, #0
     fe6:	2364      	movs	r3, #100	; 0x64
     fe8:	52e2      	strh	r2, [r4, r3]
if(Iaq10 > 999 || Iaq10 < 0  )	Iaq10=0;
     fea:	4b40      	ldr	r3, [pc, #256]	; (10ec <_ZN7PMS700316AQI_calc_indexesEv+0x414>)
     fec:	4298      	cmp	r0, r3
     fee:	dc00      	bgt.n	ff2 <_ZN7PMS700316AQI_calc_indexesEv+0x31a>
     ff0:	e102      	b.n	11f8 <_ZN7PMS700316AQI_calc_indexesEv+0x520>
     ff2:	2200      	movs	r2, #0
     ff4:	2366      	movs	r3, #102	; 0x66
     ff6:	52e2      	strh	r2, [r4, r3]
		if((double)Iaq2_5 <= AQI_INDEXES_PM2_5[i][3] )
     ff8:	2364      	movs	r3, #100	; 0x64
     ffa:	5ae0      	ldrh	r0, [r4, r3]
     ffc:	4b34      	ldr	r3, [pc, #208]	; (10d0 <_ZN7PMS700316AQI_calc_indexesEv+0x3f8>)
     ffe:	4798      	blx	r3
    1000:	0006      	movs	r6, r0
    1002:	000f      	movs	r7, r1
    1004:	2200      	movs	r2, #0
    1006:	4b3a      	ldr	r3, [pc, #232]	; (10f0 <_ZN7PMS700316AQI_calc_indexesEv+0x418>)
    1008:	4d28      	ldr	r5, [pc, #160]	; (10ac <_ZN7PMS700316AQI_calc_indexesEv+0x3d4>)
    100a:	47a8      	blx	r5
    100c:	2800      	cmp	r0, #0
    100e:	d000      	beq.n	1012 <_ZN7PMS700316AQI_calc_indexesEv+0x33a>
    1010:	e10b      	b.n	122a <_ZN7PMS700316AQI_calc_indexesEv+0x552>
    1012:	2200      	movs	r2, #0
    1014:	4b37      	ldr	r3, [pc, #220]	; (10f4 <_ZN7PMS700316AQI_calc_indexesEv+0x41c>)
    1016:	0030      	movs	r0, r6
    1018:	0039      	movs	r1, r7
    101a:	47a8      	blx	r5
    101c:	2800      	cmp	r0, #0
    101e:	d000      	beq.n	1022 <_ZN7PMS700316AQI_calc_indexesEv+0x34a>
    1020:	e0f9      	b.n	1216 <_ZN7PMS700316AQI_calc_indexesEv+0x53e>
    1022:	2200      	movs	r2, #0
    1024:	4b34      	ldr	r3, [pc, #208]	; (10f8 <_ZN7PMS700316AQI_calc_indexesEv+0x420>)
    1026:	0030      	movs	r0, r6
    1028:	0039      	movs	r1, r7
    102a:	47a8      	blx	r5
    102c:	2800      	cmp	r0, #0
    102e:	d000      	beq.n	1032 <_ZN7PMS700316AQI_calc_indexesEv+0x35a>
    1030:	e0f3      	b.n	121a <_ZN7PMS700316AQI_calc_indexesEv+0x542>
    1032:	2200      	movs	r2, #0
    1034:	4b31      	ldr	r3, [pc, #196]	; (10fc <_ZN7PMS700316AQI_calc_indexesEv+0x424>)
    1036:	0030      	movs	r0, r6
    1038:	0039      	movs	r1, r7
    103a:	47a8      	blx	r5
    103c:	2800      	cmp	r0, #0
    103e:	d000      	beq.n	1042 <_ZN7PMS700316AQI_calc_indexesEv+0x36a>
    1040:	e0ed      	b.n	121e <_ZN7PMS700316AQI_calc_indexesEv+0x546>
    1042:	2200      	movs	r2, #0
    1044:	4b2e      	ldr	r3, [pc, #184]	; (1100 <_ZN7PMS700316AQI_calc_indexesEv+0x428>)
    1046:	0030      	movs	r0, r6
    1048:	0039      	movs	r1, r7
    104a:	47a8      	blx	r5
    104c:	2800      	cmp	r0, #0
    104e:	d000      	beq.n	1052 <_ZN7PMS700316AQI_calc_indexesEv+0x37a>
    1050:	e0e7      	b.n	1222 <_ZN7PMS700316AQI_calc_indexesEv+0x54a>
    1052:	2200      	movs	r2, #0
    1054:	4b2b      	ldr	r3, [pc, #172]	; (1104 <_ZN7PMS700316AQI_calc_indexesEv+0x42c>)
    1056:	0030      	movs	r0, r6
    1058:	0039      	movs	r1, r7
    105a:	47a8      	blx	r5
    105c:	2800      	cmp	r0, #0
    105e:	d000      	beq.n	1062 <_ZN7PMS700316AQI_calc_indexesEv+0x38a>
    1060:	e0e1      	b.n	1226 <_ZN7PMS700316AQI_calc_indexesEv+0x54e>
    1062:	2200      	movs	r2, #0
    1064:	4b28      	ldr	r3, [pc, #160]	; (1108 <_ZN7PMS700316AQI_calc_indexesEv+0x430>)
    1066:	0030      	movs	r0, r6
    1068:	0039      	movs	r1, r7
    106a:	47a8      	blx	r5
for( i=0; i < 7;i++)
    106c:	2306      	movs	r3, #6
		if((double)Iaq2_5 <= AQI_INDEXES_PM2_5[i][3] )
    106e:	2800      	cmp	r0, #0
    1070:	d000      	beq.n	1074 <_ZN7PMS700316AQI_calc_indexesEv+0x39c>
    1072:	e0c2      	b.n	11fa <_ZN7PMS700316AQI_calc_indexesEv+0x522>
    1074:	e04a      	b.n	110c <_ZN7PMS700316AQI_calc_indexesEv+0x434>
    1076:	46c0      	nop			; (mov r8, r8)
    1078:	00008c59 	.word	0x00008c59
    107c:	00008d51 	.word	0x00008d51
    1080:	40900000 	.word	0x40900000
    1084:	00005c49 	.word	0x00005c49
    1088:	33333333 	.word	0x33333333
    108c:	40283333 	.word	0x40283333
    1090:	00005f61 	.word	0x00005f61
    1094:	4041c000 	.word	0x4041c000
    1098:	404bc000 	.word	0x404bc000
    109c:	4062d000 	.word	0x4062d000
    10a0:	406f5000 	.word	0x406f5000
    10a4:	4075e800 	.word	0x4075e800
    10a8:	40280000 	.word	0x40280000
    10ac:	00005f75 	.word	0x00005f75
    10b0:	4041b333 	.word	0x4041b333
    10b4:	404bb333 	.word	0x404bb333
    10b8:	cccccccd 	.word	0xcccccccd
    10bc:	4062cccc 	.word	0x4062cccc
    10c0:	406f4ccc 	.word	0x406f4ccc
    10c4:	66666666 	.word	0x66666666
    10c8:	4075e666 	.word	0x4075e666
    10cc:	407f4666 	.word	0x407f4666
    10d0:	00008589 	.word	0x00008589
    10d4:	00007e31 	.word	0x00007e31
    10d8:	000070c9 	.word	0x000070c9
    10dc:	00007931 	.word	0x00007931
    10e0:	00006aa9 	.word	0x00006aa9
    10e4:	000049c9 	.word	0x000049c9
    10e8:	0000607d 	.word	0x0000607d
    10ec:	000003e7 	.word	0x000003e7
    10f0:	40490000 	.word	0x40490000
    10f4:	40590000 	.word	0x40590000
    10f8:	4062c000 	.word	0x4062c000
    10fc:	40690000 	.word	0x40690000
    1100:	4072c000 	.word	0x4072c000
    1104:	40790000 	.word	0x40790000
    1108:	407f4000 	.word	0x407f4000
			strncpy(AQI_CATEGORY_PM2_5_CF1, AQI_CATEGORY[6], 14);
    110c:	220e      	movs	r2, #14
    110e:	4953      	ldr	r1, [pc, #332]	; (125c <_ZN7PMS700316AQI_calc_indexesEv+0x584>)
    1110:	980c      	ldr	r0, [sp, #48]	; 0x30
    1112:	4b53      	ldr	r3, [pc, #332]	; (1260 <_ZN7PMS700316AQI_calc_indexesEv+0x588>)
    1114:	4798      	blx	r3
		if(Iaq10 <= AQI_INDEXES_PM10[i][3] )
    1116:	2366      	movs	r3, #102	; 0x66
    1118:	5ae3      	ldrh	r3, [r4, r3]
    111a:	2b32      	cmp	r3, #50	; 0x32
    111c:	dc00      	bgt.n	1120 <_ZN7PMS700316AQI_calc_indexesEv+0x448>
    111e:	e092      	b.n	1246 <_ZN7PMS700316AQI_calc_indexesEv+0x56e>
    1120:	2b64      	cmp	r3, #100	; 0x64
    1122:	dc00      	bgt.n	1126 <_ZN7PMS700316AQI_calc_indexesEv+0x44e>
    1124:	e085      	b.n	1232 <_ZN7PMS700316AQI_calc_indexesEv+0x55a>
    1126:	2b96      	cmp	r3, #150	; 0x96
    1128:	dc00      	bgt.n	112c <_ZN7PMS700316AQI_calc_indexesEv+0x454>
    112a:	e084      	b.n	1236 <_ZN7PMS700316AQI_calc_indexesEv+0x55e>
    112c:	2bc8      	cmp	r3, #200	; 0xc8
    112e:	dc00      	bgt.n	1132 <_ZN7PMS700316AQI_calc_indexesEv+0x45a>
    1130:	e083      	b.n	123a <_ZN7PMS700316AQI_calc_indexesEv+0x562>
    1132:	2296      	movs	r2, #150	; 0x96
    1134:	0052      	lsls	r2, r2, #1
    1136:	4293      	cmp	r3, r2
    1138:	dc00      	bgt.n	113c <_ZN7PMS700316AQI_calc_indexesEv+0x464>
    113a:	e080      	b.n	123e <_ZN7PMS700316AQI_calc_indexesEv+0x566>
    113c:	3264      	adds	r2, #100	; 0x64
    113e:	4293      	cmp	r3, r2
    1140:	dc00      	bgt.n	1144 <_ZN7PMS700316AQI_calc_indexesEv+0x46c>
    1142:	e07e      	b.n	1242 <_ZN7PMS700316AQI_calc_indexesEv+0x56a>
    1144:	3264      	adds	r2, #100	; 0x64
    1146:	4293      	cmp	r3, r2
    1148:	dd71      	ble.n	122e <_ZN7PMS700316AQI_calc_indexesEv+0x556>
			strncpy(AQI_CATEGORY_PM10_CF1, AQI_CATEGORY[6], 14);
    114a:	220e      	movs	r2, #14
    114c:	4943      	ldr	r1, [pc, #268]	; (125c <_ZN7PMS700316AQI_calc_indexesEv+0x584>)
    114e:	980d      	ldr	r0, [sp, #52]	; 0x34
    1150:	4b43      	ldr	r3, [pc, #268]	; (1260 <_ZN7PMS700316AQI_calc_indexesEv+0x588>)
    1152:	4798      	blx	r3
	pms7003_values_done=true;
    1154:	2201      	movs	r2, #1
    1156:	2384      	movs	r3, #132	; 0x84
    1158:	54e2      	strb	r2, [r4, r3]
}
    115a:	e5c8      	b.n	cee <_ZN7PMS700316AQI_calc_indexesEv+0x16>
	for(i=1; i < 7;i++)
    115c:	2302      	movs	r3, #2
    115e:	e006      	b.n	116e <_ZN7PMS700316AQI_calc_indexesEv+0x496>
    1160:	2303      	movs	r3, #3
    1162:	e004      	b.n	116e <_ZN7PMS700316AQI_calc_indexesEv+0x496>
    1164:	2304      	movs	r3, #4
    1166:	e002      	b.n	116e <_ZN7PMS700316AQI_calc_indexesEv+0x496>
    1168:	2305      	movs	r3, #5
    116a:	e000      	b.n	116e <_ZN7PMS700316AQI_calc_indexesEv+0x496>
    116c:	2301      	movs	r3, #1
			Ilow_PM2_5_CF1=AQI_INDEXES_PM2_5[i-1][2];
    116e:	3b01      	subs	r3, #1
    1170:	015b      	lsls	r3, r3, #5
    1172:	4a3c      	ldr	r2, [pc, #240]	; (1264 <_ZN7PMS700316AQI_calc_indexesEv+0x58c>)
    1174:	18d3      	adds	r3, r2, r3
    1176:	6918      	ldr	r0, [r3, #16]
    1178:	6959      	ldr	r1, [r3, #20]
    117a:	4b3b      	ldr	r3, [pc, #236]	; (1268 <_ZN7PMS700316AQI_calc_indexesEv+0x590>)
    117c:	4798      	blx	r3
    117e:	b287      	uxth	r7, r0
			break;
    1180:	e653      	b.n	e2a <_ZN7PMS700316AQI_calc_indexesEv+0x152>
	for( i=0; i < 7;i++)
    1182:	2301      	movs	r3, #1
    1184:	e008      	b.n	1198 <_ZN7PMS700316AQI_calc_indexesEv+0x4c0>
    1186:	2302      	movs	r3, #2
    1188:	e006      	b.n	1198 <_ZN7PMS700316AQI_calc_indexesEv+0x4c0>
    118a:	2303      	movs	r3, #3
    118c:	e004      	b.n	1198 <_ZN7PMS700316AQI_calc_indexesEv+0x4c0>
    118e:	2304      	movs	r3, #4
    1190:	e002      	b.n	1198 <_ZN7PMS700316AQI_calc_indexesEv+0x4c0>
    1192:	2305      	movs	r3, #5
    1194:	e000      	b.n	1198 <_ZN7PMS700316AQI_calc_indexesEv+0x4c0>
    1196:	2300      	movs	r3, #0
			Imax_PM2_5_CF1=AQI_INDEXES_PM2_5[i][3];
    1198:	015b      	lsls	r3, r3, #5
    119a:	4a32      	ldr	r2, [pc, #200]	; (1264 <_ZN7PMS700316AQI_calc_indexesEv+0x58c>)
    119c:	18d3      	adds	r3, r2, r3
    119e:	6998      	ldr	r0, [r3, #24]
    11a0:	69d9      	ldr	r1, [r3, #28]
    11a2:	4b31      	ldr	r3, [pc, #196]	; (1268 <_ZN7PMS700316AQI_calc_indexesEv+0x590>)
    11a4:	4798      	blx	r3
    11a6:	b286      	uxth	r6, r0
			break;
    11a8:	e67b      	b.n	ea2 <_ZN7PMS700316AQI_calc_indexesEv+0x1ca>
	for( i=1; i < 7;i++)
    11aa:	2306      	movs	r3, #6
    11ac:	e008      	b.n	11c0 <_ZN7PMS700316AQI_calc_indexesEv+0x4e8>
    11ae:	2302      	movs	r3, #2
    11b0:	e006      	b.n	11c0 <_ZN7PMS700316AQI_calc_indexesEv+0x4e8>
    11b2:	2303      	movs	r3, #3
    11b4:	e004      	b.n	11c0 <_ZN7PMS700316AQI_calc_indexesEv+0x4e8>
    11b6:	2304      	movs	r3, #4
    11b8:	e002      	b.n	11c0 <_ZN7PMS700316AQI_calc_indexesEv+0x4e8>
    11ba:	2305      	movs	r3, #5
    11bc:	e000      	b.n	11c0 <_ZN7PMS700316AQI_calc_indexesEv+0x4e8>
    11be:	2301      	movs	r3, #1
			Ilow_PM10_CF1=AQI_INDEXES_PM10[i-1][2];
    11c0:	3b01      	subs	r3, #1
    11c2:	00db      	lsls	r3, r3, #3
    11c4:	4a29      	ldr	r2, [pc, #164]	; (126c <_ZN7PMS700316AQI_calc_indexesEv+0x594>)
    11c6:	18d3      	adds	r3, r2, r3
    11c8:	3364      	adds	r3, #100	; 0x64
    11ca:	881b      	ldrh	r3, [r3, #0]
    11cc:	930f      	str	r3, [sp, #60]	; 0x3c
			break;
    11ce:	e683      	b.n	ed8 <_ZN7PMS700316AQI_calc_indexesEv+0x200>
	for( i=0; i < 7;i++)
    11d0:	2206      	movs	r2, #6
    11d2:	e00a      	b.n	11ea <_ZN7PMS700316AQI_calc_indexesEv+0x512>
    11d4:	2201      	movs	r2, #1
    11d6:	e008      	b.n	11ea <_ZN7PMS700316AQI_calc_indexesEv+0x512>
    11d8:	2202      	movs	r2, #2
    11da:	e006      	b.n	11ea <_ZN7PMS700316AQI_calc_indexesEv+0x512>
    11dc:	2203      	movs	r2, #3
    11de:	e004      	b.n	11ea <_ZN7PMS700316AQI_calc_indexesEv+0x512>
    11e0:	2204      	movs	r2, #4
    11e2:	e002      	b.n	11ea <_ZN7PMS700316AQI_calc_indexesEv+0x512>
    11e4:	2205      	movs	r2, #5
    11e6:	e000      	b.n	11ea <_ZN7PMS700316AQI_calc_indexesEv+0x512>
    11e8:	2200      	movs	r2, #0
			Imax_PM10_CF1=AQI_INDEXES_PM10[i][3];
    11ea:	00d2      	lsls	r2, r2, #3
    11ec:	4b1f      	ldr	r3, [pc, #124]	; (126c <_ZN7PMS700316AQI_calc_indexesEv+0x594>)
    11ee:	189b      	adds	r3, r3, r2
    11f0:	3366      	adds	r3, #102	; 0x66
    11f2:	881b      	ldrh	r3, [r3, #0]
    11f4:	930e      	str	r3, [sp, #56]	; 0x38
			break;
    11f6:	e68e      	b.n	f16 <_ZN7PMS700316AQI_calc_indexesEv+0x23e>
for( i=0; i < 7;i++)
    11f8:	2300      	movs	r3, #0
			strncpy(AQI_CATEGORY_PM2_5_CF1, AQI_CATEGORY[i], 14);
    11fa:	009b      	lsls	r3, r3, #2
    11fc:	4a1c      	ldr	r2, [pc, #112]	; (1270 <_ZN7PMS700316AQI_calc_indexesEv+0x598>)
    11fe:	18d3      	adds	r3, r2, r3
    1200:	6999      	ldr	r1, [r3, #24]
    1202:	220e      	movs	r2, #14
    1204:	980c      	ldr	r0, [sp, #48]	; 0x30
    1206:	4b16      	ldr	r3, [pc, #88]	; (1260 <_ZN7PMS700316AQI_calc_indexesEv+0x588>)
    1208:	4798      	blx	r3
			break;
    120a:	e784      	b.n	1116 <_ZN7PMS700316AQI_calc_indexesEv+0x43e>
if(Iaq10 > 999 || Iaq10 < 0  )	Iaq10=0;
    120c:	4b19      	ldr	r3, [pc, #100]	; (1274 <_ZN7PMS700316AQI_calc_indexesEv+0x59c>)
    120e:	4298      	cmp	r0, r3
    1210:	dc00      	bgt.n	1214 <_ZN7PMS700316AQI_calc_indexesEv+0x53c>
    1212:	e6f1      	b.n	ff8 <_ZN7PMS700316AQI_calc_indexesEv+0x320>
    1214:	e6ed      	b.n	ff2 <_ZN7PMS700316AQI_calc_indexesEv+0x31a>
for( i=0; i < 7;i++)
    1216:	2301      	movs	r3, #1
    1218:	e7ef      	b.n	11fa <_ZN7PMS700316AQI_calc_indexesEv+0x522>
    121a:	2302      	movs	r3, #2
    121c:	e7ed      	b.n	11fa <_ZN7PMS700316AQI_calc_indexesEv+0x522>
    121e:	2303      	movs	r3, #3
    1220:	e7eb      	b.n	11fa <_ZN7PMS700316AQI_calc_indexesEv+0x522>
    1222:	2304      	movs	r3, #4
    1224:	e7e9      	b.n	11fa <_ZN7PMS700316AQI_calc_indexesEv+0x522>
    1226:	2305      	movs	r3, #5
    1228:	e7e7      	b.n	11fa <_ZN7PMS700316AQI_calc_indexesEv+0x522>
    122a:	2300      	movs	r3, #0
    122c:	e7e5      	b.n	11fa <_ZN7PMS700316AQI_calc_indexesEv+0x522>
for( i=0; i < 7;i++)
    122e:	2306      	movs	r3, #6
    1230:	e00a      	b.n	1248 <_ZN7PMS700316AQI_calc_indexesEv+0x570>
    1232:	2301      	movs	r3, #1
    1234:	e008      	b.n	1248 <_ZN7PMS700316AQI_calc_indexesEv+0x570>
    1236:	2302      	movs	r3, #2
    1238:	e006      	b.n	1248 <_ZN7PMS700316AQI_calc_indexesEv+0x570>
    123a:	2303      	movs	r3, #3
    123c:	e004      	b.n	1248 <_ZN7PMS700316AQI_calc_indexesEv+0x570>
    123e:	2304      	movs	r3, #4
    1240:	e002      	b.n	1248 <_ZN7PMS700316AQI_calc_indexesEv+0x570>
    1242:	2305      	movs	r3, #5
    1244:	e000      	b.n	1248 <_ZN7PMS700316AQI_calc_indexesEv+0x570>
    1246:	2300      	movs	r3, #0
			strncpy(AQI_CATEGORY_PM10_CF1, AQI_CATEGORY[i], 14);
    1248:	009b      	lsls	r3, r3, #2
    124a:	4a09      	ldr	r2, [pc, #36]	; (1270 <_ZN7PMS700316AQI_calc_indexesEv+0x598>)
    124c:	18d3      	adds	r3, r2, r3
    124e:	6999      	ldr	r1, [r3, #24]
    1250:	220e      	movs	r2, #14
    1252:	980d      	ldr	r0, [sp, #52]	; 0x34
    1254:	4b02      	ldr	r3, [pc, #8]	; (1260 <_ZN7PMS700316AQI_calc_indexesEv+0x588>)
    1256:	4798      	blx	r3
			break;
    1258:	e77c      	b.n	1154 <_ZN7PMS700316AQI_calc_indexesEv+0x47c>
    125a:	46c0      	nop			; (mov r8, r8)
    125c:	0000f71c 	.word	0x0000f71c
    1260:	00008d51 	.word	0x00008d51
    1264:	0000f5c0 	.word	0x0000f5c0
    1268:	0000607d 	.word	0x0000607d
    126c:	0000f640 	.word	0x0000f640
    1270:	0000f6c0 	.word	0x0000f6c0
    1274:	000003e7 	.word	0x000003e7

00001278 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev>:
}


// cuts off at 0.04 * sampling freq
void PMS7003::BesselLowpassSecondOrder004_PM1_0()
{
    1278:	b5f0      	push	{r4, r5, r6, r7, lr}
    127a:	46de      	mov	lr, fp
    127c:	4657      	mov	r7, sl
    127e:	464e      	mov	r6, r9
    1280:	4645      	mov	r5, r8
    1282:	b5e0      	push	{r5, r6, r7, lr}
    1284:	b087      	sub	sp, #28
    1286:	2500      	movs	r5, #0
    float xv[3] = {0.0,0.0,0.0};
	float yv[3] = {0.0,0.0,0.0};
    1288:	2300      	movs	r3, #0
    128a:	9302      	str	r3, [sp, #8]
    128c:	1c1f      	adds	r7, r3, #0
    float xv[3] = {0.0,0.0,0.0};
    128e:	9301      	str	r3, [sp, #4]
    1290:	1c1e      	adds	r6, r3, #0
 
    for (int i = 0; i < LPF_FIR_BUFFER_LENGTH; i++)
    { 
        xv[0] = xv[1]; 
		xv[1] = xv[2]; 
        xv[2] = (float)LPF_FIR_BUFFER_PM1_0[i] / float(50.5047);
    1292:	4b25      	ldr	r3, [pc, #148]	; (1328 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xb0>)
    1294:	3304      	adds	r3, #4
    1296:	469b      	mov	fp, r3
    1298:	4b24      	ldr	r3, [pc, #144]	; (132c <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xb4>)
    129a:	469a      	mov	sl, r3
    129c:	4b24      	ldr	r3, [pc, #144]	; (1330 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xb8>)
    129e:	4699      	mov	r9, r3
        yv[0] = yv[1]; 
		yv[1] = yv[2]; 
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    12a0:	4c24      	ldr	r4, [pc, #144]	; (1334 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xbc>)
        xv[2] = (float)LPF_FIR_BUFFER_PM1_0[i] / float(50.5047);
    12a2:	465b      	mov	r3, fp
    12a4:	5ae8      	ldrh	r0, [r5, r3]
    12a6:	47d0      	blx	sl
    12a8:	4923      	ldr	r1, [pc, #140]	; (1338 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xc0>)
    12aa:	47c8      	blx	r9
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    12ac:	1c31      	adds	r1, r6, #0
    12ae:	9003      	str	r0, [sp, #12]
    12b0:	47a0      	blx	r4
    12b2:	1c06      	adds	r6, r0, #0
    12b4:	9b01      	ldr	r3, [sp, #4]
    12b6:	1c19      	adds	r1, r3, #0
    12b8:	1c18      	adds	r0, r3, #0
    12ba:	47a0      	blx	r4
    12bc:	1c01      	adds	r1, r0, #0
    12be:	1c30      	adds	r0, r6, #0
    12c0:	47a0      	blx	r4
    12c2:	4e1e      	ldr	r6, [pc, #120]	; (133c <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xc4>)
    12c4:	47b0      	blx	r6
    12c6:	9004      	str	r0, [sp, #16]
    12c8:	9105      	str	r1, [sp, #20]
    12ca:	1c38      	adds	r0, r7, #0
    12cc:	47b0      	blx	r6
    12ce:	4a1c      	ldr	r2, [pc, #112]	; (1340 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xc8>)
    12d0:	4690      	mov	r8, r2
    12d2:	4a1c      	ldr	r2, [pc, #112]	; (1344 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xcc>)
    12d4:	4b1c      	ldr	r3, [pc, #112]	; (1348 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xd0>)
    12d6:	47c0      	blx	r8
    12d8:	0002      	movs	r2, r0
    12da:	000b      	movs	r3, r1
    12dc:	4f1b      	ldr	r7, [pc, #108]	; (134c <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xd4>)
    12de:	9804      	ldr	r0, [sp, #16]
    12e0:	9905      	ldr	r1, [sp, #20]
    12e2:	47b8      	blx	r7
    12e4:	9004      	str	r0, [sp, #16]
    12e6:	9105      	str	r1, [sp, #20]
    12e8:	9802      	ldr	r0, [sp, #8]
    12ea:	47b0      	blx	r6
    12ec:	4a18      	ldr	r2, [pc, #96]	; (1350 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xd8>)
    12ee:	4b19      	ldr	r3, [pc, #100]	; (1354 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xdc>)
    12f0:	47c0      	blx	r8
    12f2:	0002      	movs	r2, r0
    12f4:	000b      	movs	r3, r1
    12f6:	9804      	ldr	r0, [sp, #16]
    12f8:	9905      	ldr	r1, [sp, #20]
    12fa:	47b8      	blx	r7
    12fc:	4b16      	ldr	r3, [pc, #88]	; (1358 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xe0>)
    12fe:	4798      	blx	r3
        BesselLowpassSecondOrder004_buffer_PM1_0[i] = yv[2];
    1300:	4b09      	ldr	r3, [pc, #36]	; (1328 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0xb0>)
    1302:	3310      	adds	r3, #16
    1304:	006a      	lsls	r2, r5, #1
    1306:	50d0      	str	r0, [r2, r3]
    1308:	3502      	adds	r5, #2
    130a:	9e01      	ldr	r6, [sp, #4]
        xv[2] = (float)LPF_FIR_BUFFER_PM1_0[i] / float(50.5047);
    130c:	9b03      	ldr	r3, [sp, #12]
    130e:	9301      	str	r3, [sp, #4]
    1310:	9f02      	ldr	r7, [sp, #8]
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    1312:	9002      	str	r0, [sp, #8]
    for (int i = 0; i < LPF_FIR_BUFFER_LENGTH; i++)
    1314:	2d0a      	cmp	r5, #10
    1316:	d1c4      	bne.n	12a2 <_ZN7PMS700333BesselLowpassSecondOrder004_PM1_0Ev+0x2a>
    } 

}
    1318:	b007      	add	sp, #28
    131a:	bc3c      	pop	{r2, r3, r4, r5}
    131c:	4690      	mov	r8, r2
    131e:	4699      	mov	r9, r3
    1320:	46a2      	mov	sl, r4
    1322:	46ab      	mov	fp, r5
    1324:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1326:	46c0      	nop			; (mov r8, r8)
    1328:	20000500 	.word	0x20000500
    132c:	00006a1d 	.word	0x00006a1d
    1330:	00006415 	.word	0x00006415
    1334:	000060f1 	.word	0x000060f1
    1338:	424a04d0 	.word	0x424a04d0
    133c:	000085f9 	.word	0x000085f9
    1340:	00007931 	.word	0x00007931
    1344:	b04e1ec3 	.word	0xb04e1ec3
    1348:	bfe2575c 	.word	0xbfe2575c
    134c:	00006aa9 	.word	0x00006aa9
    1350:	88e1a1ac 	.word	0x88e1a1ac
    1354:	3ff7e746 	.word	0x3ff7e746
    1358:	0000869d 	.word	0x0000869d

0000135c <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev>:

// cuts off at 0.04 * sampling freq
void PMS7003::BesselLowpassSecondOrder004_PM2_5()
{
    135c:	b5f0      	push	{r4, r5, r6, r7, lr}
    135e:	46de      	mov	lr, fp
    1360:	4657      	mov	r7, sl
    1362:	464e      	mov	r6, r9
    1364:	4645      	mov	r5, r8
    1366:	b5e0      	push	{r5, r6, r7, lr}
    1368:	b087      	sub	sp, #28
    136a:	2500      	movs	r5, #0
    float xv[3] = {0.0,0.0,0.0};
	float yv[3] = {0.0,0.0,0.0};
    136c:	2300      	movs	r3, #0
    136e:	9302      	str	r3, [sp, #8]
    1370:	1c1f      	adds	r7, r3, #0
    float xv[3] = {0.0,0.0,0.0};
    1372:	9301      	str	r3, [sp, #4]
    1374:	1c1e      	adds	r6, r3, #0
 
    for (int i = 0; i < LPF_FIR_BUFFER_LENGTH; i++)
    { 
        xv[0] = xv[1]; 
		xv[1] = xv[2]; 
        xv[2] = (float)LPF_FIR_BUFFER_PM2_5[i] / float(50.5047);
    1376:	4b26      	ldr	r3, [pc, #152]	; (1410 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xb4>)
    1378:	2224      	movs	r2, #36	; 0x24
    137a:	4694      	mov	ip, r2
    137c:	4463      	add	r3, ip
    137e:	469b      	mov	fp, r3
    1380:	4b24      	ldr	r3, [pc, #144]	; (1414 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xb8>)
    1382:	469a      	mov	sl, r3
    1384:	4b24      	ldr	r3, [pc, #144]	; (1418 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xbc>)
    1386:	4699      	mov	r9, r3
        yv[0] = yv[1]; 
		yv[1] = yv[2]; 
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    1388:	4c24      	ldr	r4, [pc, #144]	; (141c <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xc0>)
        xv[2] = (float)LPF_FIR_BUFFER_PM2_5[i] / float(50.5047);
    138a:	465b      	mov	r3, fp
    138c:	5ae8      	ldrh	r0, [r5, r3]
    138e:	47d0      	blx	sl
    1390:	4923      	ldr	r1, [pc, #140]	; (1420 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xc4>)
    1392:	47c8      	blx	r9
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    1394:	1c31      	adds	r1, r6, #0
    1396:	9003      	str	r0, [sp, #12]
    1398:	47a0      	blx	r4
    139a:	1c06      	adds	r6, r0, #0
    139c:	9b01      	ldr	r3, [sp, #4]
    139e:	1c19      	adds	r1, r3, #0
    13a0:	1c18      	adds	r0, r3, #0
    13a2:	47a0      	blx	r4
    13a4:	1c01      	adds	r1, r0, #0
    13a6:	1c30      	adds	r0, r6, #0
    13a8:	47a0      	blx	r4
    13aa:	4e1e      	ldr	r6, [pc, #120]	; (1424 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xc8>)
    13ac:	47b0      	blx	r6
    13ae:	9004      	str	r0, [sp, #16]
    13b0:	9105      	str	r1, [sp, #20]
    13b2:	1c38      	adds	r0, r7, #0
    13b4:	47b0      	blx	r6
    13b6:	4a1c      	ldr	r2, [pc, #112]	; (1428 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xcc>)
    13b8:	4690      	mov	r8, r2
    13ba:	4a1c      	ldr	r2, [pc, #112]	; (142c <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xd0>)
    13bc:	4b1c      	ldr	r3, [pc, #112]	; (1430 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xd4>)
    13be:	47c0      	blx	r8
    13c0:	0002      	movs	r2, r0
    13c2:	000b      	movs	r3, r1
    13c4:	4f1b      	ldr	r7, [pc, #108]	; (1434 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xd8>)
    13c6:	9804      	ldr	r0, [sp, #16]
    13c8:	9905      	ldr	r1, [sp, #20]
    13ca:	47b8      	blx	r7
    13cc:	9004      	str	r0, [sp, #16]
    13ce:	9105      	str	r1, [sp, #20]
    13d0:	9802      	ldr	r0, [sp, #8]
    13d2:	47b0      	blx	r6
    13d4:	4a18      	ldr	r2, [pc, #96]	; (1438 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xdc>)
    13d6:	4b19      	ldr	r3, [pc, #100]	; (143c <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xe0>)
    13d8:	47c0      	blx	r8
    13da:	0002      	movs	r2, r0
    13dc:	000b      	movs	r3, r1
    13de:	9804      	ldr	r0, [sp, #16]
    13e0:	9905      	ldr	r1, [sp, #20]
    13e2:	47b8      	blx	r7
    13e4:	4b16      	ldr	r3, [pc, #88]	; (1440 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xe4>)
    13e6:	4798      	blx	r3
        BesselLowpassSecondOrder004_buffer_PM2_5[i] = yv[2];
    13e8:	4b09      	ldr	r3, [pc, #36]	; (1410 <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0xb4>)
    13ea:	3330      	adds	r3, #48	; 0x30
    13ec:	006a      	lsls	r2, r5, #1
    13ee:	50d0      	str	r0, [r2, r3]
    13f0:	3502      	adds	r5, #2
    13f2:	9e01      	ldr	r6, [sp, #4]
        xv[2] = (float)LPF_FIR_BUFFER_PM2_5[i] / float(50.5047);
    13f4:	9b03      	ldr	r3, [sp, #12]
    13f6:	9301      	str	r3, [sp, #4]
    13f8:	9f02      	ldr	r7, [sp, #8]
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    13fa:	9002      	str	r0, [sp, #8]
    for (int i = 0; i < LPF_FIR_BUFFER_LENGTH; i++)
    13fc:	2d0a      	cmp	r5, #10
    13fe:	d1c4      	bne.n	138a <_ZN7PMS700333BesselLowpassSecondOrder004_PM2_5Ev+0x2e>
    } 

}
    1400:	b007      	add	sp, #28
    1402:	bc3c      	pop	{r2, r3, r4, r5}
    1404:	4690      	mov	r8, r2
    1406:	4699      	mov	r9, r3
    1408:	46a2      	mov	sl, r4
    140a:	46ab      	mov	fp, r5
    140c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    140e:	46c0      	nop			; (mov r8, r8)
    1410:	20000500 	.word	0x20000500
    1414:	00006a1d 	.word	0x00006a1d
    1418:	00006415 	.word	0x00006415
    141c:	000060f1 	.word	0x000060f1
    1420:	424a04d0 	.word	0x424a04d0
    1424:	000085f9 	.word	0x000085f9
    1428:	00007931 	.word	0x00007931
    142c:	b04e1ec3 	.word	0xb04e1ec3
    1430:	bfe2575c 	.word	0xbfe2575c
    1434:	00006aa9 	.word	0x00006aa9
    1438:	88e1a1ac 	.word	0x88e1a1ac
    143c:	3ff7e746 	.word	0x3ff7e746
    1440:	0000869d 	.word	0x0000869d

00001444 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev>:

// cuts off at 0.04 * sampling freq
void PMS7003::BesselLowpassSecondOrder004_PM10()
{
    1444:	b5f0      	push	{r4, r5, r6, r7, lr}
    1446:	46de      	mov	lr, fp
    1448:	4657      	mov	r7, sl
    144a:	464e      	mov	r6, r9
    144c:	4645      	mov	r5, r8
    144e:	b5e0      	push	{r5, r6, r7, lr}
    1450:	b087      	sub	sp, #28
    1452:	2500      	movs	r5, #0
    float xv[3] = {0.0,0.0,0.0};
	float yv[3] = {0.0,0.0,0.0};
    1454:	2300      	movs	r3, #0
    1456:	9302      	str	r3, [sp, #8]
    1458:	1c1f      	adds	r7, r3, #0
    float xv[3] = {0.0,0.0,0.0};
    145a:	9301      	str	r3, [sp, #4]
    145c:	1c1e      	adds	r6, r3, #0
 
    for (int i = 0; i < LPF_FIR_BUFFER_LENGTH; i++)
    { 
        xv[0] = xv[1]; 
		xv[1] = xv[2]; 
        xv[2] = (float)LPF_FIR_BUFFER_PM10[i] / float(50.5047);
    145e:	4b26      	ldr	r3, [pc, #152]	; (14f8 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xb4>)
    1460:	2244      	movs	r2, #68	; 0x44
    1462:	4694      	mov	ip, r2
    1464:	4463      	add	r3, ip
    1466:	469b      	mov	fp, r3
    1468:	4b24      	ldr	r3, [pc, #144]	; (14fc <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xb8>)
    146a:	469a      	mov	sl, r3
    146c:	4b24      	ldr	r3, [pc, #144]	; (1500 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xbc>)
    146e:	4699      	mov	r9, r3
        yv[0] = yv[1]; 
		yv[1] = yv[2]; 
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    1470:	4c24      	ldr	r4, [pc, #144]	; (1504 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xc0>)
        xv[2] = (float)LPF_FIR_BUFFER_PM10[i] / float(50.5047);
    1472:	465b      	mov	r3, fp
    1474:	5ae8      	ldrh	r0, [r5, r3]
    1476:	47d0      	blx	sl
    1478:	4923      	ldr	r1, [pc, #140]	; (1508 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xc4>)
    147a:	47c8      	blx	r9
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    147c:	1c31      	adds	r1, r6, #0
    147e:	9003      	str	r0, [sp, #12]
    1480:	47a0      	blx	r4
    1482:	1c06      	adds	r6, r0, #0
    1484:	9b01      	ldr	r3, [sp, #4]
    1486:	1c19      	adds	r1, r3, #0
    1488:	1c18      	adds	r0, r3, #0
    148a:	47a0      	blx	r4
    148c:	1c01      	adds	r1, r0, #0
    148e:	1c30      	adds	r0, r6, #0
    1490:	47a0      	blx	r4
    1492:	4e1e      	ldr	r6, [pc, #120]	; (150c <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xc8>)
    1494:	47b0      	blx	r6
    1496:	9004      	str	r0, [sp, #16]
    1498:	9105      	str	r1, [sp, #20]
    149a:	1c38      	adds	r0, r7, #0
    149c:	47b0      	blx	r6
    149e:	4a1c      	ldr	r2, [pc, #112]	; (1510 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xcc>)
    14a0:	4690      	mov	r8, r2
    14a2:	4a1c      	ldr	r2, [pc, #112]	; (1514 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xd0>)
    14a4:	4b1c      	ldr	r3, [pc, #112]	; (1518 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xd4>)
    14a6:	47c0      	blx	r8
    14a8:	0002      	movs	r2, r0
    14aa:	000b      	movs	r3, r1
    14ac:	4f1b      	ldr	r7, [pc, #108]	; (151c <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xd8>)
    14ae:	9804      	ldr	r0, [sp, #16]
    14b0:	9905      	ldr	r1, [sp, #20]
    14b2:	47b8      	blx	r7
    14b4:	9004      	str	r0, [sp, #16]
    14b6:	9105      	str	r1, [sp, #20]
    14b8:	9802      	ldr	r0, [sp, #8]
    14ba:	47b0      	blx	r6
    14bc:	4a18      	ldr	r2, [pc, #96]	; (1520 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xdc>)
    14be:	4b19      	ldr	r3, [pc, #100]	; (1524 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xe0>)
    14c0:	47c0      	blx	r8
    14c2:	0002      	movs	r2, r0
    14c4:	000b      	movs	r3, r1
    14c6:	9804      	ldr	r0, [sp, #16]
    14c8:	9905      	ldr	r1, [sp, #20]
    14ca:	47b8      	blx	r7
    14cc:	4b16      	ldr	r3, [pc, #88]	; (1528 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xe4>)
    14ce:	4798      	blx	r3
        BesselLowpassSecondOrder004_buffer_PM10[i] = yv[2];
    14d0:	4b09      	ldr	r3, [pc, #36]	; (14f8 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0xb4>)
    14d2:	3350      	adds	r3, #80	; 0x50
    14d4:	006a      	lsls	r2, r5, #1
    14d6:	50d0      	str	r0, [r2, r3]
    14d8:	3502      	adds	r5, #2
    14da:	9e01      	ldr	r6, [sp, #4]
        xv[2] = (float)LPF_FIR_BUFFER_PM10[i] / float(50.5047);
    14dc:	9b03      	ldr	r3, [sp, #12]
    14de:	9301      	str	r3, [sp, #4]
    14e0:	9f02      	ldr	r7, [sp, #8]
        yv[2] = (xv[0] + xv[2]) + 2 * xv[1] + ( -0.5731643146 * yv[0]) + (  1.4939637515 * yv[1]);
    14e2:	9002      	str	r0, [sp, #8]
    for (int i = 0; i < LPF_FIR_BUFFER_LENGTH; i++)
    14e4:	2d0a      	cmp	r5, #10
    14e6:	d1c4      	bne.n	1472 <_ZN7PMS700332BesselLowpassSecondOrder004_PM10Ev+0x2e>
    } 

}
    14e8:	b007      	add	sp, #28
    14ea:	bc3c      	pop	{r2, r3, r4, r5}
    14ec:	4690      	mov	r8, r2
    14ee:	4699      	mov	r9, r3
    14f0:	46a2      	mov	sl, r4
    14f2:	46ab      	mov	fp, r5
    14f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    14f6:	46c0      	nop			; (mov r8, r8)
    14f8:	20000500 	.word	0x20000500
    14fc:	00006a1d 	.word	0x00006a1d
    1500:	00006415 	.word	0x00006415
    1504:	000060f1 	.word	0x000060f1
    1508:	424a04d0 	.word	0x424a04d0
    150c:	000085f9 	.word	0x000085f9
    1510:	00007931 	.word	0x00007931
    1514:	b04e1ec3 	.word	0xb04e1ec3
    1518:	bfe2575c 	.word	0xbfe2575c
    151c:	00006aa9 	.word	0x00006aa9
    1520:	88e1a1ac 	.word	0x88e1a1ac
    1524:	3ff7e746 	.word	0x3ff7e746
    1528:	0000869d 	.word	0x0000869d

0000152c <_ZN7PMS700317AQ_calc_avg_shortEv>:
{
    152c:	b5f0      	push	{r4, r5, r6, r7, lr}
    152e:	46de      	mov	lr, fp
    1530:	4657      	mov	r7, sl
    1532:	464e      	mov	r6, r9
    1534:	4645      	mov	r5, r8
    1536:	b5e0      	push	{r5, r6, r7, lr}
    1538:	b085      	sub	sp, #20
    153a:	0005      	movs	r5, r0
	if(aqi_index_short >= PMS7003_sample_num_SHORT ) //after some samples
    153c:	8fc3      	ldrh	r3, [r0, #62]	; 0x3e
    153e:	b29b      	uxth	r3, r3
    1540:	2b03      	cmp	r3, #3
    1542:	dc00      	bgt.n	1546 <_ZN7PMS700317AQ_calc_avg_shortEv+0x1a>
    1544:	e080      	b.n	1648 <_ZN7PMS700317AQ_calc_avg_shortEv+0x11c>
		old_avg_PM1_0_CF1_short=round(avg_PM1_0_CF1_short/aqi_index_short);
    1546:	6c00      	ldr	r0, [r0, #64]	; 0x40
    1548:	8fe9      	ldrh	r1, [r5, #62]	; 0x3e
    154a:	b289      	uxth	r1, r1
    154c:	4f42      	ldr	r7, [pc, #264]	; (1658 <_ZN7PMS700317AQ_calc_avg_shortEv+0x12c>)
    154e:	47b8      	blx	r7
    1550:	9001      	str	r0, [sp, #4]
    1552:	64e8      	str	r0, [r5, #76]	; 0x4c
		old_avg_PM2_5_CF1_short=round(avg_PM2_5_CF1_short/aqi_index_short);
    1554:	6c68      	ldr	r0, [r5, #68]	; 0x44
    1556:	8fe9      	ldrh	r1, [r5, #62]	; 0x3e
    1558:	b289      	uxth	r1, r1
    155a:	47b8      	blx	r7
    155c:	0006      	movs	r6, r0
    155e:	6528      	str	r0, [r5, #80]	; 0x50
		old_avg_PM10_CF1_short=round(avg_PM10_CF1_short/aqi_index_short);
    1560:	6ca8      	ldr	r0, [r5, #72]	; 0x48
    1562:	8fe9      	ldrh	r1, [r5, #62]	; 0x3e
    1564:	b289      	uxth	r1, r1
    1566:	47b8      	blx	r7
    1568:	6568      	str	r0, [r5, #84]	; 0x54
		avg_PM1_0_CF1_short=0;
    156a:	2300      	movs	r3, #0
    156c:	642b      	str	r3, [r5, #64]	; 0x40
		avg_PM2_5_CF1_short=0;
    156e:	646b      	str	r3, [r5, #68]	; 0x44
		avg_PM10_CF1_short=0;
    1570:	64ab      	str	r3, [r5, #72]	; 0x48
		aqi_index_short=0;
    1572:	87eb      	strh	r3, [r5, #62]	; 0x3e
    1574:	4a39      	ldr	r2, [pc, #228]	; (165c <_ZN7PMS700317AQ_calc_avg_shortEv+0x130>)
    1576:	3204      	adds	r2, #4
			LPF_FIR_BUFFER_PM2_5[i]=LPF_FIR_BUFFER_PM1_0[i+1];
    1578:	4f38      	ldr	r7, [pc, #224]	; (165c <_ZN7PMS700317AQ_calc_avg_shortEv+0x130>)
    157a:	003c      	movs	r4, r7
    157c:	3424      	adds	r4, #36	; 0x24
			LPF_FIR_BUFFER_PM10[i]=LPF_FIR_BUFFER_PM1_0[i+1];
    157e:	3744      	adds	r7, #68	; 0x44
			LPF_FIR_BUFFER_PM1_0[i]=LPF_FIR_BUFFER_PM1_0[i+1];
    1580:	8851      	ldrh	r1, [r2, #2]
    1582:	8011      	strh	r1, [r2, #0]
			LPF_FIR_BUFFER_PM2_5[i]=LPF_FIR_BUFFER_PM1_0[i+1];
    1584:	5319      	strh	r1, [r3, r4]
			LPF_FIR_BUFFER_PM10[i]=LPF_FIR_BUFFER_PM1_0[i+1];
    1586:	53d9      	strh	r1, [r3, r7]
    1588:	3202      	adds	r2, #2
    158a:	3302      	adds	r3, #2
		for(i=0;i< LPF_FIR_BUFFER_LENGTH-1;i++)
    158c:	2b08      	cmp	r3, #8
    158e:	d1f7      	bne.n	1580 <_ZN7PMS700317AQ_calc_avg_shortEv+0x54>
		LPF_FIR_BUFFER_PM1_0[LPF_FIR_BUFFER_LENGTH-1]=old_avg_PM1_0_CF1_short;
    1590:	466b      	mov	r3, sp
    1592:	889c      	ldrh	r4, [r3, #4]
    1594:	4b31      	ldr	r3, [pc, #196]	; (165c <_ZN7PMS700317AQ_calc_avg_shortEv+0x130>)
    1596:	819c      	strh	r4, [r3, #12]
		LPF_FIR_BUFFER_PM2_5[LPF_FIR_BUFFER_LENGTH-1]=old_avg_PM2_5_CF1_short;
    1598:	b2b6      	uxth	r6, r6
    159a:	859e      	strh	r6, [r3, #44]	; 0x2c
		LPF_FIR_BUFFER_PM10[LPF_FIR_BUFFER_LENGTH-1]=old_avg_PM10_CF1_short;
    159c:	b280      	uxth	r0, r0
    159e:	3344      	adds	r3, #68	; 0x44
    15a0:	8118      	strh	r0, [r3, #8]
		if(first_time)
    15a2:	2385      	movs	r3, #133	; 0x85
    15a4:	5ceb      	ldrb	r3, [r5, r3]
    15a6:	2b00      	cmp	r3, #0
    15a8:	d00e      	beq.n	15c8 <_ZN7PMS700317AQ_calc_avg_shortEv+0x9c>
			first_time=false;
    15aa:	2200      	movs	r2, #0
    15ac:	2385      	movs	r3, #133	; 0x85
    15ae:	54ea      	strb	r2, [r5, r3]
    15b0:	2300      	movs	r3, #0
				LPF_FIR_BUFFER_PM1_0[i]=old_avg_PM1_0_CF1_short;
    15b2:	4a2a      	ldr	r2, [pc, #168]	; (165c <_ZN7PMS700317AQ_calc_avg_shortEv+0x130>)
    15b4:	1d17      	adds	r7, r2, #4
				LPF_FIR_BUFFER_PM2_5[i]=old_avg_PM2_5_CF1_short;
    15b6:	0011      	movs	r1, r2
    15b8:	3124      	adds	r1, #36	; 0x24
				LPF_FIR_BUFFER_PM10[i]=old_avg_PM10_CF1_short;
    15ba:	3244      	adds	r2, #68	; 0x44
				LPF_FIR_BUFFER_PM1_0[i]=old_avg_PM1_0_CF1_short;
    15bc:	53dc      	strh	r4, [r3, r7]
				LPF_FIR_BUFFER_PM2_5[i]=old_avg_PM2_5_CF1_short;
    15be:	525e      	strh	r6, [r3, r1]
				LPF_FIR_BUFFER_PM10[i]=old_avg_PM10_CF1_short;
    15c0:	5298      	strh	r0, [r3, r2]
    15c2:	3302      	adds	r3, #2
			for(i=0;i< LPF_FIR_BUFFER_LENGTH-1;i++)
    15c4:	2b08      	cmp	r3, #8
    15c6:	d1f9      	bne.n	15bc <_ZN7PMS700317AQ_calc_avg_shortEv+0x90>
		BesselLowpassSecondOrder004_PM1_0();
    15c8:	0028      	movs	r0, r5
    15ca:	4b25      	ldr	r3, [pc, #148]	; (1660 <_ZN7PMS700317AQ_calc_avg_shortEv+0x134>)
    15cc:	4798      	blx	r3
		BesselLowpassSecondOrder004_PM2_5();
    15ce:	0028      	movs	r0, r5
    15d0:	4b24      	ldr	r3, [pc, #144]	; (1664 <_ZN7PMS700317AQ_calc_avg_shortEv+0x138>)
    15d2:	4798      	blx	r3
		BesselLowpassSecondOrder004_PM10();
    15d4:	0028      	movs	r0, r5
    15d6:	4b24      	ldr	r3, [pc, #144]	; (1668 <_ZN7PMS700317AQ_calc_avg_shortEv+0x13c>)
    15d8:	4798      	blx	r3
		old_avg_PM1_0_CF1_short=BesselLowpassSecondOrder004_buffer_PM1_0[0];
    15da:	4e20      	ldr	r6, [pc, #128]	; (165c <_ZN7PMS700317AQ_calc_avg_shortEv+0x130>)
    15dc:	4c23      	ldr	r4, [pc, #140]	; (166c <_ZN7PMS700317AQ_calc_avg_shortEv+0x140>)
    15de:	6930      	ldr	r0, [r6, #16]
    15e0:	47a0      	blx	r4
    15e2:	9002      	str	r0, [sp, #8]
		old_avg_PM2_5_CF1_short=BesselLowpassSecondOrder004_buffer_PM2_5[0];
    15e4:	6b30      	ldr	r0, [r6, #48]	; 0x30
    15e6:	47a0      	blx	r4
    15e8:	9003      	str	r0, [sp, #12]
		old_avg_PM10_CF1_short=BesselLowpassSecondOrder004_buffer_PM10[0];
    15ea:	6d30      	ldr	r0, [r6, #80]	; 0x50
    15ec:	47a0      	blx	r4
    15ee:	9001      	str	r0, [sp, #4]
    15f0:	2404      	movs	r4, #4
			old_avg_PM1_0_CF1_short+=BesselLowpassSecondOrder004_buffer_PM1_0[i];
    15f2:	4b1f      	ldr	r3, [pc, #124]	; (1670 <_ZN7PMS700317AQ_calc_avg_shortEv+0x144>)
    15f4:	4698      	mov	r8, r3
    15f6:	0033      	movs	r3, r6
    15f8:	2210      	movs	r2, #16
    15fa:	4693      	mov	fp, r2
    15fc:	44b3      	add	fp, r6
    15fe:	4f1d      	ldr	r7, [pc, #116]	; (1674 <_ZN7PMS700317AQ_calc_avg_shortEv+0x148>)
    1600:	4e1a      	ldr	r6, [pc, #104]	; (166c <_ZN7PMS700317AQ_calc_avg_shortEv+0x140>)
			old_avg_PM2_5_CF1_short+=BesselLowpassSecondOrder004_buffer_PM2_5[i];
    1602:	3220      	adds	r2, #32
    1604:	4692      	mov	sl, r2
    1606:	449a      	add	sl, r3
			old_avg_PM10_CF1_short+=BesselLowpassSecondOrder004_buffer_PM10[i];
    1608:	3220      	adds	r2, #32
    160a:	4691      	mov	r9, r2
    160c:	4499      	add	r9, r3
			old_avg_PM1_0_CF1_short+=BesselLowpassSecondOrder004_buffer_PM1_0[i];
    160e:	9802      	ldr	r0, [sp, #8]
    1610:	47c0      	blx	r8
    1612:	465b      	mov	r3, fp
    1614:	58e1      	ldr	r1, [r4, r3]
    1616:	47b8      	blx	r7
    1618:	47b0      	blx	r6
    161a:	9002      	str	r0, [sp, #8]
			old_avg_PM2_5_CF1_short+=BesselLowpassSecondOrder004_buffer_PM2_5[i];
    161c:	9803      	ldr	r0, [sp, #12]
    161e:	47c0      	blx	r8
    1620:	4653      	mov	r3, sl
    1622:	58e1      	ldr	r1, [r4, r3]
    1624:	47b8      	blx	r7
    1626:	47b0      	blx	r6
    1628:	9003      	str	r0, [sp, #12]
			old_avg_PM10_CF1_short+=BesselLowpassSecondOrder004_buffer_PM10[i];
    162a:	9801      	ldr	r0, [sp, #4]
    162c:	47c0      	blx	r8
    162e:	464b      	mov	r3, r9
    1630:	58e1      	ldr	r1, [r4, r3]
    1632:	47b8      	blx	r7
    1634:	47b0      	blx	r6
    1636:	9001      	str	r0, [sp, #4]
    1638:	3404      	adds	r4, #4
		for (i = 1; i < LPF_FIR_BUFFER_LENGTH; i++)
    163a:	2c14      	cmp	r4, #20
    163c:	d1e7      	bne.n	160e <_ZN7PMS700317AQ_calc_avg_shortEv+0xe2>
    163e:	9b02      	ldr	r3, [sp, #8]
    1640:	64eb      	str	r3, [r5, #76]	; 0x4c
    1642:	9b03      	ldr	r3, [sp, #12]
    1644:	652b      	str	r3, [r5, #80]	; 0x50
    1646:	6568      	str	r0, [r5, #84]	; 0x54
}
    1648:	b005      	add	sp, #20
    164a:	bc3c      	pop	{r2, r3, r4, r5}
    164c:	4690      	mov	r8, r2
    164e:	4699      	mov	r9, r3
    1650:	46a2      	mov	sl, r4
    1652:	46ab      	mov	fp, r5
    1654:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1656:	46c0      	nop			; (mov r8, r8)
    1658:	00005c49 	.word	0x00005c49
    165c:	20000500 	.word	0x20000500
    1660:	00001279 	.word	0x00001279
    1664:	0000135d 	.word	0x0000135d
    1668:	00001445 	.word	0x00001445
    166c:	0000604d 	.word	0x0000604d
    1670:	00006a1d 	.word	0x00006a1d
    1674:	000060f1 	.word	0x000060f1

00001678 <_ZN7PMS700318values_calc_helperEv>:



//called in sercom interrupt
void PMS7003::values_calc_helper()
{
    1678:	b570      	push	{r4, r5, r6, lr}
    167a:	b082      	sub	sp, #8
    167c:	0004      	movs	r4, r0

//1.0
avg_PM1_0_CF1+=PMS7003_Values.concPM1_0_CF1;
    167e:	6801      	ldr	r1, [r0, #0]
    1680:	4b25      	ldr	r3, [pc, #148]	; (1718 <_ZN7PMS700318values_calc_helperEv+0xa0>)
    1682:	3364      	adds	r3, #100	; 0x64
    1684:	889a      	ldrh	r2, [r3, #4]
    1686:	1852      	adds	r2, r2, r1
    1688:	6002      	str	r2, [r0, #0]

//2.5
if(PMS7003_Values.concPM2_5_CF1 > max_PM2_5_CF1)
    168a:	88dd      	ldrh	r5, [r3, #6]
    168c:	0028      	movs	r0, r5
    168e:	4b23      	ldr	r3, [pc, #140]	; (171c <_ZN7PMS700318values_calc_helperEv+0xa4>)
    1690:	4798      	blx	r3
    1692:	9000      	str	r0, [sp, #0]
    1694:	9101      	str	r1, [sp, #4]
    1696:	68a2      	ldr	r2, [r4, #8]
    1698:	68e3      	ldr	r3, [r4, #12]
    169a:	4e21      	ldr	r6, [pc, #132]	; (1720 <_ZN7PMS700318values_calc_helperEv+0xa8>)
    169c:	47b0      	blx	r6
    169e:	2800      	cmp	r0, #0
    16a0:	d004      	beq.n	16ac <_ZN7PMS700318values_calc_helperEv+0x34>
{
	max_PM2_5_CF1=PMS7003_Values.concPM2_5_CF1;
    16a2:	0028      	movs	r0, r5
    16a4:	4b1f      	ldr	r3, [pc, #124]	; (1724 <_ZN7PMS700318values_calc_helperEv+0xac>)
    16a6:	4798      	blx	r3
    16a8:	60a0      	str	r0, [r4, #8]
    16aa:	60e1      	str	r1, [r4, #12]
}
if(PMS7003_Values.concPM2_5_CF1 < min_PM2_5_CF1)
    16ac:	6922      	ldr	r2, [r4, #16]
    16ae:	6963      	ldr	r3, [r4, #20]
    16b0:	9800      	ldr	r0, [sp, #0]
    16b2:	9901      	ldr	r1, [sp, #4]
    16b4:	4e1c      	ldr	r6, [pc, #112]	; (1728 <_ZN7PMS700318values_calc_helperEv+0xb0>)
    16b6:	47b0      	blx	r6
    16b8:	2800      	cmp	r0, #0
    16ba:	d004      	beq.n	16c6 <_ZN7PMS700318values_calc_helperEv+0x4e>
{
	min_PM2_5_CF1=PMS7003_Values.concPM2_5_CF1;
    16bc:	0028      	movs	r0, r5
    16be:	4b19      	ldr	r3, [pc, #100]	; (1724 <_ZN7PMS700318values_calc_helperEv+0xac>)
    16c0:	4798      	blx	r3
    16c2:	6120      	str	r0, [r4, #16]
    16c4:	6161      	str	r1, [r4, #20]
}
avg_PM2_5_CF1+=PMS7003_Values.concPM2_5_CF1;
    16c6:	69a3      	ldr	r3, [r4, #24]
    16c8:	195b      	adds	r3, r3, r5
    16ca:	61a3      	str	r3, [r4, #24]

//10.0
if(PMS7003_Values.concPM10_0_CF1 > max_PM10_CF1)
    16cc:	4b12      	ldr	r3, [pc, #72]	; (1718 <_ZN7PMS700318values_calc_helperEv+0xa0>)
    16ce:	3364      	adds	r3, #100	; 0x64
    16d0:	891b      	ldrh	r3, [r3, #8]
    16d2:	0019      	movs	r1, r3
    16d4:	8c62      	ldrh	r2, [r4, #34]	; 0x22
    16d6:	b292      	uxth	r2, r2
    16d8:	4293      	cmp	r3, r2
    16da:	dd00      	ble.n	16de <_ZN7PMS700318values_calc_helperEv+0x66>
{
	max_PM10_CF1=PMS7003_Values.concPM10_0_CF1;
    16dc:	8463      	strh	r3, [r4, #34]	; 0x22
}
if(PMS7003_Values.concPM10_0_CF1 < min_PM10_CF1)
    16de:	8c22      	ldrh	r2, [r4, #32]
    16e0:	b292      	uxth	r2, r2
    16e2:	4291      	cmp	r1, r2
    16e4:	da00      	bge.n	16e8 <_ZN7PMS700318values_calc_helperEv+0x70>
{
	min_PM10_CF1=PMS7003_Values.concPM10_0_CF1;
    16e6:	8423      	strh	r3, [r4, #32]
}
avg_PM10_CF1+=PMS7003_Values.concPM10_0_CF1;
    16e8:	69e2      	ldr	r2, [r4, #28]
    16ea:	18d2      	adds	r2, r2, r3
    16ec:	61e2      	str	r2, [r4, #28]
aqi_index++;
    16ee:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
    16f0:	3201      	adds	r2, #1
    16f2:	87a2      	strh	r2, [r4, #60]	; 0x3c

avg_PM1_0_CF1_short+=PMS7003_Values.concPM1_0_CF1;
    16f4:	6c20      	ldr	r0, [r4, #64]	; 0x40
    16f6:	4908      	ldr	r1, [pc, #32]	; (1718 <_ZN7PMS700318values_calc_helperEv+0xa0>)
    16f8:	3164      	adds	r1, #100	; 0x64
    16fa:	888a      	ldrh	r2, [r1, #4]
    16fc:	1812      	adds	r2, r2, r0
    16fe:	6422      	str	r2, [r4, #64]	; 0x40
avg_PM2_5_CF1_short+=PMS7003_Values.concPM2_5_CF1;;
    1700:	6c62      	ldr	r2, [r4, #68]	; 0x44
    1702:	18ad      	adds	r5, r5, r2
    1704:	6465      	str	r5, [r4, #68]	; 0x44
avg_PM10_CF1_short+=PMS7003_Values.concPM10_0_CF1;
    1706:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    1708:	189b      	adds	r3, r3, r2
    170a:	64a3      	str	r3, [r4, #72]	; 0x48
aqi_index_short++;
    170c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
    170e:	3301      	adds	r3, #1
    1710:	b29b      	uxth	r3, r3
    1712:	87e3      	strh	r3, [r4, #62]	; 0x3e
}
    1714:	b002      	add	sp, #8
    1716:	bd70      	pop	{r4, r5, r6, pc}
    1718:	20000500 	.word	0x20000500
    171c:	00008505 	.word	0x00008505
    1720:	00005f89 	.word	0x00005f89
    1724:	00008589 	.word	0x00008589
    1728:	00005f61 	.word	0x00005f61

0000172c <_Z21PMS7003_move_to_framev>:

void PMS7003_move_to_frame()
{
    172c:	b510      	push	{r4, lr}
	PMS7003_values_ready=0;
    172e:	4c27      	ldr	r4, [pc, #156]	; (17cc <_Z21PMS7003_move_to_framev+0xa0>)
    1730:	2300      	movs	r3, #0
    1732:	7023      	strb	r3, [r4, #0]
    PMS7003_Values.concPM1_0_CF1 = PMS7003_buffer[4]<<8|PMS7003_buffer[5];                    
    1734:	4826      	ldr	r0, [pc, #152]	; (17d0 <_Z21PMS7003_move_to_framev+0xa4>)
    1736:	7a03      	ldrb	r3, [r0, #8]
    1738:	7a42      	ldrb	r2, [r0, #9]
    173a:	021b      	lsls	r3, r3, #8
    173c:	431a      	orrs	r2, r3
    173e:	4b25      	ldr	r3, [pc, #148]	; (17d4 <_Z21PMS7003_move_to_framev+0xa8>)
    1740:	3364      	adds	r3, #100	; 0x64
    1742:	809a      	strh	r2, [r3, #4]
    PMS7003_Values.concPM2_5_CF1 = PMS7003_buffer[6]<<8|PMS7003_buffer[7];                      
    1744:	7a81      	ldrb	r1, [r0, #10]
    1746:	7ac2      	ldrb	r2, [r0, #11]
    1748:	0209      	lsls	r1, r1, #8
    174a:	430a      	orrs	r2, r1
    174c:	80da      	strh	r2, [r3, #6]
    PMS7003_Values.concPM10_0_CF1 = PMS7003_buffer[8]<<8|PMS7003_buffer[9];                       
    174e:	7b01      	ldrb	r1, [r0, #12]
    1750:	7b42      	ldrb	r2, [r0, #13]
    1752:	0209      	lsls	r1, r1, #8
    1754:	430a      	orrs	r2, r1
    1756:	811a      	strh	r2, [r3, #8]
    PMS7003_Values.concPM1_0_amb = PMS7003_buffer[10]<<8|PMS7003_buffer[11];                        
    1758:	7b81      	ldrb	r1, [r0, #14]
    175a:	7bc2      	ldrb	r2, [r0, #15]
    175c:	0209      	lsls	r1, r1, #8
    175e:	430a      	orrs	r2, r1
    1760:	815a      	strh	r2, [r3, #10]
    PMS7003_Values.concPM2_5_amb = PMS7003_buffer[12]<<8|PMS7003_buffer[13];                      
    1762:	7c01      	ldrb	r1, [r0, #16]
    1764:	7c42      	ldrb	r2, [r0, #17]
    1766:	0209      	lsls	r1, r1, #8
    1768:	430a      	orrs	r2, r1
    176a:	819a      	strh	r2, [r3, #12]
    PMS7003_Values.concPM10_0_amb = PMS7003_buffer[14]<<8|PMS7003_buffer[15];     
    176c:	7c81      	ldrb	r1, [r0, #18]
    176e:	7cc2      	ldrb	r2, [r0, #19]
    1770:	0209      	lsls	r1, r1, #8
    1772:	430a      	orrs	r2, r1
    1774:	81da      	strh	r2, [r3, #14]
    PMS7003_Values.rawGt0_3um = PMS7003_buffer[16]<<8|PMS7003_buffer[17];     
    1776:	7d01      	ldrb	r1, [r0, #20]
    1778:	7d42      	ldrb	r2, [r0, #21]
    177a:	0209      	lsls	r1, r1, #8
    177c:	430a      	orrs	r2, r1
    177e:	821a      	strh	r2, [r3, #16]
    PMS7003_Values.rawGt0_5um = PMS7003_buffer[18]<<8|PMS7003_buffer[19];   
    1780:	7d81      	ldrb	r1, [r0, #22]
    1782:	7dc2      	ldrb	r2, [r0, #23]
    1784:	0209      	lsls	r1, r1, #8
    1786:	430a      	orrs	r2, r1
    1788:	825a      	strh	r2, [r3, #18]
    PMS7003_Values.rawGt1_0um = PMS7003_buffer[20]<<8|PMS7003_buffer[21];    
    178a:	7e01      	ldrb	r1, [r0, #24]
    178c:	7e42      	ldrb	r2, [r0, #25]
    178e:	0209      	lsls	r1, r1, #8
    1790:	430a      	orrs	r2, r1
    1792:	829a      	strh	r2, [r3, #20]
    PMS7003_Values.rawGt2_5um = PMS7003_buffer[22]<<8|PMS7003_buffer[23];     
    1794:	7e81      	ldrb	r1, [r0, #26]
    1796:	7ec2      	ldrb	r2, [r0, #27]
    1798:	0209      	lsls	r1, r1, #8
    179a:	430a      	orrs	r2, r1
    179c:	82da      	strh	r2, [r3, #22]
    PMS7003_Values.rawGt5_0um = PMS7003_buffer[24]<<8|PMS7003_buffer[25];     
    179e:	7f01      	ldrb	r1, [r0, #28]
    17a0:	7f42      	ldrb	r2, [r0, #29]
    17a2:	0209      	lsls	r1, r1, #8
    17a4:	430a      	orrs	r2, r1
    17a6:	831a      	strh	r2, [r3, #24]
    PMS7003_Values.rawGt10_0um = PMS7003_buffer[26]<<8|PMS7003_buffer[27];     
    17a8:	7f81      	ldrb	r1, [r0, #30]
    17aa:	7fc2      	ldrb	r2, [r0, #31]
    17ac:	0209      	lsls	r1, r1, #8
    17ae:	430a      	orrs	r2, r1
    17b0:	835a      	strh	r2, [r3, #26]
    PMS7003_Values.version = PMS7003_buffer[28];    
    17b2:	2220      	movs	r2, #32
    17b4:	5c82      	ldrb	r2, [r0, r2]
    17b6:	771a      	strb	r2, [r3, #28]
    PMS7003_Values.errorCode = PMS7003_buffer[29];
    17b8:	2221      	movs	r2, #33	; 0x21
    17ba:	5c82      	ldrb	r2, [r0, r2]
    17bc:	775a      	strb	r2, [r3, #29]
	PMS7003_values_ready=1;
    17be:	2301      	movs	r3, #1
    17c0:	7023      	strb	r3, [r4, #0]
	
	pms7003.values_calc_helper(); //values for averaging
    17c2:	3028      	adds	r0, #40	; 0x28
    17c4:	4b04      	ldr	r3, [pc, #16]	; (17d8 <_Z21PMS7003_move_to_framev+0xac>)
    17c6:	4798      	blx	r3
}
    17c8:	bd10      	pop	{r4, pc}
    17ca:	46c0      	nop			; (mov r8, r8)
    17cc:	20000008 	.word	0x20000008
    17d0:	20000580 	.word	0x20000580
    17d4:	20000500 	.word	0x20000500
    17d8:	00001679 	.word	0x00001679

000017dc <SERCOM2_Handler>:
{
	REG_PORT_OUTCLR0=(1<<7); //for pin low	
}

void SERCOM2_Handler() //uart pms7003
{
    17dc:	b510      	push	{r4, lr}
	//data receive complete
	//automatically cleared when data register is read
	if(SERCOM2->USART.INTFLAG.bit.RXC) 
    17de:	4b43      	ldr	r3, [pc, #268]	; (18ec <SERCOM2_Handler+0x110>)
    17e0:	7e1b      	ldrb	r3, [r3, #24]
    17e2:	075b      	lsls	r3, r3, #29
    17e4:	d559      	bpl.n	189a <SERCOM2_Handler+0xbe>
	{
		PMS7003_buffer[read_data_PMS7003_index++]=SERCOM2->USART.DATA.reg;
    17e6:	4942      	ldr	r1, [pc, #264]	; (18f0 <SERCOM2_Handler+0x114>)
    17e8:	2230      	movs	r2, #48	; 0x30
    17ea:	5c8b      	ldrb	r3, [r1, r2]
    17ec:	b2db      	uxtb	r3, r3
    17ee:	1c58      	adds	r0, r3, #1
    17f0:	b2c0      	uxtb	r0, r0
    17f2:	5488      	strb	r0, [r1, r2]
    17f4:	483d      	ldr	r0, [pc, #244]	; (18ec <SERCOM2_Handler+0x110>)
    17f6:	8d04      	ldrh	r4, [r0, #40]	; 0x28
    17f8:	b2e4      	uxtb	r4, r4
    17fa:	483e      	ldr	r0, [pc, #248]	; (18f4 <SERCOM2_Handler+0x118>)
    17fc:	18c3      	adds	r3, r0, r3
    17fe:	711c      	strb	r4, [r3, #4]
		switch (read_data_PMS7003_index) {
    1800:	5c8b      	ldrb	r3, [r1, r2]
    1802:	b2db      	uxtb	r3, r3
    1804:	2b20      	cmp	r3, #32
    1806:	d848      	bhi.n	189a <SERCOM2_Handler+0xbe>
    1808:	009b      	lsls	r3, r3, #2
    180a:	4a3b      	ldr	r2, [pc, #236]	; (18f8 <SERCOM2_Handler+0x11c>)
    180c:	58d3      	ldr	r3, [r2, r3]
    180e:	469f      	mov	pc, r3
					case 1:
						if(PMS7003_buffer[0]!=PMS7003_Values.PMS7003_frameHeader[0] ) //0x42, 66 in dec
    1810:	4b38      	ldr	r3, [pc, #224]	; (18f4 <SERCOM2_Handler+0x118>)
    1812:	791b      	ldrb	r3, [r3, #4]
    1814:	b2db      	uxtb	r3, r3
    1816:	4a39      	ldr	r2, [pc, #228]	; (18fc <SERCOM2_Handler+0x120>)
    1818:	3264      	adds	r2, #100	; 0x64
    181a:	7852      	ldrb	r2, [r2, #1]
    181c:	429a      	cmp	r2, r3
    181e:	d03c      	beq.n	189a <SERCOM2_Handler+0xbe>
						{
							read_data_PMS7003_index=0;
    1820:	2300      	movs	r3, #0
    1822:	2230      	movs	r2, #48	; 0x30
    1824:	4932      	ldr	r1, [pc, #200]	; (18f0 <SERCOM2_Handler+0x114>)
    1826:	548b      	strb	r3, [r1, r2]
							PMS7003_buffer[0]=0;
    1828:	4a32      	ldr	r2, [pc, #200]	; (18f4 <SERCOM2_Handler+0x118>)
    182a:	7113      	strb	r3, [r2, #4]
    182c:	e035      	b.n	189a <SERCOM2_Handler+0xbe>
						}
						break;
					case 2:
						if(PMS7003_buffer[1]!=PMS7003_Values.PMS7003_frameHeader[1] ) //0x4d,77 in dec
    182e:	4b31      	ldr	r3, [pc, #196]	; (18f4 <SERCOM2_Handler+0x118>)
    1830:	795b      	ldrb	r3, [r3, #5]
    1832:	b2db      	uxtb	r3, r3
    1834:	4a31      	ldr	r2, [pc, #196]	; (18fc <SERCOM2_Handler+0x120>)
    1836:	3264      	adds	r2, #100	; 0x64
    1838:	7892      	ldrb	r2, [r2, #2]
    183a:	429a      	cmp	r2, r3
    183c:	d02d      	beq.n	189a <SERCOM2_Handler+0xbe>
						{
							read_data_PMS7003_index=0;
    183e:	2300      	movs	r3, #0
    1840:	2230      	movs	r2, #48	; 0x30
    1842:	492b      	ldr	r1, [pc, #172]	; (18f0 <SERCOM2_Handler+0x114>)
    1844:	548b      	strb	r3, [r1, r2]
							PMS7003_buffer[0]=0;
    1846:	4a2b      	ldr	r2, [pc, #172]	; (18f4 <SERCOM2_Handler+0x118>)
    1848:	7113      	strb	r3, [r2, #4]
							PMS7003_buffer[1]=0;
    184a:	7153      	strb	r3, [r2, #5]
    184c:	e025      	b.n	189a <SERCOM2_Handler+0xbe>
						}
						break;
					case 3:
						if(PMS7003_buffer[2]!=0 ) 
    184e:	4b29      	ldr	r3, [pc, #164]	; (18f4 <SERCOM2_Handler+0x118>)
    1850:	799b      	ldrb	r3, [r3, #6]
    1852:	2b00      	cmp	r3, #0
    1854:	d021      	beq.n	189a <SERCOM2_Handler+0xbe>
						{
							read_data_PMS7003_index=0;
    1856:	2300      	movs	r3, #0
    1858:	2230      	movs	r2, #48	; 0x30
    185a:	4925      	ldr	r1, [pc, #148]	; (18f0 <SERCOM2_Handler+0x114>)
    185c:	548b      	strb	r3, [r1, r2]
							PMS7003_buffer[0]=0;
    185e:	4a25      	ldr	r2, [pc, #148]	; (18f4 <SERCOM2_Handler+0x118>)
    1860:	7113      	strb	r3, [r2, #4]
							PMS7003_buffer[1]=0;
    1862:	7153      	strb	r3, [r2, #5]
							PMS7003_buffer[2]=0;
    1864:	7193      	strb	r3, [r2, #6]
    1866:	e018      	b.n	189a <SERCOM2_Handler+0xbe>
						}
						break;
					case 4:
						if(PMS7003_buffer[3]!=PMS7003_Values.PMS7003_frameHeader[2]) //0x1c=28
    1868:	4b22      	ldr	r3, [pc, #136]	; (18f4 <SERCOM2_Handler+0x118>)
    186a:	79db      	ldrb	r3, [r3, #7]
    186c:	b2db      	uxtb	r3, r3
    186e:	4a23      	ldr	r2, [pc, #140]	; (18fc <SERCOM2_Handler+0x120>)
    1870:	3264      	adds	r2, #100	; 0x64
    1872:	78d2      	ldrb	r2, [r2, #3]
    1874:	429a      	cmp	r2, r3
    1876:	d010      	beq.n	189a <SERCOM2_Handler+0xbe>
						{
							read_data_PMS7003_index=0;
    1878:	2300      	movs	r3, #0
    187a:	2230      	movs	r2, #48	; 0x30
    187c:	491c      	ldr	r1, [pc, #112]	; (18f0 <SERCOM2_Handler+0x114>)
    187e:	548b      	strb	r3, [r1, r2]
							PMS7003_buffer[0]=0;
    1880:	4a1c      	ldr	r2, [pc, #112]	; (18f4 <SERCOM2_Handler+0x118>)
    1882:	7113      	strb	r3, [r2, #4]
							PMS7003_buffer[1]=0;
    1884:	7153      	strb	r3, [r2, #5]
							PMS7003_buffer[2]=0;
    1886:	7193      	strb	r3, [r2, #6]
							PMS7003_buffer[3]=0;
    1888:	71d3      	strb	r3, [r2, #7]
    188a:	e006      	b.n	189a <SERCOM2_Handler+0xbe>
						}
						break;		
					case PMS7003_read_buffer_length-1:
                        PMS7003_Values.checksum = PMS7003_buffer[PMS7003_read_buffer_length-2]<<8;
    188c:	2322      	movs	r3, #34	; 0x22
    188e:	4a19      	ldr	r2, [pc, #100]	; (18f4 <SERCOM2_Handler+0x118>)
    1890:	5cd2      	ldrb	r2, [r2, r3]
    1892:	0212      	lsls	r2, r2, #8
    1894:	4b19      	ldr	r3, [pc, #100]	; (18fc <SERCOM2_Handler+0x120>)
    1896:	3364      	adds	r3, #100	; 0x64
    1898:	83da      	strh	r2, [r3, #30]
                        break;
		}
	}
		
	
}
    189a:	bd10      	pop	{r4, pc}
						read_data_PMS7003_index=0;
    189c:	2100      	movs	r1, #0
    189e:	2330      	movs	r3, #48	; 0x30
    18a0:	4a13      	ldr	r2, [pc, #76]	; (18f0 <SERCOM2_Handler+0x114>)
    18a2:	54d1      	strb	r1, [r2, r3]
                        PMS7003_Values.checksum += PMS7003_buffer[PMS7003_read_buffer_length-1];
    18a4:	3b0d      	subs	r3, #13
    18a6:	4a13      	ldr	r2, [pc, #76]	; (18f4 <SERCOM2_Handler+0x118>)
    18a8:	5cd3      	ldrb	r3, [r2, r3]
    18aa:	4a14      	ldr	r2, [pc, #80]	; (18fc <SERCOM2_Handler+0x120>)
    18ac:	3264      	adds	r2, #100	; 0x64
    18ae:	8bd2      	ldrh	r2, [r2, #30]
    18b0:	189b      	adds	r3, r3, r2
    18b2:	b29b      	uxth	r3, r3
    18b4:	2200      	movs	r2, #0
							PMS7003_Values.checksum-=PMS7003_buffer[i];
    18b6:	480f      	ldr	r0, [pc, #60]	; (18f4 <SERCOM2_Handler+0x118>)
    18b8:	1881      	adds	r1, r0, r2
    18ba:	7909      	ldrb	r1, [r1, #4]
    18bc:	1a5b      	subs	r3, r3, r1
    18be:	b29b      	uxth	r3, r3
    18c0:	3201      	adds	r2, #1
						for(uint8_t i=0;i<=29;i++)
    18c2:	2a1e      	cmp	r2, #30
    18c4:	d1f8      	bne.n	18b8 <SERCOM2_Handler+0xdc>
    18c6:	490d      	ldr	r1, [pc, #52]	; (18fc <SERCOM2_Handler+0x120>)
    18c8:	000a      	movs	r2, r1
    18ca:	3264      	adds	r2, #100	; 0x64
    18cc:	83d3      	strh	r3, [r2, #30]
						PMS7003_buffer[0]=0;
    18ce:	4809      	ldr	r0, [pc, #36]	; (18f4 <SERCOM2_Handler+0x118>)
    18d0:	2200      	movs	r2, #0
    18d2:	7102      	strb	r2, [r0, #4]
						PMS7003_buffer[1]=0;
    18d4:	7142      	strb	r2, [r0, #5]
						PMS7003_Values.values_ok=0;
    18d6:	2064      	movs	r0, #100	; 0x64
    18d8:	540a      	strb	r2, [r1, r0]
						if(PMS7003_Values.checksum==0)
    18da:	2b00      	cmp	r3, #0
    18dc:	d1dd      	bne.n	189a <SERCOM2_Handler+0xbe>
							PMS7003_Values.values_ok=1;
    18de:	2101      	movs	r1, #1
    18e0:	3364      	adds	r3, #100	; 0x64
    18e2:	4a06      	ldr	r2, [pc, #24]	; (18fc <SERCOM2_Handler+0x120>)
    18e4:	54d1      	strb	r1, [r2, r3]
							PMS7003_move_to_frame(); //move buffer values to a struct
    18e6:	4b06      	ldr	r3, [pc, #24]	; (1900 <SERCOM2_Handler+0x124>)
    18e8:	4798      	blx	r3
}
    18ea:	e7d6      	b.n	189a <SERCOM2_Handler+0xbe>
    18ec:	42001000 	.word	0x42001000
    18f0:	20000600 	.word	0x20000600
    18f4:	20000580 	.word	0x20000580
    18f8:	00008f20 	.word	0x00008f20
    18fc:	20000500 	.word	0x20000500
    1900:	0000172d 	.word	0x0000172d

00001904 <_ZN5MHZ1912request_dataEv>:
	//memcpy(MHZ19_read_data, MHZ19_tx_buffer,9);
	SERCOM4->USART.DATA.reg=MHZ19_tx_buffer[tx_data_MHZ19_index++];
}

void MHZ19::request_data()
{
    1904:	b510      	push	{r4, lr}
	while(need_to_send_MHZ19);
    1906:	4912      	ldr	r1, [pc, #72]	; (1950 <_ZN5MHZ1912request_dataEv+0x4c>)
    1908:	2231      	movs	r2, #49	; 0x31
    190a:	5c8b      	ldrb	r3, [r1, r2]
    190c:	2b00      	cmp	r3, #0
    190e:	d1fc      	bne.n	190a <_ZN5MHZ1912request_dataEv+0x6>
	need_to_send_MHZ19=1;
    1910:	4b0f      	ldr	r3, [pc, #60]	; (1950 <_ZN5MHZ1912request_dataEv+0x4c>)
    1912:	2101      	movs	r1, #1
    1914:	2231      	movs	r2, #49	; 0x31
    1916:	5499      	strb	r1, [r3, r2]
	//MHZ19_tx_buffer=MHZ19_read_data;
	for(uint8_t i=0 ;i<MHZ19_read_buffer_length;i++)
	{
		MHZ19_tx_buffer[i]=MHZ19_read_data[i];
    1918:	2034      	movs	r0, #52	; 0x34
    191a:	32ce      	adds	r2, #206	; 0xce
    191c:	541a      	strb	r2, [r3, r0]
    191e:	001a      	movs	r2, r3
    1920:	3234      	adds	r2, #52	; 0x34
    1922:	7051      	strb	r1, [r2, #1]
    1924:	3185      	adds	r1, #133	; 0x85
    1926:	7091      	strb	r1, [r2, #2]
    1928:	2100      	movs	r1, #0
    192a:	70d1      	strb	r1, [r2, #3]
    192c:	7111      	strb	r1, [r2, #4]
    192e:	7151      	strb	r1, [r2, #5]
    1930:	7191      	strb	r1, [r2, #6]
    1932:	71d1      	strb	r1, [r2, #7]
    1934:	3179      	adds	r1, #121	; 0x79
    1936:	7211      	strb	r1, [r2, #8]
	}

	//memcpy(MHZ19_read_data, MHZ19_tx_buffer,9);
	SERCOM4->USART.DATA.reg=MHZ19_tx_buffer[tx_data_MHZ19_index++];
    1938:	243d      	movs	r4, #61	; 0x3d
    193a:	5d1a      	ldrb	r2, [r3, r4]
    193c:	b2d2      	uxtb	r2, r2
    193e:	1c51      	adds	r1, r2, #1
    1940:	b2c9      	uxtb	r1, r1
    1942:	5519      	strb	r1, [r3, r4]
    1944:	189b      	adds	r3, r3, r2
    1946:	5c1b      	ldrb	r3, [r3, r0]
    1948:	4a02      	ldr	r2, [pc, #8]	; (1954 <_ZN5MHZ1912request_dataEv+0x50>)
    194a:	8513      	strh	r3, [r2, #40]	; 0x28
}
    194c:	bd10      	pop	{r4, pc}
    194e:	46c0      	nop			; (mov r8, r8)
    1950:	20000600 	.word	0x20000600
    1954:	42001800 	.word	0x42001800

00001958 <SERCOM4_Handler>:
{
	REG_PORT_OUTCLR0=(1<<12); //for pin low	
}

void SERCOM4_Handler() //uart MHZ19
{
    1958:	b530      	push	{r4, r5, lr}
	//data receive complete
	//automatically cleared when data register is read
	
	//data register is empty, and all data has been read
	if(SERCOM4->USART.INTFLAG.bit.TXC==1) 
    195a:	4b44      	ldr	r3, [pc, #272]	; (1a6c <SERCOM4_Handler+0x114>)
    195c:	7e1b      	ldrb	r3, [r3, #24]
    195e:	079b      	lsls	r3, r3, #30
    1960:	d509      	bpl.n	1976 <SERCOM4_Handler+0x1e>
	{	
		if(need_to_send_MHZ19==1)
    1962:	2331      	movs	r3, #49	; 0x31
    1964:	4a42      	ldr	r2, [pc, #264]	; (1a70 <SERCOM4_Handler+0x118>)
    1966:	5cd3      	ldrb	r3, [r2, r3]
    1968:	2b01      	cmp	r3, #1
    196a:	d01e      	beq.n	19aa <SERCOM4_Handler+0x52>
				need_to_send_MHZ19=0;
			}
		}
		else
		{
			SERCOM4->USART.INTFLAG.bit.TXC=1;
    196c:	4a3f      	ldr	r2, [pc, #252]	; (1a6c <SERCOM4_Handler+0x114>)
    196e:	7e13      	ldrb	r3, [r2, #24]
    1970:	2102      	movs	r1, #2
    1972:	430b      	orrs	r3, r1
    1974:	7613      	strb	r3, [r2, #24]
		}	
	}
	
	if(SERCOM4->USART.INTFLAG.bit.RXC==1) 
    1976:	4b3d      	ldr	r3, [pc, #244]	; (1a6c <SERCOM4_Handler+0x114>)
    1978:	7e1b      	ldrb	r3, [r3, #24]
    197a:	075b      	lsls	r3, r3, #29
    197c:	d514      	bpl.n	19a8 <SERCOM4_Handler+0x50>
	{
		//SERCOM4->USART.INTFLAG.bit.DRE=1;
		MHZ19_rx_buffer[rx_data_MHZ19_index++]=SERCOM4->USART.DATA.reg;
    197e:	4a3c      	ldr	r2, [pc, #240]	; (1a70 <SERCOM4_Handler+0x118>)
    1980:	213e      	movs	r1, #62	; 0x3e
    1982:	5c53      	ldrb	r3, [r2, r1]
    1984:	b2db      	uxtb	r3, r3
    1986:	1c58      	adds	r0, r3, #1
    1988:	b2c0      	uxtb	r0, r0
    198a:	5450      	strb	r0, [r2, r1]
    198c:	4837      	ldr	r0, [pc, #220]	; (1a6c <SERCOM4_Handler+0x114>)
    198e:	8d00      	ldrh	r0, [r0, #40]	; 0x28
    1990:	b2c0      	uxtb	r0, r0
    1992:	18d3      	adds	r3, r2, r3
    1994:	2440      	movs	r4, #64	; 0x40
    1996:	5518      	strb	r0, [r3, r4]
		switch (rx_data_MHZ19_index) {
    1998:	5c53      	ldrb	r3, [r2, r1]
    199a:	b2db      	uxtb	r3, r3
    199c:	2b02      	cmp	r3, #2
    199e:	d024      	beq.n	19ea <SERCOM4_Handler+0x92>
    19a0:	2b09      	cmp	r3, #9
    19a2:	d031      	beq.n	1a08 <SERCOM4_Handler+0xb0>
    19a4:	2b01      	cmp	r3, #1
    19a6:	d015      	beq.n	19d4 <SERCOM4_Handler+0x7c>
						break;	
		}
		
	}
	
}
    19a8:	bd30      	pop	{r4, r5, pc}
			SERCOM4->USART.DATA.reg=MHZ19_tx_buffer[tx_data_MHZ19_index++];
    19aa:	213d      	movs	r1, #61	; 0x3d
    19ac:	5c53      	ldrb	r3, [r2, r1]
    19ae:	b2db      	uxtb	r3, r3
    19b0:	1c58      	adds	r0, r3, #1
    19b2:	b2c0      	uxtb	r0, r0
    19b4:	5450      	strb	r0, [r2, r1]
    19b6:	18d3      	adds	r3, r2, r3
    19b8:	2034      	movs	r0, #52	; 0x34
    19ba:	5c1b      	ldrb	r3, [r3, r0]
    19bc:	482b      	ldr	r0, [pc, #172]	; (1a6c <SERCOM4_Handler+0x114>)
    19be:	8503      	strh	r3, [r0, #40]	; 0x28
			if(tx_data_MHZ19_index>=9)
    19c0:	5c53      	ldrb	r3, [r2, r1]
    19c2:	b2db      	uxtb	r3, r3
    19c4:	2b08      	cmp	r3, #8
    19c6:	ddd6      	ble.n	1976 <SERCOM4_Handler+0x1e>
				tx_data_MHZ19_index=0;
    19c8:	0013      	movs	r3, r2
    19ca:	2200      	movs	r2, #0
    19cc:	545a      	strb	r2, [r3, r1]
				need_to_send_MHZ19=0;
    19ce:	390c      	subs	r1, #12
    19d0:	545a      	strb	r2, [r3, r1]
    19d2:	e7d0      	b.n	1976 <SERCOM4_Handler+0x1e>
						if(MHZ19_rx_buffer[0]!=0xff  ) 
    19d4:	333f      	adds	r3, #63	; 0x3f
    19d6:	5cd3      	ldrb	r3, [r2, r3]
    19d8:	b2db      	uxtb	r3, r3
    19da:	2bff      	cmp	r3, #255	; 0xff
    19dc:	d0e4      	beq.n	19a8 <SERCOM4_Handler+0x50>
							rx_data_MHZ19_index=0;
    19de:	0013      	movs	r3, r2
    19e0:	2200      	movs	r2, #0
    19e2:	545a      	strb	r2, [r3, r1]
							MHZ19_rx_buffer[0]=0;
    19e4:	3102      	adds	r1, #2
    19e6:	545a      	strb	r2, [r3, r1]
    19e8:	e7de      	b.n	19a8 <SERCOM4_Handler+0x50>
						if(MHZ19_rx_buffer[1]!=0x86  ) 
    19ea:	4b21      	ldr	r3, [pc, #132]	; (1a70 <SERCOM4_Handler+0x118>)
    19ec:	3340      	adds	r3, #64	; 0x40
    19ee:	785b      	ldrb	r3, [r3, #1]
    19f0:	b2db      	uxtb	r3, r3
    19f2:	2b86      	cmp	r3, #134	; 0x86
    19f4:	d0d8      	beq.n	19a8 <SERCOM4_Handler+0x50>
							rx_data_MHZ19_index=0;
    19f6:	4b1e      	ldr	r3, [pc, #120]	; (1a70 <SERCOM4_Handler+0x118>)
    19f8:	2200      	movs	r2, #0
    19fa:	213e      	movs	r1, #62	; 0x3e
    19fc:	545a      	strb	r2, [r3, r1]
							MHZ19_rx_buffer[0]=0;
    19fe:	3102      	adds	r1, #2
    1a00:	545a      	strb	r2, [r3, r1]
							MHZ19_rx_buffer[1]=0;
    1a02:	3340      	adds	r3, #64	; 0x40
    1a04:	705a      	strb	r2, [r3, #1]
    1a06:	e7cf      	b.n	19a8 <SERCOM4_Handler+0x50>
						rx_data_MHZ19_index=0;
    1a08:	4b19      	ldr	r3, [pc, #100]	; (1a70 <SERCOM4_Handler+0x118>)
    1a0a:	2200      	movs	r2, #0
    1a0c:	213e      	movs	r1, #62	; 0x3e
    1a0e:	545a      	strb	r2, [r3, r1]
						MHZ19_checksum=0;
    1a10:	310b      	adds	r1, #11
    1a12:	545a      	strb	r2, [r3, r1]
    1a14:	3201      	adds	r2, #1
							MHZ19_checksum+=MHZ19_rx_buffer[i];
    1a16:	0019      	movs	r1, r3
    1a18:	2540      	movs	r5, #64	; 0x40
    1a1a:	2049      	movs	r0, #73	; 0x49
    1a1c:	188b      	adds	r3, r1, r2
    1a1e:	5d5c      	ldrb	r4, [r3, r5]
    1a20:	5c0b      	ldrb	r3, [r1, r0]
    1a22:	191b      	adds	r3, r3, r4
    1a24:	b2db      	uxtb	r3, r3
    1a26:	540b      	strb	r3, [r1, r0]
    1a28:	3201      	adds	r2, #1
						for(uint8_t i=1;i<=7;i++)
    1a2a:	2a08      	cmp	r2, #8
    1a2c:	d1f6      	bne.n	1a1c <SERCOM4_Handler+0xc4>
						MHZ19_rx_buffer[0]=0;
    1a2e:	4b10      	ldr	r3, [pc, #64]	; (1a70 <SERCOM4_Handler+0x118>)
    1a30:	2200      	movs	r2, #0
    1a32:	2140      	movs	r1, #64	; 0x40
    1a34:	545a      	strb	r2, [r3, r1]
						MHZ19_rx_buffer[1]=0;
    1a36:	0018      	movs	r0, r3
    1a38:	3040      	adds	r0, #64	; 0x40
    1a3a:	7042      	strb	r2, [r0, #1]
						MHZ19_checksum=0xff-MHZ19_checksum;
    1a3c:	3249      	adds	r2, #73	; 0x49
    1a3e:	5c99      	ldrb	r1, [r3, r2]
    1a40:	43c9      	mvns	r1, r1
    1a42:	b2c9      	uxtb	r1, r1
    1a44:	5499      	strb	r1, [r3, r2]
						MHZ19_checksum+=1; //add 1
    1a46:	5c99      	ldrb	r1, [r3, r2]
    1a48:	3101      	adds	r1, #1
    1a4a:	b2c9      	uxtb	r1, r1
    1a4c:	5499      	strb	r1, [r3, r2]
						if(MHZ19_rx_buffer[8]==(uint8_t)(MHZ19_checksum)) //%256
    1a4e:	7a01      	ldrb	r1, [r0, #8]
    1a50:	5c9a      	ldrb	r2, [r3, r2]
    1a52:	b2c9      	uxtb	r1, r1
    1a54:	4291      	cmp	r1, r2
    1a56:	d1a7      	bne.n	19a8 <SERCOM4_Handler+0x50>
							co2_concentration=MHZ19_rx_buffer[3]+(MHZ19_rx_buffer[2]<<8);
    1a58:	0019      	movs	r1, r3
    1a5a:	78c3      	ldrb	r3, [r0, #3]
    1a5c:	7882      	ldrb	r2, [r0, #2]
    1a5e:	0212      	lsls	r2, r2, #8
    1a60:	189b      	adds	r3, r3, r2
    1a62:	b29b      	uxth	r3, r3
    1a64:	224a      	movs	r2, #74	; 0x4a
    1a66:	528b      	strh	r3, [r1, r2]
}
    1a68:	e79e      	b.n	19a8 <SERCOM4_Handler+0x50>
    1a6a:	46c0      	nop			; (mov r8, r8)
    1a6c:	42001800 	.word	0x42001800
    1a70:	20000600 	.word	0x20000600

00001a74 <_Z16i2c_TransmitDataPvh>:



//-----------------------------------------------------------------------------
bool i2c_TransmitData(void *const TXdata, uint8_t dataLen)
{
    1a74:	b570      	push	{r4, r5, r6, lr}
	uint8_t *data = (uint8_t *)TXdata;
	
	for (int i = 0; i <= dataLen; i++)
    1a76:	000d      	movs	r5, r1
    1a78:	2300      	movs	r3, #0
	{
		i2cTransmitBuffer[i] = data[i];
    1a7a:	4c21      	ldr	r4, [pc, #132]	; (1b00 <_Z16i2c_TransmitDataPvh+0x8c>)
    1a7c:	344c      	adds	r4, #76	; 0x4c
    1a7e:	5cc2      	ldrb	r2, [r0, r3]
    1a80:	551a      	strb	r2, [r3, r4]
	for (int i = 0; i <= dataLen; i++)
    1a82:	3301      	adds	r3, #1
    1a84:	42ab      	cmp	r3, r5
    1a86:	ddfa      	ble.n	1a7e <_Z16i2c_TransmitDataPvh+0xa>
	}
	
  I2C_SERCOM->I2CM.ADDR.reg = i2cTransmitBuffer[0] | I2C_TRANSFER_WRITE;
    1a88:	234c      	movs	r3, #76	; 0x4c
    1a8a:	4a1d      	ldr	r2, [pc, #116]	; (1b00 <_Z16i2c_TransmitDataPvh+0x8c>)
    1a8c:	5cd2      	ldrb	r2, [r2, r3]
    1a8e:	4b1d      	ldr	r3, [pc, #116]	; (1b04 <_Z16i2c_TransmitDataPvh+0x90>)
    1a90:	625a      	str	r2, [r3, #36]	; 0x24

  while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB));
    1a92:	0018      	movs	r0, r3
    1a94:	2201      	movs	r2, #1
    1a96:	7e03      	ldrb	r3, [r0, #24]
    1a98:	4213      	tst	r3, r2
    1a9a:	d0fc      	beq.n	1a96 <_Z16i2c_TransmitDataPvh+0x22>

  if (I2C_SERCOM->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_RXNACK)
    1a9c:	4b19      	ldr	r3, [pc, #100]	; (1b04 <_Z16i2c_TransmitDataPvh+0x90>)
    1a9e:	8b5b      	ldrh	r3, [r3, #26]
    1aa0:	075b      	lsls	r3, r3, #29
    1aa2:	d41d      	bmi.n	1ae0 <_Z16i2c_TransmitDataPvh+0x6c>
    I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    //dbg_log("I2C: RXNACK during write (address)\r\n");
    return false;
  }

  for (int i = 1; i <= dataLen; i++)
    1aa4:	2d00      	cmp	r5, #0
    1aa6:	dd13      	ble.n	1ad0 <_Z16i2c_TransmitDataPvh+0x5c>
    1aa8:	4c15      	ldr	r4, [pc, #84]	; (1b00 <_Z16i2c_TransmitDataPvh+0x8c>)
    1aaa:	0020      	movs	r0, r4
    1aac:	304d      	adds	r0, #77	; 0x4d
    1aae:	1864      	adds	r4, r4, r1
    1ab0:	344d      	adds	r4, #77	; 0x4d
  {
    I2C_SERCOM->I2CM.DATA.reg = i2cTransmitBuffer[i];
    1ab2:	4a14      	ldr	r2, [pc, #80]	; (1b04 <_Z16i2c_TransmitDataPvh+0x90>)
    1ab4:	2628      	movs	r6, #40	; 0x28

    while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB));
    1ab6:	2101      	movs	r1, #1

    if (I2C_SERCOM->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_RXNACK)
    1ab8:	2504      	movs	r5, #4
    I2C_SERCOM->I2CM.DATA.reg = i2cTransmitBuffer[i];
    1aba:	7803      	ldrb	r3, [r0, #0]
    1abc:	5593      	strb	r3, [r2, r6]
    while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB));
    1abe:	7e13      	ldrb	r3, [r2, #24]
    1ac0:	420b      	tst	r3, r1
    1ac2:	d0fc      	beq.n	1abe <_Z16i2c_TransmitDataPvh+0x4a>
    if (I2C_SERCOM->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_RXNACK)
    1ac4:	8b53      	ldrh	r3, [r2, #26]
    1ac6:	422b      	tst	r3, r5
    1ac8:	d112      	bne.n	1af0 <_Z16i2c_TransmitDataPvh+0x7c>
    1aca:	3001      	adds	r0, #1
  for (int i = 1; i <= dataLen; i++)
    1acc:	42a0      	cmp	r0, r4
    1ace:	d1f4      	bne.n	1aba <_Z16i2c_TransmitDataPvh+0x46>
      //dbg_log("I2C: RXNACK during write (data)\r\n");
      return false;
    }
  }

  I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    1ad0:	4a0c      	ldr	r2, [pc, #48]	; (1b04 <_Z16i2c_TransmitDataPvh+0x90>)
    1ad2:	6851      	ldr	r1, [r2, #4]
    1ad4:	23c0      	movs	r3, #192	; 0xc0
    1ad6:	029b      	lsls	r3, r3, #10
    1ad8:	430b      	orrs	r3, r1
    1ada:	6053      	str	r3, [r2, #4]

  return true;
    1adc:	2001      	movs	r0, #1
    1ade:	e006      	b.n	1aee <_Z16i2c_TransmitDataPvh+0x7a>
    I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    1ae0:	4a08      	ldr	r2, [pc, #32]	; (1b04 <_Z16i2c_TransmitDataPvh+0x90>)
    1ae2:	6851      	ldr	r1, [r2, #4]
    1ae4:	23c0      	movs	r3, #192	; 0xc0
    1ae6:	029b      	lsls	r3, r3, #10
    1ae8:	430b      	orrs	r3, r1
    1aea:	6053      	str	r3, [r2, #4]
    return false;
    1aec:	2000      	movs	r0, #0
}
    1aee:	bd70      	pop	{r4, r5, r6, pc}
      I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    1af0:	4a04      	ldr	r2, [pc, #16]	; (1b04 <_Z16i2c_TransmitDataPvh+0x90>)
    1af2:	6851      	ldr	r1, [r2, #4]
    1af4:	23c0      	movs	r3, #192	; 0xc0
    1af6:	029b      	lsls	r3, r3, #10
    1af8:	430b      	orrs	r3, r1
    1afa:	6053      	str	r3, [r2, #4]
      return false;
    1afc:	2000      	movs	r0, #0
    1afe:	e7f6      	b.n	1aee <_Z16i2c_TransmitDataPvh+0x7a>
    1b00:	20000600 	.word	0x20000600
    1b04:	42000800 	.word	0x42000800

00001b08 <_ZL9i2c_writehhPht>:
int8_t i2c_write(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg_data, uint16_t len) {
    1b08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b0a:	af00      	add	r7, sp, #0
    1b0c:	0006      	movs	r6, r0
    1b0e:	000d      	movs	r5, r1
    1b10:	0019      	movs	r1, r3
	uint8_t data[len+3];
    1b12:	3302      	adds	r3, #2
    1b14:	000c      	movs	r4, r1
    1b16:	340a      	adds	r4, #10
    1b18:	08e4      	lsrs	r4, r4, #3
    1b1a:	00e4      	lsls	r4, r4, #3
    1b1c:	4668      	mov	r0, sp
    1b1e:	1b00      	subs	r0, r0, r4
    1b20:	4685      	mov	sp, r0
	data[0]=dev_id;
    1b22:	7006      	strb	r6, [r0, #0]
	data[1]=reg_addr;
    1b24:	7045      	strb	r5, [r0, #1]
	for(uint8_t i=2;i< len+2;i++) {
    1b26:	2b02      	cmp	r3, #2
    1b28:	dd09      	ble.n	1b3e <_ZL9i2c_writehhPht+0x36>
    1b2a:	2502      	movs	r5, #2
    1b2c:	2402      	movs	r4, #2
		data[i]=	*reg_data;
    1b2e:	7816      	ldrb	r6, [r2, #0]
    1b30:	5546      	strb	r6, [r0, r5]
		reg_data++;
    1b32:	3201      	adds	r2, #1
	for(uint8_t i=2;i< len+2;i++) {
    1b34:	3401      	adds	r4, #1
    1b36:	b2e4      	uxtb	r4, r4
    1b38:	0025      	movs	r5, r4
    1b3a:	42a3      	cmp	r3, r4
    1b3c:	dcf7      	bgt.n	1b2e <_ZL9i2c_writehhPht+0x26>
	i2c_TransmitData(data, len+2); 
    1b3e:	3102      	adds	r1, #2
    1b40:	b2c9      	uxtb	r1, r1
    1b42:	4b02      	ldr	r3, [pc, #8]	; (1b4c <_ZL9i2c_writehhPht+0x44>)
    1b44:	4798      	blx	r3
}
    1b46:	2000      	movs	r0, #0
    1b48:	46bd      	mov	sp, r7
    1b4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1b4c:	00001a75 	.word	0x00001a75

00001b50 <_Z12i2c_ReadDataPvhh>:

//-----------------------------------------------------------------------------
bool i2c_ReadData(void *const TXdata,uint8_t dataLen, uint8_t bytesToRead)
{
    1b50:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b52:	46c6      	mov	lr, r8
    1b54:	b500      	push	{lr}
    1b56:	b082      	sub	sp, #8
    1b58:	9201      	str	r2, [sp, #4]
	
	uint8_t *data = (uint8_t *)TXdata;
	for (int i = 0; i <= dataLen; i++)
    1b5a:	000e      	movs	r6, r1
    1b5c:	2300      	movs	r3, #0
	{
		i2cTransmitBuffer[i] = data[i];
    1b5e:	4d43      	ldr	r5, [pc, #268]	; (1c6c <_Z12i2c_ReadDataPvhh+0x11c>)
    1b60:	354c      	adds	r5, #76	; 0x4c
    1b62:	5cc4      	ldrb	r4, [r0, r3]
    1b64:	555c      	strb	r4, [r3, r5]
	for (int i = 0; i <= dataLen; i++)
    1b66:	3301      	adds	r3, #1
    1b68:	42b3      	cmp	r3, r6
    1b6a:	ddfa      	ble.n	1b62 <_Z12i2c_ReadDataPvhh+0x12>
	}
	
	I2C_SERCOM->I2CM.ADDR.reg = i2cTransmitBuffer[0] | I2C_TRANSFER_WRITE;
    1b6c:	234c      	movs	r3, #76	; 0x4c
    1b6e:	483f      	ldr	r0, [pc, #252]	; (1c6c <_Z12i2c_ReadDataPvhh+0x11c>)
    1b70:	5cc5      	ldrb	r5, [r0, r3]
    1b72:	4b3f      	ldr	r3, [pc, #252]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1b74:	625d      	str	r5, [r3, #36]	; 0x24

  while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB));
    1b76:	001c      	movs	r4, r3
    1b78:	2001      	movs	r0, #1
    1b7a:	7e23      	ldrb	r3, [r4, #24]
    1b7c:	4203      	tst	r3, r0
    1b7e:	d0fc      	beq.n	1b7a <_Z12i2c_ReadDataPvhh+0x2a>

  if (I2C_SERCOM->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_RXNACK)
    1b80:	4b3b      	ldr	r3, [pc, #236]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1b82:	8b5b      	ldrh	r3, [r3, #26]
    1b84:	075b      	lsls	r3, r3, #29
    1b86:	d456      	bmi.n	1c36 <_Z12i2c_ReadDataPvhh+0xe6>
    I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    //dbg_log("I2C: RXNACK during write (address)\r\n");
    return false;
  }

  for (int i = 1; i <= dataLen; i++)
    1b88:	2e00      	cmp	r6, #0
    1b8a:	dd13      	ble.n	1bb4 <_Z12i2c_ReadDataPvhh+0x64>
    1b8c:	4e37      	ldr	r6, [pc, #220]	; (1c6c <_Z12i2c_ReadDataPvhh+0x11c>)
    1b8e:	0034      	movs	r4, r6
    1b90:	344d      	adds	r4, #77	; 0x4d
    1b92:	1876      	adds	r6, r6, r1
    1b94:	364d      	adds	r6, #77	; 0x4d
  {
	
    I2C_SERCOM->I2CM.DATA.reg = i2cTransmitBuffer[i];
    1b96:	4936      	ldr	r1, [pc, #216]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1b98:	2228      	movs	r2, #40	; 0x28

    while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB));
    1b9a:	2001      	movs	r0, #1

    if (I2C_SERCOM->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_RXNACK)
    1b9c:	2704      	movs	r7, #4
    I2C_SERCOM->I2CM.DATA.reg = i2cTransmitBuffer[i];
    1b9e:	7823      	ldrb	r3, [r4, #0]
    1ba0:	548b      	strb	r3, [r1, r2]
    while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB));
    1ba2:	7e0b      	ldrb	r3, [r1, #24]
    1ba4:	4203      	tst	r3, r0
    1ba6:	d0fc      	beq.n	1ba2 <_Z12i2c_ReadDataPvhh+0x52>
    if (I2C_SERCOM->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_RXNACK)
    1ba8:	8b4b      	ldrh	r3, [r1, #26]
    1baa:	423b      	tst	r3, r7
    1bac:	d14e      	bne.n	1c4c <_Z12i2c_ReadDataPvhh+0xfc>
    1bae:	3401      	adds	r4, #1
  for (int i = 1; i <= dataLen; i++)
    1bb0:	42b4      	cmp	r4, r6
    1bb2:	d1f4      	bne.n	1b9e <_Z12i2c_ReadDataPvhh+0x4e>
    }
  }
  //I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(1); //added
  //no stop condition here
	
  I2C_SERCOM->I2CM.ADDR.reg = i2cTransmitBuffer[0] | I2C_TRANSFER_READ;
    1bb4:	2301      	movs	r3, #1
    1bb6:	431d      	orrs	r5, r3
    1bb8:	4b2d      	ldr	r3, [pc, #180]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1bba:	625d      	str	r5, [r3, #36]	; 0x24

  while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB));
    1bbc:	0018      	movs	r0, r3
    1bbe:	2102      	movs	r1, #2
    1bc0:	7e03      	ldrb	r3, [r0, #24]
    1bc2:	420b      	tst	r3, r1
    1bc4:	d0fc      	beq.n	1bc0 <_Z12i2c_ReadDataPvhh+0x70>

  if (I2C_SERCOM->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_RXNACK)
    1bc6:	4b2a      	ldr	r3, [pc, #168]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1bc8:	8b5b      	ldrh	r3, [r3, #26]
    1bca:	075b      	lsls	r3, r3, #29
    1bcc:	d446      	bmi.n	1c5c <_Z12i2c_ReadDataPvhh+0x10c>
    I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    //dbg_log("I2C: RXNACK during read (address)\r\n");
    return false;
  }
  
   if (bytesToRead >=2){
    1bce:	9a01      	ldr	r2, [sp, #4]
    1bd0:	2a01      	cmp	r2, #1
    1bd2:	dd1a      	ble.n	1c0a <_Z12i2c_ReadDataPvhh+0xba>
  I2C_SERCOM->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT; //ack
    1bd4:	4926      	ldr	r1, [pc, #152]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1bd6:	684b      	ldr	r3, [r1, #4]
    1bd8:	4826      	ldr	r0, [pc, #152]	; (1c74 <_Z12i2c_ReadDataPvhh+0x124>)
    1bda:	4003      	ands	r3, r0
    1bdc:	604b      	str	r3, [r1, #4]

  for (int i = 0; i < bytesToRead-1; i++)
    1bde:	0013      	movs	r3, r2
    1be0:	3b01      	subs	r3, #1
    1be2:	2b00      	cmp	r3, #0
    1be4:	dd11      	ble.n	1c0a <_Z12i2c_ReadDataPvhh+0xba>
    1be6:	0013      	movs	r3, r2
    1be8:	3b01      	subs	r3, #1
    1bea:	4698      	mov	r8, r3
    1bec:	2400      	movs	r4, #0
  {
	 
    i2cReceiveBuffer[i] = I2C_SERCOM->I2CM.DATA.reg;
    1bee:	2228      	movs	r2, #40	; 0x28
    1bf0:	4f1e      	ldr	r7, [pc, #120]	; (1c6c <_Z12i2c_ReadDataPvhh+0x11c>)
    1bf2:	266c      	movs	r6, #108	; 0x6c
    while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB));
    1bf4:	2002      	movs	r0, #2
    i2cReceiveBuffer[i] = I2C_SERCOM->I2CM.DATA.reg;
    1bf6:	5c8b      	ldrb	r3, [r1, r2]
    1bf8:	b2db      	uxtb	r3, r3
    1bfa:	193d      	adds	r5, r7, r4
    1bfc:	55ab      	strb	r3, [r5, r6]
    while (0 == (I2C_SERCOM->I2CM.INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB));
    1bfe:	7e0b      	ldrb	r3, [r1, #24]
    1c00:	4203      	tst	r3, r0
    1c02:	d0fc      	beq.n	1bfe <_Z12i2c_ReadDataPvhh+0xae>
  for (int i = 0; i < bytesToRead-1; i++)
    1c04:	3401      	adds	r4, #1
    1c06:	45a0      	cmp	r8, r4
    1c08:	d1f5      	bne.n	1bf6 <_Z12i2c_ReadDataPvhh+0xa6>
  }
  }
    I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT; //send nack
    1c0a:	4b19      	ldr	r3, [pc, #100]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1c0c:	6858      	ldr	r0, [r3, #4]
    1c0e:	2180      	movs	r1, #128	; 0x80
    1c10:	02c9      	lsls	r1, r1, #11
    1c12:	4301      	orrs	r1, r0
    1c14:	6059      	str	r1, [r3, #4]
    I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);// stop condition
    1c16:	6858      	ldr	r0, [r3, #4]
    1c18:	21c0      	movs	r1, #192	; 0xc0
    1c1a:	0289      	lsls	r1, r1, #10
    1c1c:	4301      	orrs	r1, r0
    1c1e:	6059      	str	r1, [r3, #4]
    i2cReceiveBuffer[bytesToRead-1] = I2C_SERCOM->I2CM.DATA.reg; //final data byte
    1c20:	9a01      	ldr	r2, [sp, #4]
    1c22:	3a01      	subs	r2, #1
    1c24:	2128      	movs	r1, #40	; 0x28
    1c26:	5c59      	ldrb	r1, [r3, r1]
    1c28:	b2c9      	uxtb	r1, r1
    1c2a:	4b10      	ldr	r3, [pc, #64]	; (1c6c <_Z12i2c_ReadDataPvhh+0x11c>)
    1c2c:	189a      	adds	r2, r3, r2
    1c2e:	236c      	movs	r3, #108	; 0x6c
    1c30:	54d1      	strb	r1, [r2, r3]

  return true;
    1c32:	2001      	movs	r0, #1
    1c34:	e006      	b.n	1c44 <_Z12i2c_ReadDataPvhh+0xf4>
    I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    1c36:	4a0e      	ldr	r2, [pc, #56]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1c38:	6851      	ldr	r1, [r2, #4]
    1c3a:	23c0      	movs	r3, #192	; 0xc0
    1c3c:	029b      	lsls	r3, r3, #10
    1c3e:	430b      	orrs	r3, r1
    1c40:	6053      	str	r3, [r2, #4]
    return false;
    1c42:	2000      	movs	r0, #0
}
    1c44:	b002      	add	sp, #8
    1c46:	bc04      	pop	{r2}
    1c48:	4690      	mov	r8, r2
    1c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    1c4c:	4a08      	ldr	r2, [pc, #32]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1c4e:	6851      	ldr	r1, [r2, #4]
    1c50:	23c0      	movs	r3, #192	; 0xc0
    1c52:	029b      	lsls	r3, r3, #10
    1c54:	430b      	orrs	r3, r1
    1c56:	6053      	str	r3, [r2, #4]
      return false;
    1c58:	2000      	movs	r0, #0
    1c5a:	e7f3      	b.n	1c44 <_Z12i2c_ReadDataPvhh+0xf4>
    I2C_SERCOM->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    1c5c:	4a04      	ldr	r2, [pc, #16]	; (1c70 <_Z12i2c_ReadDataPvhh+0x120>)
    1c5e:	6851      	ldr	r1, [r2, #4]
    1c60:	23c0      	movs	r3, #192	; 0xc0
    1c62:	029b      	lsls	r3, r3, #10
    1c64:	430b      	orrs	r3, r1
    1c66:	6053      	str	r3, [r2, #4]
    return false;
    1c68:	2000      	movs	r0, #0
    1c6a:	e7eb      	b.n	1c44 <_Z12i2c_ReadDataPvhh+0xf4>
    1c6c:	20000600 	.word	0x20000600
    1c70:	42000800 	.word	0x42000800
    1c74:	fffbffff 	.word	0xfffbffff

00001c78 <_ZL8i2c_readhhPht>:
int8_t i2c_read(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg_data, uint16_t len) {
    1c78:	b530      	push	{r4, r5, lr}
    1c7a:	b083      	sub	sp, #12
    1c7c:	0014      	movs	r4, r2
    1c7e:	001d      	movs	r5, r3
	uint8_t data[2]={dev_id,reg_addr};
    1c80:	ab01      	add	r3, sp, #4
    1c82:	7018      	strb	r0, [r3, #0]
    1c84:	7059      	strb	r1, [r3, #1]
	i2c_ReadData(data, 1, len); //
    1c86:	b2ea      	uxtb	r2, r5
    1c88:	2101      	movs	r1, #1
    1c8a:	0018      	movs	r0, r3
    1c8c:	4b09      	ldr	r3, [pc, #36]	; (1cb4 <_ZL8i2c_readhhPht+0x3c>)
    1c8e:	4798      	blx	r3
for(uint8_t i=0;i< len;i++) {
    1c90:	1e2b      	subs	r3, r5, #0
    1c92:	dd0c      	ble.n	1cae <_ZL8i2c_readhhPht+0x36>
    1c94:	2100      	movs	r1, #0
    1c96:	2200      	movs	r2, #0
	*reg_data=i2cReceiveBuffer[i]; //copy data from receive buffer
    1c98:	4d07      	ldr	r5, [pc, #28]	; (1cb8 <_ZL8i2c_readhhPht+0x40>)
    1c9a:	206c      	movs	r0, #108	; 0x6c
    1c9c:	1869      	adds	r1, r5, r1
    1c9e:	5c09      	ldrb	r1, [r1, r0]
    1ca0:	7021      	strb	r1, [r4, #0]
	reg_data++;
    1ca2:	3401      	adds	r4, #1
for(uint8_t i=0;i< len;i++) {
    1ca4:	3201      	adds	r2, #1
    1ca6:	b2d2      	uxtb	r2, r2
    1ca8:	0011      	movs	r1, r2
    1caa:	429a      	cmp	r2, r3
    1cac:	dbf6      	blt.n	1c9c <_ZL8i2c_readhhPht+0x24>
}
    1cae:	2000      	movs	r0, #0
    1cb0:	b003      	add	sp, #12
    1cb2:	bd30      	pop	{r4, r5, pc}
    1cb4:	00001b51 	.word	0x00001b51
    1cb8:	20000600 	.word	0x20000600

00001cbc <bme680_get_regs>:

/*!
 * @brief This API reads the data from the given register address of the sensor.
 */
int8_t bme680_get_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, struct bme680_dev *dev)
{
    1cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    1cbe:	b083      	sub	sp, #12
    1cc0:	0005      	movs	r5, r0
    1cc2:	9101      	str	r1, [sp, #4]
    1cc4:	0017      	movs	r7, r2
    1cc6:	001e      	movs	r6, r3
	int8_t rslt;

	/* Check for null pointer in the device structure*/
	rslt = null_ptr_check(dev);
    1cc8:	0018      	movs	r0, r3
    1cca:	4b10      	ldr	r3, [pc, #64]	; (1d0c <bme680_get_regs+0x50>)
    1ccc:	4798      	blx	r3
    1cce:	1e04      	subs	r4, r0, #0
	if (rslt == BME680_OK) {
    1cd0:	d10c      	bne.n	1cec <bme680_get_regs+0x30>
		if (dev->intf == BME680_SPI_INTF) {
    1cd2:	78b3      	ldrb	r3, [r6, #2]
    1cd4:	2b00      	cmp	r3, #0
    1cd6:	d00c      	beq.n	1cf2 <bme680_get_regs+0x36>
			/* Set the memory page */
			rslt = set_mem_page(reg_addr, dev);
			if (rslt == BME680_OK)
				reg_addr = reg_addr | BME680_SPI_RD_MSK;
		}
		dev->com_rslt = dev->read(dev->dev_id, reg_addr, reg_data, len);
    1cd8:	7870      	ldrb	r0, [r6, #1]
    1cda:	003b      	movs	r3, r7
    1cdc:	9a01      	ldr	r2, [sp, #4]
    1cde:	0029      	movs	r1, r5
    1ce0:	6cb5      	ldr	r5, [r6, #72]	; 0x48
    1ce2:	47a8      	blx	r5
    1ce4:	2354      	movs	r3, #84	; 0x54
    1ce6:	54f0      	strb	r0, [r6, r3]
		if (dev->com_rslt != 0)
    1ce8:	2800      	cmp	r0, #0
    1cea:	d10b      	bne.n	1d04 <bme680_get_regs+0x48>
			rslt = BME680_E_COM_FAIL;
	}

	return rslt;
}
    1cec:	0020      	movs	r0, r4
    1cee:	b003      	add	sp, #12
    1cf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
			rslt = set_mem_page(reg_addr, dev);
    1cf2:	0031      	movs	r1, r6
    1cf4:	0028      	movs	r0, r5
    1cf6:	4b06      	ldr	r3, [pc, #24]	; (1d10 <bme680_get_regs+0x54>)
    1cf8:	4798      	blx	r3
    1cfa:	1e04      	subs	r4, r0, #0
			if (rslt == BME680_OK)
    1cfc:	d1ec      	bne.n	1cd8 <bme680_get_regs+0x1c>
				reg_addr = reg_addr | BME680_SPI_RD_MSK;
    1cfe:	2380      	movs	r3, #128	; 0x80
    1d00:	431d      	orrs	r5, r3
    1d02:	e7e9      	b.n	1cd8 <bme680_get_regs+0x1c>
			rslt = BME680_E_COM_FAIL;
    1d04:	2402      	movs	r4, #2
    1d06:	4264      	negs	r4, r4
    1d08:	e7f0      	b.n	1cec <bme680_get_regs+0x30>
    1d0a:	46c0      	nop			; (mov r8, r8)
    1d0c:	00000245 	.word	0x00000245
    1d10:	00000271 	.word	0x00000271

00001d14 <bme680_set_regs>:
/*!
 * @brief This API writes the given data to the register address
 * of the sensor.
 */
int8_t bme680_set_regs(const uint8_t *reg_addr, const uint8_t *reg_data, uint8_t len, struct bme680_dev *dev)
{
    1d14:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d16:	46de      	mov	lr, fp
    1d18:	4657      	mov	r7, sl
    1d1a:	464e      	mov	r6, r9
    1d1c:	4645      	mov	r5, r8
    1d1e:	b5e0      	push	{r5, r6, r7, lr}
    1d20:	b08d      	sub	sp, #52	; 0x34
    1d22:	4680      	mov	r8, r0
    1d24:	000f      	movs	r7, r1
    1d26:	0014      	movs	r4, r2
    1d28:	9201      	str	r2, [sp, #4]
    1d2a:	001e      	movs	r6, r3
	int8_t rslt;
	/* Length of the temporary buffer is 2*(length of register)*/
	uint8_t tmp_buff[BME680_TMP_BUFFER_LENGTH] = { 0 };
    1d2c:	2228      	movs	r2, #40	; 0x28
    1d2e:	2100      	movs	r1, #0
    1d30:	a802      	add	r0, sp, #8
    1d32:	4b29      	ldr	r3, [pc, #164]	; (1dd8 <bme680_set_regs+0xc4>)
    1d34:	4798      	blx	r3
	uint16_t index;

	/* Check for null pointer in the device structure*/
	rslt = null_ptr_check(dev);
    1d36:	0030      	movs	r0, r6
    1d38:	4b28      	ldr	r3, [pc, #160]	; (1ddc <bme680_set_regs+0xc8>)
    1d3a:	4798      	blx	r3
	if (rslt == BME680_OK) {
    1d3c:	2800      	cmp	r0, #0
    1d3e:	d12f      	bne.n	1da0 <bme680_set_regs+0x8c>
		if ((len > 0) && (len < BME680_TMP_BUFFER_LENGTH / 2)) {
    1d40:	0023      	movs	r3, r4
    1d42:	3b01      	subs	r3, #1
    1d44:	2b12      	cmp	r3, #18
    1d46:	d843      	bhi.n	1dd0 <bme680_set_regs+0xbc>
			/* Interleave the 2 arrays */
			for (index = 0; index < len; index++) {
    1d48:	46a1      	mov	r9, r4
    1d4a:	2c00      	cmp	r4, #0
    1d4c:	dd2f      	ble.n	1dae <bme680_set_regs+0x9a>
    1d4e:	2500      	movs	r5, #0
    1d50:	2400      	movs	r4, #0
				if (dev->intf == BME680_SPI_INTF) {
					/* Set the memory page */
					rslt = set_mem_page(reg_addr[index], dev);
					tmp_buff[(2 * index)] = reg_addr[index] & BME680_SPI_WR_MSK;
    1d52:	237f      	movs	r3, #127	; 0x7f
    1d54:	469b      	mov	fp, r3
    1d56:	e018      	b.n	1d8a <bme680_set_regs+0x76>
					rslt = set_mem_page(reg_addr[index], dev);
    1d58:	46a2      	mov	sl, r4
    1d5a:	44c2      	add	sl, r8
    1d5c:	4653      	mov	r3, sl
    1d5e:	7818      	ldrb	r0, [r3, #0]
    1d60:	0031      	movs	r1, r6
    1d62:	4b1f      	ldr	r3, [pc, #124]	; (1de0 <bme680_set_regs+0xcc>)
    1d64:	4798      	blx	r3
					tmp_buff[(2 * index)] = reg_addr[index] & BME680_SPI_WR_MSK;
    1d66:	006b      	lsls	r3, r5, #1
    1d68:	4652      	mov	r2, sl
    1d6a:	7812      	ldrb	r2, [r2, #0]
    1d6c:	4659      	mov	r1, fp
    1d6e:	400a      	ands	r2, r1
    1d70:	a902      	add	r1, sp, #8
    1d72:	545a      	strb	r2, [r3, r1]
				} else {
					tmp_buff[(2 * index)] = reg_addr[index];
				}
				tmp_buff[(2 * index) + 1] = reg_data[index];
    1d74:	006d      	lsls	r5, r5, #1
    1d76:	ab02      	add	r3, sp, #8
    1d78:	469c      	mov	ip, r3
    1d7a:	4465      	add	r5, ip
    1d7c:	5d3b      	ldrb	r3, [r7, r4]
    1d7e:	706b      	strb	r3, [r5, #1]
			for (index = 0; index < len; index++) {
    1d80:	3401      	adds	r4, #1
    1d82:	b2a4      	uxth	r4, r4
    1d84:	0025      	movs	r5, r4
    1d86:	454c      	cmp	r4, r9
    1d88:	da08      	bge.n	1d9c <bme680_set_regs+0x88>
				if (dev->intf == BME680_SPI_INTF) {
    1d8a:	78b3      	ldrb	r3, [r6, #2]
    1d8c:	2b00      	cmp	r3, #0
    1d8e:	d0e3      	beq.n	1d58 <bme680_set_regs+0x44>
					tmp_buff[(2 * index)] = reg_addr[index];
    1d90:	006b      	lsls	r3, r5, #1
    1d92:	4642      	mov	r2, r8
    1d94:	5d12      	ldrb	r2, [r2, r4]
    1d96:	a902      	add	r1, sp, #8
    1d98:	545a      	strb	r2, [r3, r1]
    1d9a:	e7eb      	b.n	1d74 <bme680_set_regs+0x60>
			}
			/* Write the interleaved array */
			if (rslt == BME680_OK) {
    1d9c:	2800      	cmp	r0, #0
    1d9e:	d006      	beq.n	1dae <bme680_set_regs+0x9a>
			rslt = BME680_E_INVALID_LENGTH;
		}
	}

	return rslt;
}
    1da0:	b00d      	add	sp, #52	; 0x34
    1da2:	bc3c      	pop	{r2, r3, r4, r5}
    1da4:	4690      	mov	r8, r2
    1da6:	4699      	mov	r9, r3
    1da8:	46a2      	mov	sl, r4
    1daa:	46ab      	mov	fp, r5
    1dac:	bdf0      	pop	{r4, r5, r6, r7, pc}
				dev->com_rslt = dev->write(dev->dev_id, tmp_buff[0], &tmp_buff[1], (2 * len) - 1);
    1dae:	9b01      	ldr	r3, [sp, #4]
    1db0:	005b      	lsls	r3, r3, #1
    1db2:	3b01      	subs	r3, #1
    1db4:	b29b      	uxth	r3, r3
    1db6:	aa02      	add	r2, sp, #8
    1db8:	7811      	ldrb	r1, [r2, #0]
    1dba:	7870      	ldrb	r0, [r6, #1]
    1dbc:	3201      	adds	r2, #1
    1dbe:	6cf4      	ldr	r4, [r6, #76]	; 0x4c
    1dc0:	47a0      	blx	r4
    1dc2:	2254      	movs	r2, #84	; 0x54
    1dc4:	54b0      	strb	r0, [r6, r2]
				if (dev->com_rslt != 0)
    1dc6:	2800      	cmp	r0, #0
    1dc8:	d0ea      	beq.n	1da0 <bme680_set_regs+0x8c>
					rslt = BME680_E_COM_FAIL;
    1dca:	2002      	movs	r0, #2
    1dcc:	4240      	negs	r0, r0
    1dce:	e7e7      	b.n	1da0 <bme680_set_regs+0x8c>
			rslt = BME680_E_INVALID_LENGTH;
    1dd0:	2004      	movs	r0, #4
    1dd2:	4240      	negs	r0, r0
    1dd4:	e7e4      	b.n	1da0 <bme680_set_regs+0x8c>
    1dd6:	46c0      	nop			; (mov r8, r8)
    1dd8:	00008c59 	.word	0x00008c59
    1ddc:	00000245 	.word	0x00000245
    1de0:	00000271 	.word	0x00000271

00001de4 <bme680_soft_reset>:

/*!
 * @brief This API performs the soft reset of the sensor.
 */
int8_t bme680_soft_reset(struct bme680_dev *dev)
{
    1de4:	b530      	push	{r4, r5, lr}
    1de6:	b083      	sub	sp, #12
    1de8:	0005      	movs	r5, r0
	int8_t rslt;
	uint8_t reg_addr = BME680_SOFT_RESET_ADDR;
    1dea:	22e0      	movs	r2, #224	; 0xe0
    1dec:	466b      	mov	r3, sp
    1dee:	71da      	strb	r2, [r3, #7]
	/* 0xb6 is the soft reset command */
	uint8_t soft_rst_cmd = BME680_SOFT_RESET_CMD;
    1df0:	3a2a      	subs	r2, #42	; 0x2a
    1df2:	466b      	mov	r3, sp
    1df4:	719a      	strb	r2, [r3, #6]

	/* Check for null pointer in the device structure*/
	rslt = null_ptr_check(dev);
    1df6:	4b12      	ldr	r3, [pc, #72]	; (1e40 <bme680_soft_reset+0x5c>)
    1df8:	4798      	blx	r3
    1dfa:	1e04      	subs	r4, r0, #0
	if (rslt == BME680_OK) {
    1dfc:	d11d      	bne.n	1e3a <bme680_soft_reset+0x56>
		if (dev->intf == BME680_SPI_INTF)
    1dfe:	78ab      	ldrb	r3, [r5, #2]
    1e00:	2b00      	cmp	r3, #0
    1e02:	d015      	beq.n	1e30 <bme680_soft_reset+0x4c>
			rslt = get_mem_page(dev);

		/* Reset the device */
		if (rslt == BME680_OK) {
			rslt = bme680_set_regs(&reg_addr, &soft_rst_cmd, 1, dev);
    1e04:	002b      	movs	r3, r5
    1e06:	2201      	movs	r2, #1
    1e08:	4669      	mov	r1, sp
    1e0a:	3106      	adds	r1, #6
    1e0c:	4668      	mov	r0, sp
    1e0e:	3007      	adds	r0, #7
    1e10:	4c0c      	ldr	r4, [pc, #48]	; (1e44 <bme680_soft_reset+0x60>)
    1e12:	47a0      	blx	r4
    1e14:	0004      	movs	r4, r0
			/* Wait for 5ms */
			dev->delay_ms(BME680_RESET_PERIOD);
    1e16:	200a      	movs	r0, #10
    1e18:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    1e1a:	4798      	blx	r3

			if (rslt == BME680_OK) {
    1e1c:	2c00      	cmp	r4, #0
    1e1e:	d10c      	bne.n	1e3a <bme680_soft_reset+0x56>
				/* After reset get the memory page */
				if (dev->intf == BME680_SPI_INTF)
    1e20:	78ab      	ldrb	r3, [r5, #2]
    1e22:	2b00      	cmp	r3, #0
    1e24:	d109      	bne.n	1e3a <bme680_soft_reset+0x56>
					rslt = get_mem_page(dev);
    1e26:	0028      	movs	r0, r5
    1e28:	4b07      	ldr	r3, [pc, #28]	; (1e48 <bme680_soft_reset+0x64>)
    1e2a:	4798      	blx	r3
    1e2c:	0004      	movs	r4, r0
    1e2e:	e004      	b.n	1e3a <bme680_soft_reset+0x56>
			rslt = get_mem_page(dev);
    1e30:	0028      	movs	r0, r5
    1e32:	4b05      	ldr	r3, [pc, #20]	; (1e48 <bme680_soft_reset+0x64>)
    1e34:	4798      	blx	r3
    1e36:	1e04      	subs	r4, r0, #0
		if (rslt == BME680_OK) {
    1e38:	d0e4      	beq.n	1e04 <bme680_soft_reset+0x20>
			}
		}
	}

	return rslt;
}
    1e3a:	0020      	movs	r0, r4
    1e3c:	b003      	add	sp, #12
    1e3e:	bd30      	pop	{r4, r5, pc}
    1e40:	00000245 	.word	0x00000245
    1e44:	00001d15 	.word	0x00001d15
    1e48:	000002e5 	.word	0x000002e5

00001e4c <bme680_init>:
{
    1e4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1e4e:	b08d      	sub	sp, #52	; 0x34
    1e50:	0004      	movs	r4, r0
	rslt = null_ptr_check(dev);
    1e52:	4b5f      	ldr	r3, [pc, #380]	; (1fd0 <bme680_init+0x184>)
    1e54:	4798      	blx	r3
	if (rslt == BME680_OK) {
    1e56:	2800      	cmp	r0, #0
    1e58:	d001      	beq.n	1e5e <bme680_init+0x12>
}
    1e5a:	b00d      	add	sp, #52	; 0x34
    1e5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		rslt = bme680_soft_reset(dev);
    1e5e:	0020      	movs	r0, r4
    1e60:	4b5c      	ldr	r3, [pc, #368]	; (1fd4 <bme680_init+0x188>)
    1e62:	4798      	blx	r3
		if (rslt == BME680_OK) {
    1e64:	2800      	cmp	r0, #0
    1e66:	d1f8      	bne.n	1e5a <bme680_init+0xe>
			rslt = bme680_get_regs(BME680_CHIP_ID_ADDR, &dev->chip_id, 1, dev);
    1e68:	0023      	movs	r3, r4
    1e6a:	2201      	movs	r2, #1
    1e6c:	0021      	movs	r1, r4
    1e6e:	30d0      	adds	r0, #208	; 0xd0
    1e70:	4d59      	ldr	r5, [pc, #356]	; (1fd8 <bme680_init+0x18c>)
    1e72:	47a8      	blx	r5
			if (rslt == BME680_OK) {
    1e74:	2800      	cmp	r0, #0
    1e76:	d1f0      	bne.n	1e5a <bme680_init+0xe>
				if (dev->chip_id == BME680_CHIP_ID) {
    1e78:	7823      	ldrb	r3, [r4, #0]
    1e7a:	2b61      	cmp	r3, #97	; 0x61
    1e7c:	d000      	beq.n	1e80 <bme680_init+0x34>
    1e7e:	e0a4      	b.n	1fca <bme680_init+0x17e>
 * @brief This internal API is used to read the calibrated data from the sensor.
 */
static int8_t get_calib_data(struct bme680_dev *dev)
{
	int8_t rslt;
	uint8_t coeff_array[BME680_COEFF_SIZE] = { 0 };
    1e80:	2229      	movs	r2, #41	; 0x29
    1e82:	2100      	movs	r1, #0
    1e84:	a801      	add	r0, sp, #4
    1e86:	4b55      	ldr	r3, [pc, #340]	; (1fdc <bme680_init+0x190>)
    1e88:	4798      	blx	r3
	uint8_t temp_var = 0; /* Temporary variable */
    1e8a:	2200      	movs	r2, #0
    1e8c:	466b      	mov	r3, sp
    1e8e:	70da      	strb	r2, [r3, #3]

	/* Check for null pointer in the device structure*/
	rslt = null_ptr_check(dev);
    1e90:	0020      	movs	r0, r4
    1e92:	4b4f      	ldr	r3, [pc, #316]	; (1fd0 <bme680_init+0x184>)
    1e94:	4798      	blx	r3
	if (rslt == BME680_OK) {
    1e96:	2800      	cmp	r0, #0
    1e98:	d1df      	bne.n	1e5a <bme680_init+0xe>
		rslt = bme680_get_regs(BME680_COEFF_ADDR1, coeff_array, BME680_COEFF_ADDR1_LEN, dev);
    1e9a:	0023      	movs	r3, r4
    1e9c:	2219      	movs	r2, #25
    1e9e:	a901      	add	r1, sp, #4
    1ea0:	3089      	adds	r0, #137	; 0x89
    1ea2:	4d4d      	ldr	r5, [pc, #308]	; (1fd8 <bme680_init+0x18c>)
    1ea4:	47a8      	blx	r5
		/* Append the second half in the same array */
		if (rslt == BME680_OK)
    1ea6:	2800      	cmp	r0, #0
    1ea8:	d064      	beq.n	1f74 <bme680_init+0x128>
			rslt = bme680_get_regs(BME680_COEFF_ADDR2, &coeff_array[BME680_COEFF_ADDR1_LEN]
			, BME680_COEFF_ADDR2_LEN, dev);

		/* Temperature related coefficients */
		dev->calib.par_t1 = (uint16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_T1_MSB_REG],
    1eaa:	ab01      	add	r3, sp, #4
    1eac:	2222      	movs	r2, #34	; 0x22
    1eae:	5c99      	ldrb	r1, [r3, r2]
    1eb0:	0209      	lsls	r1, r1, #8
    1eb2:	3a01      	subs	r2, #1
    1eb4:	5c9a      	ldrb	r2, [r3, r2]
    1eb6:	430a      	orrs	r2, r1
    1eb8:	82e2      	strh	r2, [r4, #22]
			coeff_array[BME680_T1_LSB_REG]));
		dev->calib.par_t2 = (int16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_T2_MSB_REG],
    1eba:	7899      	ldrb	r1, [r3, #2]
    1ebc:	0209      	lsls	r1, r1, #8
    1ebe:	785a      	ldrb	r2, [r3, #1]
    1ec0:	430a      	orrs	r2, r1
    1ec2:	8322      	strh	r2, [r4, #24]
			coeff_array[BME680_T2_LSB_REG]));
		dev->calib.par_t3 = (int8_t) (coeff_array[BME680_T3_REG]);
    1ec4:	78da      	ldrb	r2, [r3, #3]
    1ec6:	76a2      	strb	r2, [r4, #26]

		/* Pressure related coefficients */
		dev->calib.par_p1 = (uint16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_P1_MSB_REG],
    1ec8:	7999      	ldrb	r1, [r3, #6]
    1eca:	0209      	lsls	r1, r1, #8
    1ecc:	795a      	ldrb	r2, [r3, #5]
    1ece:	430a      	orrs	r2, r1
    1ed0:	83a2      	strh	r2, [r4, #28]
			coeff_array[BME680_P1_LSB_REG]));
		dev->calib.par_p2 = (int16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_P2_MSB_REG],
    1ed2:	7a19      	ldrb	r1, [r3, #8]
    1ed4:	0209      	lsls	r1, r1, #8
    1ed6:	79da      	ldrb	r2, [r3, #7]
    1ed8:	430a      	orrs	r2, r1
    1eda:	83e2      	strh	r2, [r4, #30]
			coeff_array[BME680_P2_LSB_REG]));
		dev->calib.par_p3 = (int8_t) coeff_array[BME680_P3_REG];
    1edc:	2720      	movs	r7, #32
    1ede:	7a5a      	ldrb	r2, [r3, #9]
    1ee0:	55e2      	strb	r2, [r4, r7]
		dev->calib.par_p4 = (int16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_P4_MSB_REG],
    1ee2:	7b19      	ldrb	r1, [r3, #12]
    1ee4:	0209      	lsls	r1, r1, #8
    1ee6:	7ada      	ldrb	r2, [r3, #11]
    1ee8:	430a      	orrs	r2, r1
    1eea:	8462      	strh	r2, [r4, #34]	; 0x22
			coeff_array[BME680_P4_LSB_REG]));
		dev->calib.par_p5 = (int16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_P5_MSB_REG],
    1eec:	7b99      	ldrb	r1, [r3, #14]
    1eee:	0209      	lsls	r1, r1, #8
    1ef0:	7b5a      	ldrb	r2, [r3, #13]
    1ef2:	430a      	orrs	r2, r1
    1ef4:	84a2      	strh	r2, [r4, #36]	; 0x24
			coeff_array[BME680_P5_LSB_REG]));
		dev->calib.par_p6 = (int8_t) (coeff_array[BME680_P6_REG]);
    1ef6:	2626      	movs	r6, #38	; 0x26
    1ef8:	7c1a      	ldrb	r2, [r3, #16]
    1efa:	55a2      	strb	r2, [r4, r6]
		dev->calib.par_p7 = (int8_t) (coeff_array[BME680_P7_REG]);
    1efc:	7bd9      	ldrb	r1, [r3, #15]
    1efe:	2227      	movs	r2, #39	; 0x27
    1f00:	54a1      	strb	r1, [r4, r2]
		dev->calib.par_p8 = (int16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_P8_MSB_REG],
    1f02:	7d19      	ldrb	r1, [r3, #20]
    1f04:	0209      	lsls	r1, r1, #8
    1f06:	7cda      	ldrb	r2, [r3, #19]
    1f08:	430a      	orrs	r2, r1
    1f0a:	8522      	strh	r2, [r4, #40]	; 0x28
			coeff_array[BME680_P8_LSB_REG]));
		dev->calib.par_p9 = (int16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_P9_MSB_REG],
    1f0c:	7d99      	ldrb	r1, [r3, #22]
    1f0e:	0209      	lsls	r1, r1, #8
    1f10:	7d5a      	ldrb	r2, [r3, #21]
    1f12:	430a      	orrs	r2, r1
    1f14:	8562      	strh	r2, [r4, #42]	; 0x2a
			coeff_array[BME680_P9_LSB_REG]));
		dev->calib.par_p10 = (uint8_t) (coeff_array[BME680_P10_REG]);
    1f16:	7dd9      	ldrb	r1, [r3, #23]
    1f18:	222c      	movs	r2, #44	; 0x2c
    1f1a:	54a1      	strb	r1, [r4, r2]

		/* Humidity related coefficients */
		dev->calib.par_h1 = (uint16_t) (((uint16_t) coeff_array[BME680_H1_MSB_REG] << BME680_HUM_REG_SHIFT_VAL)
			| (coeff_array[BME680_H1_LSB_REG] & BME680_BIT_H1_DATA_MSK));
    1f1c:	7e9d      	ldrb	r5, [r3, #26]
		dev->calib.par_h1 = (uint16_t) (((uint16_t) coeff_array[BME680_H1_MSB_REG] << BME680_HUM_REG_SHIFT_VAL)
    1f1e:	7eda      	ldrb	r2, [r3, #27]
    1f20:	0112      	lsls	r2, r2, #4
			| (coeff_array[BME680_H1_LSB_REG] & BME680_BIT_H1_DATA_MSK));
    1f22:	210f      	movs	r1, #15
    1f24:	4029      	ands	r1, r5
    1f26:	4311      	orrs	r1, r2
		dev->calib.par_h1 = (uint16_t) (((uint16_t) coeff_array[BME680_H1_MSB_REG] << BME680_HUM_REG_SHIFT_VAL)
    1f28:	8121      	strh	r1, [r4, #8]
		dev->calib.par_h2 = (uint16_t) (((uint16_t) coeff_array[BME680_H2_MSB_REG] << BME680_HUM_REG_SHIFT_VAL)
    1f2a:	7e5a      	ldrb	r2, [r3, #25]
    1f2c:	0112      	lsls	r2, r2, #4
			| ((coeff_array[BME680_H2_LSB_REG]) >> BME680_HUM_REG_SHIFT_VAL));
    1f2e:	112d      	asrs	r5, r5, #4
    1f30:	432a      	orrs	r2, r5
		dev->calib.par_h2 = (uint16_t) (((uint16_t) coeff_array[BME680_H2_MSB_REG] << BME680_HUM_REG_SHIFT_VAL)
    1f32:	8162      	strh	r2, [r4, #10]
		dev->calib.par_h3 = (int8_t) coeff_array[BME680_H3_REG];
    1f34:	7f1a      	ldrb	r2, [r3, #28]
    1f36:	7322      	strb	r2, [r4, #12]
		dev->calib.par_h4 = (int8_t) coeff_array[BME680_H4_REG];
    1f38:	7f5a      	ldrb	r2, [r3, #29]
    1f3a:	7362      	strb	r2, [r4, #13]
		dev->calib.par_h5 = (int8_t) coeff_array[BME680_H5_REG];
    1f3c:	7f9a      	ldrb	r2, [r3, #30]
    1f3e:	73a2      	strb	r2, [r4, #14]
		dev->calib.par_h6 = (uint8_t) coeff_array[BME680_H6_REG];
    1f40:	7fda      	ldrb	r2, [r3, #31]
    1f42:	73e2      	strb	r2, [r4, #15]
		dev->calib.par_h7 = (int8_t) coeff_array[BME680_H7_REG];
    1f44:	5dda      	ldrb	r2, [r3, r7]
    1f46:	7422      	strb	r2, [r4, #16]

		/* Gas heater related coefficients */
		dev->calib.par_gh1 = (int8_t) coeff_array[BME680_GH1_REG];
    1f48:	2225      	movs	r2, #37	; 0x25
    1f4a:	5c9a      	ldrb	r2, [r3, r2]
    1f4c:	7462      	strb	r2, [r4, #17]
		dev->calib.par_gh2 = (int16_t) (BME680_CONCAT_BYTES(coeff_array[BME680_GH2_MSB_REG],
    1f4e:	2224      	movs	r2, #36	; 0x24
    1f50:	5c99      	ldrb	r1, [r3, r2]
    1f52:	0209      	lsls	r1, r1, #8
    1f54:	3a01      	subs	r2, #1
    1f56:	5c9a      	ldrb	r2, [r3, r2]
    1f58:	430a      	orrs	r2, r1
    1f5a:	8262      	strh	r2, [r4, #18]
			coeff_array[BME680_GH2_LSB_REG]));
		dev->calib.par_gh3 = (int8_t) coeff_array[BME680_GH3_REG];
    1f5c:	5d9b      	ldrb	r3, [r3, r6]
    1f5e:	7523      	strb	r3, [r4, #20]

		/* Other coefficients */
		if (rslt == BME680_OK) {
    1f60:	2800      	cmp	r0, #0
    1f62:	d00f      	beq.n	1f84 <bme680_init+0x138>
				dev->calib.res_heat_val = (int8_t) temp_var;
				if (rslt == BME680_OK)
					rslt = bme680_get_regs(BME680_ADDR_RANGE_SW_ERR_ADDR, &temp_var, 1, dev);
			}
		}
		dev->calib.range_sw_err = ((int8_t) temp_var & (int8_t) BME680_RSERROR_MSK) / 16;
    1f64:	466b      	mov	r3, sp
    1f66:	3303      	adds	r3, #3
    1f68:	781b      	ldrb	r3, [r3, #0]
    1f6a:	b25b      	sxtb	r3, r3
    1f6c:	111b      	asrs	r3, r3, #4
    1f6e:	2236      	movs	r2, #54	; 0x36
    1f70:	54a3      	strb	r3, [r4, r2]
    1f72:	e772      	b.n	1e5a <bme680_init+0xe>
			, BME680_COEFF_ADDR2_LEN, dev);
    1f74:	0023      	movs	r3, r4
    1f76:	2210      	movs	r2, #16
    1f78:	211d      	movs	r1, #29
    1f7a:	4469      	add	r1, sp
    1f7c:	30e1      	adds	r0, #225	; 0xe1
    1f7e:	4d16      	ldr	r5, [pc, #88]	; (1fd8 <bme680_init+0x18c>)
    1f80:	47a8      	blx	r5
    1f82:	e792      	b.n	1eaa <bme680_init+0x5e>
			rslt = bme680_get_regs(BME680_ADDR_RES_HEAT_RANGE_ADDR, &temp_var, 1, dev);
    1f84:	466b      	mov	r3, sp
    1f86:	1cdd      	adds	r5, r3, #3
    1f88:	0023      	movs	r3, r4
    1f8a:	2201      	movs	r2, #1
    1f8c:	0029      	movs	r1, r5
    1f8e:	3002      	adds	r0, #2
    1f90:	4e11      	ldr	r6, [pc, #68]	; (1fd8 <bme680_init+0x18c>)
    1f92:	47b0      	blx	r6
			dev->calib.res_heat_range = ((temp_var & BME680_RHRANGE_MSK) / 16);
    1f94:	782b      	ldrb	r3, [r5, #0]
    1f96:	069b      	lsls	r3, r3, #26
    1f98:	0f9b      	lsrs	r3, r3, #30
    1f9a:	2234      	movs	r2, #52	; 0x34
    1f9c:	54a3      	strb	r3, [r4, r2]
			if (rslt == BME680_OK) {
    1f9e:	2800      	cmp	r0, #0
    1fa0:	d1e0      	bne.n	1f64 <bme680_init+0x118>
				rslt = bme680_get_regs(BME680_ADDR_RES_HEAT_VAL_ADDR, &temp_var, 1, dev);
    1fa2:	466b      	mov	r3, sp
    1fa4:	1cdd      	adds	r5, r3, #3
    1fa6:	0023      	movs	r3, r4
    1fa8:	3a33      	subs	r2, #51	; 0x33
    1faa:	0029      	movs	r1, r5
    1fac:	4e0a      	ldr	r6, [pc, #40]	; (1fd8 <bme680_init+0x18c>)
    1fae:	47b0      	blx	r6
				dev->calib.res_heat_val = (int8_t) temp_var;
    1fb0:	782a      	ldrb	r2, [r5, #0]
    1fb2:	2335      	movs	r3, #53	; 0x35
    1fb4:	54e2      	strb	r2, [r4, r3]
				if (rslt == BME680_OK)
    1fb6:	2800      	cmp	r0, #0
    1fb8:	d1d4      	bne.n	1f64 <bme680_init+0x118>
					rslt = bme680_get_regs(BME680_ADDR_RANGE_SW_ERR_ADDR, &temp_var, 1, dev);
    1fba:	0023      	movs	r3, r4
    1fbc:	2201      	movs	r2, #1
    1fbe:	4669      	mov	r1, sp
    1fc0:	3103      	adds	r1, #3
    1fc2:	3004      	adds	r0, #4
    1fc4:	4d04      	ldr	r5, [pc, #16]	; (1fd8 <bme680_init+0x18c>)
    1fc6:	47a8      	blx	r5
    1fc8:	e7cc      	b.n	1f64 <bme680_init+0x118>
					rslt = BME680_E_DEV_NOT_FOUND;
    1fca:	2003      	movs	r0, #3
    1fcc:	4240      	negs	r0, r0
    1fce:	e744      	b.n	1e5a <bme680_init+0xe>
    1fd0:	00000245 	.word	0x00000245
    1fd4:	00001de5 	.word	0x00001de5
    1fd8:	00001cbd 	.word	0x00001cbd
    1fdc:	00008c59 	.word	0x00008c59

00001fe0 <bme680_set_sensor_mode>:
{
    1fe0:	b5f0      	push	{r4, r5, r6, r7, lr}
    1fe2:	46c6      	mov	lr, r8
    1fe4:	b500      	push	{lr}
    1fe6:	b082      	sub	sp, #8
    1fe8:	0005      	movs	r5, r0
	uint8_t reg_addr = BME680_CONF_T_P_MODE_ADDR;
    1fea:	2274      	movs	r2, #116	; 0x74
    1fec:	466b      	mov	r3, sp
    1fee:	719a      	strb	r2, [r3, #6]
	rslt = null_ptr_check(dev);
    1ff0:	4b26      	ldr	r3, [pc, #152]	; (208c <STACK_SIZE+0x8c>)
    1ff2:	4798      	blx	r3
    1ff4:	2700      	movs	r7, #0
	if (rslt == BME680_OK) {
    1ff6:	2800      	cmp	r0, #0
    1ff8:	d123      	bne.n	2042 <STACK_SIZE+0x42>
			rslt = bme680_get_regs(BME680_CONF_T_P_MODE_ADDR, &tmp_pow_mode, 1, dev);
    1ffa:	466b      	mov	r3, sp
    1ffc:	1ddc      	adds	r4, r3, #7
    1ffe:	4b24      	ldr	r3, [pc, #144]	; (2090 <STACK_SIZE+0x90>)
    2000:	4698      	mov	r8, r3
    2002:	e00f      	b.n	2024 <STACK_SIZE+0x24>
					tmp_pow_mode = tmp_pow_mode & (~BME680_MODE_MSK); /* Set to sleep */
    2004:	2203      	movs	r2, #3
    2006:	4393      	bics	r3, r2
    2008:	7023      	strb	r3, [r4, #0]
					rslt = bme680_set_regs(&reg_addr, &tmp_pow_mode, 1, dev);
    200a:	002b      	movs	r3, r5
    200c:	3a02      	subs	r2, #2
    200e:	0021      	movs	r1, r4
    2010:	4668      	mov	r0, sp
    2012:	3006      	adds	r0, #6
    2014:	4e1f      	ldr	r6, [pc, #124]	; (2094 <STACK_SIZE+0x94>)
    2016:	47b0      	blx	r6
					dev->delay_ms(BME680_POLL_PERIOD_MS);
    2018:	200a      	movs	r0, #10
    201a:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    201c:	4798      	blx	r3
    201e:	e001      	b.n	2024 <STACK_SIZE+0x24>
		} while (pow_mode != BME680_SLEEP_MODE);
    2020:	2f00      	cmp	r7, #0
    2022:	d012      	beq.n	204a <STACK_SIZE+0x4a>
			rslt = bme680_get_regs(BME680_CONF_T_P_MODE_ADDR, &tmp_pow_mode, 1, dev);
    2024:	002b      	movs	r3, r5
    2026:	2201      	movs	r2, #1
    2028:	0021      	movs	r1, r4
    202a:	2074      	movs	r0, #116	; 0x74
    202c:	47c0      	blx	r8
			if (rslt == BME680_OK) {
    202e:	2800      	cmp	r0, #0
    2030:	d1f6      	bne.n	2020 <STACK_SIZE+0x20>
				pow_mode = (tmp_pow_mode & BME680_MODE_MSK);
    2032:	7823      	ldrb	r3, [r4, #0]
    2034:	2703      	movs	r7, #3
    2036:	401f      	ands	r7, r3
				if (pow_mode != BME680_SLEEP_MODE) {
    2038:	d1e4      	bne.n	2004 <STACK_SIZE+0x4>
		if (dev->power_mode != BME680_SLEEP_MODE) {
    203a:	2344      	movs	r3, #68	; 0x44
    203c:	5ceb      	ldrb	r3, [r5, r3]
    203e:	2b00      	cmp	r3, #0
    2040:	d112      	bne.n	2068 <STACK_SIZE+0x68>
}
    2042:	b002      	add	sp, #8
    2044:	bc04      	pop	{r2}
    2046:	4690      	mov	r8, r2
    2048:	bdf0      	pop	{r4, r5, r6, r7, pc}
		if (dev->power_mode != BME680_SLEEP_MODE) {
    204a:	2344      	movs	r3, #68	; 0x44
    204c:	5cea      	ldrb	r2, [r5, r3]
    204e:	2a00      	cmp	r2, #0
    2050:	d0f7      	beq.n	2042 <STACK_SIZE+0x42>
			tmp_pow_mode = (tmp_pow_mode & ~BME680_MODE_MSK) | (dev->power_mode & BME680_MODE_MSK);
    2052:	466b      	mov	r3, sp
    2054:	1dd9      	adds	r1, r3, #7
    2056:	79db      	ldrb	r3, [r3, #7]
    2058:	2403      	movs	r4, #3
    205a:	43a3      	bics	r3, r4
    205c:	4022      	ands	r2, r4
    205e:	4313      	orrs	r3, r2
    2060:	700b      	strb	r3, [r1, #0]
			if (rslt == BME680_OK)
    2062:	2800      	cmp	r0, #0
    2064:	d1ed      	bne.n	2042 <STACK_SIZE+0x42>
    2066:	e007      	b.n	2078 <STACK_SIZE+0x78>
			tmp_pow_mode = (tmp_pow_mode & ~BME680_MODE_MSK) | (dev->power_mode & BME680_MODE_MSK);
    2068:	466a      	mov	r2, sp
    206a:	1dd0      	adds	r0, r2, #7
    206c:	79d2      	ldrb	r2, [r2, #7]
    206e:	2103      	movs	r1, #3
    2070:	438a      	bics	r2, r1
    2072:	400b      	ands	r3, r1
    2074:	4313      	orrs	r3, r2
    2076:	7003      	strb	r3, [r0, #0]
				rslt = bme680_set_regs(&reg_addr, &tmp_pow_mode, 1, dev);
    2078:	002b      	movs	r3, r5
    207a:	2201      	movs	r2, #1
    207c:	4669      	mov	r1, sp
    207e:	3107      	adds	r1, #7
    2080:	4668      	mov	r0, sp
    2082:	3006      	adds	r0, #6
    2084:	4c03      	ldr	r4, [pc, #12]	; (2094 <STACK_SIZE+0x94>)
    2086:	47a0      	blx	r4
    2088:	e7db      	b.n	2042 <STACK_SIZE+0x42>
    208a:	46c0      	nop			; (mov r8, r8)
    208c:	00000245 	.word	0x00000245
    2090:	00001cbd 	.word	0x00001cbd
    2094:	00001d15 	.word	0x00001d15

00002098 <bme680_set_sensor_settings>:
{
    2098:	b5f0      	push	{r4, r5, r6, r7, lr}
    209a:	46ce      	mov	lr, r9
    209c:	4647      	mov	r7, r8
    209e:	b580      	push	{r7, lr}
    20a0:	b087      	sub	sp, #28
    20a2:	0006      	movs	r6, r0
    20a4:	000d      	movs	r5, r1
	uint8_t data = 0;
    20a6:	2200      	movs	r2, #0
    20a8:	2317      	movs	r3, #23
    20aa:	446b      	add	r3, sp
    20ac:	701a      	strb	r2, [r3, #0]
	uint8_t reg_array[BME680_REG_BUFFER_LENGTH] = { 0 };
    20ae:	3206      	adds	r2, #6
    20b0:	2100      	movs	r1, #0
    20b2:	a804      	add	r0, sp, #16
    20b4:	4ccd      	ldr	r4, [pc, #820]	; (23ec <bme680_set_sensor_settings+0x354>)
    20b6:	47a0      	blx	r4
	uint8_t data_array[BME680_REG_BUFFER_LENGTH] = { 0 };
    20b8:	2206      	movs	r2, #6
    20ba:	2100      	movs	r1, #0
    20bc:	a802      	add	r0, sp, #8
    20be:	47a0      	blx	r4
	rslt = null_ptr_check(dev);
    20c0:	0028      	movs	r0, r5
    20c2:	4bcb      	ldr	r3, [pc, #812]	; (23f0 <bme680_set_sensor_settings+0x358>)
    20c4:	4798      	blx	r3
	if (rslt == BME680_OK) {
    20c6:	2800      	cmp	r0, #0
    20c8:	d121      	bne.n	210e <bme680_set_sensor_settings+0x76>
	uint8_t intended_power_mode = dev->power_mode; /* Save intended power mode */
    20ca:	2344      	movs	r3, #68	; 0x44
    20cc:	5ceb      	ldrb	r3, [r5, r3]
    20ce:	4699      	mov	r9, r3
		if (desired_settings & BME680_GAS_MEAS_SEL)
    20d0:	0733      	lsls	r3, r6, #28
    20d2:	d421      	bmi.n	2118 <bme680_set_sensor_settings+0x80>
		dev->power_mode = BME680_SLEEP_MODE;
    20d4:	2200      	movs	r2, #0
    20d6:	2344      	movs	r3, #68	; 0x44
    20d8:	54ea      	strb	r2, [r5, r3]
			rslt = bme680_set_sensor_mode(dev);
    20da:	0028      	movs	r0, r5
    20dc:	4bc5      	ldr	r3, [pc, #788]	; (23f4 <bme680_set_sensor_settings+0x35c>)
    20de:	4798      	blx	r3
	uint8_t count = 0;
    20e0:	2400      	movs	r4, #0
		if (desired_settings & BME680_FILTER_SEL) {
    20e2:	06f3      	lsls	r3, r6, #27
    20e4:	d500      	bpl.n	20e8 <bme680_set_sensor_settings+0x50>
    20e6:	e094      	b.n	2212 <bme680_set_sensor_settings+0x17a>
		if (desired_settings & BME680_HCNTRL_SEL) {
    20e8:	06b3      	lsls	r3, r6, #26
    20ea:	d500      	bpl.n	20ee <bme680_set_sensor_settings+0x56>
    20ec:	e0b5      	b.n	225a <bme680_set_sensor_settings+0x1c2>
		if (desired_settings & (BME680_OST_SEL | BME680_OSP_SEL)) {
    20ee:	07b3      	lsls	r3, r6, #30
    20f0:	d000      	beq.n	20f4 <bme680_set_sensor_settings+0x5c>
    20f2:	e0d8      	b.n	22a6 <bme680_set_sensor_settings+0x20e>
		if (desired_settings & BME680_OSH_SEL) {
    20f4:	0773      	lsls	r3, r6, #29
    20f6:	d500      	bpl.n	20fa <bme680_set_sensor_settings+0x62>
    20f8:	e10b      	b.n	2312 <bme680_set_sensor_settings+0x27a>
		if (desired_settings & (BME680_RUN_GAS_SEL | BME680_NBCONV_SEL)) {
    20fa:	23c0      	movs	r3, #192	; 0xc0
    20fc:	4233      	tst	r3, r6
    20fe:	d000      	beq.n	2102 <bme680_set_sensor_settings+0x6a>
    2100:	e12d      	b.n	235e <bme680_set_sensor_settings+0x2c6>
		if (rslt == BME680_OK)
    2102:	2800      	cmp	r0, #0
    2104:	d100      	bne.n	2108 <bme680_set_sensor_settings+0x70>
    2106:	e16a      	b.n	23de <bme680_set_sensor_settings+0x346>
		dev->power_mode = intended_power_mode;
    2108:	2344      	movs	r3, #68	; 0x44
    210a:	464a      	mov	r2, r9
    210c:	54ea      	strb	r2, [r5, r3]
}
    210e:	b007      	add	sp, #28
    2110:	bc0c      	pop	{r2, r3}
    2112:	4690      	mov	r8, r2
    2114:	4699      	mov	r9, r3
    2116:	bdf0      	pop	{r4, r5, r6, r7, pc}

	/* Check for null pointer in the device structure*/
	rslt = null_ptr_check(dev);
	if (rslt == BME680_OK) {

		uint8_t reg_addr[2] = {0};
    2118:	2300      	movs	r3, #0
    211a:	466a      	mov	r2, sp
    211c:	8013      	strh	r3, [r2, #0]
		uint8_t reg_data[2] = {0};
    211e:	aa01      	add	r2, sp, #4
    2120:	8013      	strh	r3, [r2, #0]

		if (dev->power_mode == BME680_FORCED_MODE) {
    2122:	464b      	mov	r3, r9
    2124:	2b01      	cmp	r3, #1
    2126:	d004      	beq.n	2132 <bme680_set_sensor_settings+0x9a>
		dev->power_mode = BME680_SLEEP_MODE;
    2128:	2200      	movs	r2, #0
    212a:	2344      	movs	r3, #68	; 0x44
    212c:	54ea      	strb	r2, [r5, r3]
			reg_data[0] = calc_heater_res(dev->gas_sett.heatr_temp, dev);
			reg_addr[1] = BME680_GAS_WAIT0_ADDR;
			reg_data[1] = calc_heater_dur(dev->gas_sett.heatr_dur);
			dev->gas_sett.nb_conv = 0;
		} else {
			rslt = BME680_W_DEFINE_PWR_MODE;
    212e:	2001      	movs	r0, #1
    2130:	e7d6      	b.n	20e0 <bme680_set_sensor_settings+0x48>
			reg_addr[0] = BME680_RES_HEAT0_ADDR;
    2132:	3359      	adds	r3, #89	; 0x59
    2134:	466a      	mov	r2, sp
    2136:	7013      	strb	r3, [r2, #0]
			reg_data[0] = calc_heater_res(dev->gas_sett.heatr_temp, dev);
    2138:	3b1a      	subs	r3, #26
    213a:	5ae8      	ldrh	r0, [r5, r3]
	int32_t var3;
	int32_t var4;
	int32_t var5;
	int32_t heatr_res_x100;

	if (temp > 400) /* Cap temperature */
    213c:	3351      	adds	r3, #81	; 0x51
    213e:	33ff      	adds	r3, #255	; 0xff
    2140:	4298      	cmp	r0, r3
    2142:	dd00      	ble.n	2146 <bme680_set_sensor_settings+0xae>
		temp = 400;
    2144:	0018      	movs	r0, r3

	var1 = (((int32_t) dev->amb_temp * dev->calib.par_gh3) / 1000) * 256;
	var2 = (dev->calib.par_gh1 + 784) * (((((dev->calib.par_gh2 + 154009) * temp * 5) / 100) + 3276800) / 10);
    2146:	2212      	movs	r2, #18
    2148:	5eab      	ldrsh	r3, [r5, r2]
    214a:	4aab      	ldr	r2, [pc, #684]	; (23f8 <bme680_set_sensor_settings+0x360>)
    214c:	4694      	mov	ip, r2
    214e:	4463      	add	r3, ip
    2150:	4358      	muls	r0, r3
    2152:	0083      	lsls	r3, r0, #2
    2154:	1818      	adds	r0, r3, r0
    2156:	4ca9      	ldr	r4, [pc, #676]	; (23fc <bme680_set_sensor_settings+0x364>)
    2158:	2164      	movs	r1, #100	; 0x64
    215a:	47a0      	blx	r4
    215c:	23c8      	movs	r3, #200	; 0xc8
    215e:	039b      	lsls	r3, r3, #14
    2160:	469c      	mov	ip, r3
    2162:	4460      	add	r0, ip
    2164:	210a      	movs	r1, #10
    2166:	47a0      	blx	r4
    2168:	2311      	movs	r3, #17
    216a:	56eb      	ldrsb	r3, [r5, r3]
    216c:	22c4      	movs	r2, #196	; 0xc4
    216e:	0092      	lsls	r2, r2, #2
    2170:	4694      	mov	ip, r2
    2172:	4463      	add	r3, ip
    2174:	4358      	muls	r0, r3
	var3 = var1 + (var2 / 2);
    2176:	0fc3      	lsrs	r3, r0, #31
    2178:	1818      	adds	r0, r3, r0
    217a:	1043      	asrs	r3, r0, #1
    217c:	4698      	mov	r8, r3
	var1 = (((int32_t) dev->amb_temp * dev->calib.par_gh3) / 1000) * 256;
    217e:	2304      	movs	r3, #4
    2180:	56eb      	ldrsb	r3, [r5, r3]
    2182:	2014      	movs	r0, #20
    2184:	5628      	ldrsb	r0, [r5, r0]
    2186:	4358      	muls	r0, r3
    2188:	21fa      	movs	r1, #250	; 0xfa
    218a:	0089      	lsls	r1, r1, #2
    218c:	47a0      	blx	r4
    218e:	0200      	lsls	r0, r0, #8
	var3 = var1 + (var2 / 2);
    2190:	4440      	add	r0, r8
	var4 = (var3 / (dev->calib.res_heat_range + 4));
    2192:	2334      	movs	r3, #52	; 0x34
    2194:	5ce9      	ldrb	r1, [r5, r3]
    2196:	3104      	adds	r1, #4
    2198:	47a0      	blx	r4
	var5 = (131 * dev->calib.res_heat_val) + 65536;
    219a:	2335      	movs	r3, #53	; 0x35
    219c:	56eb      	ldrsb	r3, [r5, r3]
    219e:	0199      	lsls	r1, r3, #6
    21a0:	18c9      	adds	r1, r1, r3
    21a2:	0049      	lsls	r1, r1, #1
    21a4:	18c9      	adds	r1, r1, r3
    21a6:	2380      	movs	r3, #128	; 0x80
    21a8:	025b      	lsls	r3, r3, #9
    21aa:	469c      	mov	ip, r3
    21ac:	4461      	add	r1, ip
	heatr_res_x100 = (int32_t) (((var4 / var5) - 250) * 34);
    21ae:	47a0      	blx	r4
    21b0:	0003      	movs	r3, r0
    21b2:	3bfa      	subs	r3, #250	; 0xfa
    21b4:	0118      	lsls	r0, r3, #4
    21b6:	18c0      	adds	r0, r0, r3
    21b8:	0040      	lsls	r0, r0, #1
	heatr_res = (uint8_t) ((heatr_res_x100 + 50) / 100);
    21ba:	3032      	adds	r0, #50	; 0x32
    21bc:	2164      	movs	r1, #100	; 0x64
    21be:	47a0      	blx	r4
			reg_data[0] = calc_heater_res(dev->gas_sett.heatr_temp, dev);
    21c0:	ab01      	add	r3, sp, #4
    21c2:	7018      	strb	r0, [r3, #0]
			reg_addr[1] = BME680_GAS_WAIT0_ADDR;
    21c4:	2364      	movs	r3, #100	; 0x64
    21c6:	466a      	mov	r2, sp
    21c8:	7053      	strb	r3, [r2, #1]
			reg_data[1] = calc_heater_dur(dev->gas_sett.heatr_dur);
    21ca:	3b22      	subs	r3, #34	; 0x22
    21cc:	5aea      	ldrh	r2, [r5, r3]
static uint8_t calc_heater_dur(uint16_t dur)
{
	uint8_t factor = 0;
	uint8_t durval;

	if (dur >= 0xfc0) {
    21ce:	498c      	ldr	r1, [pc, #560]	; (2400 <bme680_set_sensor_settings+0x368>)
		durval = 0xff; /* Max duration*/
    21d0:	33bd      	adds	r3, #189	; 0xbd
	if (dur >= 0xfc0) {
    21d2:	428a      	cmp	r2, r1
    21d4:	dd0f      	ble.n	21f6 <bme680_set_sensor_settings+0x15e>
			reg_data[1] = calc_heater_dur(dev->gas_sett.heatr_dur);
    21d6:	a901      	add	r1, sp, #4
    21d8:	704b      	strb	r3, [r1, #1]
			dev->gas_sett.nb_conv = 0;
    21da:	2400      	movs	r4, #0
    21dc:	233c      	movs	r3, #60	; 0x3c
    21de:	54ec      	strb	r4, [r5, r3]
			rslt = bme680_set_regs(reg_addr, reg_data, 2, dev);
    21e0:	002b      	movs	r3, r5
    21e2:	2202      	movs	r2, #2
    21e4:	4668      	mov	r0, sp
    21e6:	4f87      	ldr	r7, [pc, #540]	; (2404 <bme680_set_sensor_settings+0x36c>)
    21e8:	47b8      	blx	r7
		dev->power_mode = BME680_SLEEP_MODE;
    21ea:	2344      	movs	r3, #68	; 0x44
    21ec:	54ec      	strb	r4, [r5, r3]
		if (rslt == BME680_OK)
    21ee:	2800      	cmp	r0, #0
    21f0:	d000      	beq.n	21f4 <bme680_set_sensor_settings+0x15c>
    21f2:	e775      	b.n	20e0 <bme680_set_sensor_settings+0x48>
    21f4:	e771      	b.n	20da <bme680_set_sensor_settings+0x42>
	} else {
		while (dur > 0x3F) {
    21f6:	2a3f      	cmp	r2, #63	; 0x3f
    21f8:	dd09      	ble.n	220e <bme680_set_sensor_settings+0x176>
    21fa:	2300      	movs	r3, #0
			dur = dur / 4;
    21fc:	0892      	lsrs	r2, r2, #2
			factor += 1;
    21fe:	3301      	adds	r3, #1
    2200:	b2db      	uxtb	r3, r3
		while (dur > 0x3F) {
    2202:	2a3f      	cmp	r2, #63	; 0x3f
    2204:	dcfa      	bgt.n	21fc <bme680_set_sensor_settings+0x164>
		}
		durval = (uint8_t) (dur + (factor * 64));
    2206:	019b      	lsls	r3, r3, #6
    2208:	189b      	adds	r3, r3, r2
    220a:	b2db      	uxtb	r3, r3
    220c:	e7e3      	b.n	21d6 <bme680_set_sensor_settings+0x13e>
		while (dur > 0x3F) {
    220e:	2300      	movs	r3, #0
    2210:	e7f9      	b.n	2206 <bme680_set_sensor_settings+0x16e>
			rslt = boundary_check(&dev->tph_sett.filter, BME680_FILTER_SIZE_0, BME680_FILTER_SIZE_127, dev);
    2212:	002b      	movs	r3, r5
    2214:	2207      	movs	r2, #7
    2216:	2100      	movs	r1, #0
    2218:	0028      	movs	r0, r5
    221a:	303b      	adds	r0, #59	; 0x3b
    221c:	4c7a      	ldr	r4, [pc, #488]	; (2408 <bme680_set_sensor_settings+0x370>)
    221e:	47a0      	blx	r4
			if (rslt == BME680_OK)
    2220:	2800      	cmp	r0, #0
    2222:	d012      	beq.n	224a <bme680_set_sensor_settings+0x1b2>
				data = BME680_SET_BITS(data, BME680_FILTER, dev->tph_sett.filter);
    2224:	233b      	movs	r3, #59	; 0x3b
    2226:	5cea      	ldrb	r2, [r5, r3]
    2228:	0092      	lsls	r2, r2, #2
    222a:	3b1f      	subs	r3, #31
    222c:	4013      	ands	r3, r2
    222e:	2117      	movs	r1, #23
    2230:	4469      	add	r1, sp
    2232:	780a      	ldrb	r2, [r1, #0]
    2234:	241c      	movs	r4, #28
    2236:	43a2      	bics	r2, r4
    2238:	4313      	orrs	r3, r2
    223a:	700b      	strb	r3, [r1, #0]
			reg_array[count] = reg_addr; /* Append configuration */
    223c:	2175      	movs	r1, #117	; 0x75
    223e:	aa04      	add	r2, sp, #16
    2240:	7011      	strb	r1, [r2, #0]
			data_array[count] = data;
    2242:	aa02      	add	r2, sp, #8
    2244:	7013      	strb	r3, [r2, #0]
			count++;
    2246:	3c1b      	subs	r4, #27
    2248:	e74e      	b.n	20e8 <bme680_set_sensor_settings+0x50>
				rslt = bme680_get_regs(reg_addr, &data, 1, dev);
    224a:	002b      	movs	r3, r5
    224c:	2201      	movs	r2, #1
    224e:	2117      	movs	r1, #23
    2250:	4469      	add	r1, sp
    2252:	3075      	adds	r0, #117	; 0x75
    2254:	4c6d      	ldr	r4, [pc, #436]	; (240c <bme680_set_sensor_settings+0x374>)
    2256:	47a0      	blx	r4
    2258:	e7e4      	b.n	2224 <bme680_set_sensor_settings+0x18c>
				BME680_DISABLE_HEATER, dev);
    225a:	002b      	movs	r3, r5
    225c:	2208      	movs	r2, #8
    225e:	2100      	movs	r1, #0
    2260:	0028      	movs	r0, r5
    2262:	303d      	adds	r0, #61	; 0x3d
    2264:	4f68      	ldr	r7, [pc, #416]	; (2408 <bme680_set_sensor_settings+0x370>)
    2266:	47b8      	blx	r7
			if (rslt == BME680_OK)
    2268:	2800      	cmp	r0, #0
    226a:	d014      	beq.n	2296 <bme680_set_sensor_settings+0x1fe>
			data = BME680_SET_BITS_POS_0(data, BME680_HCTRL, dev->gas_sett.heatr_ctrl);
    226c:	2217      	movs	r2, #23
    226e:	446a      	add	r2, sp
    2270:	7813      	ldrb	r3, [r2, #0]
    2272:	2108      	movs	r1, #8
    2274:	438b      	bics	r3, r1
    2276:	3135      	adds	r1, #53	; 0x35
    2278:	5c69      	ldrb	r1, [r5, r1]
    227a:	468c      	mov	ip, r1
    227c:	2108      	movs	r1, #8
    227e:	4667      	mov	r7, ip
    2280:	4039      	ands	r1, r7
    2282:	430b      	orrs	r3, r1
    2284:	7013      	strb	r3, [r2, #0]
			reg_array[count] = reg_addr; /* Append configuration */
    2286:	2170      	movs	r1, #112	; 0x70
    2288:	aa04      	add	r2, sp, #16
    228a:	5511      	strb	r1, [r2, r4]
			data_array[count] = data;
    228c:	aa02      	add	r2, sp, #8
    228e:	5513      	strb	r3, [r2, r4]
			count++;
    2290:	3401      	adds	r4, #1
    2292:	b2e4      	uxtb	r4, r4
    2294:	e72b      	b.n	20ee <bme680_set_sensor_settings+0x56>
				rslt = bme680_get_regs(reg_addr, &data, 1, dev);
    2296:	002b      	movs	r3, r5
    2298:	2201      	movs	r2, #1
    229a:	2117      	movs	r1, #23
    229c:	4469      	add	r1, sp
    229e:	3070      	adds	r0, #112	; 0x70
    22a0:	4f5a      	ldr	r7, [pc, #360]	; (240c <bme680_set_sensor_settings+0x374>)
    22a2:	47b8      	blx	r7
    22a4:	e7e2      	b.n	226c <bme680_set_sensor_settings+0x1d4>
			rslt = boundary_check(&dev->tph_sett.os_temp, BME680_OS_NONE, BME680_OS_16X, dev);
    22a6:	002b      	movs	r3, r5
    22a8:	2205      	movs	r2, #5
    22aa:	2100      	movs	r1, #0
    22ac:	0028      	movs	r0, r5
    22ae:	3039      	adds	r0, #57	; 0x39
    22b0:	4f55      	ldr	r7, [pc, #340]	; (2408 <bme680_set_sensor_settings+0x370>)
    22b2:	47b8      	blx	r7
			if (rslt == BME680_OK)
    22b4:	2800      	cmp	r0, #0
    22b6:	d024      	beq.n	2302 <bme680_set_sensor_settings+0x26a>
			if (desired_settings & BME680_OST_SEL)
    22b8:	07f3      	lsls	r3, r6, #31
    22ba:	d509      	bpl.n	22d0 <bme680_set_sensor_settings+0x238>
				data = BME680_SET_BITS(data, BME680_OST, dev->tph_sett.os_temp);
    22bc:	2217      	movs	r2, #23
    22be:	446a      	add	r2, sp
    22c0:	7811      	ldrb	r1, [r2, #0]
    22c2:	231f      	movs	r3, #31
    22c4:	400b      	ands	r3, r1
    22c6:	2139      	movs	r1, #57	; 0x39
    22c8:	5c69      	ldrb	r1, [r5, r1]
    22ca:	0149      	lsls	r1, r1, #5
    22cc:	430b      	orrs	r3, r1
    22ce:	7013      	strb	r3, [r2, #0]
			if (desired_settings & BME680_OSP_SEL)
    22d0:	07b3      	lsls	r3, r6, #30
    22d2:	d50b      	bpl.n	22ec <bme680_set_sensor_settings+0x254>
				data = BME680_SET_BITS(data, BME680_OSP, dev->tph_sett.os_pres);
    22d4:	2217      	movs	r2, #23
    22d6:	446a      	add	r2, sp
    22d8:	233a      	movs	r3, #58	; 0x3a
    22da:	5ce9      	ldrb	r1, [r5, r3]
    22dc:	0089      	lsls	r1, r1, #2
    22de:	3b1e      	subs	r3, #30
    22e0:	400b      	ands	r3, r1
    22e2:	7811      	ldrb	r1, [r2, #0]
    22e4:	271c      	movs	r7, #28
    22e6:	43b9      	bics	r1, r7
    22e8:	430b      	orrs	r3, r1
    22ea:	7013      	strb	r3, [r2, #0]
			reg_array[count] = reg_addr;
    22ec:	2274      	movs	r2, #116	; 0x74
    22ee:	ab04      	add	r3, sp, #16
    22f0:	551a      	strb	r2, [r3, r4]
			data_array[count] = data;
    22f2:	2317      	movs	r3, #23
    22f4:	446b      	add	r3, sp
    22f6:	781a      	ldrb	r2, [r3, #0]
    22f8:	ab02      	add	r3, sp, #8
    22fa:	551a      	strb	r2, [r3, r4]
			count++;
    22fc:	3401      	adds	r4, #1
    22fe:	b2e4      	uxtb	r4, r4
    2300:	e6f8      	b.n	20f4 <bme680_set_sensor_settings+0x5c>
				rslt = bme680_get_regs(reg_addr, &data, 1, dev);
    2302:	002b      	movs	r3, r5
    2304:	2201      	movs	r2, #1
    2306:	2117      	movs	r1, #23
    2308:	4469      	add	r1, sp
    230a:	3074      	adds	r0, #116	; 0x74
    230c:	4f3f      	ldr	r7, [pc, #252]	; (240c <bme680_set_sensor_settings+0x374>)
    230e:	47b8      	blx	r7
    2310:	e7d2      	b.n	22b8 <bme680_set_sensor_settings+0x220>
			rslt = boundary_check(&dev->tph_sett.os_hum, BME680_OS_NONE, BME680_OS_16X, dev);
    2312:	0028      	movs	r0, r5
    2314:	3038      	adds	r0, #56	; 0x38
    2316:	002b      	movs	r3, r5
    2318:	2205      	movs	r2, #5
    231a:	2100      	movs	r1, #0
    231c:	4f3a      	ldr	r7, [pc, #232]	; (2408 <bme680_set_sensor_settings+0x370>)
    231e:	47b8      	blx	r7
			if (rslt == BME680_OK)
    2320:	2800      	cmp	r0, #0
    2322:	d014      	beq.n	234e <bme680_set_sensor_settings+0x2b6>
			data = BME680_SET_BITS_POS_0(data, BME680_OSH, dev->tph_sett.os_hum);
    2324:	2217      	movs	r2, #23
    2326:	446a      	add	r2, sp
    2328:	7813      	ldrb	r3, [r2, #0]
    232a:	2107      	movs	r1, #7
    232c:	438b      	bics	r3, r1
    232e:	3131      	adds	r1, #49	; 0x31
    2330:	5c69      	ldrb	r1, [r5, r1]
    2332:	468c      	mov	ip, r1
    2334:	2107      	movs	r1, #7
    2336:	4667      	mov	r7, ip
    2338:	4039      	ands	r1, r7
    233a:	430b      	orrs	r3, r1
    233c:	7013      	strb	r3, [r2, #0]
			reg_array[count] = reg_addr; /* Append configuration */
    233e:	2172      	movs	r1, #114	; 0x72
    2340:	aa04      	add	r2, sp, #16
    2342:	5511      	strb	r1, [r2, r4]
			data_array[count] = data;
    2344:	aa02      	add	r2, sp, #8
    2346:	5513      	strb	r3, [r2, r4]
			count++;
    2348:	3401      	adds	r4, #1
    234a:	b2e4      	uxtb	r4, r4
    234c:	e6d5      	b.n	20fa <bme680_set_sensor_settings+0x62>
				rslt = bme680_get_regs(reg_addr, &data, 1, dev);
    234e:	002b      	movs	r3, r5
    2350:	2201      	movs	r2, #1
    2352:	2117      	movs	r1, #23
    2354:	4469      	add	r1, sp
    2356:	3072      	adds	r0, #114	; 0x72
    2358:	4f2c      	ldr	r7, [pc, #176]	; (240c <bme680_set_sensor_settings+0x374>)
    235a:	47b8      	blx	r7
    235c:	e7e2      	b.n	2324 <bme680_set_sensor_settings+0x28c>
				BME680_RUN_GAS_ENABLE, dev);
    235e:	002b      	movs	r3, r5
    2360:	2201      	movs	r2, #1
    2362:	2100      	movs	r1, #0
    2364:	0028      	movs	r0, r5
    2366:	303e      	adds	r0, #62	; 0x3e
    2368:	4f27      	ldr	r7, [pc, #156]	; (2408 <bme680_set_sensor_settings+0x370>)
    236a:	47b8      	blx	r7
			if (rslt == BME680_OK) {
    236c:	2800      	cmp	r0, #0
    236e:	d025      	beq.n	23bc <bme680_set_sensor_settings+0x324>
			if (desired_settings & BME680_RUN_GAS_SEL)
    2370:	0673      	lsls	r3, r6, #25
    2372:	d50b      	bpl.n	238c <bme680_set_sensor_settings+0x2f4>
				data = BME680_SET_BITS(data, BME680_RUN_GAS, dev->gas_sett.run_gas);
    2374:	2217      	movs	r2, #23
    2376:	446a      	add	r2, sp
    2378:	233e      	movs	r3, #62	; 0x3e
    237a:	5ce9      	ldrb	r1, [r5, r3]
    237c:	0109      	lsls	r1, r1, #4
    237e:	3b2e      	subs	r3, #46	; 0x2e
    2380:	400b      	ands	r3, r1
    2382:	7811      	ldrb	r1, [r2, #0]
    2384:	2710      	movs	r7, #16
    2386:	43b9      	bics	r1, r7
    2388:	430b      	orrs	r3, r1
    238a:	7013      	strb	r3, [r2, #0]
			if (desired_settings & BME680_NBCONV_SEL)
    238c:	0633      	lsls	r3, r6, #24
    238e:	d50a      	bpl.n	23a6 <bme680_set_sensor_settings+0x30e>
				data = BME680_SET_BITS_POS_0(data, BME680_NBCONV, dev->gas_sett.nb_conv);
    2390:	2217      	movs	r2, #23
    2392:	446a      	add	r2, sp
    2394:	7813      	ldrb	r3, [r2, #0]
    2396:	210f      	movs	r1, #15
    2398:	438b      	bics	r3, r1
    239a:	312d      	adds	r1, #45	; 0x2d
    239c:	5c6e      	ldrb	r6, [r5, r1]
    239e:	392d      	subs	r1, #45	; 0x2d
    23a0:	4031      	ands	r1, r6
    23a2:	430b      	orrs	r3, r1
    23a4:	7013      	strb	r3, [r2, #0]
			reg_array[count] = reg_addr; /* Append configuration */
    23a6:	2271      	movs	r2, #113	; 0x71
    23a8:	ab04      	add	r3, sp, #16
    23aa:	551a      	strb	r2, [r3, r4]
			data_array[count] = data;
    23ac:	2317      	movs	r3, #23
    23ae:	446b      	add	r3, sp
    23b0:	781a      	ldrb	r2, [r3, #0]
    23b2:	ab02      	add	r3, sp, #8
    23b4:	551a      	strb	r2, [r3, r4]
			count++;
    23b6:	3401      	adds	r4, #1
    23b8:	b2e4      	uxtb	r4, r4
    23ba:	e6a2      	b.n	2102 <bme680_set_sensor_settings+0x6a>
				rslt = boundary_check(&dev->gas_sett.nb_conv, BME680_NBCONV_MIN,
    23bc:	0028      	movs	r0, r5
    23be:	303c      	adds	r0, #60	; 0x3c
					BME680_NBCONV_MAX, dev);
    23c0:	002b      	movs	r3, r5
    23c2:	220a      	movs	r2, #10
    23c4:	2100      	movs	r1, #0
    23c6:	4f10      	ldr	r7, [pc, #64]	; (2408 <bme680_set_sensor_settings+0x370>)
    23c8:	47b8      	blx	r7
			if (rslt == BME680_OK)
    23ca:	2800      	cmp	r0, #0
    23cc:	d1d0      	bne.n	2370 <bme680_set_sensor_settings+0x2d8>
				rslt = bme680_get_regs(reg_addr, &data, 1, dev);
    23ce:	002b      	movs	r3, r5
    23d0:	2201      	movs	r2, #1
    23d2:	2117      	movs	r1, #23
    23d4:	4469      	add	r1, sp
    23d6:	3071      	adds	r0, #113	; 0x71
    23d8:	4f0c      	ldr	r7, [pc, #48]	; (240c <bme680_set_sensor_settings+0x374>)
    23da:	47b8      	blx	r7
    23dc:	e7c8      	b.n	2370 <bme680_set_sensor_settings+0x2d8>
			rslt = bme680_set_regs(reg_array, data_array, count, dev);
    23de:	002b      	movs	r3, r5
    23e0:	0022      	movs	r2, r4
    23e2:	a902      	add	r1, sp, #8
    23e4:	a804      	add	r0, sp, #16
    23e6:	4c07      	ldr	r4, [pc, #28]	; (2404 <bme680_set_sensor_settings+0x36c>)
    23e8:	47a0      	blx	r4
    23ea:	e68d      	b.n	2108 <bme680_set_sensor_settings+0x70>
    23ec:	00008c59 	.word	0x00008c59
    23f0:	00000245 	.word	0x00000245
    23f4:	00001fe1 	.word	0x00001fe1
    23f8:	00025999 	.word	0x00025999
    23fc:	00005d5d 	.word	0x00005d5d
    2400:	00000fbf 	.word	0x00000fbf
    2404:	00001d15 	.word	0x00001d15
    2408:	0000020d 	.word	0x0000020d
    240c:	00001cbd 	.word	0x00001cbd

00002410 <bme680_get_profile_dur>:
{
    2410:	b530      	push	{r4, r5, lr}
    2412:	b083      	sub	sp, #12
    2414:	0004      	movs	r4, r0
    2416:	000d      	movs	r5, r1
	uint8_t os_to_meas_cycles[6] = {0, 1, 2, 4, 8, 16};
    2418:	2300      	movs	r3, #0
    241a:	466a      	mov	r2, sp
    241c:	7013      	strb	r3, [r2, #0]
    241e:	3301      	adds	r3, #1
    2420:	7053      	strb	r3, [r2, #1]
    2422:	3301      	adds	r3, #1
    2424:	7093      	strb	r3, [r2, #2]
    2426:	3302      	adds	r3, #2
    2428:	70d3      	strb	r3, [r2, #3]
    242a:	3304      	adds	r3, #4
    242c:	7113      	strb	r3, [r2, #4]
    242e:	3308      	adds	r3, #8
    2430:	7153      	strb	r3, [r2, #5]
	meas_cycles = os_to_meas_cycles[dev->tph_sett.os_temp];
    2432:	3329      	adds	r3, #41	; 0x29
    2434:	5ccb      	ldrb	r3, [r1, r3]
    2436:	5cd0      	ldrb	r0, [r2, r3]
	meas_cycles += os_to_meas_cycles[dev->tph_sett.os_pres];
    2438:	233a      	movs	r3, #58	; 0x3a
    243a:	5ccb      	ldrb	r3, [r1, r3]
    243c:	5cd3      	ldrb	r3, [r2, r3]
    243e:	181b      	adds	r3, r3, r0
	meas_cycles += os_to_meas_cycles[dev->tph_sett.os_hum];
    2440:	2238      	movs	r2, #56	; 0x38
    2442:	5c8a      	ldrb	r2, [r1, r2]
    2444:	4669      	mov	r1, sp
    2446:	5c88      	ldrb	r0, [r1, r2]
    2448:	18c3      	adds	r3, r0, r3
	tph_dur = meas_cycles * UINT32_C(1963);
    244a:	480b      	ldr	r0, [pc, #44]	; (2478 <bme680_get_profile_dur+0x68>)
    244c:	4358      	muls	r0, r3
	tph_dur += UINT32_C(500); /* Get it to the closest whole number.*/
    244e:	4b0b      	ldr	r3, [pc, #44]	; (247c <bme680_get_profile_dur+0x6c>)
    2450:	469c      	mov	ip, r3
    2452:	4460      	add	r0, ip
	tph_dur /= UINT32_C(1000); /* Convert to ms */
    2454:	21fa      	movs	r1, #250	; 0xfa
    2456:	0089      	lsls	r1, r1, #2
    2458:	4b09      	ldr	r3, [pc, #36]	; (2480 <bme680_get_profile_dur+0x70>)
    245a:	4798      	blx	r3
	tph_dur += UINT32_C(1); /* Wake up duration of 1ms */
    245c:	3001      	adds	r0, #1
	*duration = (uint16_t) tph_dur;
    245e:	b280      	uxth	r0, r0
    2460:	8020      	strh	r0, [r4, #0]
	if (dev->gas_sett.run_gas) {
    2462:	233e      	movs	r3, #62	; 0x3e
    2464:	5ceb      	ldrb	r3, [r5, r3]
    2466:	2b00      	cmp	r3, #0
    2468:	d003      	beq.n	2472 <bme680_get_profile_dur+0x62>
		*duration += dev->gas_sett.heatr_dur;
    246a:	2342      	movs	r3, #66	; 0x42
    246c:	5aeb      	ldrh	r3, [r5, r3]
    246e:	18c0      	adds	r0, r0, r3
    2470:	8020      	strh	r0, [r4, #0]
}
    2472:	b003      	add	sp, #12
    2474:	bd30      	pop	{r4, r5, pc}
    2476:	46c0      	nop			; (mov r8, r8)
    2478:	000007ab 	.word	0x000007ab
    247c:	000012b9 	.word	0x000012b9
    2480:	00005c49 	.word	0x00005c49

00002484 <bme680_get_sensor_data>:
{
    2484:	b5f0      	push	{r4, r5, r6, r7, lr}
    2486:	46de      	mov	lr, fp
    2488:	4657      	mov	r7, sl
    248a:	464e      	mov	r6, r9
    248c:	4645      	mov	r5, r8
    248e:	b5e0      	push	{r5, r6, r7, lr}
    2490:	b08f      	sub	sp, #60	; 0x3c
    2492:	4683      	mov	fp, r0
    2494:	000d      	movs	r5, r1
	rslt = null_ptr_check(dev);
    2496:	0008      	movs	r0, r1
    2498:	4bd7      	ldr	r3, [pc, #860]	; (27f8 <bme680_get_sensor_data+0x374>)
    249a:	4798      	blx	r3
    249c:	1e07      	subs	r7, r0, #0
	if (rslt == BME680_OK) {
    249e:	d007      	beq.n	24b0 <bme680_get_sensor_data+0x2c>
}
    24a0:	0038      	movs	r0, r7
    24a2:	b00f      	add	sp, #60	; 0x3c
    24a4:	bc3c      	pop	{r2, r3, r4, r5}
    24a6:	4690      	mov	r8, r2
    24a8:	4699      	mov	r9, r3
    24aa:	46a2      	mov	sl, r4
    24ac:	46ab      	mov	fp, r5
    24ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 * @brief This internal API is used to calculate the field data of sensor.
 */
static int8_t read_field_data(struct bme680_field_data *data, struct bme680_dev *dev)
{
	int8_t rslt;
	uint8_t buff[BME680_FIELD_LENGTH] = { 0 };
    24b0:	220f      	movs	r2, #15
    24b2:	2100      	movs	r1, #0
    24b4:	a80a      	add	r0, sp, #40	; 0x28
    24b6:	4bd1      	ldr	r3, [pc, #836]	; (27fc <bme680_get_sensor_data+0x378>)
    24b8:	4798      	blx	r3
	uint16_t adc_hum;
	uint16_t adc_gas_res;
	uint8_t tries = 10;

	/* Check for null pointer in the device structure*/
	rslt = null_ptr_check(dev);
    24ba:	0028      	movs	r0, r5
    24bc:	4bce      	ldr	r3, [pc, #824]	; (27f8 <bme680_get_sensor_data+0x374>)
    24be:	4798      	blx	r3
    24c0:	0007      	movs	r7, r0
    24c2:	240a      	movs	r4, #10
	do {
		if (rslt == BME680_OK) {
			rslt = bme680_get_regs(((uint8_t) (BME680_FIELD0_ADDR)), buff, (uint16_t) BME680_FIELD_LENGTH,
				dev);

			data->status = buff[0] & BME680_NEW_DATA_MSK;
    24c4:	46a9      	mov	r9, r5
    24c6:	465d      	mov	r5, fp
    24c8:	e151      	b.n	276e <bme680_get_sensor_data+0x2ea>
    24ca:	46ab      	mov	fp, r5
    24cc:	464d      	mov	r5, r9
    24ce:	4691      	mov	r9, r2
    24d0:	0002      	movs	r2, r0
    24d2:	4660      	mov	r0, ip
			data->meas_index = buff[1];

			/* read the raw data from the sensor */
			adc_pres = (uint32_t) (((uint32_t) buff[2] * 4096) | ((uint32_t) buff[3] * 16)
				| ((uint32_t) buff[4] / 16));
			adc_temp = (uint32_t) (((uint32_t) buff[5] * 4096) | ((uint32_t) buff[6] * 16)
    24d4:	0112      	lsls	r2, r2, #4
				| ((uint32_t) buff[7] / 16));
    24d6:	0900      	lsrs	r0, r0, #4
			adc_temp = (uint32_t) (((uint32_t) buff[5] * 4096) | ((uint32_t) buff[6] * 16)
    24d8:	4302      	orrs	r2, r0
    24da:	0309      	lsls	r1, r1, #12
    24dc:	4311      	orrs	r1, r2
	var1 = ((int32_t) temp_adc >> 3) - ((int32_t) dev->calib.par_t1 << 1);
    24de:	10c9      	asrs	r1, r1, #3
    24e0:	8aeb      	ldrh	r3, [r5, #22]
    24e2:	005b      	lsls	r3, r3, #1
    24e4:	1acb      	subs	r3, r1, r3
    24e6:	001a      	movs	r2, r3
    24e8:	17db      	asrs	r3, r3, #31
    24ea:	0019      	movs	r1, r3
	var3 = ((var1 >> 1) * (var1 >> 1)) >> 12;
    24ec:	07db      	lsls	r3, r3, #31
    24ee:	9207      	str	r2, [sp, #28]
    24f0:	0850      	lsrs	r0, r2, #1
    24f2:	4318      	orrs	r0, r3
    24f4:	0002      	movs	r2, r0
    24f6:	000b      	movs	r3, r1
    24f8:	9108      	str	r1, [sp, #32]
    24fa:	4ec1      	ldr	r6, [pc, #772]	; (2800 <bme680_get_sensor_data+0x37c>)
    24fc:	47b0      	blx	r6
    24fe:	050b      	lsls	r3, r1, #20
    2500:	0b00      	lsrs	r0, r0, #12
    2502:	4318      	orrs	r0, r3
    2504:	1309      	asrs	r1, r1, #12
	var3 = ((var3) * ((int32_t) dev->calib.par_t3 << 4)) >> 14;
    2506:	221a      	movs	r2, #26
    2508:	56aa      	ldrsb	r2, [r5, r2]
    250a:	0112      	lsls	r2, r2, #4
    250c:	17d3      	asrs	r3, r2, #31
    250e:	47b0      	blx	r6
    2510:	0489      	lsls	r1, r1, #18
    2512:	0b80      	lsrs	r0, r0, #14
    2514:	4308      	orrs	r0, r1
    2516:	9009      	str	r0, [sp, #36]	; 0x24
	var2 = (var1 * (int32_t) dev->calib.par_t2) >> 11;
    2518:	2618      	movs	r6, #24
    251a:	5fa8      	ldrsh	r0, [r5, r6]
    251c:	17c1      	asrs	r1, r0, #31
    251e:	9a07      	ldr	r2, [sp, #28]
    2520:	9b08      	ldr	r3, [sp, #32]
    2522:	4eb7      	ldr	r6, [pc, #732]	; (2800 <bme680_get_sensor_data+0x37c>)
    2524:	47b0      	blx	r6
    2526:	0549      	lsls	r1, r1, #21
    2528:	0ac0      	lsrs	r0, r0, #11
    252a:	4308      	orrs	r0, r1
	dev->calib.t_fine = (int32_t) (var2 + var3);
    252c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    252e:	181e      	adds	r6, r3, r0
    2530:	632e      	str	r6, [r5, #48]	; 0x30
	calc_temp = (int16_t) (((dev->calib.t_fine * 5) + 128) >> 8);
    2532:	00b3      	lsls	r3, r6, #2
    2534:	199b      	adds	r3, r3, r6
    2536:	3380      	adds	r3, #128	; 0x80
    2538:	121b      	asrs	r3, r3, #8

			data->status |= buff[14] & BME680_GASM_VALID_MSK;
			data->status |= buff[14] & BME680_HEAT_STAB_MSK;

			if (data->status & BME680_NEW_DATA_MSK) {
				data->temperature = calc_temperature(adc_temp, dev);
    253a:	465a      	mov	r2, fp
    253c:	8093      	strh	r3, [r2, #4]
	var1 = (((int32_t)dev->calib.t_fine) >> 1) - 64000;
    253e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    2540:	1059      	asrs	r1, r3, #1
    2542:	4bb0      	ldr	r3, [pc, #704]	; (2804 <bme680_get_sensor_data+0x380>)
    2544:	469c      	mov	ip, r3
    2546:	4461      	add	r1, ip
	var2 = ((((var1 >> 2) * (var1 >> 2)) >> 11) *
    2548:	108a      	asrs	r2, r1, #2
    254a:	4352      	muls	r2, r2
    254c:	12d0      	asrs	r0, r2, #11
		(int32_t)dev->calib.par_p6) >> 2;
    254e:	2326      	movs	r3, #38	; 0x26
    2550:	56eb      	ldrsb	r3, [r5, r3]
	var2 = ((((var1 >> 2) * (var1 >> 2)) >> 11) *
    2552:	4358      	muls	r0, r3
    2554:	1080      	asrs	r0, r0, #2
	var2 = var2 + ((var1 * (int32_t)dev->calib.par_p5) << 1);
    2556:	2624      	movs	r6, #36	; 0x24
    2558:	5fab      	ldrsh	r3, [r5, r6]
    255a:	434b      	muls	r3, r1
    255c:	005b      	lsls	r3, r3, #1
    255e:	181b      	adds	r3, r3, r0
	var2 = (var2 >> 2) + ((int32_t)dev->calib.par_p4 << 16);
    2560:	109b      	asrs	r3, r3, #2
		(((int32_t)dev->calib.par_p2 * var1) >> 1);
    2562:	261e      	movs	r6, #30
    2564:	5fa8      	ldrsh	r0, [r5, r6]
    2566:	4348      	muls	r0, r1
    2568:	1040      	asrs	r0, r0, #1
		((int32_t)dev->calib.par_p3 << 5)) >> 3) +
    256a:	2120      	movs	r1, #32
    256c:	566e      	ldrsb	r6, [r5, r1]
    256e:	0176      	lsls	r6, r6, #5
	var1 = (((((var1 >> 2) * (var1 >> 2)) >> 13) *
    2570:	1351      	asrs	r1, r2, #13
    2572:	4371      	muls	r1, r6
		((int32_t)dev->calib.par_p3 << 5)) >> 3) +
    2574:	10c9      	asrs	r1, r1, #3
	var1 = (((((var1 >> 2) * (var1 >> 2)) >> 13) *
    2576:	1809      	adds	r1, r1, r0
	var1 = var1 >> 18;
    2578:	1489      	asrs	r1, r1, #18
	var1 = ((32768 + var1) * (int32_t)dev->calib.par_p1) >> 15;
    257a:	2280      	movs	r2, #128	; 0x80
    257c:	0212      	lsls	r2, r2, #8
    257e:	4694      	mov	ip, r2
    2580:	4461      	add	r1, ip
    2582:	8baa      	ldrh	r2, [r5, #28]
    2584:	4351      	muls	r1, r2
			adc_pres = (uint32_t) (((uint32_t) buff[2] * 4096) | ((uint32_t) buff[3] * 16)
    2586:	9a02      	ldr	r2, [sp, #8]
    2588:	0110      	lsls	r0, r2, #4
				| ((uint32_t) buff[4] / 16));
    258a:	9a05      	ldr	r2, [sp, #20]
    258c:	0912      	lsrs	r2, r2, #4
			adc_pres = (uint32_t) (((uint32_t) buff[2] * 4096) | ((uint32_t) buff[3] * 16)
    258e:	4302      	orrs	r2, r0
    2590:	9800      	ldr	r0, [sp, #0]
    2592:	0300      	lsls	r0, r0, #12
    2594:	4310      	orrs	r0, r2
	pressure_comp = 1048576 - pres_adc;
    2596:	2280      	movs	r2, #128	; 0x80
    2598:	0352      	lsls	r2, r2, #13
    259a:	1a10      	subs	r0, r2, r0
	var2 = (var2 >> 2) + ((int32_t)dev->calib.par_p4 << 16);
    259c:	2622      	movs	r6, #34	; 0x22
    259e:	5faa      	ldrsh	r2, [r5, r6]
    25a0:	0412      	lsls	r2, r2, #16
    25a2:	18d3      	adds	r3, r2, r3
	pressure_comp = (int32_t)((pressure_comp - (var2 >> 12)) * ((uint32_t)3125));
    25a4:	131b      	asrs	r3, r3, #12
    25a6:	1ac3      	subs	r3, r0, r3
    25a8:	4897      	ldr	r0, [pc, #604]	; (2808 <bme680_get_sensor_data+0x384>)
    25aa:	4358      	muls	r0, r3
	var1 = ((32768 + var1) * (int32_t)dev->calib.par_p1) >> 15;
    25ac:	13c9      	asrs	r1, r1, #15
		pressure_comp = ((pressure_comp / (uint32_t)var1) << 1);
    25ae:	4b97      	ldr	r3, [pc, #604]	; (280c <bme680_get_sensor_data+0x388>)
    25b0:	4798      	blx	r3
    25b2:	0043      	lsls	r3, r0, #1
	var1 = ((int32_t)dev->calib.par_p9 * (int32_t)(((pressure_comp >> 3) *
    25b4:	10da      	asrs	r2, r3, #3
	var3 = ((int32_t)(pressure_comp >> 8) * (int32_t)(pressure_comp >> 8) *
    25b6:	1219      	asrs	r1, r3, #8
	var1 = ((int32_t)dev->calib.par_p9 * (int32_t)(((pressure_comp >> 3) *
    25b8:	4352      	muls	r2, r2
		(pressure_comp >> 3)) >> 13)) >> 12;
    25ba:	1352      	asrs	r2, r2, #13
	var1 = ((int32_t)dev->calib.par_p9 * (int32_t)(((pressure_comp >> 3) *
    25bc:	262a      	movs	r6, #42	; 0x2a
    25be:	5fa8      	ldrsh	r0, [r5, r6]
    25c0:	4342      	muls	r2, r0
    25c2:	1312      	asrs	r2, r2, #12
    25c4:	4694      	mov	ip, r2
	var2 = ((int32_t)(pressure_comp >> 2) *
    25c6:	109e      	asrs	r6, r3, #2
		(int32_t)dev->calib.par_p8) >> 13;
    25c8:	2228      	movs	r2, #40	; 0x28
    25ca:	5ea8      	ldrsh	r0, [r5, r2]
	var2 = ((int32_t)(pressure_comp >> 2) *
    25cc:	4370      	muls	r0, r6
    25ce:	1340      	asrs	r0, r0, #13
	pressure_comp = (int32_t)(pressure_comp) + ((var1 + var2 + var3 +
    25d0:	4460      	add	r0, ip
	var3 = ((int32_t)(pressure_comp >> 8) * (int32_t)(pressure_comp >> 8) *
    25d2:	000a      	movs	r2, r1
    25d4:	434a      	muls	r2, r1
    25d6:	434a      	muls	r2, r1
		(int32_t)dev->calib.par_p10) >> 17;
    25d8:	212c      	movs	r1, #44	; 0x2c
    25da:	5c69      	ldrb	r1, [r5, r1]
		(int32_t)(pressure_comp >> 8) *
    25dc:	4351      	muls	r1, r2
	var3 = ((int32_t)(pressure_comp >> 8) * (int32_t)(pressure_comp >> 8) *
    25de:	1449      	asrs	r1, r1, #17
	pressure_comp = (int32_t)(pressure_comp) + ((var1 + var2 + var3 +
    25e0:	1840      	adds	r0, r0, r1
		((int32_t)dev->calib.par_p7 << 7)) >> 4);
    25e2:	2227      	movs	r2, #39	; 0x27
    25e4:	56aa      	ldrsb	r2, [r5, r2]
    25e6:	01d2      	lsls	r2, r2, #7
	pressure_comp = (int32_t)(pressure_comp) + ((var1 + var2 + var3 +
    25e8:	1880      	adds	r0, r0, r2
		((int32_t)dev->calib.par_p7 << 7)) >> 4);
    25ea:	1100      	asrs	r0, r0, #4
	pressure_comp = (int32_t)(pressure_comp) + ((var1 + var2 + var3 +
    25ec:	18c0      	adds	r0, r0, r3
				data->pressure = calc_pressure(adc_pres, dev);
    25ee:	465b      	mov	r3, fp
    25f0:	6098      	str	r0, [r3, #8]
	temp_scaled = (((int32_t) dev->calib.t_fine * 5) + 128) >> 8;
    25f2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    25f4:	009e      	lsls	r6, r3, #2
    25f6:	18f6      	adds	r6, r6, r3
    25f8:	3680      	adds	r6, #128	; 0x80
    25fa:	1236      	asrs	r6, r6, #8
			+ (((temp_scaled * ((temp_scaled * (int32_t) dev->calib.par_h5) / ((int32_t) 100))) >> 6)
    25fc:	200e      	movs	r0, #14
    25fe:	5628      	ldrsb	r0, [r5, r0]
    2600:	4370      	muls	r0, r6
    2602:	2164      	movs	r1, #100	; 0x64
    2604:	4b82      	ldr	r3, [pc, #520]	; (2810 <bme680_get_sensor_data+0x38c>)
    2606:	4798      	blx	r3
    2608:	4370      	muls	r0, r6
    260a:	1180      	asrs	r0, r0, #6
				/ ((int32_t) 100)) + (int32_t) (1 << 14))) >> 10;
    260c:	2164      	movs	r1, #100	; 0x64
    260e:	4b80      	ldr	r3, [pc, #512]	; (2810 <bme680_get_sensor_data+0x38c>)
    2610:	4798      	blx	r3
    2612:	9000      	str	r0, [sp, #0]
		* (((temp_scaled * (int32_t) dev->calib.par_h4) / ((int32_t) 100))
    2614:	200d      	movs	r0, #13
    2616:	5628      	ldrsb	r0, [r5, r0]
    2618:	4370      	muls	r0, r6
    261a:	2164      	movs	r1, #100	; 0x64
    261c:	4b7c      	ldr	r3, [pc, #496]	; (2810 <bme680_get_sensor_data+0x38c>)
    261e:	4798      	blx	r3
			+ (((temp_scaled * ((temp_scaled * (int32_t) dev->calib.par_h5) / ((int32_t) 100))) >> 6)
    2620:	9b00      	ldr	r3, [sp, #0]
    2622:	181b      	adds	r3, r3, r0
				/ ((int32_t) 100)) + (int32_t) (1 << 14))) >> 10;
    2624:	2280      	movs	r2, #128	; 0x80
    2626:	01d2      	lsls	r2, r2, #7
    2628:	189a      	adds	r2, r3, r2
	var2 = ((int32_t) dev->calib.par_h2
    262a:	896b      	ldrh	r3, [r5, #10]
		* (((temp_scaled * (int32_t) dev->calib.par_h4) / ((int32_t) 100))
    262c:	4353      	muls	r3, r2
	var2 = ((int32_t) dev->calib.par_h2
    262e:	129b      	asrs	r3, r3, #10
    2630:	9300      	str	r3, [sp, #0]
			adc_hum = (uint16_t) (((uint32_t) buff[8] * 256) | (uint32_t) buff[9]);
    2632:	9906      	ldr	r1, [sp, #24]
    2634:	020a      	lsls	r2, r1, #8
	var1 = (int32_t) (hum_adc - ((int32_t) ((int32_t) dev->calib.par_h1 * 16)))
    2636:	4641      	mov	r1, r8
    2638:	430a      	orrs	r2, r1
    263a:	892b      	ldrh	r3, [r5, #8]
    263c:	011b      	lsls	r3, r3, #4
    263e:	1ad1      	subs	r1, r2, r3
    2640:	4688      	mov	r8, r1
		- (((temp_scaled * (int32_t) dev->calib.par_h3) / ((int32_t) 100)) >> 1);
    2642:	200c      	movs	r0, #12
    2644:	5628      	ldrsb	r0, [r5, r0]
    2646:	4370      	muls	r0, r6
    2648:	2164      	movs	r1, #100	; 0x64
    264a:	4b71      	ldr	r3, [pc, #452]	; (2810 <bme680_get_sensor_data+0x38c>)
    264c:	4798      	blx	r3
    264e:	1040      	asrs	r0, r0, #1
	var1 = (int32_t) (hum_adc - ((int32_t) ((int32_t) dev->calib.par_h1 * 16)))
    2650:	4641      	mov	r1, r8
    2652:	1a0b      	subs	r3, r1, r0
	var3 = var1 * var2;
    2654:	9a00      	ldr	r2, [sp, #0]
    2656:	435a      	muls	r2, r3
    2658:	4690      	mov	r8, r2
	var5 = ((var3 >> 14) * (var3 >> 14)) >> 10;
    265a:	1393      	asrs	r3, r2, #14
    265c:	9300      	str	r3, [sp, #0]
	var4 = ((var4) + ((temp_scaled * (int32_t) dev->calib.par_h7) / ((int32_t) 100))) >> 4;
    265e:	2010      	movs	r0, #16
    2660:	5628      	ldrsb	r0, [r5, r0]
    2662:	4370      	muls	r0, r6
    2664:	2164      	movs	r1, #100	; 0x64
    2666:	4a6a      	ldr	r2, [pc, #424]	; (2810 <bme680_get_sensor_data+0x38c>)
    2668:	4790      	blx	r2
	var4 = (int32_t) dev->calib.par_h6 << 7;
    266a:	7beb      	ldrb	r3, [r5, #15]
    266c:	01db      	lsls	r3, r3, #7
	var4 = ((var4) + ((temp_scaled * (int32_t) dev->calib.par_h7) / ((int32_t) 100))) >> 4;
    266e:	18c0      	adds	r0, r0, r3
    2670:	1100      	asrs	r0, r0, #4
	var5 = ((var3 >> 14) * (var3 >> 14)) >> 10;
    2672:	9b00      	ldr	r3, [sp, #0]
    2674:	435b      	muls	r3, r3
    2676:	129b      	asrs	r3, r3, #10
	var6 = (var4 * var5) >> 1;
    2678:	4343      	muls	r3, r0
    267a:	105b      	asrs	r3, r3, #1
	calc_hum = (((var3 + var6) >> 10) * ((int32_t) 1000)) >> 12;
    267c:	4443      	add	r3, r8
    267e:	129a      	asrs	r2, r3, #10
    2680:	23fa      	movs	r3, #250	; 0xfa
    2682:	009b      	lsls	r3, r3, #2
    2684:	4353      	muls	r3, r2
    2686:	131a      	asrs	r2, r3, #12
    2688:	43d3      	mvns	r3, r2
    268a:	17db      	asrs	r3, r3, #31
	return (uint32_t) calc_hum;
    268c:	401a      	ands	r2, r3
    268e:	4b61      	ldr	r3, [pc, #388]	; (2814 <bme680_get_sensor_data+0x390>)
    2690:	429a      	cmp	r2, r3
    2692:	dd00      	ble.n	2696 <bme680_get_sensor_data+0x212>
    2694:	001a      	movs	r2, r3
				data->humidity = calc_humidity(adc_hum, dev);
    2696:	465b      	mov	r3, fp
    2698:	60da      	str	r2, [r3, #12]
		((int64_t) lookupTable1[gas_range])) >> 16;
    269a:	260f      	movs	r6, #15
    269c:	464b      	mov	r3, r9
    269e:	401e      	ands	r6, r3
    26a0:	9600      	str	r6, [sp, #0]
	var1 = (int64_t) ((1340 + (5 * (int64_t) dev->calib.range_sw_err)) *
    26a2:	2336      	movs	r3, #54	; 0x36
    26a4:	56e9      	ldrsb	r1, [r5, r3]
    26a6:	000a      	movs	r2, r1
    26a8:	17c9      	asrs	r1, r1, #31
    26aa:	000b      	movs	r3, r1
    26ac:	0f91      	lsrs	r1, r2, #30
    26ae:	468c      	mov	ip, r1
    26b0:	0099      	lsls	r1, r3, #2
    26b2:	4666      	mov	r6, ip
    26b4:	4331      	orrs	r1, r6
    26b6:	0090      	lsls	r0, r2, #2
    26b8:	1880      	adds	r0, r0, r2
    26ba:	4159      	adcs	r1, r3
    26bc:	4a56      	ldr	r2, [pc, #344]	; (2818 <bme680_get_sensor_data+0x394>)
    26be:	2300      	movs	r3, #0
    26c0:	1880      	adds	r0, r0, r2
    26c2:	4159      	adcs	r1, r3
		((int64_t) lookupTable1[gas_range])) >> 16;
    26c4:	9b00      	ldr	r3, [sp, #0]
    26c6:	009e      	lsls	r6, r3, #2
    26c8:	4b54      	ldr	r3, [pc, #336]	; (281c <bme680_get_sensor_data+0x398>)
    26ca:	199e      	adds	r6, r3, r6
	var1 = (int64_t) ((1340 + (5 * (int64_t) dev->calib.range_sw_err)) *
    26cc:	4b4c      	ldr	r3, [pc, #304]	; (2800 <bme680_get_sensor_data+0x37c>)
    26ce:	4698      	mov	r8, r3
    26d0:	6872      	ldr	r2, [r6, #4]
    26d2:	2300      	movs	r3, #0
    26d4:	47c0      	blx	r8
    26d6:	040b      	lsls	r3, r1, #16
    26d8:	469c      	mov	ip, r3
    26da:	2200      	movs	r2, #0
    26dc:	2300      	movs	r3, #0
    26de:	9200      	str	r2, [sp, #0]
    26e0:	9301      	str	r3, [sp, #4]
    26e2:	0c03      	lsrs	r3, r0, #16
    26e4:	9300      	str	r3, [sp, #0]
    26e6:	4663      	mov	r3, ip
    26e8:	9a00      	ldr	r2, [sp, #0]
    26ea:	431a      	orrs	r2, r3
    26ec:	9200      	str	r2, [sp, #0]
    26ee:	140b      	asrs	r3, r1, #16
    26f0:	9301      	str	r3, [sp, #4]
			adc_gas_res = (uint16_t) ((uint32_t) buff[13] * 4 | (((uint32_t) buff[14]) / 64));
    26f2:	4653      	mov	r3, sl
    26f4:	0099      	lsls	r1, r3, #2
    26f6:	464b      	mov	r3, r9
    26f8:	0998      	lsrs	r0, r3, #6
	var2 = (((int64_t) ((int64_t) gas_res_adc << 15) - (int64_t) (16777216)) + var1);
    26fa:	4308      	orrs	r0, r1
    26fc:	2100      	movs	r1, #0
    26fe:	03c0      	lsls	r0, r0, #15
    2700:	22ff      	movs	r2, #255	; 0xff
    2702:	0612      	lsls	r2, r2, #24
    2704:	2301      	movs	r3, #1
    2706:	425b      	negs	r3, r3
    2708:	1880      	adds	r0, r0, r2
    270a:	4159      	adcs	r1, r3
    270c:	9a00      	ldr	r2, [sp, #0]
    270e:	9b01      	ldr	r3, [sp, #4]
    2710:	1880      	adds	r0, r0, r2
    2712:	4159      	adcs	r1, r3
    2714:	9002      	str	r0, [sp, #8]
    2716:	9103      	str	r1, [sp, #12]
	var3 = (((int64_t) lookupTable2[gas_range] * (int64_t) var1) >> 9);
    2718:	6c70      	ldr	r0, [r6, #68]	; 0x44
    271a:	2100      	movs	r1, #0
    271c:	47c0      	blx	r8
    271e:	05ce      	lsls	r6, r1, #23
    2720:	0a43      	lsrs	r3, r0, #9
    2722:	4333      	orrs	r3, r6
    2724:	9300      	str	r3, [sp, #0]
    2726:	124b      	asrs	r3, r1, #9
    2728:	9301      	str	r3, [sp, #4]
	calc_gas_res = (uint32_t) ((var3 + ((int64_t) var2 >> 1)) / (int64_t) var2);
    272a:	9a02      	ldr	r2, [sp, #8]
    272c:	9b03      	ldr	r3, [sp, #12]
    272e:	07de      	lsls	r6, r3, #31
    2730:	0850      	lsrs	r0, r2, #1
    2732:	4330      	orrs	r0, r6
    2734:	9b03      	ldr	r3, [sp, #12]
    2736:	1059      	asrs	r1, r3, #1
    2738:	9a00      	ldr	r2, [sp, #0]
    273a:	9b01      	ldr	r3, [sp, #4]
    273c:	1880      	adds	r0, r0, r2
    273e:	4159      	adcs	r1, r3
    2740:	9a02      	ldr	r2, [sp, #8]
    2742:	9b03      	ldr	r3, [sp, #12]
    2744:	4e36      	ldr	r6, [pc, #216]	; (2820 <bme680_get_sensor_data+0x39c>)
    2746:	47b0      	blx	r6
    2748:	465b      	mov	r3, fp
    274a:	6118      	str	r0, [r3, #16]
			dev->delay_ms(BME680_POLL_PERIOD_MS);
		}
		tries--;
	} while (tries);

	if (!tries)
    274c:	2c00      	cmp	r4, #0
    274e:	d04e      	beq.n	27ee <bme680_get_sensor_data+0x36a>
		if (rslt == BME680_OK) {
    2750:	2f00      	cmp	r7, #0
    2752:	d000      	beq.n	2756 <bme680_get_sensor_data+0x2d2>
    2754:	e6a4      	b.n	24a0 <bme680_get_sensor_data+0x1c>
			if (data->status & BME680_NEW_DATA_MSK)
    2756:	465b      	mov	r3, fp
    2758:	781b      	ldrb	r3, [r3, #0]
    275a:	2b7f      	cmp	r3, #127	; 0x7f
    275c:	d843      	bhi.n	27e6 <bme680_get_sensor_data+0x362>
				dev->new_fields = 0;
    275e:	2200      	movs	r2, #0
    2760:	2345      	movs	r3, #69	; 0x45
    2762:	54ea      	strb	r2, [r5, r3]
    2764:	e69c      	b.n	24a0 <bme680_get_sensor_data+0x1c>
    2766:	3c01      	subs	r4, #1
    2768:	b2e4      	uxtb	r4, r4
	} while (tries);
    276a:	2c00      	cmp	r4, #0
    276c:	d041      	beq.n	27f2 <bme680_get_sensor_data+0x36e>
		if (rslt == BME680_OK) {
    276e:	2f00      	cmp	r7, #0
    2770:	d1f9      	bne.n	2766 <bme680_get_sensor_data+0x2e2>
				dev);
    2772:	464b      	mov	r3, r9
    2774:	220f      	movs	r2, #15
    2776:	a90a      	add	r1, sp, #40	; 0x28
    2778:	201d      	movs	r0, #29
    277a:	4e2a      	ldr	r6, [pc, #168]	; (2824 <bme680_get_sensor_data+0x3a0>)
    277c:	47b0      	blx	r6
    277e:	0007      	movs	r7, r0
			data->status = buff[0] & BME680_NEW_DATA_MSK;
    2780:	ab0a      	add	r3, sp, #40	; 0x28
    2782:	781b      	ldrb	r3, [r3, #0]
			data->gas_index = buff[0] & BME680_GAS_INDEX_MSK;
    2784:	220f      	movs	r2, #15
    2786:	401a      	ands	r2, r3
    2788:	706a      	strb	r2, [r5, #1]
			data->meas_index = buff[1];
    278a:	aa0a      	add	r2, sp, #40	; 0x28
    278c:	7852      	ldrb	r2, [r2, #1]
    278e:	70aa      	strb	r2, [r5, #2]
			adc_pres = (uint32_t) (((uint32_t) buff[2] * 4096) | ((uint32_t) buff[3] * 16)
    2790:	aa0a      	add	r2, sp, #40	; 0x28
    2792:	7892      	ldrb	r2, [r2, #2]
    2794:	9200      	str	r2, [sp, #0]
    2796:	aa0a      	add	r2, sp, #40	; 0x28
    2798:	78d2      	ldrb	r2, [r2, #3]
    279a:	9202      	str	r2, [sp, #8]
				| ((uint32_t) buff[4] / 16));
    279c:	aa0a      	add	r2, sp, #40	; 0x28
    279e:	7912      	ldrb	r2, [r2, #4]
    27a0:	9205      	str	r2, [sp, #20]
			adc_temp = (uint32_t) (((uint32_t) buff[5] * 4096) | ((uint32_t) buff[6] * 16)
    27a2:	aa0a      	add	r2, sp, #40	; 0x28
    27a4:	7951      	ldrb	r1, [r2, #5]
    27a6:	7990      	ldrb	r0, [r2, #6]
				| ((uint32_t) buff[7] / 16));
    27a8:	79d2      	ldrb	r2, [r2, #7]
    27aa:	4694      	mov	ip, r2
			adc_hum = (uint16_t) (((uint32_t) buff[8] * 256) | (uint32_t) buff[9]);
    27ac:	aa0a      	add	r2, sp, #40	; 0x28
    27ae:	7a12      	ldrb	r2, [r2, #8]
    27b0:	9206      	str	r2, [sp, #24]
    27b2:	aa0a      	add	r2, sp, #40	; 0x28
    27b4:	7a52      	ldrb	r2, [r2, #9]
    27b6:	4690      	mov	r8, r2
			adc_gas_res = (uint16_t) ((uint32_t) buff[13] * 4 | (((uint32_t) buff[14]) / 64));
    27b8:	aa0a      	add	r2, sp, #40	; 0x28
    27ba:	7b52      	ldrb	r2, [r2, #13]
    27bc:	4692      	mov	sl, r2
    27be:	aa0a      	add	r2, sp, #40	; 0x28
    27c0:	7b92      	ldrb	r2, [r2, #14]
			data->status = buff[0] & BME680_NEW_DATA_MSK;
    27c2:	267f      	movs	r6, #127	; 0x7f
    27c4:	43b3      	bics	r3, r6
			data->status |= buff[14] & BME680_GASM_VALID_MSK;
    27c6:	3e5f      	subs	r6, #95	; 0x5f
    27c8:	4016      	ands	r6, r2
    27ca:	4333      	orrs	r3, r6
			data->status |= buff[14] & BME680_HEAT_STAB_MSK;
    27cc:	2610      	movs	r6, #16
    27ce:	4016      	ands	r6, r2
    27d0:	4333      	orrs	r3, r6
    27d2:	702b      	strb	r3, [r5, #0]
			if (data->status & BME680_NEW_DATA_MSK) {
    27d4:	b25b      	sxtb	r3, r3
    27d6:	2b00      	cmp	r3, #0
    27d8:	da00      	bge.n	27dc <bme680_get_sensor_data+0x358>
    27da:	e676      	b.n	24ca <bme680_get_sensor_data+0x46>
			dev->delay_ms(BME680_POLL_PERIOD_MS);
    27dc:	200a      	movs	r0, #10
    27de:	464b      	mov	r3, r9
    27e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    27e2:	4798      	blx	r3
    27e4:	e7bf      	b.n	2766 <bme680_get_sensor_data+0x2e2>
				dev->new_fields = 1;
    27e6:	2201      	movs	r2, #1
    27e8:	2345      	movs	r3, #69	; 0x45
    27ea:	54ea      	strb	r2, [r5, r3]
    27ec:	e658      	b.n	24a0 <bme680_get_sensor_data+0x1c>
		rslt = BME680_W_NO_NEW_DATA;
    27ee:	2702      	movs	r7, #2
    27f0:	e656      	b.n	24a0 <bme680_get_sensor_data+0x1c>
    27f2:	2702      	movs	r7, #2
	return rslt;
    27f4:	e654      	b.n	24a0 <bme680_get_sensor_data+0x1c>
    27f6:	46c0      	nop			; (mov r8, r8)
    27f8:	00000245 	.word	0x00000245
    27fc:	00008c59 	.word	0x00008c59
    2800:	00005ff9 	.word	0x00005ff9
    2804:	ffff0600 	.word	0xffff0600
    2808:	00000c35 	.word	0x00000c35
    280c:	00005c49 	.word	0x00005c49
    2810:	00005d5d 	.word	0x00005d5d
    2814:	000186a0 	.word	0x000186a0
    2818:	0000053c 	.word	0x0000053c
    281c:	20000008 	.word	0x20000008
    2820:	00005fb1 	.word	0x00005fb1
    2824:	00001cbd 	.word	0x00001cbd

00002828 <_ZN15Adafruit_BME6805beginEv>:
bool Adafruit_BME680::begin() {
    2828:	b510      	push	{r4, lr}
    282a:	0004      	movs	r4, r0
	_BME680_SoftwareSPI_MOSI = -1;
    282c:	4b1d      	ldr	r3, [pc, #116]	; (28a4 <_ZN15Adafruit_BME6805beginEv+0x7c>)
    282e:	22ff      	movs	r2, #255	; 0xff
    2830:	731a      	strb	r2, [r3, #12]
  _BME680_SoftwareSPI_MISO = -1;
    2832:	735a      	strb	r2, [r3, #13]
  _BME680_SoftwareSPI_SCK = -1;
    2834:	739a      	strb	r2, [r3, #14]
_i2caddr = BME680_ADDRESS;
    2836:	3a13      	subs	r2, #19
    2838:	7742      	strb	r2, [r0, #29]
  _filterEnabled = _tempEnabled = _humEnabled = _presEnabled = _gasEnabled = false;
    283a:	2300      	movs	r3, #0
    283c:	7503      	strb	r3, [r0, #20]
    283e:	74c3      	strb	r3, [r0, #19]
    2840:	7483      	strb	r3, [r0, #18]
    2842:	7443      	strb	r3, [r0, #17]
    2844:	7403      	strb	r3, [r0, #16]
    gas_sensor.dev_id = BME680_ADDRESS;
    2846:	3321      	adds	r3, #33	; 0x21
    2848:	54c2      	strb	r2, [r0, r3]
    gas_sensor.intf = BME680_I2C_INTF;
    284a:	3aeb      	subs	r2, #235	; 0xeb
    284c:	3301      	adds	r3, #1
    284e:	54c2      	strb	r2, [r0, r3]
    gas_sensor.read = &i2c_read;
    2850:	4b15      	ldr	r3, [pc, #84]	; (28a8 <_ZN15Adafruit_BME6805beginEv+0x80>)
    2852:	6683      	str	r3, [r0, #104]	; 0x68
    gas_sensor.write = &i2c_write;
    2854:	4b15      	ldr	r3, [pc, #84]	; (28ac <_ZN15Adafruit_BME6805beginEv+0x84>)
    2856:	66c3      	str	r3, [r0, #108]	; 0x6c
	gas_sensor.delay_ms = delay_msec;
    2858:	4b15      	ldr	r3, [pc, #84]	; (28b0 <_ZN15Adafruit_BME6805beginEv+0x88>)
    285a:	6703      	str	r3, [r0, #112]	; 0x70
  rslt = bme680_init(&gas_sensor);
    285c:	3020      	adds	r0, #32
    285e:	4b15      	ldr	r3, [pc, #84]	; (28b4 <_ZN15Adafruit_BME6805beginEv+0x8c>)
    2860:	4798      	blx	r3
    return false;
    2862:	2300      	movs	r3, #0
  if (rslt != BME680_OK) 
    2864:	2800      	cmp	r0, #0
    2866:	d001      	beq.n	286c <_ZN15Adafruit_BME6805beginEv+0x44>
}
    2868:	0018      	movs	r0, r3
    286a:	bd10      	pop	{r4, pc}
  gas_sensor.tph_sett.os_temp = oversample;
    286c:	2204      	movs	r2, #4
    286e:	3359      	adds	r3, #89	; 0x59
    2870:	54e2      	strb	r2, [r4, r3]
    _tempEnabled = true;
    2872:	3b58      	subs	r3, #88	; 0x58
    2874:	7463      	strb	r3, [r4, #17]
  gas_sensor.tph_sett.os_hum = oversample;
    2876:	3a02      	subs	r2, #2
    2878:	2158      	movs	r1, #88	; 0x58
    287a:	5462      	strb	r2, [r4, r1]
    _humEnabled = true;
    287c:	74a3      	strb	r3, [r4, #18]
  gas_sensor.tph_sett.os_pres = oversample;
    287e:	3003      	adds	r0, #3
    2880:	3102      	adds	r1, #2
    2882:	5460      	strb	r0, [r4, r1]
    _presEnabled = true;
    2884:	74e3      	strb	r3, [r4, #19]
  gas_sensor.tph_sett.filter = filtersize;
    2886:	3101      	adds	r1, #1
    2888:	5462      	strb	r2, [r4, r1]
    _filterEnabled = true;
    288a:	7423      	strb	r3, [r4, #16]
  gas_sensor.gas_sett.heatr_temp = heaterTemp;
    288c:	31e5      	adds	r1, #229	; 0xe5
    288e:	325e      	adds	r2, #94	; 0x5e
    2890:	52a1      	strh	r1, [r4, r2]
  gas_sensor.gas_sett.heatr_dur = heaterTime;
    2892:	39aa      	subs	r1, #170	; 0xaa
    2894:	3202      	adds	r2, #2
    2896:	52a1      	strh	r1, [r4, r2]
    gas_sensor.gas_sett.run_gas = BME680_ENABLE_GAS_MEAS;
    2898:	3a04      	subs	r2, #4
    289a:	54a3      	strb	r3, [r4, r2]
    _gasEnabled = true;
    289c:	7523      	strb	r3, [r4, #20]
  gas_sensor.power_mode = BME680_FORCED_MODE;
    289e:	3206      	adds	r2, #6
    28a0:	54a3      	strb	r3, [r4, r2]
  return true;
    28a2:	e7e1      	b.n	2868 <_ZN15Adafruit_BME6805beginEv+0x40>
    28a4:	20000680 	.word	0x20000680
    28a8:	00001c79 	.word	0x00001c79
    28ac:	00001b09 	.word	0x00001b09
    28b0:	00000ab5 	.word	0x00000ab5
    28b4:	00001e4d 	.word	0x00001e4d

000028b8 <_ZN15Adafruit_BME68014performReadingEv>:
bool Adafruit_BME680::performReading(void) {
    28b8:	b570      	push	{r4, r5, r6, lr}
    28ba:	b086      	sub	sp, #24
    28bc:	0004      	movs	r4, r0
  gas_sensor.power_mode = BME680_FORCED_MODE;
    28be:	2201      	movs	r2, #1
    28c0:	2364      	movs	r3, #100	; 0x64
    28c2:	54c2      	strb	r2, [r0, r3]
  uint8_t set_required_settings = 0;
    28c4:	7c40      	ldrb	r0, [r0, #17]
  if (_humEnabled)
    28c6:	7ca3      	ldrb	r3, [r4, #18]
    28c8:	2b00      	cmp	r3, #0
    28ca:	d001      	beq.n	28d0 <_ZN15Adafruit_BME68014performReadingEv+0x18>
    set_required_settings |= BME680_OSH_SEL;
    28cc:	2304      	movs	r3, #4
    28ce:	4318      	orrs	r0, r3
  if (_presEnabled)
    28d0:	7ce3      	ldrb	r3, [r4, #19]
    28d2:	2b00      	cmp	r3, #0
    28d4:	d001      	beq.n	28da <_ZN15Adafruit_BME68014performReadingEv+0x22>
    set_required_settings |= BME680_OSP_SEL;
    28d6:	2302      	movs	r3, #2
    28d8:	4318      	orrs	r0, r3
  if (_filterEnabled)
    28da:	7c23      	ldrb	r3, [r4, #16]
    28dc:	2b00      	cmp	r3, #0
    28de:	d001      	beq.n	28e4 <_ZN15Adafruit_BME68014performReadingEv+0x2c>
    set_required_settings |= BME680_FILTER_SEL;
    28e0:	2310      	movs	r3, #16
    28e2:	4318      	orrs	r0, r3
  if (_gasEnabled) 
    28e4:	7d23      	ldrb	r3, [r4, #20]
    28e6:	2b00      	cmp	r3, #0
    28e8:	d001      	beq.n	28ee <_ZN15Adafruit_BME68014performReadingEv+0x36>
    set_required_settings |= BME680_GAS_SENSOR_SEL;
    28ea:	23c8      	movs	r3, #200	; 0xc8
    28ec:	4318      	orrs	r0, r3
  rslt = bme680_set_sensor_settings(set_required_settings, &gas_sensor);
    28ee:	0025      	movs	r5, r4
    28f0:	3520      	adds	r5, #32
    28f2:	b280      	uxth	r0, r0
    28f4:	0029      	movs	r1, r5
    28f6:	4b2e      	ldr	r3, [pc, #184]	; (29b0 <_ZN15Adafruit_BME68014performReadingEv+0xf8>)
    28f8:	4798      	blx	r3
    return false;
    28fa:	2600      	movs	r6, #0
  if (rslt != BME680_OK) 
    28fc:	2800      	cmp	r0, #0
    28fe:	d002      	beq.n	2906 <_ZN15Adafruit_BME68014performReadingEv+0x4e>
}
    2900:	0030      	movs	r0, r6
    2902:	b006      	add	sp, #24
    2904:	bd70      	pop	{r4, r5, r6, pc}
  rslt = bme680_set_sensor_mode(&gas_sensor);
    2906:	0028      	movs	r0, r5
    2908:	4b2a      	ldr	r3, [pc, #168]	; (29b4 <_ZN15Adafruit_BME68014performReadingEv+0xfc>)
    290a:	4798      	blx	r3
  if (rslt != BME680_OK) 
    290c:	2800      	cmp	r0, #0
    290e:	d1f7      	bne.n	2900 <_ZN15Adafruit_BME68014performReadingEv+0x48>
  bme680_get_profile_dur(&meas_period, &gas_sensor);
    2910:	466b      	mov	r3, sp
    2912:	1c9e      	adds	r6, r3, #2
    2914:	0029      	movs	r1, r5
    2916:	0030      	movs	r0, r6
    2918:	4b27      	ldr	r3, [pc, #156]	; (29b8 <_ZN15Adafruit_BME68014performReadingEv+0x100>)
    291a:	4798      	blx	r3
  delay_msec(meas_period * 2); /* Delay till the measurement is ready */
    291c:	8830      	ldrh	r0, [r6, #0]
    291e:	0040      	lsls	r0, r0, #1
  delay_ms(ms);
    2920:	b280      	uxth	r0, r0
    2922:	4b26      	ldr	r3, [pc, #152]	; (29bc <_ZN15Adafruit_BME68014performReadingEv+0x104>)
    2924:	4798      	blx	r3
  rslt = bme680_get_sensor_data(&data, &gas_sensor);
    2926:	0029      	movs	r1, r5
    2928:	a801      	add	r0, sp, #4
    292a:	4b25      	ldr	r3, [pc, #148]	; (29c0 <_ZN15Adafruit_BME68014performReadingEv+0x108>)
    292c:	4798      	blx	r3
    return false;
    292e:	2600      	movs	r6, #0
  if (rslt != BME680_OK) 
    2930:	2800      	cmp	r0, #0
    2932:	d1e5      	bne.n	2900 <_ZN15Adafruit_BME68014performReadingEv+0x48>
  if (_tempEnabled) {
    2934:	7c63      	ldrb	r3, [r4, #17]
    2936:	2b00      	cmp	r3, #0
    2938:	d029      	beq.n	298e <_ZN15Adafruit_BME68014performReadingEv+0xd6>
    temperature = data.temperature / 100.0;
    293a:	ab01      	add	r3, sp, #4
    293c:	2004      	movs	r0, #4
    293e:	5e18      	ldrsh	r0, [r3, r0]
    2940:	4b20      	ldr	r3, [pc, #128]	; (29c4 <_ZN15Adafruit_BME68014performReadingEv+0x10c>)
    2942:	4798      	blx	r3
    2944:	2200      	movs	r2, #0
    2946:	4b20      	ldr	r3, [pc, #128]	; (29c8 <_ZN15Adafruit_BME68014performReadingEv+0x110>)
    2948:	4d20      	ldr	r5, [pc, #128]	; (29cc <_ZN15Adafruit_BME68014performReadingEv+0x114>)
    294a:	47a8      	blx	r5
    294c:	4b20      	ldr	r3, [pc, #128]	; (29d0 <_ZN15Adafruit_BME68014performReadingEv+0x118>)
    294e:	4798      	blx	r3
    2950:	6020      	str	r0, [r4, #0]
  if (_humEnabled) {
    2952:	7ca3      	ldrb	r3, [r4, #18]
    2954:	2b00      	cmp	r3, #0
    2956:	d01d      	beq.n	2994 <_ZN15Adafruit_BME68014performReadingEv+0xdc>
    humidity = data.humidity / 1000.0;
    2958:	9804      	ldr	r0, [sp, #16]
    295a:	4b1e      	ldr	r3, [pc, #120]	; (29d4 <_ZN15Adafruit_BME68014performReadingEv+0x11c>)
    295c:	4798      	blx	r3
    295e:	2200      	movs	r2, #0
    2960:	4b1d      	ldr	r3, [pc, #116]	; (29d8 <_ZN15Adafruit_BME68014performReadingEv+0x120>)
    2962:	4d1a      	ldr	r5, [pc, #104]	; (29cc <_ZN15Adafruit_BME68014performReadingEv+0x114>)
    2964:	47a8      	blx	r5
    2966:	4b1a      	ldr	r3, [pc, #104]	; (29d0 <_ZN15Adafruit_BME68014performReadingEv+0x118>)
    2968:	4798      	blx	r3
    296a:	60a0      	str	r0, [r4, #8]
  if (_presEnabled) {
    296c:	7ce3      	ldrb	r3, [r4, #19]
    296e:	2b00      	cmp	r3, #0
    2970:	d013      	beq.n	299a <_ZN15Adafruit_BME68014performReadingEv+0xe2>
    pressure = data.pressure;
    2972:	9803      	ldr	r0, [sp, #12]
    2974:	4b19      	ldr	r3, [pc, #100]	; (29dc <_ZN15Adafruit_BME68014performReadingEv+0x124>)
    2976:	4798      	blx	r3
    2978:	6060      	str	r0, [r4, #4]
  if (_gasEnabled) {
    297a:	7d26      	ldrb	r6, [r4, #20]
    297c:	2e00      	cmp	r6, #0
    297e:	d014      	beq.n	29aa <_ZN15Adafruit_BME68014performReadingEv+0xf2>
    if (data.status & BME680_HEAT_STAB_MSK) {
    2980:	ab01      	add	r3, sp, #4
    2982:	781b      	ldrb	r3, [r3, #0]
    2984:	06db      	lsls	r3, r3, #27
    2986:	d40b      	bmi.n	29a0 <_ZN15Adafruit_BME68014performReadingEv+0xe8>
      gas_resistance = 0;
    2988:	2300      	movs	r3, #0
    298a:	60e3      	str	r3, [r4, #12]
    298c:	e7b8      	b.n	2900 <_ZN15Adafruit_BME68014performReadingEv+0x48>
    temperature = NAN;
    298e:	4b14      	ldr	r3, [pc, #80]	; (29e0 <_ZN15Adafruit_BME68014performReadingEv+0x128>)
    2990:	6023      	str	r3, [r4, #0]
    2992:	e7de      	b.n	2952 <_ZN15Adafruit_BME68014performReadingEv+0x9a>
    humidity = NAN;
    2994:	4b12      	ldr	r3, [pc, #72]	; (29e0 <_ZN15Adafruit_BME68014performReadingEv+0x128>)
    2996:	60a3      	str	r3, [r4, #8]
    2998:	e7e8      	b.n	296c <_ZN15Adafruit_BME68014performReadingEv+0xb4>
    pressure = NAN;
    299a:	4b11      	ldr	r3, [pc, #68]	; (29e0 <_ZN15Adafruit_BME68014performReadingEv+0x128>)
    299c:	6063      	str	r3, [r4, #4]
    299e:	e7ec      	b.n	297a <_ZN15Adafruit_BME68014performReadingEv+0xc2>
      gas_resistance = data.gas_resistance;
    29a0:	9805      	ldr	r0, [sp, #20]
    29a2:	4b0e      	ldr	r3, [pc, #56]	; (29dc <_ZN15Adafruit_BME68014performReadingEv+0x124>)
    29a4:	4798      	blx	r3
    29a6:	60e0      	str	r0, [r4, #12]
    29a8:	e7aa      	b.n	2900 <_ZN15Adafruit_BME68014performReadingEv+0x48>
  return true;
    29aa:	2601      	movs	r6, #1
    29ac:	e7a8      	b.n	2900 <_ZN15Adafruit_BME68014performReadingEv+0x48>
    29ae:	46c0      	nop			; (mov r8, r8)
    29b0:	00002099 	.word	0x00002099
    29b4:	00001fe1 	.word	0x00001fe1
    29b8:	00002411 	.word	0x00002411
    29bc:	00000a95 	.word	0x00000a95
    29c0:	00002485 	.word	0x00002485
    29c4:	00008505 	.word	0x00008505
    29c8:	40590000 	.word	0x40590000
    29cc:	000070c9 	.word	0x000070c9
    29d0:	0000869d 	.word	0x0000869d
    29d4:	00008589 	.word	0x00008589
    29d8:	408f4000 	.word	0x408f4000
    29dc:	00006a1d 	.word	0x00006a1d
    29e0:	7fc00000 	.word	0x7fc00000

000029e4 <_ZN9GDEW027W311TransactSPIEh>:

void GDEW027W3::TransactSPI(uint8_t data)
{	
	REG_SERCOM1_SPI_DATA=data;
    29e4:	4b03      	ldr	r3, [pc, #12]	; (29f4 <_ZN9GDEW027W311TransactSPIEh+0x10>)
    29e6:	6019      	str	r1, [r3, #0]
	while(!SERCOM1->SPI.INTFLAG.bit.TXC);
    29e8:	4a03      	ldr	r2, [pc, #12]	; (29f8 <_ZN9GDEW027W311TransactSPIEh+0x14>)
    29ea:	7e13      	ldrb	r3, [r2, #24]
    29ec:	079b      	lsls	r3, r3, #30
    29ee:	d5fc      	bpl.n	29ea <_ZN9GDEW027W311TransactSPIEh+0x6>
	
}
    29f0:	4770      	bx	lr
    29f2:	46c0      	nop			; (mov r8, r8)
    29f4:	42000c28 	.word	0x42000c28
    29f8:	42000c00 	.word	0x42000c00

000029fc <_ZN9GDEW027W315IL91874_sendCmdEh>:

void GDEW027W3::IL91874_sendCmd(uint8_t data)
{
    29fc:	b510      	push	{r4, lr}
	GDEW027W3_DC_COMMAND;
    29fe:	4b06      	ldr	r3, [pc, #24]	; (2a18 <_ZN9GDEW027W315IL91874_sendCmdEh+0x1c>)
    2a00:	2280      	movs	r2, #128	; 0x80
    2a02:	0212      	lsls	r2, r2, #8
    2a04:	601a      	str	r2, [r3, #0]
	GDEW027W3_CS_LOW;	
    2a06:	2480      	movs	r4, #128	; 0x80
    2a08:	0264      	lsls	r4, r4, #9
    2a0a:	601c      	str	r4, [r3, #0]
	TransactSPI(data);
    2a0c:	4b03      	ldr	r3, [pc, #12]	; (2a1c <_ZN9GDEW027W315IL91874_sendCmdEh+0x20>)
    2a0e:	4798      	blx	r3
	GDEW027W3_CS_HIGH;
    2a10:	4b03      	ldr	r3, [pc, #12]	; (2a20 <_ZN9GDEW027W315IL91874_sendCmdEh+0x24>)
    2a12:	601c      	str	r4, [r3, #0]
}
    2a14:	bd10      	pop	{r4, pc}
    2a16:	46c0      	nop			; (mov r8, r8)
    2a18:	41004414 	.word	0x41004414
    2a1c:	000029e5 	.word	0x000029e5
    2a20:	41004418 	.word	0x41004418

00002a24 <_ZN9GDEW027W316IL91874_sendDataEh>:

void GDEW027W3::IL91874_sendData(uint8_t data)
{
    2a24:	b570      	push	{r4, r5, r6, lr}
	GDEW027W3_DC_DATA;
    2a26:	4c06      	ldr	r4, [pc, #24]	; (2a40 <_ZN9GDEW027W316IL91874_sendDataEh+0x1c>)
    2a28:	2380      	movs	r3, #128	; 0x80
    2a2a:	021b      	lsls	r3, r3, #8
    2a2c:	6023      	str	r3, [r4, #0]
	GDEW027W3_CS_LOW;	
    2a2e:	2580      	movs	r5, #128	; 0x80
    2a30:	026d      	lsls	r5, r5, #9
    2a32:	4b04      	ldr	r3, [pc, #16]	; (2a44 <_ZN9GDEW027W316IL91874_sendDataEh+0x20>)
    2a34:	601d      	str	r5, [r3, #0]
	TransactSPI(data);
    2a36:	4b04      	ldr	r3, [pc, #16]	; (2a48 <_ZN9GDEW027W316IL91874_sendDataEh+0x24>)
    2a38:	4798      	blx	r3
	GDEW027W3_CS_HIGH;
    2a3a:	6025      	str	r5, [r4, #0]
}
    2a3c:	bd70      	pop	{r4, r5, r6, pc}
    2a3e:	46c0      	nop			; (mov r8, r8)
    2a40:	41004418 	.word	0x41004418
    2a44:	41004414 	.word	0x41004414
    2a48:	000029e5 	.word	0x000029e5

00002a4c <_ZN9GDEW027W36SetLutEv>:
	delay_ms(2);
	SetLut();
}	

//set LUTS
void GDEW027W3::SetLut(void) {
    2a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2a4e:	0004      	movs	r4, r0
uint16_t count=0;
    IL91874_sendCmd(0x20);							//vcom
    2a50:	2120      	movs	r1, #32
    2a52:	4b24      	ldr	r3, [pc, #144]	; (2ae4 <_ZN9GDEW027W36SetLutEv+0x98>)
    2a54:	4798      	blx	r3
    2a56:	4d24      	ldr	r5, [pc, #144]	; (2ae8 <_ZN9GDEW027W36SetLutEv+0x9c>)
    2a58:	002f      	movs	r7, r5
    2a5a:	372c      	adds	r7, #44	; 0x2c
    for (count = 0; count < 44; count++)
    {
      IL91874_sendData(lut_20_vcomDC[count]);
    2a5c:	4e23      	ldr	r6, [pc, #140]	; (2aec <_ZN9GDEW027W36SetLutEv+0xa0>)
    2a5e:	7829      	ldrb	r1, [r5, #0]
    2a60:	0020      	movs	r0, r4
    2a62:	47b0      	blx	r6
    2a64:	3501      	adds	r5, #1
    for (count = 0; count < 44; count++)
    2a66:	42bd      	cmp	r5, r7
    2a68:	d1f9      	bne.n	2a5e <_ZN9GDEW027W36SetLutEv+0x12>
    }

    IL91874_sendCmd(0x21);							//white to white lut
    2a6a:	2121      	movs	r1, #33	; 0x21
    2a6c:	0020      	movs	r0, r4
    2a6e:	4b1d      	ldr	r3, [pc, #116]	; (2ae4 <_ZN9GDEW027W36SetLutEv+0x98>)
    2a70:	4798      	blx	r3
    2a72:	4e1d      	ldr	r6, [pc, #116]	; (2ae8 <_ZN9GDEW027W36SetLutEv+0x9c>)
    2a74:	0035      	movs	r5, r6
    2a76:	352c      	adds	r5, #44	; 0x2c
    2a78:	3656      	adds	r6, #86	; 0x56
    for (count = 0; count < 42; count++)
    {
      IL91874_sendData(lut_21_ww[count]);
    2a7a:	4f1c      	ldr	r7, [pc, #112]	; (2aec <_ZN9GDEW027W36SetLutEv+0xa0>)
    2a7c:	7829      	ldrb	r1, [r5, #0]
    2a7e:	0020      	movs	r0, r4
    2a80:	47b8      	blx	r7
    2a82:	3501      	adds	r5, #1
    for (count = 0; count < 42; count++)
    2a84:	42b5      	cmp	r5, r6
    2a86:	d1f9      	bne.n	2a7c <_ZN9GDEW027W36SetLutEv+0x30>
    }

    IL91874_sendCmd(0x22);							//black to white lut
    2a88:	2122      	movs	r1, #34	; 0x22
    2a8a:	0020      	movs	r0, r4
    2a8c:	4b15      	ldr	r3, [pc, #84]	; (2ae4 <_ZN9GDEW027W36SetLutEv+0x98>)
    2a8e:	4798      	blx	r3
    2a90:	4e15      	ldr	r6, [pc, #84]	; (2ae8 <_ZN9GDEW027W36SetLutEv+0x9c>)
    2a92:	0035      	movs	r5, r6
    2a94:	3558      	adds	r5, #88	; 0x58
    2a96:	3682      	adds	r6, #130	; 0x82
    for (count = 0; count < 42; count++)
    {
      IL91874_sendData(lut_22_bw[count]);
    2a98:	4f14      	ldr	r7, [pc, #80]	; (2aec <_ZN9GDEW027W36SetLutEv+0xa0>)
    2a9a:	7829      	ldrb	r1, [r5, #0]
    2a9c:	0020      	movs	r0, r4
    2a9e:	47b8      	blx	r7
    2aa0:	3501      	adds	r5, #1
    for (count = 0; count < 42; count++)
    2aa2:	42ae      	cmp	r6, r5
    2aa4:	d1f9      	bne.n	2a9a <_ZN9GDEW027W36SetLutEv+0x4e>
    }

    IL91874_sendCmd(0x23);							//white to black lut
    2aa6:	2123      	movs	r1, #35	; 0x23
    2aa8:	0020      	movs	r0, r4
    2aaa:	4b0e      	ldr	r3, [pc, #56]	; (2ae4 <_ZN9GDEW027W36SetLutEv+0x98>)
    2aac:	4798      	blx	r3
    2aae:	4e10      	ldr	r6, [pc, #64]	; (2af0 <_ZN9GDEW027W36SetLutEv+0xa4>)
    2ab0:	1d35      	adds	r5, r6, #4
    2ab2:	362e      	adds	r6, #46	; 0x2e
    for (count = 0; count < 42; count++)
    {
      IL91874_sendData(lut_23_wb[count]);
    2ab4:	4f0d      	ldr	r7, [pc, #52]	; (2aec <_ZN9GDEW027W36SetLutEv+0xa0>)
    2ab6:	7829      	ldrb	r1, [r5, #0]
    2ab8:	0020      	movs	r0, r4
    2aba:	47b8      	blx	r7
    2abc:	3501      	adds	r5, #1
    for (count = 0; count < 42; count++)
    2abe:	42ae      	cmp	r6, r5
    2ac0:	d1f9      	bne.n	2ab6 <_ZN9GDEW027W36SetLutEv+0x6a>
    }

    IL91874_sendCmd(0x24);							//black to black lut
    2ac2:	2124      	movs	r1, #36	; 0x24
    2ac4:	0020      	movs	r0, r4
    2ac6:	4b07      	ldr	r3, [pc, #28]	; (2ae4 <_ZN9GDEW027W36SetLutEv+0x98>)
    2ac8:	4798      	blx	r3
    2aca:	4e09      	ldr	r6, [pc, #36]	; (2af0 <_ZN9GDEW027W36SetLutEv+0xa4>)
    2acc:	0035      	movs	r5, r6
    2ace:	3530      	adds	r5, #48	; 0x30
    2ad0:	365a      	adds	r6, #90	; 0x5a
    for (count = 0; count < 42; count++)
    {
      IL91874_sendData(lut_24_bb[count]);
    2ad2:	4f06      	ldr	r7, [pc, #24]	; (2aec <_ZN9GDEW027W36SetLutEv+0xa0>)
    2ad4:	7829      	ldrb	r1, [r5, #0]
    2ad6:	0020      	movs	r0, r4
    2ad8:	47b8      	blx	r7
    2ada:	3501      	adds	r5, #1
    for (count = 0; count < 42; count++)
    2adc:	42b5      	cmp	r5, r6
    2ade:	d1f9      	bne.n	2ad4 <_ZN9GDEW027W36SetLutEv+0x88>
    }
}
    2ae0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2ae2:	46c0      	nop			; (mov r8, r8)
    2ae4:	000029fd 	.word	0x000029fd
    2ae8:	00008fa4 	.word	0x00008fa4
    2aec:	00002a25 	.word	0x00002a25
    2af0:	00009024 	.word	0x00009024

00002af4 <_ZN9GDEW027W314init_GDEW027W3Ev>:
void GDEW027W3::init_GDEW027W3(void) {
    2af4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2af6:	46c6      	mov	lr, r8
    2af8:	b500      	push	{lr}
    2afa:	0004      	movs	r4, r0
	_width    = GDEW027W3_WIDTH;
    2afc:	2384      	movs	r3, #132	; 0x84
    2afe:	005b      	lsls	r3, r3, #1
    2b00:	6003      	str	r3, [r0, #0]
	_height   = GDEW027W3_HEIGHT;
    2b02:	3b58      	subs	r3, #88	; 0x58
    2b04:	6043      	str	r3, [r0, #4]
	rotation=rot;
    2b06:	3bad      	subs	r3, #173	; 0xad
    2b08:	7203      	strb	r3, [r0, #8]
	GDEW027W3_CS_LOW;
    2b0a:	4b4d      	ldr	r3, [pc, #308]	; (2c40 <_ZN9GDEW027W314init_GDEW027W3Ev+0x14c>)
    2b0c:	2680      	movs	r6, #128	; 0x80
    2b0e:	0276      	lsls	r6, r6, #9
    2b10:	601e      	str	r6, [r3, #0]
	GDEW027W3_RESET_ACTIVE;
    2b12:	2280      	movs	r2, #128	; 0x80
    2b14:	01d2      	lsls	r2, r2, #7
    2b16:	4690      	mov	r8, r2
    2b18:	601a      	str	r2, [r3, #0]
	delay_ms(100);
    2b1a:	2064      	movs	r0, #100	; 0x64
    2b1c:	4f49      	ldr	r7, [pc, #292]	; (2c44 <_ZN9GDEW027W314init_GDEW027W3Ev+0x150>)
    2b1e:	47b8      	blx	r7
	GDEW027W3_RESET_NOT; 
    2b20:	4d49      	ldr	r5, [pc, #292]	; (2c48 <_ZN9GDEW027W314init_GDEW027W3Ev+0x154>)
    2b22:	4643      	mov	r3, r8
    2b24:	602b      	str	r3, [r5, #0]
	delay_ms(100);
    2b26:	2064      	movs	r0, #100	; 0x64
    2b28:	47b8      	blx	r7
	GDEW027W3_CS_HIGH;
    2b2a:	602e      	str	r6, [r5, #0]
IL91874_sendCmd(0x01);
    2b2c:	2101      	movs	r1, #1
    2b2e:	0020      	movs	r0, r4
    2b30:	4e46      	ldr	r6, [pc, #280]	; (2c4c <_ZN9GDEW027W314init_GDEW027W3Ev+0x158>)
    2b32:	47b0      	blx	r6
IL91874_sendData(0x03);
    2b34:	2103      	movs	r1, #3
    2b36:	0020      	movs	r0, r4
    2b38:	4d45      	ldr	r5, [pc, #276]	; (2c50 <_ZN9GDEW027W314init_GDEW027W3Ev+0x15c>)
    2b3a:	47a8      	blx	r5
IL91874_sendData(0x00);
    2b3c:	2100      	movs	r1, #0
    2b3e:	0020      	movs	r0, r4
    2b40:	47a8      	blx	r5
IL91874_sendData(0x2b);
    2b42:	212b      	movs	r1, #43	; 0x2b
    2b44:	0020      	movs	r0, r4
    2b46:	47a8      	blx	r5
IL91874_sendData(0x2b);
    2b48:	212b      	movs	r1, #43	; 0x2b
    2b4a:	0020      	movs	r0, r4
    2b4c:	47a8      	blx	r5
IL91874_sendData(0x09);
    2b4e:	2109      	movs	r1, #9
    2b50:	0020      	movs	r0, r4
    2b52:	47a8      	blx	r5
	IL91874_sendCmd(0x06);
    2b54:	2106      	movs	r1, #6
    2b56:	0020      	movs	r0, r4
    2b58:	47b0      	blx	r6
	IL91874_sendData(0x07);
    2b5a:	2107      	movs	r1, #7
    2b5c:	0020      	movs	r0, r4
    2b5e:	47a8      	blx	r5
	IL91874_sendData(0x07);
    2b60:	2107      	movs	r1, #7
    2b62:	0020      	movs	r0, r4
    2b64:	47a8      	blx	r5
	IL91874_sendData(0x17); //17 org, 04 in datasheet
    2b66:	2117      	movs	r1, #23
    2b68:	0020      	movs	r0, r4
    2b6a:	47a8      	blx	r5
	IL91874_sendCmd(0xF8);
    2b6c:	21f8      	movs	r1, #248	; 0xf8
    2b6e:	0020      	movs	r0, r4
    2b70:	47b0      	blx	r6
	IL91874_sendData(0x60); 	
    2b72:	2160      	movs	r1, #96	; 0x60
    2b74:	0020      	movs	r0, r4
    2b76:	47a8      	blx	r5
	IL91874_sendData(0xa5);
    2b78:	21a5      	movs	r1, #165	; 0xa5
    2b7a:	0020      	movs	r0, r4
    2b7c:	47a8      	blx	r5
	IL91874_sendCmd(0xF8);
    2b7e:	21f8      	movs	r1, #248	; 0xf8
    2b80:	0020      	movs	r0, r4
    2b82:	47b0      	blx	r6
	IL91874_sendData(0x89); 	
    2b84:	2189      	movs	r1, #137	; 0x89
    2b86:	0020      	movs	r0, r4
    2b88:	47a8      	blx	r5
	IL91874_sendData(0xa5);
    2b8a:	21a5      	movs	r1, #165	; 0xa5
    2b8c:	0020      	movs	r0, r4
    2b8e:	47a8      	blx	r5
	IL91874_sendCmd(0xF8);
    2b90:	21f8      	movs	r1, #248	; 0xf8
    2b92:	0020      	movs	r0, r4
    2b94:	47b0      	blx	r6
	IL91874_sendData(0x90); 	
    2b96:	2190      	movs	r1, #144	; 0x90
    2b98:	0020      	movs	r0, r4
    2b9a:	47a8      	blx	r5
	IL91874_sendData(0x00);
    2b9c:	2100      	movs	r1, #0
    2b9e:	0020      	movs	r0, r4
    2ba0:	47a8      	blx	r5
	IL91874_sendCmd(0xF8);
    2ba2:	21f8      	movs	r1, #248	; 0xf8
    2ba4:	0020      	movs	r0, r4
    2ba6:	47b0      	blx	r6
	IL91874_sendData(0x93); 	
    2ba8:	2193      	movs	r1, #147	; 0x93
    2baa:	0020      	movs	r0, r4
    2bac:	47a8      	blx	r5
	IL91874_sendData(0x2a);
    2bae:	212a      	movs	r1, #42	; 0x2a
    2bb0:	0020      	movs	r0, r4
    2bb2:	47a8      	blx	r5
	IL91874_sendCmd(0xF8);
    2bb4:	21f8      	movs	r1, #248	; 0xf8
    2bb6:	0020      	movs	r0, r4
    2bb8:	47b0      	blx	r6
	IL91874_sendData(0xa0); 	
    2bba:	21a0      	movs	r1, #160	; 0xa0
    2bbc:	0020      	movs	r0, r4
    2bbe:	47a8      	blx	r5
	IL91874_sendData(0xa5);
    2bc0:	21a5      	movs	r1, #165	; 0xa5
    2bc2:	0020      	movs	r0, r4
    2bc4:	47a8      	blx	r5
	IL91874_sendCmd(0xF8);
    2bc6:	21f8      	movs	r1, #248	; 0xf8
    2bc8:	0020      	movs	r0, r4
    2bca:	47b0      	blx	r6
	IL91874_sendData(0xa1); 	
    2bcc:	21a1      	movs	r1, #161	; 0xa1
    2bce:	0020      	movs	r0, r4
    2bd0:	47a8      	blx	r5
	IL91874_sendData(0x00);
    2bd2:	2100      	movs	r1, #0
    2bd4:	0020      	movs	r0, r4
    2bd6:	47a8      	blx	r5
	IL91874_sendCmd(0xF8);
    2bd8:	21f8      	movs	r1, #248	; 0xf8
    2bda:	0020      	movs	r0, r4
    2bdc:	47b0      	blx	r6
	IL91874_sendData(0x73);	
    2bde:	2173      	movs	r1, #115	; 0x73
    2be0:	0020      	movs	r0, r4
    2be2:	47a8      	blx	r5
	IL91874_sendData(0x41);
    2be4:	2141      	movs	r1, #65	; 0x41
    2be6:	0020      	movs	r0, r4
    2be8:	47a8      	blx	r5
	IL91874_sendCmd(0x16); 	
    2bea:	2116      	movs	r1, #22
    2bec:	0020      	movs	r0, r4
    2bee:	47b0      	blx	r6
	IL91874_sendData(0x00);
    2bf0:	2100      	movs	r1, #0
    2bf2:	0020      	movs	r0, r4
    2bf4:	47a8      	blx	r5
	IL91874_sendCmd(0x04);
    2bf6:	2104      	movs	r1, #4
    2bf8:	0020      	movs	r0, r4
    2bfa:	47b0      	blx	r6
	update_inprogress=true;
    2bfc:	2301      	movs	r3, #1
    2bfe:	7263      	strb	r3, [r4, #9]
	while(update_inprogress);//wait till busy rises, shouldn't take long
    2c00:	7a63      	ldrb	r3, [r4, #9]
    2c02:	2b00      	cmp	r3, #0
    2c04:	d1fc      	bne.n	2c00 <_ZN9GDEW027W314init_GDEW027W3Ev+0x10c>
	IL91874_sendCmd(0x00);
    2c06:	2100      	movs	r1, #0
    2c08:	0020      	movs	r0, r4
    2c0a:	4e10      	ldr	r6, [pc, #64]	; (2c4c <_ZN9GDEW027W314init_GDEW027W3Ev+0x158>)
    2c0c:	47b0      	blx	r6
	IL91874_sendData(0xaf); //KW-BF   KWR-AF    BWROTP 0f
    2c0e:	21af      	movs	r1, #175	; 0xaf
    2c10:	0020      	movs	r0, r4
    2c12:	4d0f      	ldr	r5, [pc, #60]	; (2c50 <_ZN9GDEW027W314init_GDEW027W3Ev+0x15c>)
    2c14:	47a8      	blx	r5
	IL91874_sendCmd(0x30);
    2c16:	2130      	movs	r1, #48	; 0x30
    2c18:	0020      	movs	r0, r4
    2c1a:	47b0      	blx	r6
	IL91874_sendData(0x3a);
    2c1c:	213a      	movs	r1, #58	; 0x3a
    2c1e:	0020      	movs	r0, r4
    2c20:	47a8      	blx	r5
	IL91874_sendCmd(0x82);
    2c22:	2182      	movs	r1, #130	; 0x82
    2c24:	0020      	movs	r0, r4
    2c26:	47b0      	blx	r6
	IL91874_sendData(0x12);
    2c28:	2112      	movs	r1, #18
    2c2a:	0020      	movs	r0, r4
    2c2c:	47a8      	blx	r5
	delay_ms(2);
    2c2e:	2002      	movs	r0, #2
    2c30:	4b04      	ldr	r3, [pc, #16]	; (2c44 <_ZN9GDEW027W314init_GDEW027W3Ev+0x150>)
    2c32:	4798      	blx	r3
	SetLut();
    2c34:	0020      	movs	r0, r4
    2c36:	4b07      	ldr	r3, [pc, #28]	; (2c54 <_ZN9GDEW027W314init_GDEW027W3Ev+0x160>)
    2c38:	4798      	blx	r3
}	
    2c3a:	bc04      	pop	{r2}
    2c3c:	4690      	mov	r8, r2
    2c3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2c40:	41004414 	.word	0x41004414
    2c44:	00000a95 	.word	0x00000a95
    2c48:	41004418 	.word	0x41004418
    2c4c:	000029fd 	.word	0x000029fd
    2c50:	00002a25 	.word	0x00002a25
    2c54:	00002a4d 	.word	0x00002a4d

00002c58 <_ZN9GDEW027W310ClearFrameEv>:
	//delay_ms(10);
	update_inprogress=true; 
}

//clears the SRAM and buffer
void GDEW027W3::ClearFrame(void) {
    2c58:	b570      	push	{r4, r5, r6, lr}
    2c5a:	0005      	movs	r5, r0
	IL91874_sendCmd(0x10);
    2c5c:	2110      	movs	r1, #16
    2c5e:	4b11      	ldr	r3, [pc, #68]	; (2ca4 <_ZN9GDEW027W310ClearFrameEv+0x4c>)
    2c60:	4798      	blx	r3
	delay_ms(2);
    2c62:	2002      	movs	r0, #2
    2c64:	4b10      	ldr	r3, [pc, #64]	; (2ca8 <_ZN9GDEW027W310ClearFrameEv+0x50>)
    2c66:	4798      	blx	r3
    2c68:	4c10      	ldr	r4, [pc, #64]	; (2cac <_ZN9GDEW027W310ClearFrameEv+0x54>)
	for (uint32_t i = 0; i < GDEW027W3_BUFFER_SIZE; i++)
	{
		IL91874_sendData(0xFF); //white
    2c6a:	4e11      	ldr	r6, [pc, #68]	; (2cb0 <_ZN9GDEW027W310ClearFrameEv+0x58>)
    2c6c:	21ff      	movs	r1, #255	; 0xff
    2c6e:	0028      	movs	r0, r5
    2c70:	47b0      	blx	r6
    2c72:	3c01      	subs	r4, #1
	for (uint32_t i = 0; i < GDEW027W3_BUFFER_SIZE; i++)
    2c74:	2c00      	cmp	r4, #0
    2c76:	d1f9      	bne.n	2c6c <_ZN9GDEW027W310ClearFrameEv+0x14>
	}
	delay_ms(2);
    2c78:	2002      	movs	r0, #2
    2c7a:	4c0b      	ldr	r4, [pc, #44]	; (2ca8 <_ZN9GDEW027W310ClearFrameEv+0x50>)
    2c7c:	47a0      	blx	r4
	IL91874_sendCmd(0x13);
    2c7e:	2113      	movs	r1, #19
    2c80:	0028      	movs	r0, r5
    2c82:	4b08      	ldr	r3, [pc, #32]	; (2ca4 <_ZN9GDEW027W310ClearFrameEv+0x4c>)
    2c84:	4798      	blx	r3
	delay_ms(2);
    2c86:	2002      	movs	r0, #2
    2c88:	47a0      	blx	r4
    2c8a:	4c08      	ldr	r4, [pc, #32]	; (2cac <_ZN9GDEW027W310ClearFrameEv+0x54>)
	for (uint32_t i = 0; i < GDEW027W3_BUFFER_SIZE; i++)
	{
		IL91874_sendData(0xFF); //white
    2c8c:	4e08      	ldr	r6, [pc, #32]	; (2cb0 <_ZN9GDEW027W310ClearFrameEv+0x58>)
    2c8e:	21ff      	movs	r1, #255	; 0xff
    2c90:	0028      	movs	r0, r5
    2c92:	47b0      	blx	r6
    2c94:	3c01      	subs	r4, #1
	for (uint32_t i = 0; i < GDEW027W3_BUFFER_SIZE; i++)
    2c96:	2c00      	cmp	r4, #0
    2c98:	d1f9      	bne.n	2c8e <_ZN9GDEW027W310ClearFrameEv+0x36>
	}
	delay_ms(2);
    2c9a:	2002      	movs	r0, #2
    2c9c:	4b02      	ldr	r3, [pc, #8]	; (2ca8 <_ZN9GDEW027W310ClearFrameEv+0x50>)
    2c9e:	4798      	blx	r3
}
    2ca0:	bd70      	pop	{r4, r5, r6, pc}
    2ca2:	46c0      	nop			; (mov r8, r8)
    2ca4:	000029fd 	.word	0x000029fd
    2ca8:	00000a95 	.word	0x00000a95
    2cac:	000016b0 	.word	0x000016b0
    2cb0:	00002a25 	.word	0x00002a25

00002cb4 <_ZN9GDEW027W312DisplayFrameEv>:
	}
	delay_ms(2);
}

//update whole display
void GDEW027W3::DisplayFrame(void) {
    2cb4:	b510      	push	{r4, lr}
    2cb6:	0004      	movs	r4, r0
   IL91874_sendCmd(0x12); 
    2cb8:	2112      	movs	r1, #18
    2cba:	4b02      	ldr	r3, [pc, #8]	; (2cc4 <_ZN9GDEW027W312DisplayFrameEv+0x10>)
    2cbc:	4798      	blx	r3
   update_inprogress=true;
    2cbe:	2301      	movs	r3, #1
    2cc0:	7263      	strb	r3, [r4, #9]
}
    2cc2:	bd10      	pop	{r4, pc}
    2cc4:	000029fd 	.word	0x000029fd

00002cc8 <_ZN9GDEW027W38fillRectEttttt>:

 

void GDEW027W3::fillRect(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color) {
    2cc8:	b5f0      	push	{r4, r5, r6, r7, lr}
    2cca:	46de      	mov	lr, fp
    2ccc:	4657      	mov	r7, sl
    2cce:	464e      	mov	r6, r9
    2cd0:	4645      	mov	r5, r8
    2cd2:	b5e0      	push	{r5, r6, r7, lr}
    2cd4:	b085      	sub	sp, #20
    2cd6:	0006      	movs	r6, r0
    2cd8:	000d      	movs	r5, r1
    2cda:	9200      	str	r2, [sp, #0]
    2cdc:	4699      	mov	r9, r3
    2cde:	ab0e      	add	r3, sp, #56	; 0x38
    2ce0:	881b      	ldrh	r3, [r3, #0]
    2ce2:	9303      	str	r3, [sp, #12]
    2ce4:	ab0f      	add	r3, sp, #60	; 0x3c
    2ce6:	881a      	ldrh	r2, [r3, #0]
  
  uint8_t data = (color == GDEW027W3_BLACK) ? 0x00 : 0xFF; //black is 0x0000, white 0xFFFF
    2ce8:	0017      	movs	r7, r2
    2cea:	1e7b      	subs	r3, r7, #1
    2cec:	419f      	sbcs	r7, r3
    2cee:	427f      	negs	r7, r7
    2cf0:	b2fb      	uxtb	r3, r7
    2cf2:	9301      	str	r3, [sp, #4]
  
 
  uint16_t h_hel=w;
   uint16_t x_hel=y;
  switch(rotation)
    2cf4:	7a03      	ldrb	r3, [r0, #8]
    2cf6:	2b02      	cmp	r3, #2
    2cf8:	d052      	beq.n	2da0 <_ZN9GDEW027W38fillRectEttttt+0xd8>
    2cfa:	2b03      	cmp	r3, #3
    2cfc:	d057      	beq.n	2dae <_ZN9GDEW027W38fillRectEttttt+0xe6>
    2cfe:	2b01      	cmp	r3, #1
    2d00:	d048      	beq.n	2d94 <_ZN9GDEW027W38fillRectEttttt+0xcc>
	  w=h;
	  h=h_hel;
      break;
 }
 uint8_t add=0;
	uint16_t h_helper=w%8;
    2d02:	2307      	movs	r3, #7
    2d04:	4649      	mov	r1, r9
    2d06:	400b      	ands	r3, r1
	if(h_helper>0) add=8;
    2d08:	469b      	mov	fp, r3
    2d0a:	425c      	negs	r4, r3
    2d0c:	0fe4      	lsrs	r4, r4, #31
    2d0e:	00e4      	lsls	r4, r4, #3
	
	uint8_t sifter = (color == GDEW027W3_BLACK) ? (0xff>>h_helper): (~h_helper);
    2d10:	2a00      	cmp	r2, #0
    2d12:	d158      	bne.n	2dc6 <_ZN9GDEW027W38fillRectEttttt+0xfe>
    2d14:	32ff      	adds	r2, #255	; 0xff
    2d16:	411a      	asrs	r2, r3
    2d18:	b2d3      	uxtb	r3, r2
    2d1a:	9302      	str	r3, [sp, #8]
	
	IL91874_sendCmd(0x15);
    2d1c:	2115      	movs	r1, #21
    2d1e:	0030      	movs	r0, r6
    2d20:	4b3b      	ldr	r3, [pc, #236]	; (2e10 <_ZN9GDEW027W38fillRectEttttt+0x148>)
    2d22:	4798      	blx	r3
	IL91874_sendData((x >> 8)&0x01);
    2d24:	1229      	asrs	r1, r5, #8
    2d26:	2301      	movs	r3, #1
    2d28:	4698      	mov	r8, r3
    2d2a:	4019      	ands	r1, r3
    2d2c:	0030      	movs	r0, r6
    2d2e:	4f39      	ldr	r7, [pc, #228]	; (2e14 <_ZN9GDEW027W38fillRectEttttt+0x14c>)
    2d30:	47b8      	blx	r7
    IL91874_sendData(x & 0xf8);     // x should be the multiple of 8, the last 3 bit will always be ignored
    2d32:	2307      	movs	r3, #7
    2d34:	469a      	mov	sl, r3
    2d36:	439d      	bics	r5, r3
    2d38:	b2e9      	uxtb	r1, r5
    2d3a:	0030      	movs	r0, r6
    2d3c:	47b8      	blx	r7
    IL91874_sendData(y >> 8 );        
    2d3e:	9d00      	ldr	r5, [sp, #0]
    2d40:	0a29      	lsrs	r1, r5, #8
    2d42:	0030      	movs	r0, r6
    2d44:	47b8      	blx	r7
    IL91874_sendData(y & 0xff);  //y everything is there
    2d46:	b2e9      	uxtb	r1, r5
    2d48:	0030      	movs	r0, r6
    2d4a:	47b8      	blx	r7
	IL91874_sendData(((w+add) >> 8)&0x01);
    2d4c:	464b      	mov	r3, r9
    2d4e:	1919      	adds	r1, r3, r4
    2d50:	1209      	asrs	r1, r1, #8
    2d52:	4643      	mov	r3, r8
    2d54:	4019      	ands	r1, r3
    2d56:	0030      	movs	r0, r6
    2d58:	47b8      	blx	r7
    IL91874_sendData((w+add) & 0xf8);    
    2d5a:	444c      	add	r4, r9
    2d5c:	4653      	mov	r3, sl
    2d5e:	439c      	bics	r4, r3
    2d60:	b2e1      	uxtb	r1, r4
    2d62:	0030      	movs	r0, r6
    2d64:	47b8      	blx	r7
	IL91874_sendData(h >> 8);        
    2d66:	9c03      	ldr	r4, [sp, #12]
    2d68:	46a2      	mov	sl, r4
    2d6a:	1221      	asrs	r1, r4, #8
    2d6c:	b2c9      	uxtb	r1, r1
    2d6e:	0030      	movs	r0, r6
    2d70:	47b8      	blx	r7
    IL91874_sendData(h & 0xff);
    2d72:	b2e1      	uxtb	r1, r4
    2d74:	0030      	movs	r0, r6
    2d76:	47b8      	blx	r7
    delay_ms(2); 
    2d78:	2002      	movs	r0, #2
    2d7a:	4b27      	ldr	r3, [pc, #156]	; (2e18 <_ZN9GDEW027W38fillRectEttttt+0x150>)
    2d7c:	4798      	blx	r3
	
	for(uint16_t j = 0; j < h; j++) {
    2d7e:	2c00      	cmp	r4, #0
    2d80:	dd3b      	ble.n	2dfa <_ZN9GDEW027W38fillRectEttttt+0x132>
		//IL91874_sendData(data);
		
		for(uint16_t i = 0; i < w/8 ;i++) {	
    2d82:	464b      	mov	r3, r9
    2d84:	08dd      	lsrs	r5, r3, #3
    2d86:	b2ad      	uxth	r5, r5
    2d88:	2300      	movs	r3, #0
			IL91874_sendData(data);
    2d8a:	4f22      	ldr	r7, [pc, #136]	; (2e14 <_ZN9GDEW027W38fillRectEttttt+0x14c>)
		}
		if(h_helper>0)
		{
			IL91874_sendData(sifter);	
    2d8c:	9600      	str	r6, [sp, #0]
    2d8e:	002e      	movs	r6, r5
    2d90:	001d      	movs	r5, r3
    2d92:	e020      	b.n	2dd6 <_ZN9GDEW027W38fillRectEttttt+0x10e>
    2d94:	43cd      	mvns	r5, r1
      x = _width - x - 1;
    2d96:	6803      	ldr	r3, [r0, #0]
    2d98:	469c      	mov	ip, r3
    2d9a:	4465      	add	r5, ip
    2d9c:	b2ad      	uxth	r5, r5
      break;
    2d9e:	e7b0      	b.n	2d02 <_ZN9GDEW027W38fillRectEttttt+0x3a>
      y = _height - y - 1;
    2da0:	6843      	ldr	r3, [r0, #4]
    2da2:	1e59      	subs	r1, r3, #1
    2da4:	9b00      	ldr	r3, [sp, #0]
    2da6:	1ac9      	subs	r1, r1, r3
    2da8:	b28b      	uxth	r3, r1
    2daa:	9300      	str	r3, [sp, #0]
      break;  
    2dac:	e7a9      	b.n	2d02 <_ZN9GDEW027W38fillRectEttttt+0x3a>
		y = _width - y - 1;
    2dae:	43cb      	mvns	r3, r1
    2db0:	6801      	ldr	r1, [r0, #0]
    2db2:	468c      	mov	ip, r1
    2db4:	4463      	add	r3, ip
      break;
    2db6:	4649      	mov	r1, r9
	  w=h;
    2db8:	9803      	ldr	r0, [sp, #12]
    2dba:	4681      	mov	r9, r0
	  h=h_hel;
    2dbc:	9103      	str	r1, [sp, #12]
		x=x_hel;
    2dbe:	9d00      	ldr	r5, [sp, #0]
		y = _width - y - 1;
    2dc0:	b29b      	uxth	r3, r3
    2dc2:	9300      	str	r3, [sp, #0]
      break;
    2dc4:	e79d      	b.n	2d02 <_ZN9GDEW027W38fillRectEttttt+0x3a>
	uint8_t sifter = (color == GDEW027W3_BLACK) ? (0xff>>h_helper): (~h_helper);
    2dc6:	43db      	mvns	r3, r3
    2dc8:	b2db      	uxtb	r3, r3
    2dca:	9302      	str	r3, [sp, #8]
    2dcc:	e7a6      	b.n	2d1c <_ZN9GDEW027W38fillRectEttttt+0x54>
	for(uint16_t j = 0; j < h; j++) {
    2dce:	3501      	adds	r5, #1
    2dd0:	b2ad      	uxth	r5, r5
    2dd2:	45aa      	cmp	sl, r5
    2dd4:	dd11      	ble.n	2dfa <_ZN9GDEW027W38fillRectEttttt+0x132>
		for(uint16_t i = 0; i < w/8 ;i++) {	
    2dd6:	2e00      	cmp	r6, #0
    2dd8:	dd07      	ble.n	2dea <_ZN9GDEW027W38fillRectEttttt+0x122>
    2dda:	2400      	movs	r4, #0
			IL91874_sendData(data);
    2ddc:	9901      	ldr	r1, [sp, #4]
    2dde:	9800      	ldr	r0, [sp, #0]
    2de0:	47b8      	blx	r7
		for(uint16_t i = 0; i < w/8 ;i++) {	
    2de2:	3401      	adds	r4, #1
    2de4:	b2a4      	uxth	r4, r4
    2de6:	42b4      	cmp	r4, r6
    2de8:	dbf8      	blt.n	2ddc <_ZN9GDEW027W38fillRectEttttt+0x114>
		if(h_helper>0)
    2dea:	465b      	mov	r3, fp
    2dec:	2b00      	cmp	r3, #0
    2dee:	ddee      	ble.n	2dce <_ZN9GDEW027W38fillRectEttttt+0x106>
			IL91874_sendData(sifter);	
    2df0:	9902      	ldr	r1, [sp, #8]
    2df2:	9800      	ldr	r0, [sp, #0]
    2df4:	4b07      	ldr	r3, [pc, #28]	; (2e14 <_ZN9GDEW027W38fillRectEttttt+0x14c>)
    2df6:	4798      	blx	r3
    2df8:	e7e9      	b.n	2dce <_ZN9GDEW027W38fillRectEttttt+0x106>
		}
	}
	delay_ms(2); 
    2dfa:	2002      	movs	r0, #2
    2dfc:	4b06      	ldr	r3, [pc, #24]	; (2e18 <_ZN9GDEW027W38fillRectEttttt+0x150>)
    2dfe:	4798      	blx	r3
	
}
    2e00:	b005      	add	sp, #20
    2e02:	bc3c      	pop	{r2, r3, r4, r5}
    2e04:	4690      	mov	r8, r2
    2e06:	4699      	mov	r9, r3
    2e08:	46a2      	mov	sl, r4
    2e0a:	46ab      	mov	fp, r5
    2e0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e0e:	46c0      	nop			; (mov r8, r8)
    2e10:	000029fd 	.word	0x000029fd
    2e14:	00002a25 	.word	0x00002a25
    2e18:	00000a95 	.word	0x00000a95

00002e1c <_ZN9GDEW027W38drawCharEsshtth>:


// Draw a character
void GDEW027W3::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color,uint16_t bg, uint8_t size) 
{
    2e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e1e:	46de      	mov	lr, fp
    2e20:	4657      	mov	r7, sl
    2e22:	464e      	mov	r6, r9
    2e24:	4645      	mov	r5, r8
    2e26:	b5e0      	push	{r5, r6, r7, lr}
    2e28:	b089      	sub	sp, #36	; 0x24
    2e2a:	9004      	str	r0, [sp, #16]
    2e2c:	000c      	movs	r4, r1
    2e2e:	9207      	str	r2, [sp, #28]
    2e30:	001d      	movs	r5, r3
    2e32:	ab12      	add	r3, sp, #72	; 0x48
    2e34:	881b      	ldrh	r3, [r3, #0]
    2e36:	9306      	str	r3, [sp, #24]
    2e38:	ab14      	add	r3, sp, #80	; 0x50
    2e3a:	781b      	ldrb	r3, [r3, #0]
    2e3c:	9305      	str	r3, [sp, #20]
       (y >= _height)           || // Clip bottom
       ((x + 6 * size - 1) < 0) || // Clip left
       ((y + 8 * size - 1) < 0))   // Clip top
      return;
*/
    if( c >= 176) c++; // Handle 'classic' charset behavior
    2e3e:	2daf      	cmp	r5, #175	; 0xaf
    2e40:	dd01      	ble.n	2e46 <_ZN9GDEW027W38drawCharEsshtth+0x2a>
    2e42:	3501      	adds	r5, #1
    2e44:	b2ed      	uxtb	r5, r5

	uint16_t h=5*size; 	uint16_t w=8*size;
    2e46:	9b05      	ldr	r3, [sp, #20]
    2e48:	b29f      	uxth	r7, r3
		w+=8;
	}*/
	
	  //uint16_t h_hel=w;
   uint16_t x_hel=y;
	if(size==1)
    2e4a:	2b01      	cmp	r3, #1
    2e4c:	d013      	beq.n	2e76 <_ZN9GDEW027W38drawCharEsshtth+0x5a>
	delay_ms(2);
	}
  
    for(int8_t i=5; i>=0; i-- ) {
      uint8_t line;uint8_t line2;
      if(i < 5) line =  font[(c*5)+i]; //take line by line
    2e4e:	00ab      	lsls	r3, r5, #2
    2e50:	195b      	adds	r3, r3, r5
    2e52:	4d58      	ldr	r5, [pc, #352]	; (2fb4 <_ZN9GDEW027W38drawCharEsshtth+0x198>)
    2e54:	18ed      	adds	r5, r5, r3
    2e56:	2360      	movs	r3, #96	; 0x60
    2e58:	469b      	mov	fp, r3
    2e5a:	44ab      	add	fp, r5
    2e5c:	00b9      	lsls	r1, r7, #2
    2e5e:	1879      	adds	r1, r7, r1
    2e60:	1909      	adds	r1, r1, r4
    2e62:	b28b      	uxth	r3, r1
    2e64:	4698      	mov	r8, r3
    for(int8_t i=5; i>=0; i-- ) {
    2e66:	2305      	movs	r3, #5
    2e68:	4699      	mov	r9, r3
      else      line = 0x0;
    2e6a:	2000      	movs	r0, #0
	   else
	   {
      for(int8_t j=0; j<8; j++, line >>= 1) //right shift by one
	   {
        if(line & 0x1){ //check if 1 or 0
          if(size >= 2 && size < 8 )
    2e6c:	9b05      	ldr	r3, [sp, #20]
    2e6e:	3b02      	subs	r3, #2
    2e70:	b2db      	uxtb	r3, r3
    2e72:	469a      	mov	sl, r3
    2e74:	e07c      	b.n	2f70 <_ZN9GDEW027W38drawCharEsshtth+0x154>
  switch(rotation)
    2e76:	9b04      	ldr	r3, [sp, #16]
    2e78:	7a1b      	ldrb	r3, [r3, #8]
    2e7a:	2b02      	cmp	r3, #2
    2e7c:	d032      	beq.n	2ee4 <_ZN9GDEW027W38drawCharEsshtth+0xc8>
    2e7e:	2b03      	cmp	r3, #3
    2e80:	d039      	beq.n	2ef6 <_ZN9GDEW027W38drawCharEsshtth+0xda>
    2e82:	2b01      	cmp	r3, #1
    2e84:	d027      	beq.n	2ed6 <_ZN9GDEW027W38drawCharEsshtth+0xba>
	IL91874_sendCmd(0x15);
    2e86:	2115      	movs	r1, #21
    2e88:	9e04      	ldr	r6, [sp, #16]
    2e8a:	0030      	movs	r0, r6
    2e8c:	4b4a      	ldr	r3, [pc, #296]	; (2fb8 <_ZN9GDEW027W38drawCharEsshtth+0x19c>)
    2e8e:	4798      	blx	r3
	IL91874_sendData((x >> 8)&0x01);
    2e90:	05e1      	lsls	r1, r4, #23
    2e92:	0fc9      	lsrs	r1, r1, #31
    2e94:	9604      	str	r6, [sp, #16]
    2e96:	0030      	movs	r0, r6
    2e98:	4e48      	ldr	r6, [pc, #288]	; (2fbc <_ZN9GDEW027W38drawCharEsshtth+0x1a0>)
    2e9a:	47b0      	blx	r6
	IL91874_sendData(x & 0xf8);     // x should be the multiple of 8, the last 3 bit will always be ignored
    2e9c:	21f8      	movs	r1, #248	; 0xf8
    2e9e:	4021      	ands	r1, r4
    2ea0:	9804      	ldr	r0, [sp, #16]
    2ea2:	47b0      	blx	r6
	IL91874_sendData(y >> 8 );
    2ea4:	9b07      	ldr	r3, [sp, #28]
    2ea6:	1219      	asrs	r1, r3, #8
    2ea8:	b2c9      	uxtb	r1, r1
    2eaa:	9804      	ldr	r0, [sp, #16]
    2eac:	47b0      	blx	r6
	IL91874_sendData(y & 0xff);  //y everything is there
    2eae:	466b      	mov	r3, sp
    2eb0:	7f19      	ldrb	r1, [r3, #28]
    2eb2:	9804      	ldr	r0, [sp, #16]
    2eb4:	47b0      	blx	r6
	IL91874_sendData((w >> 8)&0x01);
    2eb6:	2100      	movs	r1, #0
    2eb8:	9804      	ldr	r0, [sp, #16]
    2eba:	47b0      	blx	r6
	IL91874_sendData(w & 0xf8);
    2ebc:	2108      	movs	r1, #8
    2ebe:	9804      	ldr	r0, [sp, #16]
    2ec0:	47b0      	blx	r6
	IL91874_sendData(h >> 8);
    2ec2:	2100      	movs	r1, #0
    2ec4:	9804      	ldr	r0, [sp, #16]
    2ec6:	47b0      	blx	r6
	IL91874_sendData(h & 0xff);
    2ec8:	2105      	movs	r1, #5
    2eca:	9804      	ldr	r0, [sp, #16]
    2ecc:	47b0      	blx	r6
	delay_ms(2);
    2ece:	2002      	movs	r0, #2
    2ed0:	4b3b      	ldr	r3, [pc, #236]	; (2fc0 <_ZN9GDEW027W38drawCharEsshtth+0x1a4>)
    2ed2:	4798      	blx	r3
    2ed4:	e7bb      	b.n	2e4e <_ZN9GDEW027W38drawCharEsshtth+0x32>
      x = _width - x - 1;
    2ed6:	9b04      	ldr	r3, [sp, #16]
    2ed8:	681b      	ldr	r3, [r3, #0]
    2eda:	9303      	str	r3, [sp, #12]
    2edc:	1e59      	subs	r1, r3, #1
    2ede:	1b0c      	subs	r4, r1, r4
    2ee0:	b224      	sxth	r4, r4
      break;
    2ee2:	e7d0      	b.n	2e86 <_ZN9GDEW027W38drawCharEsshtth+0x6a>
      y = _height - y - 1;
    2ee4:	9b04      	ldr	r3, [sp, #16]
    2ee6:	685b      	ldr	r3, [r3, #4]
    2ee8:	9303      	str	r3, [sp, #12]
    2eea:	3b01      	subs	r3, #1
    2eec:	9a07      	ldr	r2, [sp, #28]
    2eee:	1a9b      	subs	r3, r3, r2
    2ef0:	b21b      	sxth	r3, r3
    2ef2:	9307      	str	r3, [sp, #28]
      break;  
    2ef4:	e7c7      	b.n	2e86 <_ZN9GDEW027W38drawCharEsshtth+0x6a>
		y = _width - y - 1;
    2ef6:	9b04      	ldr	r3, [sp, #16]
    2ef8:	681b      	ldr	r3, [r3, #0]
    2efa:	9303      	str	r3, [sp, #12]
    2efc:	3b01      	subs	r3, #1
    2efe:	1b1b      	subs	r3, r3, r4
		x=x_hel;
    2f00:	9c07      	ldr	r4, [sp, #28]
		y = _width - y - 1;
    2f02:	b21b      	sxth	r3, r3
    2f04:	9307      	str	r3, [sp, #28]
      break;
    2f06:	e7be      	b.n	2e86 <_ZN9GDEW027W38drawCharEsshtth+0x6a>
		 line2=~line2;
    2f08:	43db      	mvns	r3, r3
		IL91874_sendData(line2);
    2f0a:	b2d9      	uxtb	r1, r3
    2f0c:	9804      	ldr	r0, [sp, #16]
    2f0e:	4b2b      	ldr	r3, [pc, #172]	; (2fbc <_ZN9GDEW027W38drawCharEsshtth+0x1a0>)
    2f10:	4798      	blx	r3
    2f12:	e019      	b.n	2f48 <_ZN9GDEW027W38drawCharEsshtth+0x12c>
      for(int8_t j=0; j<8; j++, line >>= 1) //right shift by one
    2f14:	0870      	lsrs	r0, r6, #1
    2f16:	3c01      	subs	r4, #1
    2f18:	b2e4      	uxtb	r4, r4
    2f1a:	9b03      	ldr	r3, [sp, #12]
    2f1c:	469c      	mov	ip, r3
    2f1e:	4465      	add	r5, ip
    2f20:	b2ad      	uxth	r5, r5
    2f22:	2c00      	cmp	r4, #0
    2f24:	d00f      	beq.n	2f46 <_ZN9GDEW027W38drawCharEsshtth+0x12a>
        if(line & 0x1){ //check if 1 or 0
    2f26:	0006      	movs	r6, r0
    2f28:	07c3      	lsls	r3, r0, #31
    2f2a:	d5f3      	bpl.n	2f14 <_ZN9GDEW027W38drawCharEsshtth+0xf8>
          if(size >= 2 && size < 8 )
    2f2c:	4653      	mov	r3, sl
    2f2e:	2b05      	cmp	r3, #5
    2f30:	d9f0      	bls.n	2f14 <_ZN9GDEW027W38drawCharEsshtth+0xf8>
			//fillRect(x+(i*size), y+(j*size), size, size, color);
			//drawPixel(x+i, y+j, color);
		  }
		  else   
		  {       
		  fillRect(x+(i*size), y+(j*size), size, size, color);
    2f32:	9b06      	ldr	r3, [sp, #24]
    2f34:	9301      	str	r3, [sp, #4]
    2f36:	9b03      	ldr	r3, [sp, #12]
    2f38:	9300      	str	r3, [sp, #0]
    2f3a:	002a      	movs	r2, r5
    2f3c:	4641      	mov	r1, r8
    2f3e:	9804      	ldr	r0, [sp, #16]
    2f40:	4f20      	ldr	r7, [pc, #128]	; (2fc4 <_ZN9GDEW027W38drawCharEsshtth+0x1a8>)
    2f42:	47b8      	blx	r7
    2f44:	e7e6      	b.n	2f14 <_ZN9GDEW027W38drawCharEsshtth+0xf8>
    2f46:	001f      	movs	r7, r3
    2f48:	464b      	mov	r3, r9
    2f4a:	3b01      	subs	r3, #1
    2f4c:	b25b      	sxtb	r3, r3
    2f4e:	4699      	mov	r9, r3
    for(int8_t i=5; i>=0; i-- ) {
    2f50:	3301      	adds	r3, #1
    2f52:	d025      	beq.n	2fa0 <_ZN9GDEW027W38drawCharEsshtth+0x184>
      else      line = 0x0;
    2f54:	2000      	movs	r0, #0
      if(i < 5) line =  font[(c*5)+i]; //take line by line
    2f56:	464b      	mov	r3, r9
    2f58:	2b04      	cmp	r3, #4
    2f5a:	dc01      	bgt.n	2f60 <_ZN9GDEW027W38drawCharEsshtth+0x144>
    2f5c:	465b      	mov	r3, fp
    2f5e:	7818      	ldrb	r0, [r3, #0]
    2f60:	2301      	movs	r3, #1
    2f62:	425b      	negs	r3, r3
    2f64:	469c      	mov	ip, r3
    2f66:	44e3      	add	fp, ip
    2f68:	4643      	mov	r3, r8
    2f6a:	1bdb      	subs	r3, r3, r7
    2f6c:	b29b      	uxth	r3, r3
    2f6e:	4698      	mov	r8, r3
      else      line = 0x0;
    2f70:	2100      	movs	r1, #0
    2f72:	2300      	movs	r3, #0
		     line2 |= ((line>>i) & 1)<<(7-i);
    2f74:	2601      	movs	r6, #1
    2f76:	2507      	movs	r5, #7
    2f78:	001a      	movs	r2, r3
    2f7a:	0003      	movs	r3, r0
    2f7c:	410b      	asrs	r3, r1
    2f7e:	4033      	ands	r3, r6
    2f80:	1a6c      	subs	r4, r5, r1
    2f82:	40a3      	lsls	r3, r4
    2f84:	431a      	orrs	r2, r3
    2f86:	b2d2      	uxtb	r2, r2
    2f88:	3101      	adds	r1, #1
	     for(uint8_t i=0;i< 8 ;i++){
    2f8a:	2908      	cmp	r1, #8
    2f8c:	d1f5      	bne.n	2f7a <_ZN9GDEW027W38drawCharEsshtth+0x15e>
    2f8e:	0013      	movs	r3, r2
	   if(size == 1)
    2f90:	9a05      	ldr	r2, [sp, #20]
    2f92:	2a01      	cmp	r2, #1
    2f94:	d0b8      	beq.n	2f08 <_ZN9GDEW027W38drawCharEsshtth+0xec>
    2f96:	466b      	mov	r3, sp
    2f98:	8b9d      	ldrh	r5, [r3, #28]
    2f9a:	2408      	movs	r4, #8
    2f9c:	9703      	str	r7, [sp, #12]
    2f9e:	e7c2      	b.n	2f26 <_ZN9GDEW027W38drawCharEsshtth+0x10a>
		  }
        } 
		}
	  }
    }
	delay_ms(2);
    2fa0:	2002      	movs	r0, #2
    2fa2:	4b07      	ldr	r3, [pc, #28]	; (2fc0 <_ZN9GDEW027W38drawCharEsshtth+0x1a4>)
    2fa4:	4798      	blx	r3
}
    2fa6:	b009      	add	sp, #36	; 0x24
    2fa8:	bc3c      	pop	{r2, r3, r4, r5}
    2faa:	4690      	mov	r8, r2
    2fac:	4699      	mov	r9, r3
    2fae:	46a2      	mov	sl, r4
    2fb0:	46ab      	mov	fp, r5
    2fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2fb4:	00009024 	.word	0x00009024
    2fb8:	000029fd 	.word	0x000029fd
    2fbc:	00002a25 	.word	0x00002a25
    2fc0:	00000a95 	.word	0x00000a95
    2fc4:	00002cc9 	.word	0x00002cc9

00002fc8 <_ZN9GDEW027W310drawStringEssPctth>:

void GDEW027W3::drawString( int16_t x, int16_t y, char stri[], uint16_t color,uint16_t bg, uint8_t size)
{
    2fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
    2fca:	46de      	mov	lr, fp
    2fcc:	4657      	mov	r7, sl
    2fce:	464e      	mov	r6, r9
    2fd0:	4645      	mov	r5, r8
    2fd2:	b5e0      	push	{r5, r6, r7, lr}
    2fd4:	b087      	sub	sp, #28
    2fd6:	9004      	str	r0, [sp, #16]
    2fd8:	4688      	mov	r8, r1
    2fda:	9205      	str	r2, [sp, #20]
    2fdc:	001f      	movs	r7, r3
    2fde:	ab10      	add	r3, sp, #64	; 0x40
    2fe0:	881b      	ldrh	r3, [r3, #0]
    2fe2:	4699      	mov	r9, r3
    2fe4:	ab11      	add	r3, sp, #68	; 0x44
    2fe6:	881b      	ldrh	r3, [r3, #0]
    2fe8:	469a      	mov	sl, r3
    2fea:	ab12      	add	r3, sp, #72	; 0x48
    2fec:	781d      	ldrb	r5, [r3, #0]
	char k;
	uint8_t len =strlen(stri);
    2fee:	0038      	movs	r0, r7
    2ff0:	4b16      	ldr	r3, [pc, #88]	; (304c <_ZN9GDEW027W310drawStringEssPctth+0x84>)
    2ff2:	4798      	blx	r3
    2ff4:	b2c0      	uxtb	r0, r0
	for(int16_t i= len;i>0;i--)
    2ff6:	b204      	sxth	r4, r0
    2ff8:	2c00      	cmp	r4, #0
    2ffa:	dd20      	ble.n	303e <_ZN9GDEW027W310drawStringEssPctth+0x76>
	{	
		k=stri[i-1];
		drawChar(x-(len*size*6)+((i-1)*(size)*6), y, k, color,bg, size); //
    2ffc:	2606      	movs	r6, #6
    2ffe:	4276      	negs	r6, r6
    3000:	4346      	muls	r6, r0
    3002:	b2b6      	uxth	r6, r6
    3004:	4b12      	ldr	r3, [pc, #72]	; (3050 <_ZN9GDEW027W310drawStringEssPctth+0x88>)
    3006:	469b      	mov	fp, r3
    3008:	003b      	movs	r3, r7
    300a:	4647      	mov	r7, r8
    300c:	4698      	mov	r8, r3
		k=stri[i-1];
    300e:	4643      	mov	r3, r8
    3010:	191b      	adds	r3, r3, r4
    3012:	3b01      	subs	r3, #1
		drawChar(x-(len*size*6)+((i-1)*(size)*6), y, k, color,bg, size); //
    3014:	781b      	ldrb	r3, [r3, #0]
    3016:	1e62      	subs	r2, r4, #1
    3018:	0051      	lsls	r1, r2, #1
    301a:	1851      	adds	r1, r2, r1
    301c:	0049      	lsls	r1, r1, #1
    301e:	1871      	adds	r1, r6, r1
    3020:	4369      	muls	r1, r5
    3022:	19c9      	adds	r1, r1, r7
    3024:	b209      	sxth	r1, r1
    3026:	9502      	str	r5, [sp, #8]
    3028:	4652      	mov	r2, sl
    302a:	9201      	str	r2, [sp, #4]
    302c:	464a      	mov	r2, r9
    302e:	9200      	str	r2, [sp, #0]
    3030:	9a05      	ldr	r2, [sp, #20]
    3032:	9804      	ldr	r0, [sp, #16]
    3034:	47d8      	blx	fp
    3036:	3c01      	subs	r4, #1
    3038:	b224      	sxth	r4, r4
	for(int16_t i= len;i>0;i--)
    303a:	2c00      	cmp	r4, #0
    303c:	d1e7      	bne.n	300e <_ZN9GDEW027W310drawStringEssPctth+0x46>
		k=stri[i];
		drawChar(x+(i*(size)*6), y, k, color,bg, size);
		i++;
	}*/
	
}
    303e:	b007      	add	sp, #28
    3040:	bc3c      	pop	{r2, r3, r4, r5}
    3042:	4690      	mov	r8, r2
    3044:	4699      	mov	r9, r3
    3046:	46a2      	mov	sl, r4
    3048:	46ab      	mov	fp, r5
    304a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    304c:	00008ced 	.word	0x00008ced
    3050:	00002e1d 	.word	0x00002e1d

00003054 <_ZN9GDEW027W313drawChar_CAPIEsshtth>:

void GDEW027W3::drawChar_CAPI(int16_t x, int16_t y, unsigned char c, uint16_t color,uint16_t bg, uint8_t size) {
    3054:	b5f0      	push	{r4, r5, r6, r7, lr}
    3056:	46de      	mov	lr, fp
    3058:	4657      	mov	r7, sl
    305a:	464e      	mov	r6, r9
    305c:	4645      	mov	r5, r8
    305e:	b5e0      	push	{r5, r6, r7, lr}
    3060:	b083      	sub	sp, #12
    3062:	9000      	str	r0, [sp, #0]
    3064:	000d      	movs	r5, r1
    3066:	0016      	movs	r6, r2
	//gfx font
	c=c-0x20; //offset
    3068:	3b20      	subs	r3, #32
    306a:	b2df      	uxtb	r7, r3
		w+=8-h_helper;
	}
	
	int16_t calc_helper=ceil(w/8);
	//int16_t h_hel=0;
	switch(rotation)
    306c:	7a03      	ldrb	r3, [r0, #8]
    306e:	2b02      	cmp	r3, #2
    3070:	d043      	beq.n	30fa <_ZN9GDEW027W313drawChar_CAPIEsshtth+0xa6>
    3072:	2b03      	cmp	r3, #3
    3074:	d048      	beq.n	3108 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0xb4>
    3076:	2b01      	cmp	r3, #1
    3078:	d038      	beq.n	30ec <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x98>
		break;
	}
	
	// x+=xo;
	// y+=yo;
	IL91874_sendCmd(0x15);
    307a:	2115      	movs	r1, #21
    307c:	9c00      	ldr	r4, [sp, #0]
    307e:	0020      	movs	r0, r4
    3080:	4b3c      	ldr	r3, [pc, #240]	; (3174 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x120>)
    3082:	4798      	blx	r3
	IL91874_sendData((x >> 8)&0x01);
    3084:	05e9      	lsls	r1, r5, #23
    3086:	0fc9      	lsrs	r1, r1, #31
    3088:	9400      	str	r4, [sp, #0]
    308a:	0020      	movs	r0, r4
    308c:	4c3a      	ldr	r4, [pc, #232]	; (3178 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x124>)
    308e:	47a0      	blx	r4
	IL91874_sendData(x & 0xf8);     // x should be the multiple of 8, the last 3 bit will always be ignored
    3090:	21f8      	movs	r1, #248	; 0xf8
    3092:	4029      	ands	r1, r5
    3094:	9d00      	ldr	r5, [sp, #0]
    3096:	0028      	movs	r0, r5
    3098:	47a0      	blx	r4
	IL91874_sendData(y >> 8 );
    309a:	1231      	asrs	r1, r6, #8
    309c:	b2c9      	uxtb	r1, r1
    309e:	0028      	movs	r0, r5
    30a0:	47a0      	blx	r4
	IL91874_sendData(y & 0xff);  //y everything is there
    30a2:	b2f1      	uxtb	r1, r6
    30a4:	0028      	movs	r0, r5
    30a6:	47a0      	blx	r4
	IL91874_sendData((w >> 8)&0x01);
    30a8:	2100      	movs	r1, #0
    30aa:	0028      	movs	r0, r5
    30ac:	47a0      	blx	r4
	IL91874_sendData(w & 0xf8);
    30ae:	2118      	movs	r1, #24
    30b0:	0028      	movs	r0, r5
    30b2:	47a0      	blx	r4
	IL91874_sendData(h >> 8);
    30b4:	2100      	movs	r1, #0
    30b6:	0028      	movs	r0, r5
    30b8:	47a0      	blx	r4
	IL91874_sendData(h & 0xff);
    30ba:	210b      	movs	r1, #11
    30bc:	0028      	movs	r0, r5
    30be:	47a0      	blx	r4
	delay_ms(2);
    30c0:	2002      	movs	r0, #2
    30c2:	4b2e      	ldr	r3, [pc, #184]	; (317c <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x128>)
    30c4:	4798      	blx	r3
	uint8_t line2=0;

	for(int16_t yy=h-1; yy>=0; yy--) {
		for(int16_t j=1; j<=calc_helper; j++)
		{
			line =MS_Sans_Serif11x18[c*line_width+calc_helper*yy+j];
    30c6:	013b      	lsls	r3, r7, #4
    30c8:	19db      	adds	r3, r3, r7
    30ca:	005b      	lsls	r3, r3, #1
    30cc:	4a2c      	ldr	r2, [pc, #176]	; (3180 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x12c>)
    30ce:	325c      	adds	r2, #92	; 0x5c
    30d0:	0019      	movs	r1, r3
    30d2:	311e      	adds	r1, #30
    30d4:	0049      	lsls	r1, r1, #1
    30d6:	4688      	mov	r8, r1
    30d8:	4490      	add	r8, r2
    30da:	492a      	ldr	r1, [pc, #168]	; (3184 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x130>)
    30dc:	468c      	mov	ip, r1
    30de:	4463      	add	r3, ip
    30e0:	005b      	lsls	r3, r3, #1
    30e2:	4692      	mov	sl, r2
    30e4:	449a      	add	sl, r3
			line2=0;
			for(uint8_t i=0;i< 8 ;i++){
				line2 |= ((line>>i) & 1)<<(7-i);
			}
			line2=~line2;
			IL91874_sendData(line2);
    30e6:	4b24      	ldr	r3, [pc, #144]	; (3178 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x124>)
    30e8:	4699      	mov	r9, r3
    30ea:	e01a      	b.n	3122 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0xce>
		x = _width - x - 1;
    30ec:	43cd      	mvns	r5, r1
    30ee:	6803      	ldr	r3, [r0, #0]
    30f0:	9301      	str	r3, [sp, #4]
    30f2:	469c      	mov	ip, r3
    30f4:	4465      	add	r5, ip
    30f6:	b22d      	sxth	r5, r5
		break;
    30f8:	e7bf      	b.n	307a <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x26>
		y = _height - y - 1;
    30fa:	9b00      	ldr	r3, [sp, #0]
    30fc:	685b      	ldr	r3, [r3, #4]
    30fe:	9301      	str	r3, [sp, #4]
    3100:	1e59      	subs	r1, r3, #1
    3102:	1a8e      	subs	r6, r1, r2
    3104:	b236      	sxth	r6, r6
		break;
    3106:	e7b8      	b.n	307a <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x26>
		y = _width - y - 1;
    3108:	43cd      	mvns	r5, r1
    310a:	9b00      	ldr	r3, [sp, #0]
    310c:	681b      	ldr	r3, [r3, #0]
    310e:	9301      	str	r3, [sp, #4]
    3110:	195b      	adds	r3, r3, r5
		x=x_hel;
    3112:	0015      	movs	r5, r2
		y = _width - y - 1;
    3114:	b21e      	sxth	r6, r3
		break;
    3116:	e7b0      	b.n	307a <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x26>
    3118:	3b08      	subs	r3, #8
    311a:	469c      	mov	ip, r3
    311c:	44e0      	add	r8, ip
	for(int16_t yy=h-1; yy>=0; yy--) {
    311e:	45d0      	cmp	r8, sl
    3120:	d01e      	beq.n	3160 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x10c>
		y = _width - y - 1;
    3122:	46c3      	mov	fp, r8
    3124:	2503      	movs	r5, #3
				line2 |= ((line>>i) & 1)<<(7-i);
    3126:	2401      	movs	r4, #1
			line =MS_Sans_Serif11x18[c*line_width+calc_helper*yy+j];
    3128:	465b      	mov	r3, fp
    312a:	789f      	ldrb	r7, [r3, #2]
    312c:	2200      	movs	r2, #0
    312e:	2100      	movs	r1, #0
				line2 |= ((line>>i) & 1)<<(7-i);
    3130:	2007      	movs	r0, #7
    3132:	000b      	movs	r3, r1
    3134:	0039      	movs	r1, r7
    3136:	4111      	asrs	r1, r2
    3138:	4021      	ands	r1, r4
    313a:	1a86      	subs	r6, r0, r2
    313c:	40b1      	lsls	r1, r6
    313e:	430b      	orrs	r3, r1
    3140:	b2db      	uxtb	r3, r3
    3142:	3201      	adds	r2, #1
			for(uint8_t i=0;i< 8 ;i++){
    3144:	2a08      	cmp	r2, #8
    3146:	d1f5      	bne.n	3134 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0xe0>
			line2=~line2;
    3148:	43d9      	mvns	r1, r3
			IL91874_sendData(line2);
    314a:	b2c9      	uxtb	r1, r1
    314c:	9800      	ldr	r0, [sp, #0]
    314e:	47c8      	blx	r9
    3150:	3d01      	subs	r5, #1
    3152:	b2ad      	uxth	r5, r5
    3154:	2302      	movs	r3, #2
    3156:	469c      	mov	ip, r3
    3158:	44e3      	add	fp, ip
		for(int16_t j=1; j<=calc_helper; j++)
    315a:	2d00      	cmp	r5, #0
    315c:	d1e4      	bne.n	3128 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0xd4>
    315e:	e7db      	b.n	3118 <_ZN9GDEW027W313drawChar_CAPIEsshtth+0xc4>
		}
	}
	
	delay_ms(2);
    3160:	2002      	movs	r0, #2
    3162:	4b06      	ldr	r3, [pc, #24]	; (317c <_ZN9GDEW027W313drawChar_CAPIEsshtth+0x128>)
    3164:	4798      	blx	r3
}
    3166:	b003      	add	sp, #12
    3168:	bc3c      	pop	{r2, r3, r4, r5}
    316a:	4690      	mov	r8, r2
    316c:	4699      	mov	r9, r3
    316e:	46a2      	mov	sl, r4
    3170:	46ab      	mov	fp, r5
    3172:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3174:	000029fd 	.word	0x000029fd
    3178:	00002a25 	.word	0x00002a25
    317c:	00000a95 	.word	0x00000a95
    3180:	00009524 	.word	0x00009524
    3184:	7ffffffd 	.word	0x7ffffffd

00003188 <_ZN9GDEW027W312drawChar_numEsshtth>:

void GDEW027W3::drawChar_num(int16_t x, int16_t y,unsigned char c, uint16_t color,uint16_t bg, uint8_t size) {
    3188:	b5f0      	push	{r4, r5, r6, r7, lr}
    318a:	46de      	mov	lr, fp
    318c:	4657      	mov	r7, sl
    318e:	464e      	mov	r6, r9
    3190:	4645      	mov	r5, r8
    3192:	b5e0      	push	{r5, r6, r7, lr}
    3194:	b083      	sub	sp, #12
    3196:	9000      	str	r0, [sp, #0]
    3198:	000f      	movs	r7, r1
    319a:	0016      	movs	r6, r2
	//gfx font
	c=c-0x20; //offset 
    319c:	3b20      	subs	r3, #32
    319e:	b2dd      	uxtb	r5, r3
	   w+=8-h_helper;
   }
   
   int16_t calc_helper=ceil(w/8);
	//int16_t h_hel=0;
  switch(rotation)
    31a0:	7a03      	ldrb	r3, [r0, #8]
    31a2:	2b02      	cmp	r3, #2
    31a4:	d044      	beq.n	3230 <_ZN9GDEW027W312drawChar_numEsshtth+0xa8>
    31a6:	2b03      	cmp	r3, #3
    31a8:	d049      	beq.n	323e <_ZN9GDEW027W312drawChar_numEsshtth+0xb6>
    31aa:	2b01      	cmp	r3, #1
    31ac:	d039      	beq.n	3222 <_ZN9GDEW027W312drawChar_numEsshtth+0x9a>
	  //h=h_hel;
      break;
 }	
// x+=xo;
// y+=yo;
	IL91874_sendCmd(0x15);
    31ae:	2115      	movs	r1, #21
    31b0:	9c00      	ldr	r4, [sp, #0]
    31b2:	0020      	movs	r0, r4
    31b4:	4b3d      	ldr	r3, [pc, #244]	; (32ac <_ZN9GDEW027W312drawChar_numEsshtth+0x124>)
    31b6:	4798      	blx	r3
	IL91874_sendData((x >> 8)&0x01);
    31b8:	05f9      	lsls	r1, r7, #23
    31ba:	0fc9      	lsrs	r1, r1, #31
    31bc:	9400      	str	r4, [sp, #0]
    31be:	0020      	movs	r0, r4
    31c0:	4c3b      	ldr	r4, [pc, #236]	; (32b0 <_ZN9GDEW027W312drawChar_numEsshtth+0x128>)
    31c2:	47a0      	blx	r4
	IL91874_sendData(x & 0xf8);     // x should be the multiple of 8, the last 3 bit will always be ignored
    31c4:	21f8      	movs	r1, #248	; 0xf8
    31c6:	4039      	ands	r1, r7
    31c8:	9f00      	ldr	r7, [sp, #0]
    31ca:	0038      	movs	r0, r7
    31cc:	47a0      	blx	r4
	IL91874_sendData(y >> 8 );
    31ce:	1231      	asrs	r1, r6, #8
    31d0:	b2c9      	uxtb	r1, r1
    31d2:	0038      	movs	r0, r7
    31d4:	47a0      	blx	r4
	IL91874_sendData(y & 0xff);  //y everything is there
    31d6:	b2f1      	uxtb	r1, r6
    31d8:	0038      	movs	r0, r7
    31da:	47a0      	blx	r4
	IL91874_sendData((w >> 8)&0x01);
    31dc:	2100      	movs	r1, #0
    31de:	0038      	movs	r0, r7
    31e0:	47a0      	blx	r4
	IL91874_sendData(w & 0xf8);
    31e2:	2118      	movs	r1, #24
    31e4:	0038      	movs	r0, r7
    31e6:	47a0      	blx	r4
	IL91874_sendData(h >> 8);
    31e8:	2100      	movs	r1, #0
    31ea:	0038      	movs	r0, r7
    31ec:	47a0      	blx	r4
	IL91874_sendData(h & 0xff);
    31ee:	210a      	movs	r1, #10
    31f0:	0038      	movs	r0, r7
    31f2:	47a0      	blx	r4
	delay_ms(2);
    31f4:	2002      	movs	r0, #2
    31f6:	4b2f      	ldr	r3, [pc, #188]	; (32b4 <_ZN9GDEW027W312drawChar_numEsshtth+0x12c>)
    31f8:	4798      	blx	r3
uint8_t line2=0;

	for(int16_t yy=h-3; yy>=0; yy--) {
		for(int16_t j=1; j<=calc_helper; j++) 
		{
			line = MS_Sans_Serif8x18[c*line_width+calc_helper*yy+j];
    31fa:	00ab      	lsls	r3, r5, #2
    31fc:	195b      	adds	r3, r3, r5
    31fe:	009a      	lsls	r2, r3, #2
    3200:	189b      	adds	r3, r3, r2
    3202:	4a2d      	ldr	r2, [pc, #180]	; (32b8 <_ZN9GDEW027W312drawChar_numEsshtth+0x130>)
    3204:	3218      	adds	r2, #24
    3206:	0019      	movs	r1, r3
    3208:	3115      	adds	r1, #21
    320a:	0049      	lsls	r1, r1, #1
    320c:	4688      	mov	r8, r1
    320e:	4490      	add	r8, r2
    3210:	492a      	ldr	r1, [pc, #168]	; (32bc <_ZN9GDEW027W312drawChar_numEsshtth+0x134>)
    3212:	468c      	mov	ip, r1
    3214:	4463      	add	r3, ip
    3216:	005b      	lsls	r3, r3, #1
    3218:	4692      	mov	sl, r2
    321a:	449a      	add	sl, r3
			line2=0;
			for(uint8_t i=0;i< 8 ;i++){
				 line2 |= ((line>>i) & 1)<<(7-i);
			}
			line2=~line2;
			IL91874_sendData(line2);
    321c:	4b24      	ldr	r3, [pc, #144]	; (32b0 <_ZN9GDEW027W312drawChar_numEsshtth+0x128>)
    321e:	4699      	mov	r9, r3
    3220:	e01a      	b.n	3258 <_ZN9GDEW027W312drawChar_numEsshtth+0xd0>
      x = _width - x - 1;
    3222:	43cf      	mvns	r7, r1
    3224:	6803      	ldr	r3, [r0, #0]
    3226:	9301      	str	r3, [sp, #4]
    3228:	469c      	mov	ip, r3
    322a:	4467      	add	r7, ip
    322c:	b23f      	sxth	r7, r7
      break;
    322e:	e7be      	b.n	31ae <_ZN9GDEW027W312drawChar_numEsshtth+0x26>
      y = _height - y - 1;
    3230:	9b00      	ldr	r3, [sp, #0]
    3232:	685b      	ldr	r3, [r3, #4]
    3234:	9301      	str	r3, [sp, #4]
    3236:	1e59      	subs	r1, r3, #1
    3238:	1a8e      	subs	r6, r1, r2
    323a:	b236      	sxth	r6, r6
      break;  
    323c:	e7b7      	b.n	31ae <_ZN9GDEW027W312drawChar_numEsshtth+0x26>
		y = _width - y - 1;
    323e:	43cf      	mvns	r7, r1
    3240:	9b00      	ldr	r3, [sp, #0]
    3242:	681b      	ldr	r3, [r3, #0]
    3244:	9301      	str	r3, [sp, #4]
    3246:	19db      	adds	r3, r3, r7
		x=x_hel;
    3248:	0017      	movs	r7, r2
		y = _width - y - 1;
    324a:	b21e      	sxth	r6, r3
      break;
    324c:	e7af      	b.n	31ae <_ZN9GDEW027W312drawChar_numEsshtth+0x26>
    324e:	3b08      	subs	r3, #8
    3250:	469c      	mov	ip, r3
    3252:	44e0      	add	r8, ip
	for(int16_t yy=h-3; yy>=0; yy--) {
    3254:	45d0      	cmp	r8, sl
    3256:	d01e      	beq.n	3296 <_ZN9GDEW027W312drawChar_numEsshtth+0x10e>
		y = _width - y - 1;
    3258:	46c3      	mov	fp, r8
    325a:	2503      	movs	r5, #3
				 line2 |= ((line>>i) & 1)<<(7-i);
    325c:	2401      	movs	r4, #1
			line = MS_Sans_Serif8x18[c*line_width+calc_helper*yy+j];
    325e:	465b      	mov	r3, fp
    3260:	789f      	ldrb	r7, [r3, #2]
    3262:	2200      	movs	r2, #0
    3264:	2100      	movs	r1, #0
				 line2 |= ((line>>i) & 1)<<(7-i);
    3266:	2007      	movs	r0, #7
    3268:	000b      	movs	r3, r1
    326a:	0039      	movs	r1, r7
    326c:	4111      	asrs	r1, r2
    326e:	4021      	ands	r1, r4
    3270:	1a86      	subs	r6, r0, r2
    3272:	40b1      	lsls	r1, r6
    3274:	430b      	orrs	r3, r1
    3276:	b2db      	uxtb	r3, r3
    3278:	3201      	adds	r2, #1
			for(uint8_t i=0;i< 8 ;i++){
    327a:	2a08      	cmp	r2, #8
    327c:	d1f5      	bne.n	326a <_ZN9GDEW027W312drawChar_numEsshtth+0xe2>
			line2=~line2;
    327e:	43d9      	mvns	r1, r3
			IL91874_sendData(line2);
    3280:	b2c9      	uxtb	r1, r1
    3282:	9800      	ldr	r0, [sp, #0]
    3284:	47c8      	blx	r9
    3286:	3d01      	subs	r5, #1
    3288:	b2ad      	uxth	r5, r5
    328a:	2302      	movs	r3, #2
    328c:	469c      	mov	ip, r3
    328e:	44e3      	add	fp, ip
		for(int16_t j=1; j<=calc_helper; j++) 
    3290:	2d00      	cmp	r5, #0
    3292:	d1e4      	bne.n	325e <_ZN9GDEW027W312drawChar_numEsshtth+0xd6>
    3294:	e7db      	b.n	324e <_ZN9GDEW027W312drawChar_numEsshtth+0xc6>
		}
    }
	 
  delay_ms(2);
    3296:	2002      	movs	r0, #2
    3298:	4b06      	ldr	r3, [pc, #24]	; (32b4 <_ZN9GDEW027W312drawChar_numEsshtth+0x12c>)
    329a:	4798      	blx	r3
}
    329c:	b003      	add	sp, #12
    329e:	bc3c      	pop	{r2, r3, r4, r5}
    32a0:	4690      	mov	r8, r2
    32a2:	4699      	mov	r9, r3
    32a4:	46a2      	mov	sl, r4
    32a6:	46ab      	mov	fp, r5
    32a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    32aa:	46c0      	nop			; (mov r8, r8)
    32ac:	000029fd 	.word	0x000029fd
    32b0:	00002a25 	.word	0x00002a25
    32b4:	00000a95 	.word	0x00000a95
    32b8:	0000bfa4 	.word	0x0000bfa4
    32bc:	7ffffffd 	.word	0x7ffffffd

000032c0 <_ZN9GDEW027W316drawString_gfx_CEssPctth>:

void GDEW027W3::drawString_gfx_C( int16_t x, int16_t y, char stri[], uint16_t color,uint16_t bg, uint8_t size)
{	
    32c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    32c2:	46de      	mov	lr, fp
    32c4:	4657      	mov	r7, sl
    32c6:	464e      	mov	r6, r9
    32c8:	4645      	mov	r5, r8
    32ca:	b5e0      	push	{r5, r6, r7, lr}
    32cc:	b089      	sub	sp, #36	; 0x24
    32ce:	9005      	str	r0, [sp, #20]
    32d0:	9206      	str	r2, [sp, #24]
    32d2:	001d      	movs	r5, r3
    32d4:	ab12      	add	r3, sp, #72	; 0x48
    32d6:	881b      	ldrh	r3, [r3, #0]
    32d8:	469a      	mov	sl, r3
    32da:	ab13      	add	r3, sp, #76	; 0x4c
    32dc:	881b      	ldrh	r3, [r3, #0]
    32de:	4699      	mov	r9, r3
    32e0:	ab14      	add	r3, sp, #80	; 0x50
    32e2:	781f      	ldrb	r7, [r3, #0]
    32e4:	00be      	lsls	r6, r7, #2
    32e6:	19be      	adds	r6, r7, r6
    32e8:	0076      	lsls	r6, r6, #1
    32ea:	19be      	adds	r6, r7, r6
    32ec:	b2b6      	uxth	r6, r6
	uint8_t ii=0;
    32ee:	2400      	movs	r4, #0
	char kk;
	while(ii < strlen(stri)){
    32f0:	4b11      	ldr	r3, [pc, #68]	; (3338 <_ZN9GDEW027W316drawString_gfx_CEssPctth+0x78>)
    32f2:	4698      	mov	r8, r3
		kk=stri[ii];
		drawChar_CAPI(x+(ii*(size)*11), y, kk, color,bg, size);
    32f4:	9607      	str	r6, [sp, #28]
    32f6:	003b      	movs	r3, r7
    32f8:	000f      	movs	r7, r1
    32fa:	469b      	mov	fp, r3
	while(ii < strlen(stri)){
    32fc:	0028      	movs	r0, r5
    32fe:	47c0      	blx	r8
    3300:	4284      	cmp	r4, r0
    3302:	d212      	bcs.n	332a <_ZN9GDEW027W316drawString_gfx_CEssPctth+0x6a>
		drawChar_CAPI(x+(ii*(size)*11), y, kk, color,bg, size);
    3304:	5d2b      	ldrb	r3, [r5, r4]
    3306:	0021      	movs	r1, r4
    3308:	9a07      	ldr	r2, [sp, #28]
    330a:	4351      	muls	r1, r2
    330c:	19c9      	adds	r1, r1, r7
    330e:	b209      	sxth	r1, r1
    3310:	465a      	mov	r2, fp
    3312:	9202      	str	r2, [sp, #8]
    3314:	464a      	mov	r2, r9
    3316:	9201      	str	r2, [sp, #4]
    3318:	4652      	mov	r2, sl
    331a:	9200      	str	r2, [sp, #0]
    331c:	9a06      	ldr	r2, [sp, #24]
    331e:	9805      	ldr	r0, [sp, #20]
    3320:	4e06      	ldr	r6, [pc, #24]	; (333c <_ZN9GDEW027W316drawString_gfx_CEssPctth+0x7c>)
    3322:	47b0      	blx	r6
		ii++;
    3324:	3401      	adds	r4, #1
    3326:	b2e4      	uxtb	r4, r4
	while(ii < strlen(stri)){
    3328:	e7e8      	b.n	32fc <_ZN9GDEW027W316drawString_gfx_CEssPctth+0x3c>
	}
}
    332a:	b009      	add	sp, #36	; 0x24
    332c:	bc3c      	pop	{r2, r3, r4, r5}
    332e:	4690      	mov	r8, r2
    3330:	4699      	mov	r9, r3
    3332:	46a2      	mov	sl, r4
    3334:	46ab      	mov	fp, r5
    3336:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3338:	00008ced 	.word	0x00008ced
    333c:	00003055 	.word	0x00003055

00003340 <_ZN9GDEW027W316drawString_gfx_nEssPctthh>:

void GDEW027W3::drawString_gfx_n( int16_t x, int16_t y,char stri[], uint16_t color,uint16_t bg, uint8_t size, uint8_t right)
{
    3340:	b5f0      	push	{r4, r5, r6, r7, lr}
    3342:	46de      	mov	lr, fp
    3344:	4657      	mov	r7, sl
    3346:	464e      	mov	r6, r9
    3348:	4645      	mov	r5, r8
    334a:	b5e0      	push	{r5, r6, r7, lr}
    334c:	b089      	sub	sp, #36	; 0x24
    334e:	9004      	str	r0, [sp, #16]
    3350:	468a      	mov	sl, r1
    3352:	9205      	str	r2, [sp, #20]
    3354:	001e      	movs	r6, r3
    3356:	ab12      	add	r3, sp, #72	; 0x48
    3358:	881b      	ldrh	r3, [r3, #0]
    335a:	469b      	mov	fp, r3
    335c:	ab13      	add	r3, sp, #76	; 0x4c
    335e:	881b      	ldrh	r3, [r3, #0]
    3360:	4698      	mov	r8, r3
    3362:	ab14      	add	r3, sp, #80	; 0x50
    3364:	781f      	ldrb	r7, [r3, #0]
    3366:	ab15      	add	r3, sp, #84	; 0x54
    3368:	781b      	ldrb	r3, [r3, #0]
	
	if(right==1) //right shifted values
    336a:	2b01      	cmp	r3, #1
    336c:	d00a      	beq.n	3384 <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x44>
    336e:	00bb      	lsls	r3, r7, #2
    3370:	18fb      	adds	r3, r7, r3
    3372:	005b      	lsls	r3, r3, #1
    3374:	4699      	mov	r9, r3
		if(ii>0 && stri[ii-1]==46) //if '.'
		{
			frac=5;
		}
		
		drawChar_num(x+(ii*(size)*10-frac), y, kk, color,bg, size);
    3376:	2300      	movs	r3, #0
    3378:	9306      	str	r3, [sp, #24]
    337a:	2400      	movs	r4, #0
    337c:	003b      	movs	r3, r7
    337e:	464f      	mov	r7, r9
    3380:	4699      	mov	r9, r3
    3382:	e05c      	b.n	343e <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0xfe>
	uint8_t len =strlen(stri);
    3384:	0030      	movs	r0, r6
    3386:	4b39      	ldr	r3, [pc, #228]	; (346c <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x12c>)
    3388:	4798      	blx	r3
    338a:	b2c0      	uxtb	r0, r0
	for(int16_t i= len;i>0;i--)
    338c:	b204      	sxth	r4, r0
    338e:	2c00      	cmp	r4, #0
    3390:	dd65      	ble.n	345e <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x11e>
		else drawChar_num(x-(len*size*10)+((i-1)*(size)*10+frac), y, k, color,bg, size); 
    3392:	250a      	movs	r5, #10
    3394:	426d      	negs	r5, r5
    3396:	4345      	muls	r5, r0
    3398:	b2ad      	uxth	r5, r5
    339a:	2300      	movs	r3, #0
    339c:	4699      	mov	r9, r3
			drawChar(x-(len*size*10)+((i-1)*(size)*10), y+5, k, color,bg, size);
    339e:	9b05      	ldr	r3, [sp, #20]
    33a0:	3305      	adds	r3, #5
    33a2:	b21b      	sxth	r3, r3
    33a4:	9307      	str	r3, [sp, #28]
    33a6:	0033      	movs	r3, r6
    33a8:	002e      	movs	r6, r5
    33aa:	464a      	mov	r2, r9
    33ac:	9206      	str	r2, [sp, #24]
    33ae:	4699      	mov	r9, r3
    33b0:	e017      	b.n	33e2 <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0xa2>
    33b2:	1e63      	subs	r3, r4, #1
    33b4:	0099      	lsls	r1, r3, #2
    33b6:	1859      	adds	r1, r3, r1
    33b8:	0049      	lsls	r1, r1, #1
    33ba:	1871      	adds	r1, r6, r1
    33bc:	4379      	muls	r1, r7
    33be:	4451      	add	r1, sl
    33c0:	b209      	sxth	r1, r1
    33c2:	9702      	str	r7, [sp, #8]
    33c4:	4643      	mov	r3, r8
    33c6:	9301      	str	r3, [sp, #4]
    33c8:	465b      	mov	r3, fp
    33ca:	9300      	str	r3, [sp, #0]
    33cc:	232e      	movs	r3, #46	; 0x2e
    33ce:	9a07      	ldr	r2, [sp, #28]
    33d0:	9804      	ldr	r0, [sp, #16]
    33d2:	4d27      	ldr	r5, [pc, #156]	; (3470 <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x130>)
    33d4:	47a8      	blx	r5
			frac=4;
    33d6:	2304      	movs	r3, #4
    33d8:	9306      	str	r3, [sp, #24]
    33da:	3c01      	subs	r4, #1
    33dc:	b224      	sxth	r4, r4
	for(int16_t i= len;i>0;i--)
    33de:	2c00      	cmp	r4, #0
    33e0:	d03d      	beq.n	345e <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x11e>
		k=stri[i-1];
    33e2:	464b      	mov	r3, r9
    33e4:	191b      	adds	r3, r3, r4
    33e6:	3b01      	subs	r3, #1
    33e8:	781b      	ldrb	r3, [r3, #0]
		if(i >0 && stri[i-1]=='.') //if '.'
    33ea:	2b2e      	cmp	r3, #46	; 0x2e
    33ec:	d0e1      	beq.n	33b2 <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x72>
		else drawChar_num(x-(len*size*10)+((i-1)*(size)*10+frac), y, k, color,bg, size); 
    33ee:	1e62      	subs	r2, r4, #1
    33f0:	0091      	lsls	r1, r2, #2
    33f2:	1851      	adds	r1, r2, r1
    33f4:	0049      	lsls	r1, r1, #1
    33f6:	1871      	adds	r1, r6, r1
    33f8:	4379      	muls	r1, r7
    33fa:	4652      	mov	r2, sl
    33fc:	9806      	ldr	r0, [sp, #24]
    33fe:	4684      	mov	ip, r0
    3400:	4462      	add	r2, ip
    3402:	1889      	adds	r1, r1, r2
    3404:	b209      	sxth	r1, r1
    3406:	9702      	str	r7, [sp, #8]
    3408:	4642      	mov	r2, r8
    340a:	9201      	str	r2, [sp, #4]
    340c:	465a      	mov	r2, fp
    340e:	9200      	str	r2, [sp, #0]
    3410:	9a05      	ldr	r2, [sp, #20]
    3412:	9804      	ldr	r0, [sp, #16]
    3414:	4d17      	ldr	r5, [pc, #92]	; (3474 <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x134>)
    3416:	47a8      	blx	r5
    3418:	e7df      	b.n	33da <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x9a>
		drawChar_num(x+(ii*(size)*10-frac), y, kk, color,bg, size);
    341a:	0021      	movs	r1, r4
    341c:	4379      	muls	r1, r7
    341e:	4451      	add	r1, sl
    3420:	9a06      	ldr	r2, [sp, #24]
    3422:	1a89      	subs	r1, r1, r2
    3424:	b209      	sxth	r1, r1
    3426:	464a      	mov	r2, r9
    3428:	9202      	str	r2, [sp, #8]
    342a:	4642      	mov	r2, r8
    342c:	9201      	str	r2, [sp, #4]
    342e:	465a      	mov	r2, fp
    3430:	9200      	str	r2, [sp, #0]
    3432:	9a05      	ldr	r2, [sp, #20]
    3434:	9804      	ldr	r0, [sp, #16]
    3436:	4d0f      	ldr	r5, [pc, #60]	; (3474 <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x134>)
    3438:	47a8      	blx	r5
		ii++;
    343a:	3401      	adds	r4, #1
    343c:	b2e4      	uxtb	r4, r4
	while(ii < strlen(stri)){
    343e:	0030      	movs	r0, r6
    3440:	4b0a      	ldr	r3, [pc, #40]	; (346c <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x12c>)
    3442:	4798      	blx	r3
    3444:	4284      	cmp	r4, r0
    3446:	d20a      	bcs.n	345e <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0x11e>
		kk=stri[ii];
    3448:	5d33      	ldrb	r3, [r6, r4]
		if(ii>0 && stri[ii-1]==46) //if '.'
    344a:	2c00      	cmp	r4, #0
    344c:	dde5      	ble.n	341a <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0xda>
    344e:	1935      	adds	r5, r6, r4
    3450:	3d01      	subs	r5, #1
    3452:	782a      	ldrb	r2, [r5, #0]
    3454:	2a2e      	cmp	r2, #46	; 0x2e
    3456:	d1e0      	bne.n	341a <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0xda>
			frac=5;
    3458:	3a29      	subs	r2, #41	; 0x29
    345a:	9206      	str	r2, [sp, #24]
    345c:	e7dd      	b.n	341a <_ZN9GDEW027W316drawString_gfx_nEssPctthh+0xda>
	}
	
}
}
    345e:	b009      	add	sp, #36	; 0x24
    3460:	bc3c      	pop	{r2, r3, r4, r5}
    3462:	4690      	mov	r8, r2
    3464:	4699      	mov	r9, r3
    3466:	46a2      	mov	sl, r4
    3468:	46ab      	mov	fp, r5
    346a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    346c:	00008ced 	.word	0x00008ced
    3470:	00002e1d 	.word	0x00002e1d
    3474:	00003189 	.word	0x00003189

00003478 <_ZN8MICS68144initEv>:
{
    3478:	b510      	push	{r4, lr}
	REG_PORT_OUTSET0=(1<<6); //heater on	
    347a:	2240      	movs	r2, #64	; 0x40
    347c:	4b06      	ldr	r3, [pc, #24]	; (3498 <_ZN8MICS68144initEv+0x20>)
    347e:	601a      	str	r2, [r3, #0]
	delay_ms(300); //wait till heated some
    3480:	2096      	movs	r0, #150	; 0x96
    3482:	0040      	lsls	r0, r0, #1
    3484:	4b05      	ldr	r3, [pc, #20]	; (349c <_ZN8MICS68144initEv+0x24>)
    3486:	4798      	blx	r3
	PORT->Group[0].WRCONFIG.reg = PORT_WRCONFIG_WRPINCFG |PORT_WRCONFIG_WRPMUX| PORT_WRCONFIG_PMUX(1)|
    3488:	4b05      	ldr	r3, [pc, #20]	; (34a0 <_ZN8MICS68144initEv+0x28>)
    348a:	4a06      	ldr	r2, [pc, #24]	; (34a4 <_ZN8MICS68144initEv+0x2c>)
    348c:	629a      	str	r2, [r3, #40]	; 0x28
	PORT->Group[1].WRCONFIG.reg = PORT_WRCONFIG_WRPINCFG |PORT_WRCONFIG_WRPMUX| PORT_WRCONFIG_PMUX(1)|PORT_WRCONFIG_PMUXEN|PORT_WRCONFIG_PINMASK((1<<8)|(1<<9));
    348e:	4906      	ldr	r1, [pc, #24]	; (34a8 <_ZN8MICS68144initEv+0x30>)
    3490:	22a8      	movs	r2, #168	; 0xa8
    3492:	5099      	str	r1, [r3, r2]
}
    3494:	bd10      	pop	{r4, pc}
    3496:	46c0      	nop			; (mov r8, r8)
    3498:	41004418 	.word	0x41004418
    349c:	00000a95 	.word	0x00000a95
    34a0:	41004400 	.word	0x41004400
    34a4:	51010030 	.word	0x51010030
    34a8:	51010300 	.word	0x51010300

000034ac <_ZN8MICS681414readCurrentADCEv>:
{
    34ac:	b570      	push	{r4, r5, r6, lr}
    34ae:	0004      	movs	r4, r0
	Ameas_0=readADC(2); //muxpos input, 
    34b0:	2002      	movs	r0, #2
    34b2:	4d05      	ldr	r5, [pc, #20]	; (34c8 <_ZN8MICS681414readCurrentADCEv+0x1c>)
    34b4:	47a8      	blx	r5
    34b6:	8020      	strh	r0, [r4, #0]
	Ameas_1=readADC(3);
    34b8:	2003      	movs	r0, #3
    34ba:	47a8      	blx	r5
    34bc:	8060      	strh	r0, [r4, #2]
	Ameas_2=readADC(4);
    34be:	2004      	movs	r0, #4
    34c0:	47a8      	blx	r5
    34c2:	80a0      	strh	r0, [r4, #4]
}
    34c4:	bd70      	pop	{r4, r5, r6, pc}
    34c6:	46c0      	nop			; (mov r8, r8)
    34c8:	00000ac5 	.word	0x00000ac5

000034cc <_ZN8MICS68149calcGasesEv>:
{
    34cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    34ce:	46de      	mov	lr, fp
    34d0:	4657      	mov	r7, sl
    34d2:	4646      	mov	r6, r8
    34d4:	b5c0      	push	{r6, r7, lr}
    34d6:	b084      	sub	sp, #16
    34d8:	0007      	movs	r7, r0
	ratio0  = (((double)ADC_PRECISION-(double)Aref_0)/((double)ADC_PRECISION-(double)Ameas_0));
    34da:	8800      	ldrh	r0, [r0, #0]
    34dc:	4b59      	ldr	r3, [pc, #356]	; (3644 <_ZN8MICS68149calcGasesEv+0x178>)
    34de:	469b      	mov	fp, r3
    34e0:	4798      	blx	r3
    34e2:	0004      	movs	r4, r0
    34e4:	000d      	movs	r5, r1
    34e6:	4b58      	ldr	r3, [pc, #352]	; (3648 <_ZN8MICS68149calcGasesEv+0x17c>)
    34e8:	4698      	mov	r8, r3
    34ea:	0002      	movs	r2, r0
    34ec:	000b      	movs	r3, r1
    34ee:	2000      	movs	r0, #0
    34f0:	4956      	ldr	r1, [pc, #344]	; (364c <_ZN8MICS68149calcGasesEv+0x180>)
    34f2:	47c0      	blx	r8
    34f4:	0002      	movs	r2, r0
    34f6:	000b      	movs	r3, r1
    34f8:	4955      	ldr	r1, [pc, #340]	; (3650 <_ZN8MICS68149calcGasesEv+0x184>)
    34fa:	468a      	mov	sl, r1
    34fc:	2000      	movs	r0, #0
    34fe:	4955      	ldr	r1, [pc, #340]	; (3654 <_ZN8MICS68149calcGasesEv+0x188>)
    3500:	47d0      	blx	sl
    3502:	9000      	str	r0, [sp, #0]
    3504:	9101      	str	r1, [sp, #4]
	ratio0 *= (double)Ameas_0/(double)Aref_0;
    3506:	2200      	movs	r2, #0
    3508:	4b53      	ldr	r3, [pc, #332]	; (3658 <_ZN8MICS68149calcGasesEv+0x18c>)
    350a:	0020      	movs	r0, r4
    350c:	0029      	movs	r1, r5
    350e:	47d0      	blx	sl
    3510:	0002      	movs	r2, r0
    3512:	000b      	movs	r3, r1
    3514:	4e51      	ldr	r6, [pc, #324]	; (365c <_ZN8MICS68149calcGasesEv+0x190>)
    3516:	9800      	ldr	r0, [sp, #0]
    3518:	9901      	ldr	r1, [sp, #4]
    351a:	47b0      	blx	r6
    351c:	0004      	movs	r4, r0
    351e:	000d      	movs	r5, r1
    3520:	60bc      	str	r4, [r7, #8]
    3522:	60fd      	str	r5, [r7, #12]
	ratio1  = (((double)ADC_PRECISION-(double)Aref_1)/((double)ADC_PRECISION-(double)Ameas_1));
    3524:	8878      	ldrh	r0, [r7, #2]
    3526:	47d8      	blx	fp
    3528:	9000      	str	r0, [sp, #0]
    352a:	9101      	str	r1, [sp, #4]
    352c:	0002      	movs	r2, r0
    352e:	000b      	movs	r3, r1
    3530:	2000      	movs	r0, #0
    3532:	4946      	ldr	r1, [pc, #280]	; (364c <_ZN8MICS68149calcGasesEv+0x180>)
    3534:	47c0      	blx	r8
    3536:	0002      	movs	r2, r0
    3538:	000b      	movs	r3, r1
    353a:	2000      	movs	r0, #0
    353c:	4948      	ldr	r1, [pc, #288]	; (3660 <_ZN8MICS68149calcGasesEv+0x194>)
    353e:	47d0      	blx	sl
    3540:	9002      	str	r0, [sp, #8]
    3542:	9103      	str	r1, [sp, #12]
	ratio1 *= (double)Ameas_1/(double)Aref_1;
    3544:	2200      	movs	r2, #0
    3546:	4b47      	ldr	r3, [pc, #284]	; (3664 <_ZN8MICS68149calcGasesEv+0x198>)
    3548:	9800      	ldr	r0, [sp, #0]
    354a:	9901      	ldr	r1, [sp, #4]
    354c:	47d0      	blx	sl
    354e:	0002      	movs	r2, r0
    3550:	000b      	movs	r3, r1
    3552:	9802      	ldr	r0, [sp, #8]
    3554:	9903      	ldr	r1, [sp, #12]
    3556:	47b0      	blx	r6
    3558:	6138      	str	r0, [r7, #16]
    355a:	6179      	str	r1, [r7, #20]
	ratio2  = ((double)ADC_PRECISION-(double)Aref_2)/((double)ADC_PRECISION-(double)Ameas_2);
    355c:	88b8      	ldrh	r0, [r7, #4]
    355e:	47d8      	blx	fp
    3560:	9000      	str	r0, [sp, #0]
    3562:	9101      	str	r1, [sp, #4]
    3564:	0002      	movs	r2, r0
    3566:	000b      	movs	r3, r1
    3568:	2000      	movs	r0, #0
    356a:	4938      	ldr	r1, [pc, #224]	; (364c <_ZN8MICS68149calcGasesEv+0x180>)
    356c:	47c0      	blx	r8
    356e:	0002      	movs	r2, r0
    3570:	000b      	movs	r3, r1
    3572:	2000      	movs	r0, #0
    3574:	493c      	ldr	r1, [pc, #240]	; (3668 <_ZN8MICS68149calcGasesEv+0x19c>)
    3576:	47d0      	blx	sl
    3578:	9002      	str	r0, [sp, #8]
    357a:	9103      	str	r1, [sp, #12]
	ratio2 *= (double)Ameas_2/(double)Aref_2;
    357c:	2200      	movs	r2, #0
    357e:	4b3b      	ldr	r3, [pc, #236]	; (366c <_ZN8MICS68149calcGasesEv+0x1a0>)
    3580:	9800      	ldr	r0, [sp, #0]
    3582:	9901      	ldr	r1, [sp, #4]
    3584:	47d0      	blx	sl
    3586:	0002      	movs	r2, r0
    3588:	000b      	movs	r3, r1
    358a:	9802      	ldr	r0, [sp, #8]
    358c:	9903      	ldr	r1, [sp, #12]
    358e:	47b0      	blx	r6
    3590:	61b8      	str	r0, [r7, #24]
    3592:	61f9      	str	r1, [r7, #28]
MICS6814_Values.NH3 = pow(ratio0, -1.67)/1.47;
    3594:	4a36      	ldr	r2, [pc, #216]	; (3670 <_ZN8MICS68149calcGasesEv+0x1a4>)
    3596:	4b37      	ldr	r3, [pc, #220]	; (3674 <_ZN8MICS68149calcGasesEv+0x1a8>)
    3598:	0020      	movs	r0, r4
    359a:	0029      	movs	r1, r5
    359c:	4d36      	ldr	r5, [pc, #216]	; (3678 <_ZN8MICS68149calcGasesEv+0x1ac>)
    359e:	47a8      	blx	r5
    35a0:	4c36      	ldr	r4, [pc, #216]	; (367c <_ZN8MICS68149calcGasesEv+0x1b0>)
    35a2:	4a37      	ldr	r2, [pc, #220]	; (3680 <_ZN8MICS68149calcGasesEv+0x1b4>)
    35a4:	4b37      	ldr	r3, [pc, #220]	; (3684 <_ZN8MICS68149calcGasesEv+0x1b8>)
    35a6:	47d0      	blx	sl
    35a8:	6220      	str	r0, [r4, #32]
    35aa:	6261      	str	r1, [r4, #36]	; 0x24
MICS6814_Values.CO = pow(ratio1, -1.179)*4.385;
    35ac:	4a36      	ldr	r2, [pc, #216]	; (3688 <_ZN8MICS68149calcGasesEv+0x1bc>)
    35ae:	4b37      	ldr	r3, [pc, #220]	; (368c <_ZN8MICS68149calcGasesEv+0x1c0>)
    35b0:	6938      	ldr	r0, [r7, #16]
    35b2:	6979      	ldr	r1, [r7, #20]
    35b4:	47a8      	blx	r5
    35b6:	4a36      	ldr	r2, [pc, #216]	; (3690 <_ZN8MICS68149calcGasesEv+0x1c4>)
    35b8:	4b36      	ldr	r3, [pc, #216]	; (3694 <_ZN8MICS68149calcGasesEv+0x1c8>)
    35ba:	47b0      	blx	r6
    35bc:	6120      	str	r0, [r4, #16]
    35be:	6161      	str	r1, [r4, #20]
 MICS6814_Values.NO2 = pow(ratio2, 1.007)/6.855;
    35c0:	4a35      	ldr	r2, [pc, #212]	; (3698 <_ZN8MICS68149calcGasesEv+0x1cc>)
    35c2:	4b36      	ldr	r3, [pc, #216]	; (369c <_ZN8MICS68149calcGasesEv+0x1d0>)
    35c4:	69b8      	ldr	r0, [r7, #24]
    35c6:	69f9      	ldr	r1, [r7, #28]
    35c8:	47a8      	blx	r5
    35ca:	4a35      	ldr	r2, [pc, #212]	; (36a0 <_ZN8MICS68149calcGasesEv+0x1d4>)
    35cc:	4b35      	ldr	r3, [pc, #212]	; (36a4 <_ZN8MICS68149calcGasesEv+0x1d8>)
    35ce:	47d0      	blx	sl
    35d0:	61a0      	str	r0, [r4, #24]
    35d2:	61e1      	str	r1, [r4, #28]
MICS6814_Values.C3H8 = pow(ratio0, -2.518)*570.164;
    35d4:	4a34      	ldr	r2, [pc, #208]	; (36a8 <_ZN8MICS68149calcGasesEv+0x1dc>)
    35d6:	4b35      	ldr	r3, [pc, #212]	; (36ac <_ZN8MICS68149calcGasesEv+0x1e0>)
    35d8:	68b8      	ldr	r0, [r7, #8]
    35da:	68f9      	ldr	r1, [r7, #12]
    35dc:	47a8      	blx	r5
    35de:	4a34      	ldr	r2, [pc, #208]	; (36b0 <_ZN8MICS68149calcGasesEv+0x1e4>)
    35e0:	4b34      	ldr	r3, [pc, #208]	; (36b4 <_ZN8MICS68149calcGasesEv+0x1e8>)
    35e2:	47b0      	blx	r6
    35e4:	62a0      	str	r0, [r4, #40]	; 0x28
    35e6:	62e1      	str	r1, [r4, #44]	; 0x2c
MICS6814_Values.C4H10 = pow(ratio0, -2.138)*398.107;
    35e8:	4a33      	ldr	r2, [pc, #204]	; (36b8 <_ZN8MICS68149calcGasesEv+0x1ec>)
    35ea:	4b34      	ldr	r3, [pc, #208]	; (36bc <_ZN8MICS68149calcGasesEv+0x1f0>)
    35ec:	68b8      	ldr	r0, [r7, #8]
    35ee:	68f9      	ldr	r1, [r7, #12]
    35f0:	47a8      	blx	r5
    35f2:	4a33      	ldr	r2, [pc, #204]	; (36c0 <_ZN8MICS68149calcGasesEv+0x1f4>)
    35f4:	4b33      	ldr	r3, [pc, #204]	; (36c4 <_ZN8MICS68149calcGasesEv+0x1f8>)
    35f6:	47b0      	blx	r6
    35f8:	6320      	str	r0, [r4, #48]	; 0x30
    35fa:	6361      	str	r1, [r4, #52]	; 0x34
MICS6814_Values.CH4 = pow(ratio1, -4.363)*630.957;
    35fc:	4a30      	ldr	r2, [pc, #192]	; (36c0 <_ZN8MICS68149calcGasesEv+0x1f4>)
    35fe:	4b32      	ldr	r3, [pc, #200]	; (36c8 <_ZN8MICS68149calcGasesEv+0x1fc>)
    3600:	6938      	ldr	r0, [r7, #16]
    3602:	6979      	ldr	r1, [r7, #20]
    3604:	47a8      	blx	r5
    3606:	4a31      	ldr	r2, [pc, #196]	; (36cc <_ZN8MICS68149calcGasesEv+0x200>)
    3608:	4b31      	ldr	r3, [pc, #196]	; (36d0 <_ZN8MICS68149calcGasesEv+0x204>)
    360a:	47b0      	blx	r6
    360c:	63a0      	str	r0, [r4, #56]	; 0x38
    360e:	63e1      	str	r1, [r4, #60]	; 0x3c
MICS6814_Values.H2 = pow(ratio1, -1.8)*0.73;
    3610:	4a30      	ldr	r2, [pc, #192]	; (36d4 <_ZN8MICS68149calcGasesEv+0x208>)
    3612:	4b31      	ldr	r3, [pc, #196]	; (36d8 <_ZN8MICS68149calcGasesEv+0x20c>)
    3614:	6938      	ldr	r0, [r7, #16]
    3616:	6979      	ldr	r1, [r7, #20]
    3618:	47a8      	blx	r5
    361a:	4a30      	ldr	r2, [pc, #192]	; (36dc <_ZN8MICS68149calcGasesEv+0x210>)
    361c:	4b30      	ldr	r3, [pc, #192]	; (36e0 <_ZN8MICS68149calcGasesEv+0x214>)
    361e:	47b0      	blx	r6
    3620:	6420      	str	r0, [r4, #64]	; 0x40
    3622:	6461      	str	r1, [r4, #68]	; 0x44
MICS6814_Values.C2H5OH = pow(ratio1, -1.552)*1.622;
    3624:	6938      	ldr	r0, [r7, #16]
    3626:	6979      	ldr	r1, [r7, #20]
    3628:	4a2e      	ldr	r2, [pc, #184]	; (36e4 <_ZN8MICS68149calcGasesEv+0x218>)
    362a:	4b2f      	ldr	r3, [pc, #188]	; (36e8 <_ZN8MICS68149calcGasesEv+0x21c>)
    362c:	47a8      	blx	r5
    362e:	4a24      	ldr	r2, [pc, #144]	; (36c0 <_ZN8MICS68149calcGasesEv+0x1f4>)
    3630:	4b2e      	ldr	r3, [pc, #184]	; (36ec <_ZN8MICS68149calcGasesEv+0x220>)
    3632:	47b0      	blx	r6
    3634:	64a0      	str	r0, [r4, #72]	; 0x48
    3636:	64e1      	str	r1, [r4, #76]	; 0x4c
}
    3638:	b004      	add	sp, #16
    363a:	bc1c      	pop	{r2, r3, r4}
    363c:	4690      	mov	r8, r2
    363e:	469a      	mov	sl, r3
    3640:	46a3      	mov	fp, r4
    3642:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3644:	00008589 	.word	0x00008589
    3648:	00007e31 	.word	0x00007e31
    364c:	408ff800 	.word	0x408ff800
    3650:	000070c9 	.word	0x000070c9
    3654:	407d4000 	.word	0x407d4000
    3658:	40815800 	.word	0x40815800
    365c:	00007931 	.word	0x00007931
    3660:	407cf000 	.word	0x407cf000
    3664:	40818000 	.word	0x40818000
    3668:	40606000 	.word	0x40606000
    366c:	408be000 	.word	0x408be000
    3670:	eb851eb8 	.word	0xeb851eb8
    3674:	bffab851 	.word	0xbffab851
    3678:	00004a75 	.word	0x00004a75
    367c:	20000680 	.word	0x20000680
    3680:	b851eb85 	.word	0xb851eb85
    3684:	3ff7851e 	.word	0x3ff7851e
    3688:	1a9fbe77 	.word	0x1a9fbe77
    368c:	bff2dd2f 	.word	0xbff2dd2f
    3690:	70a3d70a 	.word	0x70a3d70a
    3694:	40118a3d 	.word	0x40118a3d
    3698:	083126e9 	.word	0x083126e9
    369c:	3ff01cac 	.word	0x3ff01cac
    36a0:	1eb851ec 	.word	0x1eb851ec
    36a4:	401b6b85 	.word	0x401b6b85
    36a8:	2f1a9fbe 	.word	0x2f1a9fbe
    36ac:	c00424dd 	.word	0xc00424dd
    36b0:	df3b645a 	.word	0xdf3b645a
    36b4:	4081d14f 	.word	0x4081d14f
    36b8:	be76c8b4 	.word	0xbe76c8b4
    36bc:	c0011a9f 	.word	0xc0011a9f
    36c0:	45a1cac1 	.word	0x45a1cac1
    36c4:	4078e1b6 	.word	0x4078e1b6
    36c8:	c01173b6 	.word	0xc01173b6
    36cc:	ef9db22d 	.word	0xef9db22d
    36d0:	4083b7a7 	.word	0x4083b7a7
    36d4:	cccccccd 	.word	0xcccccccd
    36d8:	bffccccc 	.word	0xbffccccc
    36dc:	f5c28f5c 	.word	0xf5c28f5c
    36e0:	3fe75c28 	.word	0x3fe75c28
    36e4:	f3b645a2 	.word	0xf3b645a2
    36e8:	bff8d4fd 	.word	0xbff8d4fd
    36ec:	3ff9f3b6 	.word	0x3ff9f3b6

000036f0 <_ZN8MICS681418read_and_calculateEv>:
{
    36f0:	b510      	push	{r4, lr}
    36f2:	0004      	movs	r4, r0
	readCurrentADC();
    36f4:	4b02      	ldr	r3, [pc, #8]	; (3700 <_ZN8MICS681418read_and_calculateEv+0x10>)
    36f6:	4798      	blx	r3
	calcGases();
    36f8:	0020      	movs	r0, r4
    36fa:	4b02      	ldr	r3, [pc, #8]	; (3704 <_ZN8MICS681418read_and_calculateEv+0x14>)
    36fc:	4798      	blx	r3
}
    36fe:	bd10      	pop	{r4, pc}
    3700:	000034ad 	.word	0x000034ad
    3704:	000034cd 	.word	0x000034cd

00003708 <_ZN9RTC_clock4initEv>:
	
}

void RTC_clock::init()
{
	RTC_time.day=19;     // 1 to 31
    3708:	4b1b      	ldr	r3, [pc, #108]	; (3778 <_ZN9RTC_clock4initEv+0x70>)
    370a:	2213      	movs	r2, #19
    370c:	73da      	strb	r2, [r3, #15]
	RTC_time.month=10;      // 1 to 12
    370e:	3a09      	subs	r2, #9
    3710:	741a      	strb	r2, [r3, #16]
	RTC_time.year=17;     // year-99
    3712:	3207      	adds	r2, #7
    3714:	745a      	strb	r2, [r3, #17]
	RTC_time.hour=14;
    3716:	3a03      	subs	r2, #3
    3718:	739a      	strb	r2, [r3, #14]
	RTC_time.minute=58;
    371a:	322c      	adds	r2, #44	; 0x2c
    371c:	735a      	strb	r2, [r3, #13]
	RTC_time.second=52;
    371e:	2134      	movs	r1, #52	; 0x34
    3720:	7319      	strb	r1, [r3, #12]
	
//read from eeprom


//save to RTC
RTC->MODE2.CLOCK.bit.SECOND=RTC_time.second;
    3722:	4b16      	ldr	r3, [pc, #88]	; (377c <_ZN9RTC_clock4initEv+0x74>)
    3724:	691a      	ldr	r2, [r3, #16]
    3726:	203f      	movs	r0, #63	; 0x3f
    3728:	4382      	bics	r2, r0
    372a:	430a      	orrs	r2, r1
    372c:	611a      	str	r2, [r3, #16]
RTC->MODE2.CLOCK.bit.MINUTE=RTC_time.minute;
    372e:	691a      	ldr	r2, [r3, #16]
    3730:	4913      	ldr	r1, [pc, #76]	; (3780 <_ZN9RTC_clock4initEv+0x78>)
    3732:	4011      	ands	r1, r2
    3734:	22e8      	movs	r2, #232	; 0xe8
    3736:	0112      	lsls	r2, r2, #4
    3738:	430a      	orrs	r2, r1
    373a:	611a      	str	r2, [r3, #16]
RTC->MODE2.CLOCK.bit.HOUR=RTC_time.hour;
    373c:	691a      	ldr	r2, [r3, #16]
    373e:	4911      	ldr	r1, [pc, #68]	; (3784 <_ZN9RTC_clock4initEv+0x7c>)
    3740:	4011      	ands	r1, r2
    3742:	22e0      	movs	r2, #224	; 0xe0
    3744:	0212      	lsls	r2, r2, #8
    3746:	430a      	orrs	r2, r1
    3748:	611a      	str	r2, [r3, #16]
RTC->MODE2.CLOCK.bit.DAY=RTC_time.day;
    374a:	691a      	ldr	r2, [r3, #16]
    374c:	490e      	ldr	r1, [pc, #56]	; (3788 <_ZN9RTC_clock4initEv+0x80>)
    374e:	4011      	ands	r1, r2
    3750:	2298      	movs	r2, #152	; 0x98
    3752:	0392      	lsls	r2, r2, #14
    3754:	430a      	orrs	r2, r1
    3756:	611a      	str	r2, [r3, #16]
RTC->MODE2.CLOCK.bit.MONTH=RTC_time.month;	
    3758:	691a      	ldr	r2, [r3, #16]
    375a:	490c      	ldr	r1, [pc, #48]	; (378c <_ZN9RTC_clock4initEv+0x84>)
    375c:	4011      	ands	r1, r2
    375e:	22a0      	movs	r2, #160	; 0xa0
    3760:	0492      	lsls	r2, r2, #18
    3762:	430a      	orrs	r2, r1
    3764:	611a      	str	r2, [r3, #16]
RTC->MODE2.CLOCK.bit.YEAR=RTC_time.year;
    3766:	691a      	ldr	r2, [r3, #16]
    3768:	0192      	lsls	r2, r2, #6
    376a:	0992      	lsrs	r2, r2, #6
    376c:	2188      	movs	r1, #136	; 0x88
    376e:	05c9      	lsls	r1, r1, #23
    3770:	430a      	orrs	r2, r1
    3772:	611a      	str	r2, [r3, #16]

}
    3774:	4770      	bx	lr
    3776:	46c0      	nop			; (mov r8, r8)
    3778:	20001d80 	.word	0x20001d80
    377c:	40001400 	.word	0x40001400
    3780:	fffff03f 	.word	0xfffff03f
    3784:	fffe0fff 	.word	0xfffe0fff
    3788:	ffc1ffff 	.word	0xffc1ffff
    378c:	fc3fffff 	.word	0xfc3fffff

00003790 <_ZN9RTC_clock19read_clock_registerEv>:


void RTC_clock::read_clock_register()
{

RTC_time.second=RTC->MODE2.CLOCK.bit.SECOND;//(uint8_t)0x3f&REG_RTC_MODE2_CLOCK;
    3790:	4a0c      	ldr	r2, [pc, #48]	; (37c4 <_ZN9RTC_clock19read_clock_registerEv+0x34>)
    3792:	6911      	ldr	r1, [r2, #16]
    3794:	0689      	lsls	r1, r1, #26
    3796:	0e89      	lsrs	r1, r1, #26
    3798:	4b0b      	ldr	r3, [pc, #44]	; (37c8 <_ZN9RTC_clock19read_clock_registerEv+0x38>)
    379a:	7319      	strb	r1, [r3, #12]
RTC_time.minute=RTC->MODE2.CLOCK.bit.MINUTE;//(uint8_t)0x3f& (uint32_t)(REG_RTC_MODE2_CLOCK>>6);
    379c:	6911      	ldr	r1, [r2, #16]
    379e:	0509      	lsls	r1, r1, #20
    37a0:	0e89      	lsrs	r1, r1, #26
    37a2:	7359      	strb	r1, [r3, #13]
RTC_time.hour=RTC->MODE2.CLOCK.bit.HOUR;//(uint8_t)0x1f& (uint32_t)(REG_RTC_MODE2_CLOCK>>12);
    37a4:	6911      	ldr	r1, [r2, #16]
    37a6:	03c9      	lsls	r1, r1, #15
    37a8:	0ec9      	lsrs	r1, r1, #27
    37aa:	7399      	strb	r1, [r3, #14]
RTC_time.day=RTC->MODE2.CLOCK.bit.DAY;//(uint8_t)0x1f& (uint32_t)(REG_RTC_MODE2_CLOCK>>17);
    37ac:	6911      	ldr	r1, [r2, #16]
    37ae:	0289      	lsls	r1, r1, #10
    37b0:	0ec9      	lsrs	r1, r1, #27
    37b2:	73d9      	strb	r1, [r3, #15]
RTC_time.month=RTC->MODE2.CLOCK.bit.MONTH;//(uint8_t)0x0f& (uint32_t)(REG_RTC_MODE2_CLOCK>>22);
    37b4:	6911      	ldr	r1, [r2, #16]
    37b6:	0189      	lsls	r1, r1, #6
    37b8:	0f09      	lsrs	r1, r1, #28
    37ba:	7419      	strb	r1, [r3, #16]
RTC_time.year=RTC->MODE2.CLOCK.bit.YEAR;//(uint8_t)0x3f& (uint32_t)(REG_RTC_MODE2_CLOCK>>26);
    37bc:	6912      	ldr	r2, [r2, #16]
    37be:	0e92      	lsrs	r2, r2, #26
    37c0:	745a      	strb	r2, [r3, #17]
}
    37c2:	4770      	bx	lr
    37c4:	40001400 	.word	0x40001400
    37c8:	20001d80 	.word	0x20001d80

000037cc <RTC_Handler>:

void RTC_Handler()
{
    37cc:	b510      	push	{r4, lr}
	if(RTC->MODE2.INTFLAG.bit.SYNCRDY)
    37ce:	4b0e      	ldr	r3, [pc, #56]	; (3808 <RTC_Handler+0x3c>)
    37d0:	7a1b      	ldrb	r3, [r3, #8]
    37d2:	065b      	lsls	r3, r3, #25
    37d4:	d400      	bmi.n	37d8 <RTC_Handler+0xc>
		if(!gde027w3.update_inprogress &&(RTC_time.second==0 || RTC_time.second==30)){
			update_time=true;
		}
		RTC->MODE2.INTFLAG.bit.SYNCRDY=1; //clear flag
	}
}
    37d6:	bd10      	pop	{r4, pc}
		rtc_clock.read_clock_register();
    37d8:	480c      	ldr	r0, [pc, #48]	; (380c <RTC_Handler+0x40>)
    37da:	3014      	adds	r0, #20
    37dc:	4b0c      	ldr	r3, [pc, #48]	; (3810 <RTC_Handler+0x44>)
    37de:	4798      	blx	r3
		if(!gde027w3.update_inprogress &&(RTC_time.second==0 || RTC_time.second==30)){
    37e0:	4b0c      	ldr	r3, [pc, #48]	; (3814 <RTC_Handler+0x48>)
    37e2:	3350      	adds	r3, #80	; 0x50
    37e4:	7a5b      	ldrb	r3, [r3, #9]
    37e6:	2b00      	cmp	r3, #0
    37e8:	d108      	bne.n	37fc <RTC_Handler+0x30>
    37ea:	4b08      	ldr	r3, [pc, #32]	; (380c <RTC_Handler+0x40>)
    37ec:	7b1b      	ldrb	r3, [r3, #12]
    37ee:	2b00      	cmp	r3, #0
    37f0:	d001      	beq.n	37f6 <RTC_Handler+0x2a>
    37f2:	2b1e      	cmp	r3, #30
    37f4:	d102      	bne.n	37fc <RTC_Handler+0x30>
			update_time=true;
    37f6:	2201      	movs	r2, #1
    37f8:	4b07      	ldr	r3, [pc, #28]	; (3818 <RTC_Handler+0x4c>)
    37fa:	715a      	strb	r2, [r3, #5]
		RTC->MODE2.INTFLAG.bit.SYNCRDY=1; //clear flag
    37fc:	4a02      	ldr	r2, [pc, #8]	; (3808 <RTC_Handler+0x3c>)
    37fe:	7a13      	ldrb	r3, [r2, #8]
    3800:	2140      	movs	r1, #64	; 0x40
    3802:	430b      	orrs	r3, r1
    3804:	7213      	strb	r3, [r2, #8]
}
    3806:	e7e6      	b.n	37d6 <RTC_Handler+0xa>
    3808:	40001400 	.word	0x40001400
    380c:	20001d80 	.word	0x20001d80
    3810:	00003791 	.word	0x00003791
    3814:	20000680 	.word	0x20000680
    3818:	20000088 	.word	0x20000088

0000381c <_Z18draw_humidity_datav>:
}
*/

//with bme680
void draw_humidity_data()
{
    381c:	b5f0      	push	{r4, r5, r6, r7, lr}
    381e:	46de      	mov	lr, fp
    3820:	4657      	mov	r7, sl
    3822:	464e      	mov	r6, r9
    3824:	4645      	mov	r5, r8
    3826:	b5e0      	push	{r5, r6, r7, lr}
    3828:	b08f      	sub	sp, #60	; 0x3c
	
	char string_temp[10]={0,0,0,0,0,0,0,0,0,0};
    382a:	220a      	movs	r2, #10
    382c:	2100      	movs	r1, #0
    382e:	a80b      	add	r0, sp, #44	; 0x2c
    3830:	4c4c      	ldr	r4, [pc, #304]	; (3964 <_Z18draw_humidity_datav+0x148>)
    3832:	47a0      	blx	r4
	char string_pressure[10]={0,0,0,0,0,0,0,0,0,0};
    3834:	220a      	movs	r2, #10
    3836:	2100      	movs	r1, #0
    3838:	a808      	add	r0, sp, #32
    383a:	47a0      	blx	r4
	char string_humidity[10]={0,0,0,0,0,0,0,0,0,0};
    383c:	220a      	movs	r2, #10
    383e:	2100      	movs	r1, #0
    3840:	a805      	add	r0, sp, #20
    3842:	47a0      	blx	r4
			
	bme680.performReading();
    3844:	4e48      	ldr	r6, [pc, #288]	; (3968 <_Z18draw_humidity_datav+0x14c>)
    3846:	0030      	movs	r0, r6
    3848:	3018      	adds	r0, #24
    384a:	4b48      	ldr	r3, [pc, #288]	; (396c <_Z18draw_humidity_datav+0x150>)
    384c:	4798      	blx	r3
	
	temp =bme680.temperature;
    384e:	4f48      	ldr	r7, [pc, #288]	; (3970 <_Z18draw_humidity_datav+0x154>)
    3850:	69b0      	ldr	r0, [r6, #24]
    3852:	47b8      	blx	r7
    3854:	0004      	movs	r4, r0
    3856:	000d      	movs	r5, r1
    3858:	4b46      	ldr	r3, [pc, #280]	; (3974 <_Z18draw_humidity_datav+0x158>)
    385a:	4698      	mov	r8, r3
    385c:	611c      	str	r4, [r3, #16]
    385e:	615d      	str	r5, [r3, #20]
	pressure=bme680.pressure / 100.0;
    3860:	69f0      	ldr	r0, [r6, #28]
    3862:	47b8      	blx	r7
    3864:	4b44      	ldr	r3, [pc, #272]	; (3978 <_Z18draw_humidity_datav+0x15c>)
    3866:	4699      	mov	r9, r3
    3868:	2200      	movs	r2, #0
    386a:	4b44      	ldr	r3, [pc, #272]	; (397c <_Z18draw_humidity_datav+0x160>)
    386c:	47c8      	blx	r9
    386e:	4643      	mov	r3, r8
    3870:	6198      	str	r0, [r3, #24]
    3872:	61d9      	str	r1, [r3, #28]
	humidity=bme680.humidity;
    3874:	6a30      	ldr	r0, [r6, #32]
    3876:	47b8      	blx	r7
    3878:	4643      	mov	r3, r8
    387a:	6218      	str	r0, [r3, #32]
    387c:	6259      	str	r1, [r3, #36]	; 0x24
	TVCO=bme680.gas_resistance / 1000.0;
    387e:	6a70      	ldr	r0, [r6, #36]	; 0x24
    3880:	47b8      	blx	r7
    3882:	2200      	movs	r2, #0
    3884:	4b3e      	ldr	r3, [pc, #248]	; (3980 <_Z18draw_humidity_datav+0x164>)
    3886:	47c8      	blx	r9
    3888:	4643      	mov	r3, r8
    388a:	6298      	str	r0, [r3, #40]	; 0x28
    388c:	62d9      	str	r1, [r3, #44]	; 0x2c
	
	ftoad(temp,string_temp,1);
    388e:	2301      	movs	r3, #1
    3890:	aa0b      	add	r2, sp, #44	; 0x2c
    3892:	0020      	movs	r0, r4
    3894:	0029      	movs	r1, r5
    3896:	4c3b      	ldr	r4, [pc, #236]	; (3984 <_Z18draw_humidity_datav+0x168>)
    3898:	46a2      	mov	sl, r4
    389a:	47a0      	blx	r4
	//temperature
	gde027w3.drawString_gfx_n( 47+TEMPERATURE_x_OFFSET, 12+TEMPERATURE_y_OFFSET, string_temp, GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    389c:	4d3a      	ldr	r5, [pc, #232]	; (3988 <_Z18draw_humidity_datav+0x16c>)
    389e:	3550      	adds	r5, #80	; 0x50
    38a0:	2401      	movs	r4, #1
    38a2:	9403      	str	r4, [sp, #12]
    38a4:	9402      	str	r4, [sp, #8]
    38a6:	4f39      	ldr	r7, [pc, #228]	; (398c <_Z18draw_humidity_datav+0x170>)
    38a8:	9701      	str	r7, [sp, #4]
    38aa:	2300      	movs	r3, #0
    38ac:	9300      	str	r3, [sp, #0]
    38ae:	ab0b      	add	r3, sp, #44	; 0x2c
    38b0:	221c      	movs	r2, #28
    38b2:	2134      	movs	r1, #52	; 0x34
    38b4:	0028      	movs	r0, r5
    38b6:	4e36      	ldr	r6, [pc, #216]	; (3990 <_Z18draw_humidity_datav+0x174>)
    38b8:	46b1      	mov	r9, r6
    38ba:	47b0      	blx	r6
	gde027w3.drawChar_num( 50+TEMPERATURE_x_OFFSET, 12+TEMPERATURE_y_OFFSET, 176, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    38bc:	9402      	str	r4, [sp, #8]
    38be:	9701      	str	r7, [sp, #4]
    38c0:	2300      	movs	r3, #0
    38c2:	9300      	str	r3, [sp, #0]
    38c4:	33b0      	adds	r3, #176	; 0xb0
    38c6:	221c      	movs	r2, #28
    38c8:	2137      	movs	r1, #55	; 0x37
    38ca:	002e      	movs	r6, r5
    38cc:	0028      	movs	r0, r5
    38ce:	4d31      	ldr	r5, [pc, #196]	; (3994 <_Z18draw_humidity_datav+0x178>)
    38d0:	47a8      	blx	r5
	gde027w3.drawChar_num( 55+TEMPERATURE_x_OFFSET, 12+TEMPERATURE_y_OFFSET, 'c', GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    38d2:	9402      	str	r4, [sp, #8]
    38d4:	9701      	str	r7, [sp, #4]
    38d6:	2300      	movs	r3, #0
    38d8:	9300      	str	r3, [sp, #0]
    38da:	3363      	adds	r3, #99	; 0x63
    38dc:	221c      	movs	r2, #28
    38de:	213c      	movs	r1, #60	; 0x3c
    38e0:	0030      	movs	r0, r6
    38e2:	47a8      	blx	r5
	
	//humidity
	ftoad(humidity,string_humidity,1);
    38e4:	2301      	movs	r3, #1
    38e6:	aa05      	add	r2, sp, #20
    38e8:	4641      	mov	r1, r8
    38ea:	6a08      	ldr	r0, [r1, #32]
    38ec:	6a49      	ldr	r1, [r1, #36]	; 0x24
    38ee:	47d0      	blx	sl
	gde027w3.drawString_gfx_n( 47+TEMPERATURE_x_OFFSET, 27+TEMPERATURE_y_OFFSET, string_humidity, GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    38f0:	9403      	str	r4, [sp, #12]
    38f2:	9402      	str	r4, [sp, #8]
    38f4:	9701      	str	r7, [sp, #4]
    38f6:	2300      	movs	r3, #0
    38f8:	9300      	str	r3, [sp, #0]
    38fa:	ab05      	add	r3, sp, #20
    38fc:	222b      	movs	r2, #43	; 0x2b
    38fe:	2134      	movs	r1, #52	; 0x34
    3900:	0030      	movs	r0, r6
    3902:	47c8      	blx	r9
	gde027w3.drawChar_CAPI( 55+TEMPERATURE_x_OFFSET, 27+TEMPERATURE_y_OFFSET, '%', GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3904:	9402      	str	r4, [sp, #8]
    3906:	9701      	str	r7, [sp, #4]
    3908:	2300      	movs	r3, #0
    390a:	9300      	str	r3, [sp, #0]
    390c:	3325      	adds	r3, #37	; 0x25
    390e:	222b      	movs	r2, #43	; 0x2b
    3910:	213c      	movs	r1, #60	; 0x3c
    3912:	0030      	movs	r0, r6
    3914:	4d20      	ldr	r5, [pc, #128]	; (3998 <_Z18draw_humidity_datav+0x17c>)
    3916:	47a8      	blx	r5
	
	//pressure
	ftoad(pressure,string_pressure,0);
    3918:	4643      	mov	r3, r8
    391a:	6998      	ldr	r0, [r3, #24]
    391c:	69d9      	ldr	r1, [r3, #28]
    391e:	2300      	movs	r3, #0
    3920:	aa08      	add	r2, sp, #32
    3922:	47d0      	blx	sl
	gde027w3.drawString_gfx_n(47+TEMPERATURE_x_OFFSET, 42+TEMPERATURE_y_OFFSET, string_pressure, GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3924:	9403      	str	r4, [sp, #12]
    3926:	9402      	str	r4, [sp, #8]
    3928:	9701      	str	r7, [sp, #4]
    392a:	2300      	movs	r3, #0
    392c:	9300      	str	r3, [sp, #0]
    392e:	ab08      	add	r3, sp, #32
    3930:	223a      	movs	r2, #58	; 0x3a
    3932:	2134      	movs	r1, #52	; 0x34
    3934:	0030      	movs	r0, r6
    3936:	47c8      	blx	r9
	char string_pa[3]="Pa";
    3938:	ab04      	add	r3, sp, #16
    393a:	4a18      	ldr	r2, [pc, #96]	; (399c <_Z18draw_humidity_datav+0x180>)
    393c:	8811      	ldrh	r1, [r2, #0]
    393e:	8019      	strh	r1, [r3, #0]
    3940:	7892      	ldrb	r2, [r2, #2]
    3942:	709a      	strb	r2, [r3, #2]
	gde027w3.drawString_gfx_C( 55+TEMPERATURE_x_OFFSET, 42+TEMPERATURE_y_OFFSET, string_pa, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3944:	9402      	str	r4, [sp, #8]
    3946:	9701      	str	r7, [sp, #4]
    3948:	2200      	movs	r2, #0
    394a:	9200      	str	r2, [sp, #0]
    394c:	323a      	adds	r2, #58	; 0x3a
    394e:	213c      	movs	r1, #60	; 0x3c
    3950:	0030      	movs	r0, r6
    3952:	4c13      	ldr	r4, [pc, #76]	; (39a0 <_Z18draw_humidity_datav+0x184>)
    3954:	47a0      	blx	r4
	
	
	
	
	
}
    3956:	b00f      	add	sp, #60	; 0x3c
    3958:	bc3c      	pop	{r2, r3, r4, r5}
    395a:	4690      	mov	r8, r2
    395c:	4699      	mov	r9, r3
    395e:	46a2      	mov	sl, r4
    3960:	46ab      	mov	fp, r5
    3962:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3964:	00008c59 	.word	0x00008c59
    3968:	20001d80 	.word	0x20001d80
    396c:	000028b9 	.word	0x000028b9
    3970:	000085f9 	.word	0x000085f9
    3974:	20001e00 	.word	0x20001e00
    3978:	000070c9 	.word	0x000070c9
    397c:	40590000 	.word	0x40590000
    3980:	408f4000 	.word	0x408f4000
    3984:	00000bcd 	.word	0x00000bcd
    3988:	20000680 	.word	0x20000680
    398c:	0000ffff 	.word	0x0000ffff
    3990:	00003341 	.word	0x00003341
    3994:	00003189 	.word	0x00003189
    3998:	00003055 	.word	0x00003055
    399c:	0000f740 	.word	0x0000f740
    39a0:	000032c1 	.word	0x000032c1

000039a4 <_Z13draw_co2_datav>:


void draw_co2_data()
{
    39a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    39a6:	46c6      	mov	lr, r8
    39a8:	b500      	push	{lr}
    39aa:	b08c      	sub	sp, #48	; 0x30
	char string_co2_ndir[10]={0,0,0,0,0,0,0,0,0,0};
    39ac:	220a      	movs	r2, #10
    39ae:	2100      	movs	r1, #0
    39b0:	a809      	add	r0, sp, #36	; 0x24
    39b2:	4b16      	ldr	r3, [pc, #88]	; (3a0c <_Z13draw_co2_datav+0x68>)
    39b4:	4798      	blx	r3
	//char string_co2_css811[10]={0,0,0,0,0,0,0,0,0,0};
	intToStr(co2_concentration,string_co2_ndir,1);
    39b6:	234a      	movs	r3, #74	; 0x4a
    39b8:	4a15      	ldr	r2, [pc, #84]	; (3a10 <_Z13draw_co2_datav+0x6c>)
    39ba:	5ad0      	ldrh	r0, [r2, r3]
    39bc:	b280      	uxth	r0, r0
    39be:	2201      	movs	r2, #1
    39c0:	a909      	add	r1, sp, #36	; 0x24
    39c2:	4b14      	ldr	r3, [pc, #80]	; (3a14 <_Z13draw_co2_datav+0x70>)
    39c4:	4798      	blx	r3
	//intToStr(,string_co2_css811,2);
	char string_co2[5]="CO2:";
    39c6:	ab07      	add	r3, sp, #28
    39c8:	4a13      	ldr	r2, [pc, #76]	; (3a18 <_Z13draw_co2_datav+0x74>)
    39ca:	6811      	ldr	r1, [r2, #0]
    39cc:	9107      	str	r1, [sp, #28]
    39ce:	7912      	ldrb	r2, [r2, #4]
    39d0:	711a      	strb	r2, [r3, #4]
	
	gde027w3.drawString_gfx_C( 62+CO2_x_OFFSET, 65+CO2_y_OFFSET, string_co2 ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    39d2:	4c12      	ldr	r4, [pc, #72]	; (3a1c <_Z13draw_co2_datav+0x78>)
    39d4:	3450      	adds	r4, #80	; 0x50
    39d6:	2501      	movs	r5, #1
    39d8:	9502      	str	r5, [sp, #8]
    39da:	4f11      	ldr	r7, [pc, #68]	; (3a20 <_Z13draw_co2_datav+0x7c>)
    39dc:	9701      	str	r7, [sp, #4]
    39de:	2600      	movs	r6, #0
    39e0:	9600      	str	r6, [sp, #0]
    39e2:	2251      	movs	r2, #81	; 0x51
    39e4:	213e      	movs	r1, #62	; 0x3e
    39e6:	9405      	str	r4, [sp, #20]
    39e8:	0020      	movs	r0, r4
    39ea:	4c0e      	ldr	r4, [pc, #56]	; (3a24 <_Z13draw_co2_datav+0x80>)
    39ec:	47a0      	blx	r4
	gde027w3.drawString_gfx_n( 135+CO2_x_OFFSET, 65+CO2_y_OFFSET, string_co2_ndir ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1); //in ppm
    39ee:	9503      	str	r5, [sp, #12]
    39f0:	9502      	str	r5, [sp, #8]
    39f2:	9701      	str	r7, [sp, #4]
    39f4:	9600      	str	r6, [sp, #0]
    39f6:	ab09      	add	r3, sp, #36	; 0x24
    39f8:	2251      	movs	r2, #81	; 0x51
    39fa:	2187      	movs	r1, #135	; 0x87
    39fc:	9805      	ldr	r0, [sp, #20]
    39fe:	4c0a      	ldr	r4, [pc, #40]	; (3a28 <_Z13draw_co2_datav+0x84>)
    3a00:	47a0      	blx	r4
	
	
	
}
    3a02:	b00c      	add	sp, #48	; 0x30
    3a04:	bc04      	pop	{r2}
    3a06:	4690      	mov	r8, r2
    3a08:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3a0a:	46c0      	nop			; (mov r8, r8)
    3a0c:	00008c59 	.word	0x00008c59
    3a10:	20000600 	.word	0x20000600
    3a14:	00000b45 	.word	0x00000b45
    3a18:	0000f744 	.word	0x0000f744
    3a1c:	20000680 	.word	0x20000680
    3a20:	0000ffff 	.word	0x0000ffff
    3a24:	000032c1 	.word	0x000032c1
    3a28:	00003341 	.word	0x00003341

00003a2c <_Z21draw_air_quality_datav>:



void draw_air_quality_data()
{
    3a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3a2e:	46de      	mov	lr, fp
    3a30:	4657      	mov	r7, sl
    3a32:	464e      	mov	r6, r9
    3a34:	4645      	mov	r5, r8
    3a36:	b5e0      	push	{r5, r6, r7, lr}
    3a38:	b0a9      	sub	sp, #164	; 0xa4
	char string_concPM1_0_CF1[10]={0,0,0,0,0,0,0,0,0,0};
    3a3a:	220a      	movs	r2, #10
    3a3c:	2100      	movs	r1, #0
    3a3e:	a825      	add	r0, sp, #148	; 0x94
    3a40:	4c99      	ldr	r4, [pc, #612]	; (3ca8 <_Z21draw_air_quality_datav+0x27c>)
    3a42:	47a0      	blx	r4
	char string_concPM2_5_CF1[10]={0,0,0,0,0,0,0,0,0,0};
    3a44:	220a      	movs	r2, #10
    3a46:	2100      	movs	r1, #0
    3a48:	a822      	add	r0, sp, #136	; 0x88
    3a4a:	47a0      	blx	r4
	char string_concPM10_0_CF1[10]={0,0,0,0,0,0,0,0,0,0};
    3a4c:	220a      	movs	r2, #10
    3a4e:	2100      	movs	r1, #0
    3a50:	a81f      	add	r0, sp, #124	; 0x7c
    3a52:	47a0      	blx	r4

	char string_aqiPM2_5_CF1[10]={0,0,0,0,0,0,0,0,0,0};
    3a54:	220a      	movs	r2, #10
    3a56:	2100      	movs	r1, #0
    3a58:	a81c      	add	r0, sp, #112	; 0x70
    3a5a:	47a0      	blx	r4
	char string_aqiPM10_CF1[10]={0,0,0,0,0,0,0,0,0,0};
    3a5c:	220a      	movs	r2, #10
    3a5e:	2100      	movs	r1, #0
    3a60:	a819      	add	r0, sp, #100	; 0x64
    3a62:	47a0      	blx	r4

	
	char string_pm[3]="PM";
    3a64:	ab18      	add	r3, sp, #96	; 0x60
    3a66:	4a91      	ldr	r2, [pc, #580]	; (3cac <_Z21draw_air_quality_datav+0x280>)
    3a68:	8811      	ldrh	r1, [r2, #0]
    3a6a:	8019      	strh	r1, [r3, #0]
    3a6c:	7892      	ldrb	r2, [r2, #2]
    3a6e:	709a      	strb	r2, [r3, #2]
	char string_pm1_0[5]="1.0:";
    3a70:	4b8f      	ldr	r3, [pc, #572]	; (3cb0 <_Z21draw_air_quality_datav+0x284>)
    3a72:	681a      	ldr	r2, [r3, #0]
    3a74:	9216      	str	r2, [sp, #88]	; 0x58
    3a76:	791a      	ldrb	r2, [r3, #4]
    3a78:	ab16      	add	r3, sp, #88	; 0x58
    3a7a:	711a      	strb	r2, [r3, #4]
	char string_pm2_5[5]="2.5:";
    3a7c:	4a8d      	ldr	r2, [pc, #564]	; (3cb4 <_Z21draw_air_quality_datav+0x288>)
    3a7e:	6814      	ldr	r4, [r2, #0]
    3a80:	9414      	str	r4, [sp, #80]	; 0x50
    3a82:	7911      	ldrb	r1, [r2, #4]
    3a84:	ab14      	add	r3, sp, #80	; 0x50
    3a86:	7119      	strb	r1, [r3, #4]
	char string_pm10_0[4]="10:";
    3a88:	498b      	ldr	r1, [pc, #556]	; (3cb8 <_Z21draw_air_quality_datav+0x28c>)
    3a8a:	9113      	str	r1, [sp, #76]	; 0x4c
		
	char string_AQI_PM2_5[6]="AQIPM";
    3a8c:	4b8b      	ldr	r3, [pc, #556]	; (3cbc <_Z21draw_air_quality_datav+0x290>)
    3a8e:	6818      	ldr	r0, [r3, #0]
    3a90:	9011      	str	r0, [sp, #68]	; 0x44
    3a92:	889e      	ldrh	r6, [r3, #4]
    3a94:	ad11      	add	r5, sp, #68	; 0x44
    3a96:	80ae      	strh	r6, [r5, #4]
	char string_AQI_PM2_5__2[5]="2.5:";
    3a98:	940f      	str	r4, [sp, #60]	; 0x3c
    3a9a:	7914      	ldrb	r4, [r2, #4]
    3a9c:	aa0f      	add	r2, sp, #60	; 0x3c
    3a9e:	7114      	strb	r4, [r2, #4]
	char string_AQI_PM10[6]="AQIPM";
    3aa0:	900d      	str	r0, [sp, #52]	; 0x34
    3aa2:	889a      	ldrh	r2, [r3, #4]
    3aa4:	ab0d      	add	r3, sp, #52	; 0x34
    3aa6:	809a      	strh	r2, [r3, #4]
	char string_AQI_PM10__2[4]="10:";
    3aa8:	910c      	str	r1, [sp, #48]	; 0x30
	
	if(pms7003.pms7003_values_done)
    3aaa:	4b85      	ldr	r3, [pc, #532]	; (3cc0 <_Z21draw_air_quality_datav+0x294>)
    3aac:	33ac      	adds	r3, #172	; 0xac
    3aae:	781b      	ldrb	r3, [r3, #0]
    3ab0:	2b00      	cmp	r3, #0
    3ab2:	d145      	bne.n	3b40 <_Z21draw_air_quality_datav+0x114>
	//gde027w3.drawString_gfx_C( 200+PM_x_OFFSET, 97+PM_y_OFFSET,pms7003.AQI_CATEGORY_PM10_CF1 ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
	
	}
	
	
	char string_TVCO[10]={0,0,0,0,0,0,0,0,0,0};
    3ab4:	220a      	movs	r2, #10
    3ab6:	2100      	movs	r1, #0
    3ab8:	a809      	add	r0, sp, #36	; 0x24
    3aba:	4b7b      	ldr	r3, [pc, #492]	; (3ca8 <_Z21draw_air_quality_datav+0x27c>)
    3abc:	4798      	blx	r3
	char string_AQI_TVCO[6]="TVCO";
    3abe:	af07      	add	r7, sp, #28
    3ac0:	4b80      	ldr	r3, [pc, #512]	; (3cc4 <_Z21draw_air_quality_datav+0x298>)
    3ac2:	001a      	movs	r2, r3
    3ac4:	3228      	adds	r2, #40	; 0x28
    3ac6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    3ac8:	9307      	str	r3, [sp, #28]
    3aca:	7913      	ldrb	r3, [r2, #4]
    3acc:	713b      	strb	r3, [r7, #4]
    3ace:	2500      	movs	r5, #0
    3ad0:	717d      	strb	r5, [r7, #5]
	char string_TVCO_ex[3]=" :";
    3ad2:	ab06      	add	r3, sp, #24
    3ad4:	4a7c      	ldr	r2, [pc, #496]	; (3cc8 <_Z21draw_air_quality_datav+0x29c>)
    3ad6:	8811      	ldrh	r1, [r2, #0]
    3ad8:	8019      	strh	r1, [r3, #0]
    3ada:	7892      	ldrb	r2, [r2, #2]
    3adc:	709a      	strb	r2, [r3, #2]
	
	//also draw here TVCO data
		gde027w3.drawString_gfx_n( 83+PM_AQI_x_OFFSET, 120+PM_AQI_y_OFFSET, string_TVCO_ex,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,0);
    3ade:	4c7b      	ldr	r4, [pc, #492]	; (3ccc <_Z21draw_air_quality_datav+0x2a0>)
    3ae0:	3450      	adds	r4, #80	; 0x50
    3ae2:	9503      	str	r5, [sp, #12]
    3ae4:	2601      	movs	r6, #1
    3ae6:	9602      	str	r6, [sp, #8]
    3ae8:	4a79      	ldr	r2, [pc, #484]	; (3cd0 <_Z21draw_air_quality_datav+0x2a4>)
    3aea:	4690      	mov	r8, r2
    3aec:	9201      	str	r2, [sp, #4]
    3aee:	9500      	str	r5, [sp, #0]
    3af0:	2288      	movs	r2, #136	; 0x88
    3af2:	2153      	movs	r1, #83	; 0x53
    3af4:	9404      	str	r4, [sp, #16]
    3af6:	0020      	movs	r0, r4
    3af8:	4c76      	ldr	r4, [pc, #472]	; (3cd4 <_Z21draw_air_quality_datav+0x2a8>)
    3afa:	47a0      	blx	r4
		gde027w3.drawString_gfx_C( 45+PM_AQI_x_OFFSET, 120+PM_AQI_y_OFFSET, string_AQI_TVCO,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3afc:	9602      	str	r6, [sp, #8]
    3afe:	4643      	mov	r3, r8
    3b00:	9301      	str	r3, [sp, #4]
    3b02:	9500      	str	r5, [sp, #0]
    3b04:	003b      	movs	r3, r7
    3b06:	2288      	movs	r2, #136	; 0x88
    3b08:	212d      	movs	r1, #45	; 0x2d
    3b0a:	9804      	ldr	r0, [sp, #16]
    3b0c:	4f72      	ldr	r7, [pc, #456]	; (3cd8 <_Z21draw_air_quality_datav+0x2ac>)
    3b0e:	47b8      	blx	r7
		ftoad(TVCO,string_TVCO,0);
    3b10:	4b72      	ldr	r3, [pc, #456]	; (3cdc <_Z21draw_air_quality_datav+0x2b0>)
    3b12:	6a98      	ldr	r0, [r3, #40]	; 0x28
    3b14:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
    3b16:	2300      	movs	r3, #0
    3b18:	aa09      	add	r2, sp, #36	; 0x24
    3b1a:	4f71      	ldr	r7, [pc, #452]	; (3ce0 <_Z21draw_air_quality_datav+0x2b4>)
    3b1c:	47b8      	blx	r7
		gde027w3.drawString_gfx_n( 135+PM_AQI_x_OFFSET, 120+PM_AQI_y_OFFSET, string_TVCO ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3b1e:	9603      	str	r6, [sp, #12]
    3b20:	9602      	str	r6, [sp, #8]
    3b22:	4643      	mov	r3, r8
    3b24:	9301      	str	r3, [sp, #4]
    3b26:	9500      	str	r5, [sp, #0]
    3b28:	ab09      	add	r3, sp, #36	; 0x24
    3b2a:	2288      	movs	r2, #136	; 0x88
    3b2c:	2187      	movs	r1, #135	; 0x87
    3b2e:	9804      	ldr	r0, [sp, #16]
    3b30:	47a0      	blx	r4
	//char string_errorCode[10]={0,0,0,0,0,0,0,0,0,0};
	//intToStr(PMS7003_Values.version,string_version,2);
	//intToStr(PMS7003_Values.errorCode,string_errorCode,2);	
	//gde027w3.drawString( 250+PM_x_OFFSET, 40+PM_y_OFFSET, string_version,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);//testing
	//gde027w3.drawString( 250+PM_x_OFFSET, 50+PM_y_OFFSET, string_errorCode,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);//testing
}
    3b32:	b029      	add	sp, #164	; 0xa4
    3b34:	bc3c      	pop	{r2, r3, r4, r5}
    3b36:	4690      	mov	r8, r2
    3b38:	4699      	mov	r9, r3
    3b3a:	46a2      	mov	sl, r4
    3b3c:	46ab      	mov	fp, r5
    3b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	intToStr(pms7003.old_avg_PM1_0_CF1,string_concPM1_0_CF1,1);
    3b40:	4b5f      	ldr	r3, [pc, #380]	; (3cc0 <_Z21draw_air_quality_datav+0x294>)
    3b42:	469b      	mov	fp, r3
    3b44:	2380      	movs	r3, #128	; 0x80
    3b46:	465a      	mov	r2, fp
    3b48:	58d0      	ldr	r0, [r2, r3]
    3b4a:	2201      	movs	r2, #1
    3b4c:	a925      	add	r1, sp, #148	; 0x94
    3b4e:	4b65      	ldr	r3, [pc, #404]	; (3ce4 <_Z21draw_air_quality_datav+0x2b8>)
    3b50:	469a      	mov	sl, r3
    3b52:	4798      	blx	r3
	intToStr(pms7003.old_avg_PM2_5_CF1,string_concPM2_5_CF1,1);
    3b54:	2384      	movs	r3, #132	; 0x84
    3b56:	465a      	mov	r2, fp
    3b58:	58d0      	ldr	r0, [r2, r3]
    3b5a:	2201      	movs	r2, #1
    3b5c:	a922      	add	r1, sp, #136	; 0x88
    3b5e:	47d0      	blx	sl
	intToStr(pms7003.old_avg_PM10_CF1,string_concPM10_0_CF1,1);
    3b60:	2388      	movs	r3, #136	; 0x88
    3b62:	465a      	mov	r2, fp
    3b64:	58d0      	ldr	r0, [r2, r3]
    3b66:	2201      	movs	r2, #1
    3b68:	a91f      	add	r1, sp, #124	; 0x7c
    3b6a:	47d0      	blx	sl
	gde027w3.drawString_gfx_n( 200+PM_x_OFFSET, 12+PM_y_OFFSET,string_pm1_0 ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3b6c:	4d57      	ldr	r5, [pc, #348]	; (3ccc <_Z21draw_air_quality_datav+0x2a0>)
    3b6e:	3550      	adds	r5, #80	; 0x50
    3b70:	2401      	movs	r4, #1
    3b72:	9403      	str	r4, [sp, #12]
    3b74:	9402      	str	r4, [sp, #8]
    3b76:	4f56      	ldr	r7, [pc, #344]	; (3cd0 <_Z21draw_air_quality_datav+0x2a4>)
    3b78:	9701      	str	r7, [sp, #4]
    3b7a:	2600      	movs	r6, #0
    3b7c:	9600      	str	r6, [sp, #0]
    3b7e:	ab16      	add	r3, sp, #88	; 0x58
    3b80:	220c      	movs	r2, #12
    3b82:	21e6      	movs	r1, #230	; 0xe6
    3b84:	9504      	str	r5, [sp, #16]
    3b86:	0028      	movs	r0, r5
    3b88:	4d52      	ldr	r5, [pc, #328]	; (3cd4 <_Z21draw_air_quality_datav+0x2a8>)
    3b8a:	46a8      	mov	r8, r5
    3b8c:	47a8      	blx	r5
	gde027w3.drawString_gfx_C( 140+PM_x_OFFSET, 12+PM_y_OFFSET,string_pm ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3b8e:	9402      	str	r4, [sp, #8]
    3b90:	9701      	str	r7, [sp, #4]
    3b92:	9600      	str	r6, [sp, #0]
    3b94:	ab18      	add	r3, sp, #96	; 0x60
    3b96:	220c      	movs	r2, #12
    3b98:	21aa      	movs	r1, #170	; 0xaa
    3b9a:	9804      	ldr	r0, [sp, #16]
    3b9c:	9005      	str	r0, [sp, #20]
    3b9e:	4d4e      	ldr	r5, [pc, #312]	; (3cd8 <_Z21draw_air_quality_datav+0x2ac>)
    3ba0:	46a9      	mov	r9, r5
    3ba2:	47a8      	blx	r5
	gde027w3.drawString_gfx_n( 200+PM_x_OFFSET, 27+PM_y_OFFSET,string_pm2_5,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3ba4:	9403      	str	r4, [sp, #12]
    3ba6:	9402      	str	r4, [sp, #8]
    3ba8:	9701      	str	r7, [sp, #4]
    3baa:	9600      	str	r6, [sp, #0]
    3bac:	ab14      	add	r3, sp, #80	; 0x50
    3bae:	221b      	movs	r2, #27
    3bb0:	21e6      	movs	r1, #230	; 0xe6
    3bb2:	9d05      	ldr	r5, [sp, #20]
    3bb4:	0028      	movs	r0, r5
    3bb6:	47c0      	blx	r8
	gde027w3.drawString_gfx_C( 140+PM_x_OFFSET, 27+PM_y_OFFSET,string_pm ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3bb8:	9402      	str	r4, [sp, #8]
    3bba:	9701      	str	r7, [sp, #4]
    3bbc:	9600      	str	r6, [sp, #0]
    3bbe:	ab18      	add	r3, sp, #96	; 0x60
    3bc0:	221b      	movs	r2, #27
    3bc2:	21aa      	movs	r1, #170	; 0xaa
    3bc4:	0028      	movs	r0, r5
    3bc6:	47c8      	blx	r9
	gde027w3.drawString_gfx_n( 200+PM_x_OFFSET, 42+PM_y_OFFSET,string_pm10_0 ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3bc8:	9403      	str	r4, [sp, #12]
    3bca:	9402      	str	r4, [sp, #8]
    3bcc:	9701      	str	r7, [sp, #4]
    3bce:	9600      	str	r6, [sp, #0]
    3bd0:	ab13      	add	r3, sp, #76	; 0x4c
    3bd2:	222a      	movs	r2, #42	; 0x2a
    3bd4:	21e6      	movs	r1, #230	; 0xe6
    3bd6:	0028      	movs	r0, r5
    3bd8:	47c0      	blx	r8
	gde027w3.drawString_gfx_C( 140+PM_x_OFFSET, 42+PM_y_OFFSET,string_pm ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3bda:	9402      	str	r4, [sp, #8]
    3bdc:	9701      	str	r7, [sp, #4]
    3bde:	9600      	str	r6, [sp, #0]
    3be0:	ab18      	add	r3, sp, #96	; 0x60
    3be2:	222a      	movs	r2, #42	; 0x2a
    3be4:	21aa      	movs	r1, #170	; 0xaa
    3be6:	0028      	movs	r0, r5
    3be8:	47c8      	blx	r9
	gde027w3.drawString_gfx_n( 230+PM_x_OFFSET, 12+PM_y_OFFSET, string_concPM1_0_CF1 ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3bea:	9403      	str	r4, [sp, #12]
    3bec:	9402      	str	r4, [sp, #8]
    3bee:	9701      	str	r7, [sp, #4]
    3bf0:	9600      	str	r6, [sp, #0]
    3bf2:	ab25      	add	r3, sp, #148	; 0x94
    3bf4:	220c      	movs	r2, #12
    3bf6:	2182      	movs	r1, #130	; 0x82
    3bf8:	0049      	lsls	r1, r1, #1
    3bfa:	0028      	movs	r0, r5
    3bfc:	47c0      	blx	r8
	gde027w3.drawString_gfx_n( 230+PM_x_OFFSET, 27+PM_y_OFFSET, string_concPM2_5_CF1,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3bfe:	9403      	str	r4, [sp, #12]
    3c00:	9402      	str	r4, [sp, #8]
    3c02:	9701      	str	r7, [sp, #4]
    3c04:	9600      	str	r6, [sp, #0]
    3c06:	ab22      	add	r3, sp, #136	; 0x88
    3c08:	221b      	movs	r2, #27
    3c0a:	2182      	movs	r1, #130	; 0x82
    3c0c:	0049      	lsls	r1, r1, #1
    3c0e:	0028      	movs	r0, r5
    3c10:	47c0      	blx	r8
	gde027w3.drawString_gfx_n( 230+PM_x_OFFSET, 42+PM_y_OFFSET, string_concPM10_0_CF1,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3c12:	9403      	str	r4, [sp, #12]
    3c14:	9402      	str	r4, [sp, #8]
    3c16:	9701      	str	r7, [sp, #4]
    3c18:	9600      	str	r6, [sp, #0]
    3c1a:	ab1f      	add	r3, sp, #124	; 0x7c
    3c1c:	222a      	movs	r2, #42	; 0x2a
    3c1e:	2182      	movs	r1, #130	; 0x82
    3c20:	0049      	lsls	r1, r1, #1
    3c22:	0028      	movs	r0, r5
    3c24:	47c0      	blx	r8
	intToStr(pms7003.Iaq2_5,string_aqiPM2_5_CF1,1);
    3c26:	238c      	movs	r3, #140	; 0x8c
    3c28:	465a      	mov	r2, fp
    3c2a:	5ad0      	ldrh	r0, [r2, r3]
    3c2c:	2201      	movs	r2, #1
    3c2e:	a91c      	add	r1, sp, #112	; 0x70
    3c30:	47d0      	blx	sl
	intToStr(pms7003.Iaq10,string_aqiPM10_CF1,1);
    3c32:	238e      	movs	r3, #142	; 0x8e
    3c34:	465a      	mov	r2, fp
    3c36:	5ad0      	ldrh	r0, [r2, r3]
    3c38:	2201      	movs	r2, #1
    3c3a:	a919      	add	r1, sp, #100	; 0x64
    3c3c:	47d0      	blx	sl
	gde027w3.drawString_gfx_C( 15+PM_AQI_x_OFFSET, 88+PM_AQI_y_OFFSET, string_AQI_PM2_5,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3c3e:	9402      	str	r4, [sp, #8]
    3c40:	9701      	str	r7, [sp, #4]
    3c42:	9600      	str	r6, [sp, #0]
    3c44:	ab11      	add	r3, sp, #68	; 0x44
    3c46:	2268      	movs	r2, #104	; 0x68
    3c48:	210f      	movs	r1, #15
    3c4a:	0028      	movs	r0, r5
    3c4c:	47c8      	blx	r9
	gde027w3.drawString_gfx_n( 69+PM_AQI_x_OFFSET, 88+PM_AQI_y_OFFSET, string_AQI_PM2_5__2,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,0);
    3c4e:	9603      	str	r6, [sp, #12]
    3c50:	9402      	str	r4, [sp, #8]
    3c52:	9701      	str	r7, [sp, #4]
    3c54:	9600      	str	r6, [sp, #0]
    3c56:	ab0f      	add	r3, sp, #60	; 0x3c
    3c58:	2268      	movs	r2, #104	; 0x68
    3c5a:	2145      	movs	r1, #69	; 0x45
    3c5c:	0028      	movs	r0, r5
    3c5e:	47c0      	blx	r8
	gde027w3.drawString_gfx_C( 15+PM_AQI_x_OFFSET, 104+PM_AQI_y_OFFSET, string_AQI_PM10 ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3c60:	9402      	str	r4, [sp, #8]
    3c62:	9701      	str	r7, [sp, #4]
    3c64:	9600      	str	r6, [sp, #0]
    3c66:	ab0d      	add	r3, sp, #52	; 0x34
    3c68:	2278      	movs	r2, #120	; 0x78
    3c6a:	210f      	movs	r1, #15
    3c6c:	0028      	movs	r0, r5
    3c6e:	47c8      	blx	r9
	gde027w3.drawString_gfx_n( 74+PM_AQI_x_OFFSET, 104+PM_AQI_y_OFFSET, string_AQI_PM10__2 ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,0);
    3c70:	9603      	str	r6, [sp, #12]
    3c72:	9402      	str	r4, [sp, #8]
    3c74:	9701      	str	r7, [sp, #4]
    3c76:	9600      	str	r6, [sp, #0]
    3c78:	ab0c      	add	r3, sp, #48	; 0x30
    3c7a:	2278      	movs	r2, #120	; 0x78
    3c7c:	214a      	movs	r1, #74	; 0x4a
    3c7e:	0028      	movs	r0, r5
    3c80:	47c0      	blx	r8
	gde027w3.drawString_gfx_n( 135+PM_AQI_x_OFFSET, 88+PM_AQI_y_OFFSET, string_aqiPM2_5_CF1 ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3c82:	9403      	str	r4, [sp, #12]
    3c84:	9402      	str	r4, [sp, #8]
    3c86:	9701      	str	r7, [sp, #4]
    3c88:	9600      	str	r6, [sp, #0]
    3c8a:	ab1c      	add	r3, sp, #112	; 0x70
    3c8c:	2268      	movs	r2, #104	; 0x68
    3c8e:	2187      	movs	r1, #135	; 0x87
    3c90:	0028      	movs	r0, r5
    3c92:	47c0      	blx	r8
	gde027w3.drawString_gfx_n( 135+PM_AQI_x_OFFSET, 104+PM_AQI_y_OFFSET, string_aqiPM10_CF1,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1, 1);
    3c94:	9403      	str	r4, [sp, #12]
    3c96:	9402      	str	r4, [sp, #8]
    3c98:	9701      	str	r7, [sp, #4]
    3c9a:	9600      	str	r6, [sp, #0]
    3c9c:	ab19      	add	r3, sp, #100	; 0x64
    3c9e:	2278      	movs	r2, #120	; 0x78
    3ca0:	2187      	movs	r1, #135	; 0x87
    3ca2:	0028      	movs	r0, r5
    3ca4:	47c0      	blx	r8
    3ca6:	e705      	b.n	3ab4 <_Z21draw_air_quality_datav+0x88>
    3ca8:	00008c59 	.word	0x00008c59
    3cac:	0000f74c 	.word	0x0000f74c
    3cb0:	0000f750 	.word	0x0000f750
    3cb4:	0000f758 	.word	0x0000f758
    3cb8:	003a3031 	.word	0x003a3031
    3cbc:	0000f760 	.word	0x0000f760
    3cc0:	20000580 	.word	0x20000580
    3cc4:	0000dea4 	.word	0x0000dea4
    3cc8:	0000f768 	.word	0x0000f768
    3ccc:	20000680 	.word	0x20000680
    3cd0:	0000ffff 	.word	0x0000ffff
    3cd4:	00003341 	.word	0x00003341
    3cd8:	000032c1 	.word	0x000032c1
    3cdc:	20001e00 	.word	0x20001e00
    3ce0:	00000bcd 	.word	0x00000bcd
    3ce4:	00000b45 	.word	0x00000b45

00003ce8 <_Z9draw_MODEv>:

//modes are automatic,nocturnal, manual, 
void draw_MODE()
{
    3ce8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3cea:	46d6      	mov	lr, sl
    3cec:	464f      	mov	r7, r9
    3cee:	4646      	mov	r6, r8
    3cf0:	b5c0      	push	{r6, r7, lr}
    3cf2:	b090      	sub	sp, #64	; 0x40

char string_MODE[10]={0,0,0,0,0,0,0,0,0,0};
    3cf4:	220a      	movs	r2, #10
    3cf6:	2100      	movs	r1, #0
    3cf8:	a80d      	add	r0, sp, #52	; 0x34
    3cfa:	4b36      	ldr	r3, [pc, #216]	; (3dd4 <_Z9draw_MODEv+0xec>)
    3cfc:	4798      	blx	r3
if(mode_flag==MODE_AUTOMATIC)
    3cfe:	2330      	movs	r3, #48	; 0x30
    3d00:	4a35      	ldr	r2, [pc, #212]	; (3dd8 <_Z9draw_MODEv+0xf0>)
    3d02:	5cd3      	ldrb	r3, [r2, r3]
    3d04:	2b00      	cmp	r3, #0
    3d06:	d052      	beq.n	3dae <_Z9draw_MODEv+0xc6>
{
	strncpy(string_MODE, "AUTO", 10);	
}
if(mode_flag==MODE_NIGHT)
    3d08:	2b01      	cmp	r3, #1
    3d0a:	d056      	beq.n	3dba <_Z9draw_MODEv+0xd2>
{
	strncpy(string_MODE, "NIGHT", 10);	
}
if(mode_flag==MODE_MANUAL)
    3d0c:	2b02      	cmp	r3, #2
    3d0e:	d05a      	beq.n	3dc6 <_Z9draw_MODEv+0xde>
{
	strncpy(string_MODE, "MANUAL", 10);	

}

gde027w3.drawString( 120+RPM_x_OFFSET, 166+RPM_y_OFFSET, string_MODE ,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3d10:	4c32      	ldr	r4, [pc, #200]	; (3ddc <_Z9draw_MODEv+0xf4>)
    3d12:	3450      	adds	r4, #80	; 0x50
    3d14:	2701      	movs	r7, #1
    3d16:	9702      	str	r7, [sp, #8]
    3d18:	4e31      	ldr	r6, [pc, #196]	; (3de0 <_Z9draw_MODEv+0xf8>)
    3d1a:	9601      	str	r6, [sp, #4]
    3d1c:	2500      	movs	r5, #0
    3d1e:	9500      	str	r5, [sp, #0]
    3d20:	ab0d      	add	r3, sp, #52	; 0x34
    3d22:	22a6      	movs	r2, #166	; 0xa6
    3d24:	2178      	movs	r1, #120	; 0x78
    3d26:	9405      	str	r4, [sp, #20]
    3d28:	0020      	movs	r0, r4
    3d2a:	4c2e      	ldr	r4, [pc, #184]	; (3de4 <_Z9draw_MODEv+0xfc>)
    3d2c:	46a0      	mov	r8, r4
    3d2e:	47a0      	blx	r4

char string_MOTOR_PWM[10]={0,0,0,0,0,0,0,0,0,0};
    3d30:	220a      	movs	r2, #10
    3d32:	2100      	movs	r1, #0
    3d34:	a80a      	add	r0, sp, #40	; 0x28
    3d36:	4b27      	ldr	r3, [pc, #156]	; (3dd4 <_Z9draw_MODEv+0xec>)
    3d38:	469a      	mov	sl, r3
    3d3a:	4798      	blx	r3
	char string_PWM[10]="PWM:";
    3d3c:	ab07      	add	r3, sp, #28
    3d3e:	4699      	mov	r9, r3
    3d40:	4b29      	ldr	r3, [pc, #164]	; (3de8 <_Z9draw_MODEv+0x100>)
    3d42:	001a      	movs	r2, r3
    3d44:	3230      	adds	r2, #48	; 0x30
    3d46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    3d48:	9307      	str	r3, [sp, #28]
    3d4a:	7913      	ldrb	r3, [r2, #4]
    3d4c:	464a      	mov	r2, r9
    3d4e:	7113      	strb	r3, [r2, #4]
    3d50:	2205      	movs	r2, #5
    3d52:	2100      	movs	r1, #0
    3d54:	2019      	movs	r0, #25
    3d56:	ab02      	add	r3, sp, #8
    3d58:	469c      	mov	ip, r3
    3d5a:	4460      	add	r0, ip
    3d5c:	47d0      	blx	sl
	char string_percentage='%';
	double MOTOR_PWM=FAN_PWM_VALUE; //in % 100 is REG_TCC0_PER
    3d5e:	4b1e      	ldr	r3, [pc, #120]	; (3dd8 <_Z9draw_MODEv+0xf0>)
    3d60:	8e58      	ldrh	r0, [r3, #50]	; 0x32
    3d62:	4b22      	ldr	r3, [pc, #136]	; (3dec <_Z9draw_MODEv+0x104>)
    3d64:	4798      	blx	r3
	ftoad(MOTOR_PWM,string_MOTOR_PWM,0);
    3d66:	2300      	movs	r3, #0
    3d68:	aa0a      	add	r2, sp, #40	; 0x28
    3d6a:	4c21      	ldr	r4, [pc, #132]	; (3df0 <_Z9draw_MODEv+0x108>)
    3d6c:	47a0      	blx	r4
	gde027w3.drawString( 180+RPM_x_OFFSET, 166+RPM_y_OFFSET,string_PWM,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3d6e:	9702      	str	r7, [sp, #8]
    3d70:	9601      	str	r6, [sp, #4]
    3d72:	9500      	str	r5, [sp, #0]
    3d74:	464b      	mov	r3, r9
    3d76:	22a6      	movs	r2, #166	; 0xa6
    3d78:	21b4      	movs	r1, #180	; 0xb4
    3d7a:	9c05      	ldr	r4, [sp, #20]
    3d7c:	0020      	movs	r0, r4
    3d7e:	47c0      	blx	r8
	gde027w3.drawString( 190+RPM_x_OFFSET, 166+RPM_y_OFFSET,string_MOTOR_PWM,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3d80:	9702      	str	r7, [sp, #8]
    3d82:	9601      	str	r6, [sp, #4]
    3d84:	9500      	str	r5, [sp, #0]
    3d86:	ab0a      	add	r3, sp, #40	; 0x28
    3d88:	22a6      	movs	r2, #166	; 0xa6
    3d8a:	21be      	movs	r1, #190	; 0xbe
    3d8c:	0020      	movs	r0, r4
    3d8e:	47c0      	blx	r8
	gde027w3.drawChar( 192+RPM_x_OFFSET, 166+RPM_y_OFFSET,string_percentage,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3d90:	9702      	str	r7, [sp, #8]
    3d92:	9601      	str	r6, [sp, #4]
    3d94:	9500      	str	r5, [sp, #0]
    3d96:	2325      	movs	r3, #37	; 0x25
    3d98:	22a6      	movs	r2, #166	; 0xa6
    3d9a:	21c0      	movs	r1, #192	; 0xc0
    3d9c:	0020      	movs	r0, r4
    3d9e:	4c15      	ldr	r4, [pc, #84]	; (3df4 <_Z9draw_MODEv+0x10c>)
    3da0:	47a0      	blx	r4
}
    3da2:	b010      	add	sp, #64	; 0x40
    3da4:	bc1c      	pop	{r2, r3, r4}
    3da6:	4690      	mov	r8, r2
    3da8:	4699      	mov	r9, r3
    3daa:	46a2      	mov	sl, r4
    3dac:	bdf0      	pop	{r4, r5, r6, r7, pc}
	strncpy(string_MODE, "AUTO", 10);	
    3dae:	220a      	movs	r2, #10
    3db0:	4911      	ldr	r1, [pc, #68]	; (3df8 <_Z9draw_MODEv+0x110>)
    3db2:	a80d      	add	r0, sp, #52	; 0x34
    3db4:	4b11      	ldr	r3, [pc, #68]	; (3dfc <_Z9draw_MODEv+0x114>)
    3db6:	4798      	blx	r3
    3db8:	e7aa      	b.n	3d10 <_Z9draw_MODEv+0x28>
	strncpy(string_MODE, "NIGHT", 10);	
    3dba:	220a      	movs	r2, #10
    3dbc:	4910      	ldr	r1, [pc, #64]	; (3e00 <_Z9draw_MODEv+0x118>)
    3dbe:	a80d      	add	r0, sp, #52	; 0x34
    3dc0:	4b0e      	ldr	r3, [pc, #56]	; (3dfc <_Z9draw_MODEv+0x114>)
    3dc2:	4798      	blx	r3
    3dc4:	e7a4      	b.n	3d10 <_Z9draw_MODEv+0x28>
	strncpy(string_MODE, "MANUAL", 10);	
    3dc6:	220a      	movs	r2, #10
    3dc8:	490e      	ldr	r1, [pc, #56]	; (3e04 <_Z9draw_MODEv+0x11c>)
    3dca:	a80d      	add	r0, sp, #52	; 0x34
    3dcc:	4b0b      	ldr	r3, [pc, #44]	; (3dfc <_Z9draw_MODEv+0x114>)
    3dce:	4798      	blx	r3
    3dd0:	e79e      	b.n	3d10 <_Z9draw_MODEv+0x28>
    3dd2:	46c0      	nop			; (mov r8, r8)
    3dd4:	00008c59 	.word	0x00008c59
    3dd8:	20001e00 	.word	0x20001e00
    3ddc:	20000680 	.word	0x20000680
    3de0:	0000ffff 	.word	0x0000ffff
    3de4:	00002fc9 	.word	0x00002fc9
    3de8:	0000dea4 	.word	0x0000dea4
    3dec:	00008589 	.word	0x00008589
    3df0:	00000bcd 	.word	0x00000bcd
    3df4:	00002e1d 	.word	0x00002e1d
    3df8:	0000f76c 	.word	0x0000f76c
    3dfc:	00008d51 	.word	0x00008d51
    3e00:	0000f774 	.word	0x0000f774
    3e04:	0000f77c 	.word	0x0000f77c

00003e08 <_Z8draw_RPMv>:



void draw_RPM()
{
    3e08:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e0a:	b08d      	sub	sp, #52	; 0x34
	MOTOR_RPM=round(motor_ping/3);
    3e0c:	4c18      	ldr	r4, [pc, #96]	; (3e70 <_Z8draw_RPMv+0x68>)
    3e0e:	2103      	movs	r1, #3
    3e10:	6b60      	ldr	r0, [r4, #52]	; 0x34
    3e12:	4b18      	ldr	r3, [pc, #96]	; (3e74 <_Z8draw_RPMv+0x6c>)
    3e14:	4798      	blx	r3
    3e16:	0007      	movs	r7, r0
    3e18:	63a0      	str	r0, [r4, #56]	; 0x38
	motor_ping=0;
    3e1a:	2500      	movs	r5, #0
    3e1c:	6365      	str	r5, [r4, #52]	; 0x34
	char string_RPM[5]="RPM:";
    3e1e:	ae0a      	add	r6, sp, #40	; 0x28
    3e20:	4b15      	ldr	r3, [pc, #84]	; (3e78 <_Z8draw_RPMv+0x70>)
    3e22:	681a      	ldr	r2, [r3, #0]
    3e24:	920a      	str	r2, [sp, #40]	; 0x28
    3e26:	791b      	ldrb	r3, [r3, #4]
    3e28:	7133      	strb	r3, [r6, #4]
	char string_RPM_value[10]={0,0,0,0,0,0,0,0,0,0};
    3e2a:	220a      	movs	r2, #10
    3e2c:	2100      	movs	r1, #0
    3e2e:	a807      	add	r0, sp, #28
    3e30:	4b12      	ldr	r3, [pc, #72]	; (3e7c <_Z8draw_RPMv+0x74>)
    3e32:	4798      	blx	r3
	intToStr(MOTOR_RPM,string_RPM_value,1);
    3e34:	2201      	movs	r2, #1
    3e36:	a907      	add	r1, sp, #28
    3e38:	0038      	movs	r0, r7
    3e3a:	4b11      	ldr	r3, [pc, #68]	; (3e80 <_Z8draw_RPMv+0x78>)
    3e3c:	4798      	blx	r3
	
	gde027w3.drawString( 40+RPM_x_OFFSET, 166+RPM_y_OFFSET,string_RPM,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3e3e:	4c11      	ldr	r4, [pc, #68]	; (3e84 <_Z8draw_RPMv+0x7c>)
    3e40:	3450      	adds	r4, #80	; 0x50
    3e42:	0020      	movs	r0, r4
    3e44:	2401      	movs	r4, #1
    3e46:	9402      	str	r4, [sp, #8]
    3e48:	4f0f      	ldr	r7, [pc, #60]	; (3e88 <_Z8draw_RPMv+0x80>)
    3e4a:	9701      	str	r7, [sp, #4]
    3e4c:	9500      	str	r5, [sp, #0]
    3e4e:	0033      	movs	r3, r6
    3e50:	22a6      	movs	r2, #166	; 0xa6
    3e52:	2128      	movs	r1, #40	; 0x28
    3e54:	9005      	str	r0, [sp, #20]
    3e56:	4e0d      	ldr	r6, [pc, #52]	; (3e8c <_Z8draw_RPMv+0x84>)
    3e58:	47b0      	blx	r6
	gde027w3.drawString( 70+RPM_x_OFFSET, 166+RPM_y_OFFSET,string_RPM_value,  GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3e5a:	9402      	str	r4, [sp, #8]
    3e5c:	9701      	str	r7, [sp, #4]
    3e5e:	9500      	str	r5, [sp, #0]
    3e60:	ab07      	add	r3, sp, #28
    3e62:	22a6      	movs	r2, #166	; 0xa6
    3e64:	2146      	movs	r1, #70	; 0x46
    3e66:	9805      	ldr	r0, [sp, #20]
    3e68:	47b0      	blx	r6

	
}
    3e6a:	b00d      	add	sp, #52	; 0x34
    3e6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3e6e:	46c0      	nop			; (mov r8, r8)
    3e70:	20001e00 	.word	0x20001e00
    3e74:	00005c49 	.word	0x00005c49
    3e78:	0000f784 	.word	0x0000f784
    3e7c:	00008c59 	.word	0x00008c59
    3e80:	00000b45 	.word	0x00000b45
    3e84:	20000680 	.word	0x20000680
    3e88:	0000ffff 	.word	0x0000ffff
    3e8c:	00002fc9 	.word	0x00002fc9

00003e90 <_Z14draw_mics_datav>:
	gde027w3.drawString( 269, 168, string_year,  GDEW027W3_BLACK,GDEW027W3_WHITE, 1);	
}


void draw_mics_data()
{
    3e90:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e92:	46de      	mov	lr, fp
    3e94:	4657      	mov	r7, sl
    3e96:	464e      	mov	r6, r9
    3e98:	4645      	mov	r5, r8
    3e9a:	b5e0      	push	{r5, r6, r7, lr}
    3e9c:	b09f      	sub	sp, #124	; 0x7c

char nh3_string_data[10]={0,0,0,0,0,0,0,0,0,0};
    3e9e:	220a      	movs	r2, #10
    3ea0:	2100      	movs	r1, #0
    3ea2:	a81b      	add	r0, sp, #108	; 0x6c
    3ea4:	4d43      	ldr	r5, [pc, #268]	; (3fb4 <_Z14draw_mics_datav+0x124>)
    3ea6:	47a8      	blx	r5
char nh3_string[14]="Ammonia (ppm)";
    3ea8:	ab17      	add	r3, sp, #92	; 0x5c
    3eaa:	4699      	mov	r9, r3
    3eac:	4b42      	ldr	r3, [pc, #264]	; (3fb8 <_Z14draw_mics_datav+0x128>)
    3eae:	464a      	mov	r2, r9
    3eb0:	cb13      	ldmia	r3!, {r0, r1, r4}
    3eb2:	c213      	stmia	r2!, {r0, r1, r4}
    3eb4:	881b      	ldrh	r3, [r3, #0]
    3eb6:	8013      	strh	r3, [r2, #0]
char co_string_data[10]={0,0,0,0,0,0,0,0,0,0};
    3eb8:	220a      	movs	r2, #10
    3eba:	2100      	movs	r1, #0
    3ebc:	a814      	add	r0, sp, #80	; 0x50
    3ebe:	47a8      	blx	r5
char co_string[22]="Carbon monoxide";
    3ec0:	ab0e      	add	r3, sp, #56	; 0x38
    3ec2:	4698      	mov	r8, r3
    3ec4:	4c3d      	ldr	r4, [pc, #244]	; (3fbc <_Z14draw_mics_datav+0x12c>)
    3ec6:	0023      	movs	r3, r4
    3ec8:	333c      	adds	r3, #60	; 0x3c
    3eca:	4642      	mov	r2, r8
    3ecc:	cb43      	ldmia	r3!, {r0, r1, r6}
    3ece:	c243      	stmia	r2!, {r0, r1, r6}
    3ed0:	681b      	ldr	r3, [r3, #0]
    3ed2:	6013      	str	r3, [r2, #0]
    3ed4:	2206      	movs	r2, #6
    3ed6:	2100      	movs	r1, #0
    3ed8:	a812      	add	r0, sp, #72	; 0x48
    3eda:	47a8      	blx	r5
char no2_string_data[10]={0,0,0,0,0,0,0,0,0,0};	
    3edc:	220a      	movs	r2, #10
    3ede:	2100      	movs	r1, #0
    3ee0:	a80b      	add	r0, sp, #44	; 0x2c
    3ee2:	47a8      	blx	r5
char no2_string[23]="Nitrogen dioxide";
    3ee4:	ab05      	add	r3, sp, #20
    3ee6:	469a      	mov	sl, r3
    3ee8:	3454      	adds	r4, #84	; 0x54
    3eea:	001a      	movs	r2, r3
    3eec:	cc0b      	ldmia	r4!, {r0, r1, r3}
    3eee:	c20b      	stmia	r2!, {r0, r1, r3}
    3ef0:	6823      	ldr	r3, [r4, #0]
    3ef2:	6013      	str	r3, [r2, #0]
    3ef4:	7923      	ldrb	r3, [r4, #4]
    3ef6:	7113      	strb	r3, [r2, #4]
    3ef8:	2206      	movs	r2, #6
    3efa:	2100      	movs	r1, #0
    3efc:	2025      	movs	r0, #37	; 0x25
    3efe:	4468      	add	r0, sp
    3f00:	47a8      	blx	r5
//double test_nh3=0,test_NO2=0,test_CO=0;
//test_nh3=MICS6814_Values.NH3;
//test_CO=MICS6814_Values.CO;
//test_NO2=MICS6814_Values.NO2;

ftoad(MICS6814_Values.NH3,nh3_string_data,2);
    3f02:	4c2f      	ldr	r4, [pc, #188]	; (3fc0 <_Z14draw_mics_datav+0x130>)
    3f04:	2302      	movs	r3, #2
    3f06:	aa1b      	add	r2, sp, #108	; 0x6c
    3f08:	6a20      	ldr	r0, [r4, #32]
    3f0a:	6a61      	ldr	r1, [r4, #36]	; 0x24
    3f0c:	4d2d      	ldr	r5, [pc, #180]	; (3fc4 <_Z14draw_mics_datav+0x134>)
    3f0e:	47a8      	blx	r5
ftoad(MICS6814_Values.CO,co_string_data,2);
    3f10:	2302      	movs	r3, #2
    3f12:	aa14      	add	r2, sp, #80	; 0x50
    3f14:	6920      	ldr	r0, [r4, #16]
    3f16:	6961      	ldr	r1, [r4, #20]
    3f18:	47a8      	blx	r5
ftoad(MICS6814_Values.NO2,no2_string_data,2);
    3f1a:	2302      	movs	r3, #2
    3f1c:	aa0b      	add	r2, sp, #44	; 0x2c
    3f1e:	69a0      	ldr	r0, [r4, #24]
    3f20:	69e1      	ldr	r1, [r4, #28]
    3f22:	47a8      	blx	r5

gde027w3.drawString(243, 66, nh3_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3f24:	3450      	adds	r4, #80	; 0x50
    3f26:	2501      	movs	r5, #1
    3f28:	9502      	str	r5, [sp, #8]
    3f2a:	4f27      	ldr	r7, [pc, #156]	; (3fc8 <_Z14draw_mics_datav+0x138>)
    3f2c:	9701      	str	r7, [sp, #4]
    3f2e:	2300      	movs	r3, #0
    3f30:	9300      	str	r3, [sp, #0]
    3f32:	464b      	mov	r3, r9
    3f34:	2242      	movs	r2, #66	; 0x42
    3f36:	21f3      	movs	r1, #243	; 0xf3
    3f38:	0020      	movs	r0, r4
    3f3a:	4e24      	ldr	r6, [pc, #144]	; (3fcc <_Z14draw_mics_datav+0x13c>)
    3f3c:	46b3      	mov	fp, r6
    3f3e:	47b0      	blx	r6
gde027w3.drawString_gfx_n(230, 77, nh3_string_data, GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3f40:	9503      	str	r5, [sp, #12]
    3f42:	9502      	str	r5, [sp, #8]
    3f44:	9701      	str	r7, [sp, #4]
    3f46:	2300      	movs	r3, #0
    3f48:	9300      	str	r3, [sp, #0]
    3f4a:	ab1b      	add	r3, sp, #108	; 0x6c
    3f4c:	224d      	movs	r2, #77	; 0x4d
    3f4e:	21e6      	movs	r1, #230	; 0xe6
    3f50:	0026      	movs	r6, r4
    3f52:	0020      	movs	r0, r4
    3f54:	4c1e      	ldr	r4, [pc, #120]	; (3fd0 <_Z14draw_mics_datav+0x140>)
    3f56:	47a0      	blx	r4

gde027w3.drawString(255, 98, co_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3f58:	9502      	str	r5, [sp, #8]
    3f5a:	9701      	str	r7, [sp, #4]
    3f5c:	2300      	movs	r3, #0
    3f5e:	9300      	str	r3, [sp, #0]
    3f60:	4643      	mov	r3, r8
    3f62:	2262      	movs	r2, #98	; 0x62
    3f64:	21ff      	movs	r1, #255	; 0xff
    3f66:	0030      	movs	r0, r6
    3f68:	47d8      	blx	fp
gde027w3.drawString_gfx_n(230, 111, co_string_data, GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3f6a:	9503      	str	r5, [sp, #12]
    3f6c:	9502      	str	r5, [sp, #8]
    3f6e:	9701      	str	r7, [sp, #4]
    3f70:	2300      	movs	r3, #0
    3f72:	9300      	str	r3, [sp, #0]
    3f74:	ab14      	add	r3, sp, #80	; 0x50
    3f76:	226f      	movs	r2, #111	; 0x6f
    3f78:	21e6      	movs	r1, #230	; 0xe6
    3f7a:	0030      	movs	r0, r6
    3f7c:	47a0      	blx	r4

gde027w3.drawString(260, 129, no2_string, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
    3f7e:	9502      	str	r5, [sp, #8]
    3f80:	9701      	str	r7, [sp, #4]
    3f82:	2300      	movs	r3, #0
    3f84:	9300      	str	r3, [sp, #0]
    3f86:	4653      	mov	r3, sl
    3f88:	2281      	movs	r2, #129	; 0x81
    3f8a:	2182      	movs	r1, #130	; 0x82
    3f8c:	0049      	lsls	r1, r1, #1
    3f8e:	0030      	movs	r0, r6
    3f90:	47d8      	blx	fp
gde027w3.drawString_gfx_n(230, 142, no2_string_data, GDEW027W3_BLACK, GDEW027W3_WHITE, 1,1);
    3f92:	9503      	str	r5, [sp, #12]
    3f94:	9502      	str	r5, [sp, #8]
    3f96:	9701      	str	r7, [sp, #4]
    3f98:	2300      	movs	r3, #0
    3f9a:	9300      	str	r3, [sp, #0]
    3f9c:	ab0b      	add	r3, sp, #44	; 0x2c
    3f9e:	228e      	movs	r2, #142	; 0x8e
    3fa0:	21e6      	movs	r1, #230	; 0xe6
    3fa2:	0030      	movs	r0, r6
    3fa4:	47a0      	blx	r4
	
}
    3fa6:	b01f      	add	sp, #124	; 0x7c
    3fa8:	bc3c      	pop	{r2, r3, r4, r5}
    3faa:	4690      	mov	r8, r2
    3fac:	4699      	mov	r9, r3
    3fae:	46a2      	mov	sl, r4
    3fb0:	46ab      	mov	fp, r5
    3fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3fb4:	00008c59 	.word	0x00008c59
    3fb8:	0000f78c 	.word	0x0000f78c
    3fbc:	0000dea4 	.word	0x0000dea4
    3fc0:	20000680 	.word	0x20000680
    3fc4:	00000bcd 	.word	0x00000bcd
    3fc8:	0000ffff 	.word	0x0000ffff
    3fcc:	00002fc9 	.word	0x00002fc9
    3fd0:	00003341 	.word	0x00003341

00003fd4 <main>:

#include "display_functions.cpp"


int main(void)
{
    3fd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    3fd6:	46de      	mov	lr, fp
    3fd8:	4657      	mov	r7, sl
    3fda:	464e      	mov	r6, r9
    3fdc:	4645      	mov	r5, r8
    3fde:	b5e0      	push	{r5, r6, r7, lr}
    3fe0:	b091      	sub	sp, #68	; 0x44
	REG_PM_AHBMASK &= ~PM_AHBMASK_USB; //disable usb clock
    3fe2:	4acd      	ldr	r2, [pc, #820]	; (4318 <main+0x344>)
    3fe4:	6813      	ldr	r3, [r2, #0]
    3fe6:	2140      	movs	r1, #64	; 0x40
    3fe8:	438b      	bics	r3, r1
    3fea:	6013      	str	r3, [r2, #0]

    SystemInit();    // Initialize the SAM system 
    3fec:	4bcb      	ldr	r3, [pc, #812]	; (431c <main+0x348>)
    3fee:	4798      	blx	r3
	
	PinConfigs(); //set pins
    3ff0:	4bcb      	ldr	r3, [pc, #812]	; (4320 <main+0x34c>)
    3ff2:	4798      	blx	r3
	ClockConfig(); //setting clocks and set up 48mhz factory set values
    3ff4:	4bcb      	ldr	r3, [pc, #812]	; (4324 <main+0x350>)
    3ff6:	4798      	blx	r3
	
	ConfigureInterrupts(); //interrupts
    3ff8:	4bcb      	ldr	r3, [pc, #812]	; (4328 <main+0x354>)
    3ffa:	4798      	blx	r3
	PWM_FAN_init(); //fan PWM init TCC0.2
    3ffc:	4bcb      	ldr	r3, [pc, #812]	; (432c <main+0x358>)
    3ffe:	4798      	blx	r3
	PWM_LED_init(); //power button led init TCC2.0
    4000:	4bcb      	ldr	r3, [pc, #812]	; (4330 <main+0x35c>)
    4002:	4798      	blx	r3
	
	init_4ms_counter(); //interrupts every 4ms
    4004:	4bcb      	ldr	r3, [pc, #812]	; (4334 <main+0x360>)
    4006:	4798      	blx	r3
	init_ADC();
    4008:	4bcb      	ldr	r3, [pc, #812]	; (4338 <main+0x364>)
    400a:	4798      	blx	r3
	init_sercoms();
    400c:	4bcb      	ldr	r3, [pc, #812]	; (433c <main+0x368>)
    400e:	4798      	blx	r3
	init_RTC(); //init to mode2
    4010:	4bcb      	ldr	r3, [pc, #812]	; (4340 <main+0x36c>)
    4012:	4798      	blx	r3
	
	rtc_clock.init();
    4014:	4ccb      	ldr	r4, [pc, #812]	; (4344 <main+0x370>)
    4016:	0020      	movs	r0, r4
    4018:	3014      	adds	r0, #20
    401a:	4bcb      	ldr	r3, [pc, #812]	; (4348 <main+0x374>)
    401c:	4798      	blx	r3
	REG_PORT_OUTSET0=(1<<7); //for pin high
    401e:	4bcb      	ldr	r3, [pc, #812]	; (434c <main+0x378>)
    4020:	2280      	movs	r2, #128	; 0x80
    4022:	601a      	str	r2, [r3, #0]
	REG_PORT_OUTSET0=(1<<12); //for pin high
    4024:	2280      	movs	r2, #128	; 0x80
    4026:	0152      	lsls	r2, r2, #5
    4028:	601a      	str	r2, [r3, #0]
	mhz19.wake();
	//mhz19.change_to_2000ppm(); //don't need probably
	
	
	
	bme680.begin(); 
    402a:	0020      	movs	r0, r4
    402c:	3018      	adds	r0, #24
    402e:	4bc8      	ldr	r3, [pc, #800]	; (4350 <main+0x37c>)
    4030:	4798      	blx	r3
	mics6814.init(); 
    4032:	4dc8      	ldr	r5, [pc, #800]	; (4354 <main+0x380>)
    4034:	0028      	movs	r0, r5
    4036:	3078      	adds	r0, #120	; 0x78
    4038:	4bc7      	ldr	r3, [pc, #796]	; (4358 <main+0x384>)
    403a:	4798      	blx	r3
	
	helper_mode_flag =  helper_MODE_AUTOMATIC;
    403c:	4cc7      	ldr	r4, [pc, #796]	; (435c <main+0x388>)
    403e:	2300      	movs	r3, #0
    4040:	7623      	strb	r3, [r4, #24]
	mode_flag = MODE_AUTOMATIC;	
    4042:	2230      	movs	r2, #48	; 0x30
    4044:	54ab      	strb	r3, [r5, r2]
	
	gde027w3.init_GDEW027W3();
    4046:	4dc6      	ldr	r5, [pc, #792]	; (4360 <main+0x38c>)
    4048:	3550      	adds	r5, #80	; 0x50
    404a:	0028      	movs	r0, r5
    404c:	4bc5      	ldr	r3, [pc, #788]	; (4364 <main+0x390>)
    404e:	4798      	blx	r3
	gde027w3.ClearFrame();
    4050:	0028      	movs	r0, r5
    4052:	4bc5      	ldr	r3, [pc, #788]	; (4368 <main+0x394>)
    4054:	4798      	blx	r3
	
	
	
	//humidity=bme280.readHumidity();
	draw_humidity_data();
    4056:	4bc5      	ldr	r3, [pc, #788]	; (436c <main+0x398>)
    4058:	4798      	blx	r3
	draw_MODE();
    405a:	4bc5      	ldr	r3, [pc, #788]	; (4370 <main+0x39c>)
    405c:	4798      	blx	r3
	//mics_adc_test();
	//draw_time();
	gde027w3.DisplayFrame();
    405e:	0028      	movs	r0, r5
    4060:	4bc4      	ldr	r3, [pc, #784]	; (4374 <main+0x3a0>)
    4062:	4798      	blx	r3
    4064:	2380      	movs	r3, #128	; 0x80
    4066:	009b      	lsls	r3, r3, #2
    4068:	469c      	mov	ip, r3
    406a:	4464      	add	r4, ip
    406c:	4bc2      	ldr	r3, [pc, #776]	; (4378 <main+0x3a4>)
	
	for(uint16_t jj=0; jj< HUMIDIFIER_SAMPLES;jj++)
	{
		old_humidity[jj]=0;
    406e:	2000      	movs	r0, #0
    4070:	2100      	movs	r1, #0
    4072:	c303      	stmia	r3!, {r0, r1}
	for(uint16_t jj=0; jj< HUMIDIFIER_SAMPLES;jj++)
    4074:	42a3      	cmp	r3, r4
    4076:	d1fc      	bne.n	4072 <main+0x9e>
		
		
		if(second_passed)
		{
			second_passed=false;
			pms7003.AQ_calc_avg_short();
    4078:	4bc0      	ldr	r3, [pc, #768]	; (437c <main+0x3a8>)
    407a:	3328      	adds	r3, #40	; 0x28
    407c:	930f      	str	r3, [sp, #60]	; 0x3c
			//add TVOC here
				//to check if there's an ultrasonic humidifier on and then force night mode on
				humidity=bme680.humidity;
					
				firsts_avg=0;
				lasts_avg=0;
    407e:	2300      	movs	r3, #0
    4080:	2400      	movs	r4, #0
    4082:	930c      	str	r3, [sp, #48]	; 0x30
    4084:	940d      	str	r4, [sp, #52]	; 0x34
    4086:	e143      	b.n	4310 <main+0x33c>
			second_passed=false;
    4088:	2200      	movs	r2, #0
    408a:	4bbd      	ldr	r3, [pc, #756]	; (4380 <main+0x3ac>)
    408c:	719a      	strb	r2, [r3, #6]
			pms7003.AQ_calc_avg_short();
    408e:	980f      	ldr	r0, [sp, #60]	; 0x3c
    4090:	4bbc      	ldr	r3, [pc, #752]	; (4384 <main+0x3b0>)
    4092:	4798      	blx	r3
			mhz19.request_data();
    4094:	48bc      	ldr	r0, [pc, #752]	; (4388 <main+0x3b4>)
    4096:	4bbd      	ldr	r3, [pc, #756]	; (438c <main+0x3b8>)
    4098:	4798      	blx	r3
			if(co2_concentration >= 1800 && co2_concentration < 4800 )
    409a:	234a      	movs	r3, #74	; 0x4a
    409c:	4abc      	ldr	r2, [pc, #752]	; (4390 <main+0x3bc>)
    409e:	5ad3      	ldrh	r3, [r2, r3]
    40a0:	b29b      	uxth	r3, r3
    40a2:	4abc      	ldr	r2, [pc, #752]	; (4394 <main+0x3c0>)
    40a4:	4293      	cmp	r3, r2
    40a6:	dd07      	ble.n	40b8 <main+0xe4>
    40a8:	234a      	movs	r3, #74	; 0x4a
    40aa:	4ab9      	ldr	r2, [pc, #740]	; (4390 <main+0x3bc>)
    40ac:	5ad3      	ldrh	r3, [r2, r3]
    40ae:	b29b      	uxth	r3, r3
    40b0:	4ab9      	ldr	r2, [pc, #740]	; (4398 <main+0x3c4>)
    40b2:	4293      	cmp	r3, r2
    40b4:	dc00      	bgt.n	40b8 <main+0xe4>
    40b6:	e0ae      	b.n	4216 <main+0x242>
			else if (co2_concentration < 1800)
    40b8:	234a      	movs	r3, #74	; 0x4a
    40ba:	4ab5      	ldr	r2, [pc, #724]	; (4390 <main+0x3bc>)
    40bc:	5ad3      	ldrh	r3, [r2, r3]
    40be:	e0aa      	b.n	4216 <main+0x242>
    40c0:	3401      	adds	r4, #1
    40c2:	3508      	adds	r5, #8
				for(uint16_t i=0; i<= HUMIDIFIER_SAMPLES-2;i++)
    40c4:	2c3b      	cmp	r4, #59	; 0x3b
    40c6:	d01c      	beq.n	4102 <main+0x12e>
				{
					old_humidity[i]=old_humidity[i+1]; //move values left by one
    40c8:	68ae      	ldr	r6, [r5, #8]
    40ca:	68ef      	ldr	r7, [r5, #12]
    40cc:	602e      	str	r6, [r5, #0]
    40ce:	606f      	str	r7, [r5, #4]
    40d0:	46a0      	mov	r8, r4
					if(i <= 4)
    40d2:	2c04      	cmp	r4, #4
    40d4:	dc08      	bgt.n	40e8 <main+0x114>
					{ 
						firsts_avg+=old_humidity[i];
    40d6:	0032      	movs	r2, r6
    40d8:	003b      	movs	r3, r7
    40da:	9804      	ldr	r0, [sp, #16]
    40dc:	9905      	ldr	r1, [sp, #20]
    40de:	47d0      	blx	sl
    40e0:	9004      	str	r0, [sp, #16]
    40e2:	9105      	str	r1, [sp, #20]
    40e4:	9b08      	ldr	r3, [sp, #32]
    40e6:	930e      	str	r3, [sp, #56]	; 0x38
					}
					if(i > (HUMIDIFIER_SAMPLES-6) ) lasts_avg+=old_humidity[i];
    40e8:	4643      	mov	r3, r8
    40ea:	2b36      	cmp	r3, #54	; 0x36
    40ec:	dde8      	ble.n	40c0 <main+0xec>
    40ee:	0032      	movs	r2, r6
    40f0:	003b      	movs	r3, r7
    40f2:	9806      	ldr	r0, [sp, #24]
    40f4:	9907      	ldr	r1, [sp, #28]
    40f6:	47c8      	blx	r9
    40f8:	9006      	str	r0, [sp, #24]
    40fa:	9107      	str	r1, [sp, #28]
    40fc:	9b08      	ldr	r3, [sp, #32]
    40fe:	9309      	str	r3, [sp, #36]	; 0x24
    4100:	e7de      	b.n	40c0 <main+0xec>
    4102:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4104:	2b00      	cmp	r3, #0
    4106:	d151      	bne.n	41ac <main+0x1d8>
    4108:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    410a:	2b00      	cmp	r3, #0
    410c:	d004      	beq.n	4118 <main+0x144>
    410e:	4b9e      	ldr	r3, [pc, #632]	; (4388 <main+0x3b4>)
    4110:	9904      	ldr	r1, [sp, #16]
    4112:	9a05      	ldr	r2, [sp, #20]
    4114:	6099      	str	r1, [r3, #8]
    4116:	60da      	str	r2, [r3, #12]
					
				}
				old_humidity[HUMIDIFIER_SAMPLES-1]=humidity;
    4118:	4b90      	ldr	r3, [pc, #576]	; (435c <main+0x388>)
    411a:	33f9      	adds	r3, #249	; 0xf9
    411c:	33ff      	adds	r3, #255	; 0xff
    411e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    4120:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    4122:	0021      	movs	r1, r4
    4124:	002a      	movs	r2, r5
    4126:	6019      	str	r1, [r3, #0]
    4128:	605a      	str	r2, [r3, #4]
				lasts_avg+=old_humidity[HUMIDIFIER_SAMPLES-1];
    412a:	4e97      	ldr	r6, [pc, #604]	; (4388 <main+0x3b4>)
    412c:	6932      	ldr	r2, [r6, #16]
    412e:	6973      	ldr	r3, [r6, #20]
    4130:	0020      	movs	r0, r4
    4132:	0029      	movs	r1, r5
    4134:	4c99      	ldr	r4, [pc, #612]	; (439c <main+0x3c8>)
    4136:	47a0      	blx	r4
    4138:	9004      	str	r0, [sp, #16]
    413a:	9105      	str	r1, [sp, #20]
				firsts_avg/=(double)5; //5 samples
    413c:	4f98      	ldr	r7, [pc, #608]	; (43a0 <main+0x3cc>)
    413e:	2200      	movs	r2, #0
    4140:	4b98      	ldr	r3, [pc, #608]	; (43a4 <main+0x3d0>)
    4142:	68b0      	ldr	r0, [r6, #8]
    4144:	68f1      	ldr	r1, [r6, #12]
    4146:	47b8      	blx	r7
    4148:	0004      	movs	r4, r0
    414a:	000d      	movs	r5, r1
    414c:	60b4      	str	r4, [r6, #8]
    414e:	60f5      	str	r5, [r6, #12]
				lasts_avg/=(double)5;
    4150:	2200      	movs	r2, #0
    4152:	4b94      	ldr	r3, [pc, #592]	; (43a4 <main+0x3d0>)
    4154:	9804      	ldr	r0, [sp, #16]
    4156:	9905      	ldr	r1, [sp, #20]
    4158:	47b8      	blx	r7
    415a:	6130      	str	r0, [r6, #16]
    415c:	6171      	str	r1, [r6, #20]
				
				if(humidifier_sampling_finished)
    415e:	7e33      	ldrb	r3, [r6, #24]
    4160:	2b00      	cmp	r3, #0
    4162:	d03e      	beq.n	41e2 <main+0x20e>
				{	
					if(((lasts_avg-firsts_avg) > HUMIDIFIER_SLOPE_AVERAGE) && (pms7003.old_avg_PM1_0_CF1_short >= 200 || 
    4164:	0022      	movs	r2, r4
    4166:	002b      	movs	r3, r5
    4168:	4c8f      	ldr	r4, [pc, #572]	; (43a8 <main+0x3d4>)
    416a:	47a0      	blx	r4
    416c:	4a8f      	ldr	r2, [pc, #572]	; (43ac <main+0x3d8>)
    416e:	4b90      	ldr	r3, [pc, #576]	; (43b0 <main+0x3dc>)
    4170:	4c90      	ldr	r4, [pc, #576]	; (43b4 <main+0x3e0>)
    4172:	47a0      	blx	r4
    4174:	2800      	cmp	r0, #0
    4176:	d01f      	beq.n	41b8 <main+0x1e4>
    4178:	4b80      	ldr	r3, [pc, #512]	; (437c <main+0x3a8>)
    417a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    417c:	2bc7      	cmp	r3, #199	; 0xc7
    417e:	d807      	bhi.n	4190 <main+0x1bc>
					pms7003.old_avg_PM2_5_CF1_short >= 200 ||pms7003.old_avg_PM10_CF1_short >= 200 )) //if humidifier is detected
    4180:	4b7e      	ldr	r3, [pc, #504]	; (437c <main+0x3a8>)
					if(((lasts_avg-firsts_avg) > HUMIDIFIER_SLOPE_AVERAGE) && (pms7003.old_avg_PM1_0_CF1_short >= 200 || 
    4182:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    4184:	2bc7      	cmp	r3, #199	; 0xc7
    4186:	d803      	bhi.n	4190 <main+0x1bc>
					pms7003.old_avg_PM2_5_CF1_short >= 200 ||pms7003.old_avg_PM10_CF1_short >= 200 )) //if humidifier is detected
    4188:	4b7c      	ldr	r3, [pc, #496]	; (437c <main+0x3a8>)
    418a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    418c:	2bc7      	cmp	r3, #199	; 0xc7
    418e:	d913      	bls.n	41b8 <main+0x1e4>
					{
						mode_flag=MODE_NIGHT;
    4190:	2301      	movs	r3, #1
    4192:	2230      	movs	r2, #48	; 0x30
    4194:	496f      	ldr	r1, [pc, #444]	; (4354 <main+0x380>)
    4196:	548b      	strb	r3, [r1, r2]
						humidifier_detected=true;
    4198:	4a7b      	ldr	r2, [pc, #492]	; (4388 <main+0x3b4>)
    419a:	7653      	strb	r3, [r2, #25]
					NIGHT_MODE=false;
					MOTOR_PID_CONTROL=true;
					MANUAL_MODE=false;
			break;
			case MODE_NIGHT:
					NIGHT_MODE=true;
    419c:	4b7a      	ldr	r3, [pc, #488]	; (4388 <main+0x3b4>)
    419e:	2201      	movs	r2, #1
    41a0:	769a      	strb	r2, [r3, #26]
					MOTOR_PID_CONTROL=true;
    41a2:	4977      	ldr	r1, [pc, #476]	; (4380 <main+0x3ac>)
    41a4:	71ca      	strb	r2, [r1, #7]
					MANUAL_MODE=false;
    41a6:	2200      	movs	r2, #0
    41a8:	76da      	strb	r2, [r3, #27]
			break;
    41aa:	e023      	b.n	41f4 <main+0x220>
    41ac:	4b76      	ldr	r3, [pc, #472]	; (4388 <main+0x3b4>)
    41ae:	9906      	ldr	r1, [sp, #24]
    41b0:	9a07      	ldr	r2, [sp, #28]
    41b2:	6119      	str	r1, [r3, #16]
    41b4:	615a      	str	r2, [r3, #20]
    41b6:	e7a7      	b.n	4108 <main+0x134>
					else if(helper_mode_flag == helper_MODE_AUTOMATIC )
    41b8:	4b68      	ldr	r3, [pc, #416]	; (435c <main+0x388>)
    41ba:	7e1b      	ldrb	r3, [r3, #24]
    41bc:	2b00      	cmp	r3, #0
    41be:	d10c      	bne.n	41da <main+0x206>
						mode_flag=MODE_AUTOMATIC;
    41c0:	2230      	movs	r2, #48	; 0x30
    41c2:	4964      	ldr	r1, [pc, #400]	; (4354 <main+0x380>)
    41c4:	548b      	strb	r3, [r1, r2]
						humidifier_detected=false;
    41c6:	4a70      	ldr	r2, [pc, #448]	; (4388 <main+0x3b4>)
    41c8:	7653      	strb	r3, [r2, #25]
					NIGHT_MODE=false;
    41ca:	4b6f      	ldr	r3, [pc, #444]	; (4388 <main+0x3b4>)
    41cc:	2200      	movs	r2, #0
    41ce:	769a      	strb	r2, [r3, #26]
					MOTOR_PID_CONTROL=true;
    41d0:	2001      	movs	r0, #1
    41d2:	496b      	ldr	r1, [pc, #428]	; (4380 <main+0x3ac>)
    41d4:	71c8      	strb	r0, [r1, #7]
					MANUAL_MODE=false;
    41d6:	76da      	strb	r2, [r3, #27]
			break;
    41d8:	e00c      	b.n	41f4 <main+0x220>
					else if(helper_mode_flag == helper_MODE_NIGHT )
    41da:	2b01      	cmp	r3, #1
    41dc:	d045      	beq.n	426a <main+0x296>
					else if(helper_mode_flag == helper_MODE_MANUAL)
    41de:	2b02      	cmp	r3, #2
    41e0:	d04b      	beq.n	427a <main+0x2a6>
		switch(mode_flag){
    41e2:	2330      	movs	r3, #48	; 0x30
    41e4:	4a5b      	ldr	r2, [pc, #364]	; (4354 <main+0x380>)
    41e6:	5cd3      	ldrb	r3, [r2, r3]
    41e8:	2b01      	cmp	r3, #1
    41ea:	d0d7      	beq.n	419c <main+0x1c8>
    41ec:	2b00      	cmp	r3, #0
    41ee:	d0ec      	beq.n	41ca <main+0x1f6>
    41f0:	2b02      	cmp	r3, #2
    41f2:	d049      	beq.n	4288 <main+0x2b4>
				NIGHT_MODE=false;
				FAN_PWM_VALUE=10*MANUAL_PWM; //0-10 manual pwm
			break;
		}
		
		if(allow_display_update && update_time_startup && update_time) //every 30 seconds
    41f4:	4b62      	ldr	r3, [pc, #392]	; (4380 <main+0x3ac>)
    41f6:	791b      	ldrb	r3, [r3, #4]
    41f8:	2b00      	cmp	r3, #0
    41fa:	d007      	beq.n	420c <main+0x238>
    41fc:	4b62      	ldr	r3, [pc, #392]	; (4388 <main+0x3b4>)
    41fe:	7f9b      	ldrb	r3, [r3, #30]
    4200:	2b00      	cmp	r3, #0
    4202:	d003      	beq.n	420c <main+0x238>
    4204:	4b5e      	ldr	r3, [pc, #376]	; (4380 <main+0x3ac>)
    4206:	795b      	ldrb	r3, [r3, #5]
    4208:	2b00      	cmp	r3, #0
    420a:	d159      	bne.n	42c0 <main+0x2ec>
		if(second_passed)
    420c:	465b      	mov	r3, fp
    420e:	799b      	ldrb	r3, [r3, #6]
    4210:	2b00      	cmp	r3, #0
    4212:	d000      	beq.n	4216 <main+0x242>
    4214:	e738      	b.n	4088 <main+0xb4>
		if(x_second_passed) //calculate new values that are used in motor PWM
    4216:	4b5c      	ldr	r3, [pc, #368]	; (4388 <main+0x3b4>)
    4218:	785e      	ldrb	r6, [r3, #1]
    421a:	b2f6      	uxtb	r6, r6
    421c:	2e00      	cmp	r6, #0
    421e:	d0e0      	beq.n	41e2 <main+0x20e>
			x_second_passed=false;
    4220:	001c      	movs	r4, r3
    4222:	2300      	movs	r3, #0
    4224:	7063      	strb	r3, [r4, #1]
				humidity=bme680.humidity;
    4226:	4b47      	ldr	r3, [pc, #284]	; (4344 <main+0x370>)
    4228:	6a18      	ldr	r0, [r3, #32]
    422a:	4b63      	ldr	r3, [pc, #396]	; (43b8 <main+0x3e4>)
    422c:	4798      	blx	r3
    422e:	000a      	movs	r2, r1
    4230:	0001      	movs	r1, r0
    4232:	910a      	str	r1, [sp, #40]	; 0x28
    4234:	920b      	str	r2, [sp, #44]	; 0x2c
    4236:	4b47      	ldr	r3, [pc, #284]	; (4354 <main+0x380>)
    4238:	6219      	str	r1, [r3, #32]
    423a:	625a      	str	r2, [r3, #36]	; 0x24
				firsts_avg=0;
    423c:	2200      	movs	r2, #0
    423e:	2300      	movs	r3, #0
    4240:	60a2      	str	r2, [r4, #8]
    4242:	60e3      	str	r3, [r4, #12]
				lasts_avg=0;
    4244:	6122      	str	r2, [r4, #16]
    4246:	6163      	str	r3, [r4, #20]
    4248:	4d4b      	ldr	r5, [pc, #300]	; (4378 <main+0x3a4>)
    424a:	2400      	movs	r4, #0
    424c:	2300      	movs	r3, #0
    424e:	930e      	str	r3, [sp, #56]	; 0x38
    4250:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4252:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4254:	9204      	str	r2, [sp, #16]
    4256:	9305      	str	r3, [sp, #20]
    4258:	2100      	movs	r1, #0
    425a:	9109      	str	r1, [sp, #36]	; 0x24
    425c:	9206      	str	r2, [sp, #24]
    425e:	9307      	str	r3, [sp, #28]
						firsts_avg+=old_humidity[i];
    4260:	4b4e      	ldr	r3, [pc, #312]	; (439c <main+0x3c8>)
    4262:	469a      	mov	sl, r3
    4264:	9608      	str	r6, [sp, #32]
					if(i > (HUMIDIFIER_SAMPLES-6) ) lasts_avg+=old_humidity[i];
    4266:	4699      	mov	r9, r3
    4268:	e72e      	b.n	40c8 <main+0xf4>
						mode_flag=MODE_NIGHT;
    426a:	2101      	movs	r1, #1
    426c:	332f      	adds	r3, #47	; 0x2f
    426e:	4a39      	ldr	r2, [pc, #228]	; (4354 <main+0x380>)
    4270:	54d1      	strb	r1, [r2, r3]
						humidifier_detected=false;
    4272:	2200      	movs	r2, #0
    4274:	4b44      	ldr	r3, [pc, #272]	; (4388 <main+0x3b4>)
    4276:	765a      	strb	r2, [r3, #25]
    4278:	e790      	b.n	419c <main+0x1c8>
						mode_flag=MODE_MANUAL;
    427a:	2102      	movs	r1, #2
    427c:	332e      	adds	r3, #46	; 0x2e
    427e:	4a35      	ldr	r2, [pc, #212]	; (4354 <main+0x380>)
    4280:	54d1      	strb	r1, [r2, r3]
						humidifier_detected=false;
    4282:	2200      	movs	r2, #0
    4284:	4b40      	ldr	r3, [pc, #256]	; (4388 <main+0x3b4>)
    4286:	765a      	strb	r2, [r3, #25]
				MANUAL_MODE=true;
    4288:	4b3f      	ldr	r3, [pc, #252]	; (4388 <main+0x3b4>)
    428a:	2201      	movs	r2, #1
    428c:	76da      	strb	r2, [r3, #27]
				MOTOR_PID_CONTROL=false;
    428e:	2200      	movs	r2, #0
    4290:	493b      	ldr	r1, [pc, #236]	; (4380 <main+0x3ac>)
    4292:	71ca      	strb	r2, [r1, #7]
				NIGHT_MODE=false;
    4294:	769a      	strb	r2, [r3, #26]
				FAN_PWM_VALUE=10*MANUAL_PWM; //0-10 manual pwm
    4296:	8b9b      	ldrh	r3, [r3, #28]
    4298:	009a      	lsls	r2, r3, #2
    429a:	189b      	adds	r3, r3, r2
    429c:	005b      	lsls	r3, r3, #1
    429e:	4a2d      	ldr	r2, [pc, #180]	; (4354 <main+0x380>)
    42a0:	8653      	strh	r3, [r2, #50]	; 0x32
			break;
    42a2:	e7a7      	b.n	41f4 <main+0x220>
			//ftoan((lasts_avg-firsts_avg),string_h,2);
			//gde027w3.drawString( 120, 130 , string_h, GDEW027W3_BLACK, GDEW027W3_WHITE, 1);
					
			if(humidifier_detected)
			{
				gde027w3.drawChar(160, 161, 'H',  GDEW027W3_BLACK,GDEW027W3_WHITE, 1);
    42a4:	2301      	movs	r3, #1
    42a6:	9302      	str	r3, [sp, #8]
    42a8:	4b44      	ldr	r3, [pc, #272]	; (43bc <main+0x3e8>)
    42aa:	9301      	str	r3, [sp, #4]
    42ac:	2300      	movs	r3, #0
    42ae:	9300      	str	r3, [sp, #0]
    42b0:	3348      	adds	r3, #72	; 0x48
    42b2:	22a1      	movs	r2, #161	; 0xa1
    42b4:	21a0      	movs	r1, #160	; 0xa0
    42b6:	482a      	ldr	r0, [pc, #168]	; (4360 <main+0x38c>)
    42b8:	3050      	adds	r0, #80	; 0x50
    42ba:	4c41      	ldr	r4, [pc, #260]	; (43c0 <main+0x3ec>)
    42bc:	47a0      	blx	r4
    42be:	e01d      	b.n	42fc <main+0x328>
			update_time=false; //in RTC when it's time to update
    42c0:	2200      	movs	r2, #0
    42c2:	4b2f      	ldr	r3, [pc, #188]	; (4380 <main+0x3ac>)
    42c4:	715a      	strb	r2, [r3, #5]
			mics6814.read_and_calculate();
    42c6:	4823      	ldr	r0, [pc, #140]	; (4354 <main+0x380>)
    42c8:	3078      	adds	r0, #120	; 0x78
    42ca:	4b3e      	ldr	r3, [pc, #248]	; (43c4 <main+0x3f0>)
    42cc:	4798      	blx	r3
			pms7003.AQI_calc_indexes();
    42ce:	482b      	ldr	r0, [pc, #172]	; (437c <main+0x3a8>)
    42d0:	3028      	adds	r0, #40	; 0x28
    42d2:	4b3d      	ldr	r3, [pc, #244]	; (43c8 <main+0x3f4>)
    42d4:	4798      	blx	r3
			while(gde027w3.update_inprogress);			
    42d6:	4a22      	ldr	r2, [pc, #136]	; (4360 <main+0x38c>)
    42d8:	3250      	adds	r2, #80	; 0x50
    42da:	7a53      	ldrb	r3, [r2, #9]
    42dc:	2b00      	cmp	r3, #0
    42de:	d1fc      	bne.n	42da <main+0x306>
			gde027w3.ClearFrame();
    42e0:	481f      	ldr	r0, [pc, #124]	; (4360 <main+0x38c>)
    42e2:	3050      	adds	r0, #80	; 0x50
    42e4:	4b20      	ldr	r3, [pc, #128]	; (4368 <main+0x394>)
    42e6:	4798      	blx	r3
			draw_RPM();	//motor ping here
    42e8:	4b38      	ldr	r3, [pc, #224]	; (43cc <main+0x3f8>)
    42ea:	4798      	blx	r3
			draw_MODE();
    42ec:	4b20      	ldr	r3, [pc, #128]	; (4370 <main+0x39c>)
    42ee:	4798      	blx	r3
			draw_humidity_data();
    42f0:	4b1e      	ldr	r3, [pc, #120]	; (436c <main+0x398>)
    42f2:	4798      	blx	r3
			if(humidifier_detected)
    42f4:	4b24      	ldr	r3, [pc, #144]	; (4388 <main+0x3b4>)
    42f6:	7e5b      	ldrb	r3, [r3, #25]
    42f8:	2b00      	cmp	r3, #0
    42fa:	d1d3      	bne.n	42a4 <main+0x2d0>
			}
			
			draw_co2_data(); //in ppm
    42fc:	4b34      	ldr	r3, [pc, #208]	; (43d0 <main+0x3fc>)
    42fe:	4798      	blx	r3
			draw_air_quality_data();
    4300:	4b34      	ldr	r3, [pc, #208]	; (43d4 <main+0x400>)
    4302:	4798      	blx	r3

			draw_mics_data();
    4304:	4b34      	ldr	r3, [pc, #208]	; (43d8 <main+0x404>)
    4306:	4798      	blx	r3
			//mics_adc_test();
			
			gde027w3.DisplayFrame(); //update whole display
    4308:	4815      	ldr	r0, [pc, #84]	; (4360 <main+0x38c>)
    430a:	3050      	adds	r0, #80	; 0x50
    430c:	4b19      	ldr	r3, [pc, #100]	; (4374 <main+0x3a0>)
    430e:	4798      	blx	r3
		if(second_passed)
    4310:	4b1b      	ldr	r3, [pc, #108]	; (4380 <main+0x3ac>)
    4312:	469b      	mov	fp, r3
    4314:	e77a      	b.n	420c <main+0x238>
    4316:	46c0      	nop			; (mov r8, r8)
    4318:	40000414 	.word	0x40000414
    431c:	000001fd 	.word	0x000001fd
    4320:	00000325 	.word	0x00000325
    4324:	00000395 	.word	0x00000395
    4328:	000007c9 	.word	0x000007c9
    432c:	00000645 	.word	0x00000645
    4330:	000006c9 	.word	0x000006c9
    4334:	0000074d 	.word	0x0000074d
    4338:	00000831 	.word	0x00000831
    433c:	00000901 	.word	0x00000901
    4340:	00000a25 	.word	0x00000a25
    4344:	20001d80 	.word	0x20001d80
    4348:	00003709 	.word	0x00003709
    434c:	41004418 	.word	0x41004418
    4350:	00002829 	.word	0x00002829
    4354:	20001e00 	.word	0x20001e00
    4358:	00003479 	.word	0x00003479
    435c:	20001e80 	.word	0x20001e80
    4360:	20000680 	.word	0x20000680
    4364:	00002af5 	.word	0x00002af5
    4368:	00002c59 	.word	0x00002c59
    436c:	0000381d 	.word	0x0000381d
    4370:	00003ce9 	.word	0x00003ce9
    4374:	00002cb5 	.word	0x00002cb5
    4378:	20001ea0 	.word	0x20001ea0
    437c:	20000580 	.word	0x20000580
    4380:	20000088 	.word	0x20000088
    4384:	0000152d 	.word	0x0000152d
    4388:	20002080 	.word	0x20002080
    438c:	00001905 	.word	0x00001905
    4390:	20000600 	.word	0x20000600
    4394:	00000707 	.word	0x00000707
    4398:	000012bf 	.word	0x000012bf
    439c:	00006aa9 	.word	0x00006aa9
    43a0:	000070c9 	.word	0x000070c9
    43a4:	40140000 	.word	0x40140000
    43a8:	00007e31 	.word	0x00007e31
    43ac:	9999999a 	.word	0x9999999a
    43b0:	3fa99999 	.word	0x3fa99999
    43b4:	00005f89 	.word	0x00005f89
    43b8:	000085f9 	.word	0x000085f9
    43bc:	0000ffff 	.word	0x0000ffff
    43c0:	00002e1d 	.word	0x00002e1d
    43c4:	000036f1 	.word	0x000036f1
    43c8:	00000cd9 	.word	0x00000cd9
    43cc:	00003e09 	.word	0x00003e09
    43d0:	000039a5 	.word	0x000039a5
    43d4:	00003a2d 	.word	0x00003a2d
    43d8:	00003e91 	.word	0x00003e91

000043dc <TC4_Handler>:

//4ms interrupt
void TC4_Handler()
{
	// Check for match interrupt
	if (TC4->COUNT8.INTFLAG.bit.MC0 == 1)
    43dc:	4b40      	ldr	r3, [pc, #256]	; (44e0 <TC4_Handler+0x104>)
    43de:	7b9b      	ldrb	r3, [r3, #14]
    43e0:	06db      	lsls	r3, r3, #27
    43e2:	d400      	bmi.n	43e6 <TC4_Handler+0xa>
    43e4:	e07a      	b.n	44dc <TC4_Handler+0x100>
	{
		
		
		timer_1s++;	
    43e6:	4a3f      	ldr	r2, [pc, #252]	; (44e4 <TC4_Handler+0x108>)
    43e8:	8c13      	ldrh	r3, [r2, #32]
    43ea:	3301      	adds	r3, #1
    43ec:	b29b      	uxth	r3, r3
    43ee:	8413      	strh	r3, [r2, #32]
		if(timer_1s >= 250)	{	//250*4ms=1s
    43f0:	2bf9      	cmp	r3, #249	; 0xf9
    43f2:	dd6e      	ble.n	44d2 <TC4_Handler+0xf6>
			timer_seconds++; //for calculating how many seconds have passed
    43f4:	0013      	movs	r3, r2
    43f6:	8c52      	ldrh	r2, [r2, #34]	; 0x22
    43f8:	3201      	adds	r2, #1
    43fa:	845a      	strh	r2, [r3, #34]	; 0x22
			timer_update_screen++;
    43fc:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
    43fe:	3201      	adds	r2, #1
    4400:	849a      	strh	r2, [r3, #36]	; 0x24
			timer_x_seconds++;
    4402:	8cda      	ldrh	r2, [r3, #38]	; 0x26
    4404:	3201      	adds	r2, #1
    4406:	84da      	strh	r2, [r3, #38]	; 0x26
			timer_1s=0;	
    4408:	2200      	movs	r2, #0
    440a:	841a      	strh	r2, [r3, #32]
			
			second_passed=true;
    440c:	3201      	adds	r2, #1
    440e:	4b36      	ldr	r3, [pc, #216]	; (44e8 <TC4_Handler+0x10c>)
    4410:	719a      	strb	r2, [r3, #6]
			REG_RTC_READREQ=RTC_READREQ_RREQ;
    4412:	4a36      	ldr	r2, [pc, #216]	; (44ec <TC4_Handler+0x110>)
    4414:	4b36      	ldr	r3, [pc, #216]	; (44f0 <TC4_Handler+0x114>)
    4416:	801a      	strh	r2, [r3, #0]
			while (RTC->MODE2.STATUS.bit.SYNCBUSY == 1 );
    4418:	4a36      	ldr	r2, [pc, #216]	; (44f4 <TC4_Handler+0x118>)
    441a:	7a93      	ldrb	r3, [r2, #10]
    441c:	09db      	lsrs	r3, r3, #7
    441e:	d1fc      	bne.n	441a <TC4_Handler+0x3e>
			
			if(timer_x_seconds >= UPDATE_AQ_AVG_INTERVAL)
    4420:	4b30      	ldr	r3, [pc, #192]	; (44e4 <TC4_Handler+0x108>)
    4422:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
    4424:	2b02      	cmp	r3, #2
    4426:	dd18      	ble.n	445a <TC4_Handler+0x7e>
			{
				timer_x_seconds=0;
    4428:	4b2e      	ldr	r3, [pc, #184]	; (44e4 <TC4_Handler+0x108>)
    442a:	2200      	movs	r2, #0
    442c:	84da      	strh	r2, [r3, #38]	; 0x26
				x_second_passed=true;
    442e:	3201      	adds	r2, #1
    4430:	705a      	strb	r2, [r3, #1]
				
				if(!humidifier_sampling_finished)
    4432:	7e1b      	ldrb	r3, [r3, #24]
    4434:	2b00      	cmp	r3, #0
    4436:	d103      	bne.n	4440 <TC4_Handler+0x64>
				{
					timer_humidifier++;
    4438:	4a2a      	ldr	r2, [pc, #168]	; (44e4 <TC4_Handler+0x108>)
    443a:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    443c:	3301      	adds	r3, #1
    443e:	8513      	strh	r3, [r2, #40]	; 0x28
				}
				if(!humidifier_sampling_finished && timer_humidifier >=HUMIDIFIER_SAMPLES)
    4440:	4b28      	ldr	r3, [pc, #160]	; (44e4 <TC4_Handler+0x108>)
    4442:	7e1b      	ldrb	r3, [r3, #24]
    4444:	2b00      	cmp	r3, #0
    4446:	d108      	bne.n	445a <TC4_Handler+0x7e>
    4448:	4b26      	ldr	r3, [pc, #152]	; (44e4 <TC4_Handler+0x108>)
    444a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
    444c:	2b3b      	cmp	r3, #59	; 0x3b
    444e:	dd04      	ble.n	445a <TC4_Handler+0x7e>
				{
					timer_humidifier=0;
    4450:	4b24      	ldr	r3, [pc, #144]	; (44e4 <TC4_Handler+0x108>)
    4452:	2200      	movs	r2, #0
    4454:	851a      	strh	r2, [r3, #40]	; 0x28
					humidifier_sampling_finished=true;
    4456:	3201      	adds	r2, #1
    4458:	761a      	strb	r2, [r3, #24]
				}
			}

			if(timer_update_screen >= 30) 
    445a:	4b22      	ldr	r3, [pc, #136]	; (44e4 <TC4_Handler+0x108>)
    445c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    445e:	2b1d      	cmp	r3, #29
    4460:	dd04      	ble.n	446c <TC4_Handler+0x90>
			{
				timer_update_screen=0;
    4462:	4b20      	ldr	r3, [pc, #128]	; (44e4 <TC4_Handler+0x108>)
    4464:	2200      	movs	r2, #0
    4466:	849a      	strh	r2, [r3, #36]	; 0x24
				update_time_startup=true; //startup timers bool
    4468:	3201      	adds	r2, #1
    446a:	779a      	strb	r2, [r3, #30]
			}
			
			if(startup_running && timer_seconds >= START_UP_TIME)
    446c:	4b1e      	ldr	r3, [pc, #120]	; (44e8 <TC4_Handler+0x10c>)
    446e:	7a1b      	ldrb	r3, [r3, #8]
    4470:	2b00      	cmp	r3, #0
    4472:	d009      	beq.n	4488 <TC4_Handler+0xac>
    4474:	4b1b      	ldr	r3, [pc, #108]	; (44e4 <TC4_Handler+0x108>)
    4476:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
    4478:	2b1d      	cmp	r3, #29
    447a:	dd05      	ble.n	4488 <TC4_Handler+0xac>
			{
				startup_running=false;
    447c:	2200      	movs	r2, #0
    447e:	4b1a      	ldr	r3, [pc, #104]	; (44e8 <TC4_Handler+0x10c>)
    4480:	721a      	strb	r2, [r3, #8]
				update_time_startup=true; //startup timers bool
    4482:	3201      	adds	r2, #1
    4484:	4b17      	ldr	r3, [pc, #92]	; (44e4 <TC4_Handler+0x108>)
    4486:	779a      	strb	r2, [r3, #30]
			}
			if(!extra_values_time && update_time_startup )
    4488:	232a      	movs	r3, #42	; 0x2a
    448a:	4a16      	ldr	r2, [pc, #88]	; (44e4 <TC4_Handler+0x108>)
    448c:	5cd3      	ldrb	r3, [r2, r3]
    448e:	2b00      	cmp	r3, #0
    4490:	d106      	bne.n	44a0 <TC4_Handler+0xc4>
    4492:	7f93      	ldrb	r3, [r2, #30]
    4494:	2b00      	cmp	r3, #0
    4496:	d003      	beq.n	44a0 <TC4_Handler+0xc4>
			{
				extra_values_timer++;
    4498:	4a12      	ldr	r2, [pc, #72]	; (44e4 <TC4_Handler+0x108>)
    449a:	8d93      	ldrh	r3, [r2, #44]	; 0x2c
    449c:	3301      	adds	r3, #1
    449e:	8593      	strh	r3, [r2, #44]	; 0x2c
			}
			
			if(!extra_values_time && update_time_startup &&  extra_values_timer >= EXTRA_TIME_AFTER_HEATING)
    44a0:	232a      	movs	r3, #42	; 0x2a
    44a2:	4a10      	ldr	r2, [pc, #64]	; (44e4 <TC4_Handler+0x108>)
    44a4:	5cd3      	ldrb	r3, [r2, r3]
    44a6:	2b00      	cmp	r3, #0
    44a8:	d109      	bne.n	44be <TC4_Handler+0xe2>
    44aa:	7f93      	ldrb	r3, [r2, #30]
    44ac:	2b00      	cmp	r3, #0
    44ae:	d006      	beq.n	44be <TC4_Handler+0xe2>
    44b0:	8d93      	ldrh	r3, [r2, #44]	; 0x2c
    44b2:	2b04      	cmp	r3, #4
    44b4:	dd03      	ble.n	44be <TC4_Handler+0xe2>
			{
				extra_values_time=true;
    44b6:	2101      	movs	r1, #1
    44b8:	232a      	movs	r3, #42	; 0x2a
    44ba:	4a0a      	ldr	r2, [pc, #40]	; (44e4 <TC4_Handler+0x108>)
    44bc:	54d1      	strb	r1, [r2, r3]
			}
			
			
			if(timer_seconds >= 60*STATISTIC_INTERVAL)
    44be:	4b09      	ldr	r3, [pc, #36]	; (44e4 <TC4_Handler+0x108>)
    44c0:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
    44c2:	4b0d      	ldr	r3, [pc, #52]	; (44f8 <TC4_Handler+0x11c>)
    44c4:	429a      	cmp	r2, r3
    44c6:	dd04      	ble.n	44d2 <TC4_Handler+0xf6>
			{
				xminute_passed=1; //xminutes has passed
    44c8:	4b06      	ldr	r3, [pc, #24]	; (44e4 <TC4_Handler+0x108>)
    44ca:	2201      	movs	r2, #1
    44cc:	85da      	strh	r2, [r3, #46]	; 0x2e
				timer_seconds=0;
    44ce:	2200      	movs	r2, #0
    44d0:	845a      	strh	r2, [r3, #34]	; 0x22
			}
		}
		
		TC4->COUNT8.INTFLAG.bit.MC0 = 1; //write 1 to clear
    44d2:	4a03      	ldr	r2, [pc, #12]	; (44e0 <TC4_Handler+0x104>)
    44d4:	7b93      	ldrb	r3, [r2, #14]
    44d6:	2110      	movs	r1, #16
    44d8:	430b      	orrs	r3, r1
    44da:	7393      	strb	r3, [r2, #14]
	}
}
    44dc:	4770      	bx	lr
    44de:	46c0      	nop			; (mov r8, r8)
    44e0:	42003000 	.word	0x42003000
    44e4:	20002080 	.word	0x20002080
    44e8:	20000088 	.word	0x20000088
    44ec:	ffff8000 	.word	0xffff8000
    44f0:	40001402 	.word	0x40001402
    44f4:	40001400 	.word	0x40001400
    44f8:	00000257 	.word	0x00000257

000044fc <TCC0_Handler>:

//fan PWM interrupt routine TCC0.2, 0-99 values
void TCC0_Handler()
{
    44fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    44fe:	46ce      	mov	lr, r9
    4500:	4647      	mov	r7, r8
    4502:	b580      	push	{r7, lr}
    4504:	b085      	sub	sp, #20
	if (TCC0->INTFLAG.bit.OVF == 1)
    4506:	4b70      	ldr	r3, [pc, #448]	; (46c8 <TCC0_Handler+0x1cc>)
    4508:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    450a:	07db      	lsls	r3, r3, #31
    450c:	d400      	bmi.n	4510 <TCC0_Handler+0x14>
    450e:	e098      	b.n	4642 <TCC0_Handler+0x146>
			}
			else REG_TCC0_CCB2=0; //set new pwm duty
		}*/
		
		//calculate motor PID PWM every second, after startup period and extra values calculating
		if(MOTOR_PID_CONTROL && !NIGHT_MODE && !MANUAL_MODE)
    4510:	4b6e      	ldr	r3, [pc, #440]	; (46cc <TCC0_Handler+0x1d0>)
    4512:	79db      	ldrb	r3, [r3, #7]
    4514:	2b00      	cmp	r3, #0
    4516:	d100      	bne.n	451a <TCC0_Handler+0x1e>
    4518:	e0b2      	b.n	4680 <TCC0_Handler+0x184>
    451a:	4b6d      	ldr	r3, [pc, #436]	; (46d0 <TCC0_Handler+0x1d4>)
    451c:	7e9b      	ldrb	r3, [r3, #26]
    451e:	2b00      	cmp	r3, #0
    4520:	d000      	beq.n	4524 <TCC0_Handler+0x28>
    4522:	e0b1      	b.n	4688 <TCC0_Handler+0x18c>
    4524:	4b6a      	ldr	r3, [pc, #424]	; (46d0 <TCC0_Handler+0x1d4>)
    4526:	7edb      	ldrb	r3, [r3, #27]
    4528:	2b00      	cmp	r3, #0
    452a:	d176      	bne.n	461a <TCC0_Handler+0x11e>
		{
			err_old=err;
    452c:	4b68      	ldr	r3, [pc, #416]	; (46d0 <TCC0_Handler+0x1d4>)
    452e:	4698      	mov	r8, r3
    4530:	6b19      	ldr	r1, [r3, #48]	; 0x30
    4532:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    4534:	9100      	str	r1, [sp, #0]
    4536:	9201      	str	r2, [sp, #4]
    4538:	6399      	str	r1, [r3, #56]	; 0x38
    453a:	63da      	str	r2, [r3, #60]	; 0x3c
			//add TVOC here
			current_cleaniness=PM1_0_FACTOR*pms7003.old_avg_PM1_0_CF1_short+PM2_5_FACTOR*pms7003.old_avg_PM2_5_CF1_short+
    453c:	4b65      	ldr	r3, [pc, #404]	; (46d4 <TCC0_Handler+0x1d8>)
    453e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
    4540:	6fd9      	ldr	r1, [r3, #124]	; 0x7c
    4542:	468c      	mov	ip, r1
    4544:	4462      	add	r2, ip
    4546:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    4548:	005b      	lsls	r3, r3, #1
    454a:	18d0      	adds	r0, r2, r3
			PM10_FACTOR*pms7003.old_avg_PM10_CF1_short+TVCO_FACTOR*TVCO;
    454c:	4b62      	ldr	r3, [pc, #392]	; (46d8 <TCC0_Handler+0x1dc>)
    454e:	4798      	blx	r3
    4550:	4b62      	ldr	r3, [pc, #392]	; (46dc <TCC0_Handler+0x1e0>)
    4552:	4699      	mov	r9, r3
    4554:	4b62      	ldr	r3, [pc, #392]	; (46e0 <TCC0_Handler+0x1e4>)
    4556:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    4558:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    455a:	47c8      	blx	r9
			current_cleaniness/=PM_FACTOR_total;
    455c:	4c5b      	ldr	r4, [pc, #364]	; (46cc <TCC0_Handler+0x1d0>)
    455e:	6922      	ldr	r2, [r4, #16]
    4560:	6963      	ldr	r3, [r4, #20]
    4562:	4d60      	ldr	r5, [pc, #384]	; (46e4 <TCC0_Handler+0x1e8>)
    4564:	47a8      	blx	r5
    4566:	4643      	mov	r3, r8
    4568:	6418      	str	r0, [r3, #64]	; 0x40
    456a:	6459      	str	r1, [r3, #68]	; 0x44
			
			//P value here
			err=round((double)current_cleaniness-(double)target_cleaniness);
    456c:	69a2      	ldr	r2, [r4, #24]
    456e:	69e3      	ldr	r3, [r4, #28]
    4570:	4c5d      	ldr	r4, [pc, #372]	; (46e8 <TCC0_Handler+0x1ec>)
    4572:	47a0      	blx	r4
    4574:	4b5d      	ldr	r3, [pc, #372]	; (46ec <TCC0_Handler+0x1f0>)
    4576:	4798      	blx	r3
    4578:	0004      	movs	r4, r0
    457a:	000d      	movs	r5, r1
    457c:	4643      	mov	r3, r8
    457e:	631c      	str	r4, [r3, #48]	; 0x30
    4580:	635d      	str	r5, [r3, #52]	; 0x34
			I_err+=err; //integral
    4582:	6c9a      	ldr	r2, [r3, #72]	; 0x48
    4584:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    4586:	47c8      	blx	r9
    4588:	9002      	str	r0, [sp, #8]
    458a:	9103      	str	r1, [sp, #12]
			if(I_err > I_err_max){
    458c:	2200      	movs	r2, #0
    458e:	4b58      	ldr	r3, [pc, #352]	; (46f0 <TCC0_Handler+0x1f4>)
    4590:	4e58      	ldr	r6, [pc, #352]	; (46f4 <TCC0_Handler+0x1f8>)
    4592:	47b0      	blx	r6
    4594:	2800      	cmp	r0, #0
    4596:	d059      	beq.n	464c <TCC0_Handler+0x150>
				I_err=I_err_max;
    4598:	2000      	movs	r0, #0
    459a:	4955      	ldr	r1, [pc, #340]	; (46f0 <TCC0_Handler+0x1f4>)
    459c:	4b4c      	ldr	r3, [pc, #304]	; (46d0 <TCC0_Handler+0x1d4>)
    459e:	6498      	str	r0, [r3, #72]	; 0x48
    45a0:	64d9      	str	r1, [r3, #76]	; 0x4c
			}
			else if(I_err < I_err_min){
				I_err=I_err_min;
			}
			P_err=err; //Proportional is directly the difference times P_val (bang bang value)
    45a2:	4b4b      	ldr	r3, [pc, #300]	; (46d0 <TCC0_Handler+0x1d4>)
    45a4:	4698      	mov	r8, r3
    45a6:	651c      	str	r4, [r3, #80]	; 0x50
    45a8:	655d      	str	r5, [r3, #84]	; 0x54
			D_err=err-err_old;
    45aa:	9a00      	ldr	r2, [sp, #0]
    45ac:	9b01      	ldr	r3, [sp, #4]
    45ae:	0020      	movs	r0, r4
    45b0:	0029      	movs	r1, r5
    45b2:	4e4d      	ldr	r6, [pc, #308]	; (46e8 <TCC0_Handler+0x1ec>)
    45b4:	47b0      	blx	r6
    45b6:	0006      	movs	r6, r0
    45b8:	000f      	movs	r7, r1
    45ba:	4643      	mov	r3, r8
    45bc:	659e      	str	r6, [r3, #88]	; 0x58
    45be:	65df      	str	r7, [r3, #92]	; 0x5c
			
			MOTOR_PID=(double)P_val*P_err+(double)I_val*I_err+(double)D_val*D_err;
    45c0:	4b4d      	ldr	r3, [pc, #308]	; (46f8 <TCC0_Handler+0x1fc>)
    45c2:	4699      	mov	r9, r3
    45c4:	4a4d      	ldr	r2, [pc, #308]	; (46fc <TCC0_Handler+0x200>)
    45c6:	4b4e      	ldr	r3, [pc, #312]	; (4700 <TCC0_Handler+0x204>)
    45c8:	4641      	mov	r1, r8
    45ca:	6c88      	ldr	r0, [r1, #72]	; 0x48
    45cc:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
    45ce:	47c8      	blx	r9
    45d0:	4b42      	ldr	r3, [pc, #264]	; (46dc <TCC0_Handler+0x1e0>)
    45d2:	4698      	mov	r8, r3
    45d4:	0022      	movs	r2, r4
    45d6:	002b      	movs	r3, r5
    45d8:	47c0      	blx	r8
    45da:	0004      	movs	r4, r0
    45dc:	000d      	movs	r5, r1
    45de:	4a47      	ldr	r2, [pc, #284]	; (46fc <TCC0_Handler+0x200>)
    45e0:	4b48      	ldr	r3, [pc, #288]	; (4704 <TCC0_Handler+0x208>)
    45e2:	0030      	movs	r0, r6
    45e4:	0039      	movs	r1, r7
    45e6:	47c8      	blx	r9
    45e8:	0002      	movs	r2, r0
    45ea:	000b      	movs	r3, r1
    45ec:	0020      	movs	r0, r4
    45ee:	0029      	movs	r1, r5
    45f0:	47c0      	blx	r8
    45f2:	0004      	movs	r4, r0
    45f4:	000d      	movs	r5, r1
			if(MOTOR_PID<0){
    45f6:	2200      	movs	r2, #0
    45f8:	2300      	movs	r3, #0
    45fa:	4e43      	ldr	r6, [pc, #268]	; (4708 <TCC0_Handler+0x20c>)
    45fc:	47b0      	blx	r6
    45fe:	2800      	cmp	r0, #0
    4600:	d138      	bne.n	4674 <TCC0_Handler+0x178>
			MOTOR_PID=(double)P_val*P_err+(double)I_val*I_err+(double)D_val*D_err;
    4602:	4b33      	ldr	r3, [pc, #204]	; (46d0 <TCC0_Handler+0x1d4>)
    4604:	661c      	str	r4, [r3, #96]	; 0x60
    4606:	665d      	str	r5, [r3, #100]	; 0x64
				MOTOR_PID=0;
			}
			FAN_PWM_VALUE=(uint16_t)round(MOTOR_PID);
    4608:	4b31      	ldr	r3, [pc, #196]	; (46d0 <TCC0_Handler+0x1d4>)
    460a:	6e18      	ldr	r0, [r3, #96]	; 0x60
    460c:	6e59      	ldr	r1, [r3, #100]	; 0x64
    460e:	4b37      	ldr	r3, [pc, #220]	; (46ec <TCC0_Handler+0x1f0>)
    4610:	4798      	blx	r3
    4612:	4b3e      	ldr	r3, [pc, #248]	; (470c <TCC0_Handler+0x210>)
    4614:	4798      	blx	r3
    4616:	4b32      	ldr	r3, [pc, #200]	; (46e0 <TCC0_Handler+0x1e4>)
    4618:	8658      	strh	r0, [r3, #50]	; 0x32
		if(NIGHT_MODE && !MANUAL_MODE && FAN_PWM_VALUE>FAN_PWM_VALUE_NIGHT_MAX)
		{
			FAN_PWM_VALUE=FAN_PWM_VALUE_NIGHT_MAX;
		}
		
		if(startup_running  ) //|| !extra_values_time
    461a:	4b2c      	ldr	r3, [pc, #176]	; (46cc <TCC0_Handler+0x1d0>)
    461c:	7a1b      	ldrb	r3, [r3, #8]
    461e:	2b00      	cmp	r3, #0
    4620:	d042      	beq.n	46a8 <TCC0_Handler+0x1ac>
		{
			FAN_PWM_VALUE=FAN_PWM_VALUE_STARTUP;
    4622:	220a      	movs	r2, #10
    4624:	4b2e      	ldr	r3, [pc, #184]	; (46e0 <TCC0_Handler+0x1e4>)
    4626:	865a      	strh	r2, [r3, #50]	; 0x32
		
		if(FAN_PWM_VALUE >FAN_PWM_MAX) FAN_PWM_VALUE=FAN_PWM_MAX; //clip max PWM
		if(FAN_PWM_VALUE >99) FAN_PWM_VALUE=99; //safeties
		if(FAN_PWM_VALUE <0) FAN_PWM_VALUE=0; //safeties
				
		REG_TCC0_CCB2=FAN_PWM_VALUE; //set new pwm duty
    4628:	4b2d      	ldr	r3, [pc, #180]	; (46e0 <TCC0_Handler+0x1e4>)
    462a:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
    462c:	4b38      	ldr	r3, [pc, #224]	; (4710 <TCC0_Handler+0x214>)
    462e:	601a      	str	r2, [r3, #0]
		//REG_TCC0_CCB2=0; //override
		while (TCC0->SYNCBUSY.bit.CCB2==1);
    4630:	4a25      	ldr	r2, [pc, #148]	; (46c8 <TCC0_Handler+0x1cc>)
    4632:	6893      	ldr	r3, [r2, #8]
    4634:	029b      	lsls	r3, r3, #10
    4636:	d4fc      	bmi.n	4632 <TCC0_Handler+0x136>
		TCC0->INTFLAG.bit.OVF = 1;
    4638:	4a23      	ldr	r2, [pc, #140]	; (46c8 <TCC0_Handler+0x1cc>)
    463a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
    463c:	2101      	movs	r1, #1
    463e:	430b      	orrs	r3, r1
    4640:	62d3      	str	r3, [r2, #44]	; 0x2c
	}
}
    4642:	b005      	add	sp, #20
    4644:	bc0c      	pop	{r2, r3}
    4646:	4690      	mov	r8, r2
    4648:	4699      	mov	r9, r3
    464a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			else if(I_err < I_err_min){
    464c:	2200      	movs	r2, #0
    464e:	4b31      	ldr	r3, [pc, #196]	; (4714 <TCC0_Handler+0x218>)
    4650:	9802      	ldr	r0, [sp, #8]
    4652:	9903      	ldr	r1, [sp, #12]
    4654:	4e2c      	ldr	r6, [pc, #176]	; (4708 <TCC0_Handler+0x20c>)
    4656:	47b0      	blx	r6
    4658:	2800      	cmp	r0, #0
    465a:	d105      	bne.n	4668 <TCC0_Handler+0x16c>
			I_err+=err; //integral
    465c:	4b1c      	ldr	r3, [pc, #112]	; (46d0 <TCC0_Handler+0x1d4>)
    465e:	9902      	ldr	r1, [sp, #8]
    4660:	9a03      	ldr	r2, [sp, #12]
    4662:	6499      	str	r1, [r3, #72]	; 0x48
    4664:	64da      	str	r2, [r3, #76]	; 0x4c
    4666:	e79c      	b.n	45a2 <TCC0_Handler+0xa6>
				I_err=I_err_min;
    4668:	2000      	movs	r0, #0
    466a:	492a      	ldr	r1, [pc, #168]	; (4714 <TCC0_Handler+0x218>)
    466c:	4b18      	ldr	r3, [pc, #96]	; (46d0 <TCC0_Handler+0x1d4>)
    466e:	6498      	str	r0, [r3, #72]	; 0x48
    4670:	64d9      	str	r1, [r3, #76]	; 0x4c
    4672:	e796      	b.n	45a2 <TCC0_Handler+0xa6>
				MOTOR_PID=0;
    4674:	2000      	movs	r0, #0
    4676:	2100      	movs	r1, #0
    4678:	4b15      	ldr	r3, [pc, #84]	; (46d0 <TCC0_Handler+0x1d4>)
    467a:	6618      	str	r0, [r3, #96]	; 0x60
    467c:	6659      	str	r1, [r3, #100]	; 0x64
    467e:	e7c3      	b.n	4608 <TCC0_Handler+0x10c>
		if(NIGHT_MODE && !MANUAL_MODE && FAN_PWM_VALUE>FAN_PWM_VALUE_NIGHT_MAX)
    4680:	4b13      	ldr	r3, [pc, #76]	; (46d0 <TCC0_Handler+0x1d4>)
    4682:	7e9b      	ldrb	r3, [r3, #26]
    4684:	2b00      	cmp	r3, #0
    4686:	d0c8      	beq.n	461a <TCC0_Handler+0x11e>
    4688:	4b11      	ldr	r3, [pc, #68]	; (46d0 <TCC0_Handler+0x1d4>)
    468a:	7edb      	ldrb	r3, [r3, #27]
    468c:	2b00      	cmp	r3, #0
    468e:	d1c4      	bne.n	461a <TCC0_Handler+0x11e>
    4690:	4b13      	ldr	r3, [pc, #76]	; (46e0 <TCC0_Handler+0x1e4>)
    4692:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    4694:	2b05      	cmp	r3, #5
    4696:	ddc0      	ble.n	461a <TCC0_Handler+0x11e>
			FAN_PWM_VALUE=FAN_PWM_VALUE_NIGHT_MAX;
    4698:	2205      	movs	r2, #5
    469a:	4b11      	ldr	r3, [pc, #68]	; (46e0 <TCC0_Handler+0x1e4>)
    469c:	865a      	strh	r2, [r3, #50]	; 0x32
		if(startup_running  ) //|| !extra_values_time
    469e:	4b0b      	ldr	r3, [pc, #44]	; (46cc <TCC0_Handler+0x1d0>)
    46a0:	7a1b      	ldrb	r3, [r3, #8]
    46a2:	2b00      	cmp	r3, #0
    46a4:	d1bd      	bne.n	4622 <TCC0_Handler+0x126>
    46a6:	e7bf      	b.n	4628 <TCC0_Handler+0x12c>
		if(FAN_PWM_VALUE >FAN_PWM_MAX) FAN_PWM_VALUE=FAN_PWM_MAX; //clip max PWM
    46a8:	4b0d      	ldr	r3, [pc, #52]	; (46e0 <TCC0_Handler+0x1e4>)
    46aa:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    46ac:	2b28      	cmp	r3, #40	; 0x28
    46ae:	dd03      	ble.n	46b8 <TCC0_Handler+0x1bc>
    46b0:	2228      	movs	r2, #40	; 0x28
    46b2:	4b0b      	ldr	r3, [pc, #44]	; (46e0 <TCC0_Handler+0x1e4>)
    46b4:	865a      	strh	r2, [r3, #50]	; 0x32
    46b6:	e7b7      	b.n	4628 <TCC0_Handler+0x12c>
		if(FAN_PWM_VALUE >99) FAN_PWM_VALUE=99; //safeties
    46b8:	4b09      	ldr	r3, [pc, #36]	; (46e0 <TCC0_Handler+0x1e4>)
    46ba:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    46bc:	2b63      	cmp	r3, #99	; 0x63
    46be:	ddb3      	ble.n	4628 <TCC0_Handler+0x12c>
    46c0:	2263      	movs	r2, #99	; 0x63
    46c2:	4b07      	ldr	r3, [pc, #28]	; (46e0 <TCC0_Handler+0x1e4>)
    46c4:	865a      	strh	r2, [r3, #50]	; 0x32
    46c6:	e7af      	b.n	4628 <TCC0_Handler+0x12c>
    46c8:	42002000 	.word	0x42002000
    46cc:	20000088 	.word	0x20000088
    46d0:	20002080 	.word	0x20002080
    46d4:	20000580 	.word	0x20000580
    46d8:	00008589 	.word	0x00008589
    46dc:	00006aa9 	.word	0x00006aa9
    46e0:	20001e00 	.word	0x20001e00
    46e4:	000070c9 	.word	0x000070c9
    46e8:	00007e31 	.word	0x00007e31
    46ec:	000049c9 	.word	0x000049c9
    46f0:	40490000 	.word	0x40490000
    46f4:	00005f89 	.word	0x00005f89
    46f8:	00007931 	.word	0x00007931
    46fc:	9999999a 	.word	0x9999999a
    4700:	3fc99999 	.word	0x3fc99999
    4704:	3fb99999 	.word	0x3fb99999
    4708:	00005f61 	.word	0x00005f61
    470c:	0000607d 	.word	0x0000607d
    4710:	42002078 	.word	0x42002078
    4714:	c0490000 	.word	0xc0490000

00004718 <TCC2_Handler>:

//LED PWM interrupt routine TCC2.0
void TCC2_Handler()
{
    4718:	b510      	push	{r4, lr}
	if (TCC2->INTFLAG.bit.OVF == 1)
    471a:	4b31      	ldr	r3, [pc, #196]	; (47e0 <TCC2_Handler+0xc8>)
    471c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    471e:	07db      	lsls	r3, r3, #31
    4720:	d52a      	bpl.n	4778 <TCC2_Handler+0x60>
	{
		if(startup_running){
    4722:	4b30      	ldr	r3, [pc, #192]	; (47e4 <TCC2_Handler+0xcc>)
    4724:	7a1b      	ldrb	r3, [r3, #8]
    4726:	2b00      	cmp	r3, #0
    4728:	d016      	beq.n	4758 <TCC2_Handler+0x40>
			if(LED_PWM_UPDOWN && REG_TCC2_CCB0<255){
    472a:	2320      	movs	r3, #32
    472c:	4a2d      	ldr	r2, [pc, #180]	; (47e4 <TCC2_Handler+0xcc>)
    472e:	5cd3      	ldrb	r3, [r2, r3]
    4730:	2b00      	cmp	r3, #0
    4732:	d003      	beq.n	473c <TCC2_Handler+0x24>
    4734:	4b2c      	ldr	r3, [pc, #176]	; (47e8 <TCC2_Handler+0xd0>)
    4736:	681b      	ldr	r3, [r3, #0]
    4738:	2bfe      	cmp	r3, #254	; 0xfe
    473a:	d931      	bls.n	47a0 <TCC2_Handler+0x88>
				REG_TCC2_CCB0++; //set new pwm duty
			}
			else if(LED_PWM_UPDOWN && REG_TCC2_CCB0==255)
    473c:	2320      	movs	r3, #32
    473e:	4a29      	ldr	r2, [pc, #164]	; (47e4 <TCC2_Handler+0xcc>)
    4740:	5cd3      	ldrb	r3, [r2, r3]
    4742:	2b00      	cmp	r3, #0
    4744:	d030      	beq.n	47a8 <TCC2_Handler+0x90>
    4746:	4b28      	ldr	r3, [pc, #160]	; (47e8 <TCC2_Handler+0xd0>)
    4748:	681b      	ldr	r3, [r3, #0]
    474a:	2bff      	cmp	r3, #255	; 0xff
    474c:	d12c      	bne.n	47a8 <TCC2_Handler+0x90>
			{
				LED_PWM_UPDOWN=false;
    474e:	2100      	movs	r1, #0
    4750:	2320      	movs	r3, #32
    4752:	4a24      	ldr	r2, [pc, #144]	; (47e4 <TCC2_Handler+0xcc>)
    4754:	54d1      	strb	r1, [r2, r3]
    4756:	e027      	b.n	47a8 <TCC2_Handler+0x90>
			else if(!LED_PWM_UPDOWN && REG_TCC2_CCB0<=15)
			{
				LED_PWM_UPDOWN=true;
			}
		}
		else if (NIGHT_MODE)
    4758:	4b24      	ldr	r3, [pc, #144]	; (47ec <TCC2_Handler+0xd4>)
    475a:	7e9b      	ldrb	r3, [r3, #26]
    475c:	2b00      	cmp	r3, #0
    475e:	d00c      	beq.n	477a <TCC2_Handler+0x62>
		{
			REG_TCC2_CCB0=0;
    4760:	2200      	movs	r2, #0
    4762:	4b21      	ldr	r3, [pc, #132]	; (47e8 <TCC2_Handler+0xd0>)
    4764:	601a      	str	r2, [r3, #0]
		else
		{
			REG_TCC2_CCB0=ceil((double)FAN_PWM_VALUE*256/100); //calculate led pwm value based on PID RPM's
		}
		
		while (TCC2->SYNCBUSY.bit.CCB0==1);
    4766:	4a1e      	ldr	r2, [pc, #120]	; (47e0 <TCC2_Handler+0xc8>)
    4768:	6893      	ldr	r3, [r2, #8]
    476a:	031b      	lsls	r3, r3, #12
    476c:	d4fc      	bmi.n	4768 <TCC2_Handler+0x50>
		TCC2->INTFLAG.bit.OVF = 1;
    476e:	4a1c      	ldr	r2, [pc, #112]	; (47e0 <TCC2_Handler+0xc8>)
    4770:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
    4772:	2101      	movs	r1, #1
    4774:	430b      	orrs	r3, r1
    4776:	62d3      	str	r3, [r2, #44]	; 0x2c
	}
}
    4778:	bd10      	pop	{r4, pc}
			REG_TCC2_CCB0=ceil((double)FAN_PWM_VALUE*256/100); //calculate led pwm value based on PID RPM's
    477a:	4b1d      	ldr	r3, [pc, #116]	; (47f0 <TCC2_Handler+0xd8>)
    477c:	8e58      	ldrh	r0, [r3, #50]	; 0x32
    477e:	4b1d      	ldr	r3, [pc, #116]	; (47f4 <TCC2_Handler+0xdc>)
    4780:	4798      	blx	r3
    4782:	2200      	movs	r2, #0
    4784:	4b1c      	ldr	r3, [pc, #112]	; (47f8 <TCC2_Handler+0xe0>)
    4786:	4c1d      	ldr	r4, [pc, #116]	; (47fc <TCC2_Handler+0xe4>)
    4788:	47a0      	blx	r4
    478a:	2200      	movs	r2, #0
    478c:	4b1c      	ldr	r3, [pc, #112]	; (4800 <TCC2_Handler+0xe8>)
    478e:	4c1d      	ldr	r4, [pc, #116]	; (4804 <TCC2_Handler+0xec>)
    4790:	47a0      	blx	r4
    4792:	4b1d      	ldr	r3, [pc, #116]	; (4808 <TCC2_Handler+0xf0>)
    4794:	4798      	blx	r3
    4796:	4b1d      	ldr	r3, [pc, #116]	; (480c <TCC2_Handler+0xf4>)
    4798:	4798      	blx	r3
    479a:	4b13      	ldr	r3, [pc, #76]	; (47e8 <TCC2_Handler+0xd0>)
    479c:	6018      	str	r0, [r3, #0]
    479e:	e7e2      	b.n	4766 <TCC2_Handler+0x4e>
				REG_TCC2_CCB0++; //set new pwm duty
    47a0:	4a11      	ldr	r2, [pc, #68]	; (47e8 <TCC2_Handler+0xd0>)
    47a2:	6813      	ldr	r3, [r2, #0]
    47a4:	3301      	adds	r3, #1
    47a6:	6013      	str	r3, [r2, #0]
			if(!LED_PWM_UPDOWN && REG_TCC2_CCB0>15){
    47a8:	2320      	movs	r3, #32
    47aa:	4a0e      	ldr	r2, [pc, #56]	; (47e4 <TCC2_Handler+0xcc>)
    47ac:	5cd3      	ldrb	r3, [r2, r3]
    47ae:	2b00      	cmp	r3, #0
    47b0:	d103      	bne.n	47ba <TCC2_Handler+0xa2>
    47b2:	4b0d      	ldr	r3, [pc, #52]	; (47e8 <TCC2_Handler+0xd0>)
    47b4:	681b      	ldr	r3, [r3, #0]
    47b6:	2b0f      	cmp	r3, #15
    47b8:	d80d      	bhi.n	47d6 <TCC2_Handler+0xbe>
			else if(!LED_PWM_UPDOWN && REG_TCC2_CCB0<=15)
    47ba:	2320      	movs	r3, #32
    47bc:	4a09      	ldr	r2, [pc, #36]	; (47e4 <TCC2_Handler+0xcc>)
    47be:	5cd3      	ldrb	r3, [r2, r3]
    47c0:	2b00      	cmp	r3, #0
    47c2:	d1d0      	bne.n	4766 <TCC2_Handler+0x4e>
    47c4:	4b08      	ldr	r3, [pc, #32]	; (47e8 <TCC2_Handler+0xd0>)
    47c6:	681b      	ldr	r3, [r3, #0]
    47c8:	2b0f      	cmp	r3, #15
    47ca:	d8cc      	bhi.n	4766 <TCC2_Handler+0x4e>
				LED_PWM_UPDOWN=true;
    47cc:	2101      	movs	r1, #1
    47ce:	2320      	movs	r3, #32
    47d0:	4a04      	ldr	r2, [pc, #16]	; (47e4 <TCC2_Handler+0xcc>)
    47d2:	54d1      	strb	r1, [r2, r3]
    47d4:	e7c7      	b.n	4766 <TCC2_Handler+0x4e>
				REG_TCC2_CCB0--; //set new pwm duty
    47d6:	4a04      	ldr	r2, [pc, #16]	; (47e8 <TCC2_Handler+0xd0>)
    47d8:	6813      	ldr	r3, [r2, #0]
    47da:	3b01      	subs	r3, #1
    47dc:	6013      	str	r3, [r2, #0]
    47de:	e7c2      	b.n	4766 <TCC2_Handler+0x4e>
    47e0:	42002800 	.word	0x42002800
    47e4:	20000088 	.word	0x20000088
    47e8:	42002870 	.word	0x42002870
    47ec:	20002080 	.word	0x20002080
    47f0:	20001e00 	.word	0x20001e00
    47f4:	00008589 	.word	0x00008589
    47f8:	40700000 	.word	0x40700000
    47fc:	00007931 	.word	0x00007931
    4800:	40590000 	.word	0x40590000
    4804:	000070c9 	.word	0x000070c9
    4808:	0000489d 	.word	0x0000489d
    480c:	0000607d 	.word	0x0000607d

00004810 <EIC_Handler>:


//external interrupt handler all interrupts in here, pb03=extint3,pb22=extint6
void EIC_Handler()
{
	if (EIC->INTFLAG.bit.EXTINT6 && EIC->INTENSET.bit.EXTINT6){
    4810:	4b12      	ldr	r3, [pc, #72]	; (485c <EIC_Handler+0x4c>)
    4812:	691b      	ldr	r3, [r3, #16]
    4814:	065b      	lsls	r3, r3, #25
    4816:	d50a      	bpl.n	482e <EIC_Handler+0x1e>
    4818:	4b10      	ldr	r3, [pc, #64]	; (485c <EIC_Handler+0x4c>)
    481a:	68db      	ldr	r3, [r3, #12]
    481c:	065b      	lsls	r3, r3, #25
    481e:	d506      	bpl.n	482e <EIC_Handler+0x1e>
		motor_ping++; //div by 3 to get actual Rounds per x
    4820:	4a0f      	ldr	r2, [pc, #60]	; (4860 <EIC_Handler+0x50>)
    4822:	6b53      	ldr	r3, [r2, #52]	; 0x34
    4824:	3301      	adds	r3, #1
    4826:	6353      	str	r3, [r2, #52]	; 0x34
		EIC->INTFLAG.reg = EIC_INTFLAG_EXTINT6;     
    4828:	2240      	movs	r2, #64	; 0x40
    482a:	4b0c      	ldr	r3, [pc, #48]	; (485c <EIC_Handler+0x4c>)
    482c:	611a      	str	r2, [r3, #16]
	}

	if (EIC->INTFLAG.bit.EXTINT13 && EIC->INTENSET.bit.EXTINT13){
    482e:	4b0b      	ldr	r3, [pc, #44]	; (485c <EIC_Handler+0x4c>)
    4830:	691b      	ldr	r3, [r3, #16]
    4832:	049b      	lsls	r3, r3, #18
    4834:	d510      	bpl.n	4858 <EIC_Handler+0x48>
    4836:	4b09      	ldr	r3, [pc, #36]	; (485c <EIC_Handler+0x4c>)
    4838:	68db      	ldr	r3, [r3, #12]
    483a:	049b      	lsls	r3, r3, #18
    483c:	d50c      	bpl.n	4858 <EIC_Handler+0x48>
		if(gde027w3.update_inprogress) {
    483e:	4b09      	ldr	r3, [pc, #36]	; (4864 <EIC_Handler+0x54>)
    4840:	3350      	adds	r3, #80	; 0x50
    4842:	7a5b      	ldrb	r3, [r3, #9]
    4844:	2b00      	cmp	r3, #0
    4846:	d003      	beq.n	4850 <EIC_Handler+0x40>
			gde027w3.update_inprogress=false; 
    4848:	2200      	movs	r2, #0
    484a:	4b06      	ldr	r3, [pc, #24]	; (4864 <EIC_Handler+0x54>)
    484c:	3350      	adds	r3, #80	; 0x50
    484e:	725a      	strb	r2, [r3, #9]
		}
		EIC->INTFLAG.reg = EIC_INTFLAG_EXTINT13;     
    4850:	2280      	movs	r2, #128	; 0x80
    4852:	0192      	lsls	r2, r2, #6
    4854:	4b01      	ldr	r3, [pc, #4]	; (485c <EIC_Handler+0x4c>)
    4856:	611a      	str	r2, [r3, #16]
	}


} 
    4858:	4770      	bx	lr
    485a:	46c0      	nop			; (mov r8, r8)
    485c:	40001800 	.word	0x40001800
    4860:	20001e00 	.word	0x20001e00
    4864:	20000680 	.word	0x20000680

00004868 <SERCOM0_Handler>:



void SERCOM0_Handler() //i2c
{
}
    4868:	4770      	bx	lr
	...

0000486c <_GLOBAL__sub_I_PM_FACTOR_total>:
    486c:	b510      	push	{r4, lr}
float BesselLowpassSecondOrder004_buffer_PM10[LPF_FIR_BUFFER_LENGTH];




struct PMS7003_framestruct {
    486e:	2203      	movs	r2, #3
    4870:	4906      	ldr	r1, [pc, #24]	; (488c <_GLOBAL__sub_I_PM_FACTOR_total+0x20>)
    4872:	3158      	adds	r1, #88	; 0x58
    4874:	4806      	ldr	r0, [pc, #24]	; (4890 <_GLOBAL__sub_I_PM_FACTOR_total+0x24>)
    4876:	3065      	adds	r0, #101	; 0x65
    4878:	4b06      	ldr	r3, [pc, #24]	; (4894 <_GLOBAL__sub_I_PM_FACTOR_total+0x28>)
    487a:	4798      	blx	r3
GDEW027W3::GDEW027W3() 
    487c:	4b06      	ldr	r3, [pc, #24]	; (4898 <_GLOBAL__sub_I_PM_FACTOR_total+0x2c>)
    487e:	2200      	movs	r2, #0
    4880:	651a      	str	r2, [r3, #80]	; 0x50
    4882:	655a      	str	r2, [r3, #84]	; 0x54
    4884:	3350      	adds	r3, #80	; 0x50
    4886:	725a      	strb	r2, [r3, #9]
    4888:	bd10      	pop	{r4, pc}
    488a:	46c0      	nop			; (mov r8, r8)
    488c:	0000f6c0 	.word	0x0000f6c0
    4890:	20000500 	.word	0x20000500
    4894:	00008bd5 	.word	0x00008bd5
    4898:	20000680 	.word	0x20000680

0000489c <ceil>:
    489c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    489e:	4657      	mov	r7, sl
    48a0:	464e      	mov	r6, r9
    48a2:	4645      	mov	r5, r8
    48a4:	46de      	mov	lr, fp
    48a6:	004b      	lsls	r3, r1, #1
    48a8:	4a41      	ldr	r2, [pc, #260]	; (49b0 <ceil+0x114>)
    48aa:	0d5b      	lsrs	r3, r3, #21
    48ac:	b5e0      	push	{r5, r6, r7, lr}
    48ae:	189f      	adds	r7, r3, r2
    48b0:	0005      	movs	r5, r0
    48b2:	000c      	movs	r4, r1
    48b4:	4680      	mov	r8, r0
    48b6:	000e      	movs	r6, r1
    48b8:	4689      	mov	r9, r1
    48ba:	4682      	mov	sl, r0
    48bc:	2f13      	cmp	r7, #19
    48be:	dc26      	bgt.n	490e <ceil+0x72>
    48c0:	2f00      	cmp	r7, #0
    48c2:	db56      	blt.n	4972 <ceil+0xd6>
    48c4:	4b3b      	ldr	r3, [pc, #236]	; (49b4 <ceil+0x118>)
    48c6:	413b      	asrs	r3, r7
    48c8:	4698      	mov	r8, r3
    48ca:	000b      	movs	r3, r1
    48cc:	4642      	mov	r2, r8
    48ce:	4013      	ands	r3, r2
    48d0:	4303      	orrs	r3, r0
    48d2:	d016      	beq.n	4902 <ceil+0x66>
    48d4:	4a38      	ldr	r2, [pc, #224]	; (49b8 <ceil+0x11c>)
    48d6:	4b39      	ldr	r3, [pc, #228]	; (49bc <ceil+0x120>)
    48d8:	f002 f8e6 	bl	6aa8 <__aeabi_dadd>
    48dc:	2200      	movs	r2, #0
    48de:	2300      	movs	r3, #0
    48e0:	f001 fb52 	bl	5f88 <__aeabi_dcmpgt>
    48e4:	2800      	cmp	r0, #0
    48e6:	d00a      	beq.n	48fe <ceil+0x62>
    48e8:	2c00      	cmp	r4, #0
    48ea:	dd03      	ble.n	48f4 <ceil+0x58>
    48ec:	2380      	movs	r3, #128	; 0x80
    48ee:	035b      	lsls	r3, r3, #13
    48f0:	413b      	asrs	r3, r7
    48f2:	4499      	add	r9, r3
    48f4:	4643      	mov	r3, r8
    48f6:	464e      	mov	r6, r9
    48f8:	439e      	bics	r6, r3
    48fa:	2300      	movs	r3, #0
    48fc:	469a      	mov	sl, r3
    48fe:	4650      	mov	r0, sl
    4900:	0031      	movs	r1, r6
    4902:	bc3c      	pop	{r2, r3, r4, r5}
    4904:	4690      	mov	r8, r2
    4906:	4699      	mov	r9, r3
    4908:	46a2      	mov	sl, r4
    490a:	46ab      	mov	fp, r5
    490c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    490e:	2f33      	cmp	r7, #51	; 0x33
    4910:	dd08      	ble.n	4924 <ceil+0x88>
    4912:	2380      	movs	r3, #128	; 0x80
    4914:	00db      	lsls	r3, r3, #3
    4916:	429f      	cmp	r7, r3
    4918:	d1f3      	bne.n	4902 <ceil+0x66>
    491a:	0002      	movs	r2, r0
    491c:	000b      	movs	r3, r1
    491e:	f002 f8c3 	bl	6aa8 <__aeabi_dadd>
    4922:	e7ee      	b.n	4902 <ceil+0x66>
    4924:	4a26      	ldr	r2, [pc, #152]	; (49c0 <ceil+0x124>)
    4926:	4694      	mov	ip, r2
    4928:	2201      	movs	r2, #1
    492a:	4463      	add	r3, ip
    492c:	4252      	negs	r2, r2
    492e:	40da      	lsrs	r2, r3
    4930:	4693      	mov	fp, r2
    4932:	4202      	tst	r2, r0
    4934:	d0e5      	beq.n	4902 <ceil+0x66>
    4936:	4a20      	ldr	r2, [pc, #128]	; (49b8 <ceil+0x11c>)
    4938:	4b20      	ldr	r3, [pc, #128]	; (49bc <ceil+0x120>)
    493a:	f002 f8b5 	bl	6aa8 <__aeabi_dadd>
    493e:	2200      	movs	r2, #0
    4940:	2300      	movs	r3, #0
    4942:	f001 fb21 	bl	5f88 <__aeabi_dcmpgt>
    4946:	2800      	cmp	r0, #0
    4948:	d0d9      	beq.n	48fe <ceil+0x62>
    494a:	2c00      	cmp	r4, #0
    494c:	dd28      	ble.n	49a0 <ceil+0x104>
    494e:	2f14      	cmp	r7, #20
    4950:	d023      	beq.n	499a <ceil+0xfe>
    4952:	2334      	movs	r3, #52	; 0x34
    4954:	1bdb      	subs	r3, r3, r7
    4956:	2701      	movs	r7, #1
    4958:	409f      	lsls	r7, r3
    495a:	197f      	adds	r7, r7, r5
    495c:	42af      	cmp	r7, r5
    495e:	419b      	sbcs	r3, r3
    4960:	425b      	negs	r3, r3
    4962:	4499      	add	r9, r3
    4964:	465b      	mov	r3, fp
    4966:	439f      	bics	r7, r3
    4968:	464e      	mov	r6, r9
    496a:	46ba      	mov	sl, r7
    496c:	0031      	movs	r1, r6
    496e:	4650      	mov	r0, sl
    4970:	e7c7      	b.n	4902 <ceil+0x66>
    4972:	4a11      	ldr	r2, [pc, #68]	; (49b8 <ceil+0x11c>)
    4974:	4b11      	ldr	r3, [pc, #68]	; (49bc <ceil+0x120>)
    4976:	f002 f897 	bl	6aa8 <__aeabi_dadd>
    497a:	2200      	movs	r2, #0
    497c:	2300      	movs	r3, #0
    497e:	f001 fb03 	bl	5f88 <__aeabi_dcmpgt>
    4982:	2800      	cmp	r0, #0
    4984:	d0bb      	beq.n	48fe <ceil+0x62>
    4986:	2c00      	cmp	r4, #0
    4988:	db0c      	blt.n	49a4 <ceil+0x108>
    498a:	2300      	movs	r3, #0
    498c:	432c      	orrs	r4, r5
    498e:	469a      	mov	sl, r3
    4990:	2600      	movs	r6, #0
    4992:	2c00      	cmp	r4, #0
    4994:	d0b3      	beq.n	48fe <ceil+0x62>
    4996:	4e0b      	ldr	r6, [pc, #44]	; (49c4 <ceil+0x128>)
    4998:	e7b1      	b.n	48fe <ceil+0x62>
    499a:	2301      	movs	r3, #1
    499c:	469c      	mov	ip, r3
    499e:	44e1      	add	r9, ip
    49a0:	4647      	mov	r7, r8
    49a2:	e7df      	b.n	4964 <ceil+0xc8>
    49a4:	2300      	movs	r3, #0
    49a6:	2680      	movs	r6, #128	; 0x80
    49a8:	469a      	mov	sl, r3
    49aa:	0636      	lsls	r6, r6, #24
    49ac:	e7a7      	b.n	48fe <ceil+0x62>
    49ae:	46c0      	nop			; (mov r8, r8)
    49b0:	fffffc01 	.word	0xfffffc01
    49b4:	000fffff 	.word	0x000fffff
    49b8:	8800759c 	.word	0x8800759c
    49bc:	7e37e43c 	.word	0x7e37e43c
    49c0:	fffffbed 	.word	0xfffffbed
    49c4:	3ff00000 	.word	0x3ff00000

000049c8 <round>:
    49c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    49ca:	4a26      	ldr	r2, [pc, #152]	; (4a64 <round+0x9c>)
    49cc:	004b      	lsls	r3, r1, #1
    49ce:	0d5b      	lsrs	r3, r3, #21
    49d0:	189a      	adds	r2, r3, r2
    49d2:	0007      	movs	r7, r0
    49d4:	000c      	movs	r4, r1
    49d6:	2a13      	cmp	r2, #19
    49d8:	dc10      	bgt.n	49fc <round+0x34>
    49da:	2a00      	cmp	r2, #0
    49dc:	db39      	blt.n	4a52 <round+0x8a>
    49de:	4b22      	ldr	r3, [pc, #136]	; (4a68 <round+0xa0>)
    49e0:	4113      	asrs	r3, r2
    49e2:	420b      	tst	r3, r1
    49e4:	d030      	beq.n	4a48 <round+0x80>
    49e6:	2480      	movs	r4, #128	; 0x80
    49e8:	0324      	lsls	r4, r4, #12
    49ea:	4114      	asrs	r4, r2
    49ec:	2000      	movs	r0, #0
    49ee:	1864      	adds	r4, r4, r1
    49f0:	439c      	bics	r4, r3
    49f2:	0006      	movs	r6, r0
    49f4:	0025      	movs	r5, r4
    49f6:	0030      	movs	r0, r6
    49f8:	0029      	movs	r1, r5
    49fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    49fc:	2a33      	cmp	r2, #51	; 0x33
    49fe:	dd0c      	ble.n	4a1a <round+0x52>
    4a00:	2380      	movs	r3, #128	; 0x80
    4a02:	0006      	movs	r6, r0
    4a04:	00db      	lsls	r3, r3, #3
    4a06:	000d      	movs	r5, r1
    4a08:	429a      	cmp	r2, r3
    4a0a:	d1f4      	bne.n	49f6 <round+0x2e>
    4a0c:	0002      	movs	r2, r0
    4a0e:	000b      	movs	r3, r1
    4a10:	f002 f84a 	bl	6aa8 <__aeabi_dadd>
    4a14:	0006      	movs	r6, r0
    4a16:	000d      	movs	r5, r1
    4a18:	e7ed      	b.n	49f6 <round+0x2e>
    4a1a:	4d14      	ldr	r5, [pc, #80]	; (4a6c <round+0xa4>)
    4a1c:	0006      	movs	r6, r0
    4a1e:	46ac      	mov	ip, r5
    4a20:	2501      	movs	r5, #1
    4a22:	4463      	add	r3, ip
    4a24:	426d      	negs	r5, r5
    4a26:	40dd      	lsrs	r5, r3
    4a28:	46ac      	mov	ip, r5
    4a2a:	4663      	mov	r3, ip
    4a2c:	000d      	movs	r5, r1
    4a2e:	4203      	tst	r3, r0
    4a30:	d0e1      	beq.n	49f6 <round+0x2e>
    4a32:	2333      	movs	r3, #51	; 0x33
    4a34:	1a9a      	subs	r2, r3, r2
    4a36:	3b32      	subs	r3, #50	; 0x32
    4a38:	4093      	lsls	r3, r2
    4a3a:	1818      	adds	r0, r3, r0
    4a3c:	4287      	cmp	r7, r0
    4a3e:	d900      	bls.n	4a42 <round+0x7a>
    4a40:	1c4c      	adds	r4, r1, #1
    4a42:	4663      	mov	r3, ip
    4a44:	4398      	bics	r0, r3
    4a46:	e7d4      	b.n	49f2 <round+0x2a>
    4a48:	0006      	movs	r6, r0
    4a4a:	000d      	movs	r5, r1
    4a4c:	2800      	cmp	r0, #0
    4a4e:	d1ca      	bne.n	49e6 <round+0x1e>
    4a50:	e7d1      	b.n	49f6 <round+0x2e>
    4a52:	0fc9      	lsrs	r1, r1, #31
    4a54:	07cc      	lsls	r4, r1, #31
    4a56:	2000      	movs	r0, #0
    4a58:	1c53      	adds	r3, r2, #1
    4a5a:	d1ca      	bne.n	49f2 <round+0x2a>
    4a5c:	4b04      	ldr	r3, [pc, #16]	; (4a70 <round+0xa8>)
    4a5e:	431c      	orrs	r4, r3
    4a60:	e7c7      	b.n	49f2 <round+0x2a>
    4a62:	46c0      	nop			; (mov r8, r8)
    4a64:	fffffc01 	.word	0xfffffc01
    4a68:	000fffff 	.word	0x000fffff
    4a6c:	fffffbed 	.word	0xfffffbed
    4a70:	3ff00000 	.word	0x3ff00000

00004a74 <pow>:
    4a74:	b5f0      	push	{r4, r5, r6, r7, lr}
    4a76:	4657      	mov	r7, sl
    4a78:	464e      	mov	r6, r9
    4a7a:	46de      	mov	lr, fp
    4a7c:	4645      	mov	r5, r8
    4a7e:	b5e0      	push	{r5, r6, r7, lr}
    4a80:	b08f      	sub	sp, #60	; 0x3c
    4a82:	001d      	movs	r5, r3
    4a84:	0006      	movs	r6, r0
    4a86:	000f      	movs	r7, r1
    4a88:	0014      	movs	r4, r2
    4a8a:	f000 f99f 	bl	4dcc <__ieee754_pow>
    4a8e:	4bc7      	ldr	r3, [pc, #796]	; (4dac <pow+0x338>)
    4a90:	9000      	str	r0, [sp, #0]
    4a92:	9101      	str	r1, [sp, #4]
    4a94:	469a      	mov	sl, r3
    4a96:	781b      	ldrb	r3, [r3, #0]
    4a98:	b25b      	sxtb	r3, r3
    4a9a:	4699      	mov	r9, r3
    4a9c:	3301      	adds	r3, #1
    4a9e:	d03e      	beq.n	4b1e <pow+0xaa>
    4aa0:	0022      	movs	r2, r4
    4aa2:	002b      	movs	r3, r5
    4aa4:	0020      	movs	r0, r4
    4aa6:	0029      	movs	r1, r5
    4aa8:	f003 fcd8 	bl	845c <__aeabi_dcmpun>
    4aac:	4683      	mov	fp, r0
    4aae:	2800      	cmp	r0, #0
    4ab0:	d135      	bne.n	4b1e <pow+0xaa>
    4ab2:	0032      	movs	r2, r6
    4ab4:	003b      	movs	r3, r7
    4ab6:	0030      	movs	r0, r6
    4ab8:	0039      	movs	r1, r7
    4aba:	f003 fccf 	bl	845c <__aeabi_dcmpun>
    4abe:	2200      	movs	r2, #0
    4ac0:	9003      	str	r0, [sp, #12]
    4ac2:	2800      	cmp	r0, #0
    4ac4:	d000      	beq.n	4ac8 <pow+0x54>
    4ac6:	e0b6      	b.n	4c36 <pow+0x1c2>
    4ac8:	2300      	movs	r3, #0
    4aca:	0030      	movs	r0, r6
    4acc:	0039      	movs	r1, r7
    4ace:	f001 fa41 	bl	5f54 <__aeabi_dcmpeq>
    4ad2:	2800      	cmp	r0, #0
    4ad4:	d02c      	beq.n	4b30 <pow+0xbc>
    4ad6:	2200      	movs	r2, #0
    4ad8:	2300      	movs	r3, #0
    4ada:	0020      	movs	r0, r4
    4adc:	0029      	movs	r1, r5
    4ade:	f001 fa39 	bl	5f54 <__aeabi_dcmpeq>
    4ae2:	4683      	mov	fp, r0
    4ae4:	2800      	cmp	r0, #0
    4ae6:	d100      	bne.n	4aea <pow+0x76>
    4ae8:	e077      	b.n	4bda <pow+0x166>
    4aea:	ab04      	add	r3, sp, #16
    4aec:	4698      	mov	r8, r3
    4aee:	2301      	movs	r3, #1
    4af0:	4642      	mov	r2, r8
    4af2:	9304      	str	r3, [sp, #16]
    4af4:	4bae      	ldr	r3, [pc, #696]	; (4db0 <pow+0x33c>)
    4af6:	6053      	str	r3, [r2, #4]
    4af8:	4643      	mov	r3, r8
    4afa:	9a03      	ldr	r2, [sp, #12]
    4afc:	611c      	str	r4, [r3, #16]
    4afe:	615d      	str	r5, [r3, #20]
    4b00:	621a      	str	r2, [r3, #32]
    4b02:	609e      	str	r6, [r3, #8]
    4b04:	60df      	str	r7, [r3, #12]
    4b06:	4642      	mov	r2, r8
    4b08:	2300      	movs	r3, #0
    4b0a:	2400      	movs	r4, #0
    4b0c:	6193      	str	r3, [r2, #24]
    4b0e:	61d4      	str	r4, [r2, #28]
    4b10:	464b      	mov	r3, r9
    4b12:	2b00      	cmp	r3, #0
    4b14:	d04d      	beq.n	4bb2 <pow+0x13e>
    4b16:	2300      	movs	r3, #0
    4b18:	4ca6      	ldr	r4, [pc, #664]	; (4db4 <pow+0x340>)
    4b1a:	9300      	str	r3, [sp, #0]
    4b1c:	9401      	str	r4, [sp, #4]
    4b1e:	9800      	ldr	r0, [sp, #0]
    4b20:	9901      	ldr	r1, [sp, #4]
    4b22:	b00f      	add	sp, #60	; 0x3c
    4b24:	bc3c      	pop	{r2, r3, r4, r5}
    4b26:	4690      	mov	r8, r2
    4b28:	4699      	mov	r9, r3
    4b2a:	46a2      	mov	sl, r4
    4b2c:	46ab      	mov	fp, r5
    4b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4b30:	9800      	ldr	r0, [sp, #0]
    4b32:	9901      	ldr	r1, [sp, #4]
    4b34:	f000 ff64 	bl	5a00 <finite>
    4b38:	4681      	mov	r9, r0
    4b3a:	2800      	cmp	r0, #0
    4b3c:	d100      	bne.n	4b40 <pow+0xcc>
    4b3e:	e09b      	b.n	4c78 <pow+0x204>
    4b40:	9800      	ldr	r0, [sp, #0]
    4b42:	9901      	ldr	r1, [sp, #4]
    4b44:	2200      	movs	r2, #0
    4b46:	2300      	movs	r3, #0
    4b48:	f001 fa04 	bl	5f54 <__aeabi_dcmpeq>
    4b4c:	2800      	cmp	r0, #0
    4b4e:	d0e6      	beq.n	4b1e <pow+0xaa>
    4b50:	0030      	movs	r0, r6
    4b52:	0039      	movs	r1, r7
    4b54:	f000 ff54 	bl	5a00 <finite>
    4b58:	2800      	cmp	r0, #0
    4b5a:	d0e0      	beq.n	4b1e <pow+0xaa>
    4b5c:	0020      	movs	r0, r4
    4b5e:	0029      	movs	r1, r5
    4b60:	f000 ff4e 	bl	5a00 <finite>
    4b64:	2800      	cmp	r0, #0
    4b66:	d0da      	beq.n	4b1e <pow+0xaa>
    4b68:	ab04      	add	r3, sp, #16
    4b6a:	4698      	mov	r8, r3
    4b6c:	2304      	movs	r3, #4
    4b6e:	4642      	mov	r2, r8
    4b70:	9304      	str	r3, [sp, #16]
    4b72:	4b8f      	ldr	r3, [pc, #572]	; (4db0 <pow+0x33c>)
    4b74:	6114      	str	r4, [r2, #16]
    4b76:	6155      	str	r5, [r2, #20]
    4b78:	6053      	str	r3, [r2, #4]
    4b7a:	2300      	movs	r3, #0
    4b7c:	2400      	movs	r4, #0
    4b7e:	6213      	str	r3, [r2, #32]
    4b80:	2300      	movs	r3, #0
    4b82:	6193      	str	r3, [r2, #24]
    4b84:	61d4      	str	r4, [r2, #28]
    4b86:	4653      	mov	r3, sl
    4b88:	781b      	ldrb	r3, [r3, #0]
    4b8a:	6096      	str	r6, [r2, #8]
    4b8c:	60d7      	str	r7, [r2, #12]
    4b8e:	b25b      	sxtb	r3, r3
    4b90:	2b02      	cmp	r3, #2
    4b92:	d004      	beq.n	4b9e <pow+0x12a>
    4b94:	4640      	mov	r0, r8
    4b96:	f000 ff3d 	bl	5a14 <matherr>
    4b9a:	2800      	cmp	r0, #0
    4b9c:	d10e      	bne.n	4bbc <pow+0x148>
    4b9e:	f003 ffef 	bl	8b80 <__errno>
    4ba2:	2322      	movs	r3, #34	; 0x22
    4ba4:	6003      	str	r3, [r0, #0]
    4ba6:	e009      	b.n	4bbc <pow+0x148>
    4ba8:	4642      	mov	r2, r8
    4baa:	2300      	movs	r3, #0
    4bac:	2400      	movs	r4, #0
    4bae:	6193      	str	r3, [r2, #24]
    4bb0:	61d4      	str	r4, [r2, #28]
    4bb2:	4640      	mov	r0, r8
    4bb4:	f000 ff2e 	bl	5a14 <matherr>
    4bb8:	2800      	cmp	r0, #0
    4bba:	d037      	beq.n	4c2c <pow+0x1b8>
    4bbc:	4643      	mov	r3, r8
    4bbe:	6a1b      	ldr	r3, [r3, #32]
    4bc0:	2b00      	cmp	r3, #0
    4bc2:	d004      	beq.n	4bce <pow+0x15a>
    4bc4:	f003 ffdc 	bl	8b80 <__errno>
    4bc8:	4643      	mov	r3, r8
    4bca:	6a1b      	ldr	r3, [r3, #32]
    4bcc:	6003      	str	r3, [r0, #0]
    4bce:	4643      	mov	r3, r8
    4bd0:	69dc      	ldr	r4, [r3, #28]
    4bd2:	699b      	ldr	r3, [r3, #24]
    4bd4:	9300      	str	r3, [sp, #0]
    4bd6:	9401      	str	r4, [sp, #4]
    4bd8:	e7a1      	b.n	4b1e <pow+0xaa>
    4bda:	0020      	movs	r0, r4
    4bdc:	0029      	movs	r1, r5
    4bde:	f000 ff0f 	bl	5a00 <finite>
    4be2:	2800      	cmp	r0, #0
    4be4:	d09b      	beq.n	4b1e <pow+0xaa>
    4be6:	2200      	movs	r2, #0
    4be8:	2300      	movs	r3, #0
    4bea:	0020      	movs	r0, r4
    4bec:	0029      	movs	r1, r5
    4bee:	f001 f9b7 	bl	5f60 <__aeabi_dcmplt>
    4bf2:	2800      	cmp	r0, #0
    4bf4:	d100      	bne.n	4bf8 <pow+0x184>
    4bf6:	e792      	b.n	4b1e <pow+0xaa>
    4bf8:	ab04      	add	r3, sp, #16
    4bfa:	4698      	mov	r8, r3
    4bfc:	2301      	movs	r3, #1
    4bfe:	4642      	mov	r2, r8
    4c00:	9304      	str	r3, [sp, #16]
    4c02:	4b6b      	ldr	r3, [pc, #428]	; (4db0 <pow+0x33c>)
    4c04:	6053      	str	r3, [r2, #4]
    4c06:	4643      	mov	r3, r8
    4c08:	465a      	mov	r2, fp
    4c0a:	609e      	str	r6, [r3, #8]
    4c0c:	60df      	str	r7, [r3, #12]
    4c0e:	621a      	str	r2, [r3, #32]
    4c10:	611c      	str	r4, [r3, #16]
    4c12:	615d      	str	r5, [r3, #20]
    4c14:	4653      	mov	r3, sl
    4c16:	781b      	ldrb	r3, [r3, #0]
    4c18:	b25b      	sxtb	r3, r3
    4c1a:	2b00      	cmp	r3, #0
    4c1c:	d0c4      	beq.n	4ba8 <pow+0x134>
    4c1e:	2000      	movs	r0, #0
    4c20:	4642      	mov	r2, r8
    4c22:	4965      	ldr	r1, [pc, #404]	; (4db8 <pow+0x344>)
    4c24:	6190      	str	r0, [r2, #24]
    4c26:	61d1      	str	r1, [r2, #28]
    4c28:	2b02      	cmp	r3, #2
    4c2a:	d1c2      	bne.n	4bb2 <pow+0x13e>
    4c2c:	f003 ffa8 	bl	8b80 <__errno>
    4c30:	2321      	movs	r3, #33	; 0x21
    4c32:	6003      	str	r3, [r0, #0]
    4c34:	e7c2      	b.n	4bbc <pow+0x148>
    4c36:	2300      	movs	r3, #0
    4c38:	0020      	movs	r0, r4
    4c3a:	0029      	movs	r1, r5
    4c3c:	f001 f98a 	bl	5f54 <__aeabi_dcmpeq>
    4c40:	2800      	cmp	r0, #0
    4c42:	d100      	bne.n	4c46 <pow+0x1d2>
    4c44:	e76b      	b.n	4b1e <pow+0xaa>
    4c46:	ab04      	add	r3, sp, #16
    4c48:	4698      	mov	r8, r3
    4c4a:	2301      	movs	r3, #1
    4c4c:	4642      	mov	r2, r8
    4c4e:	9304      	str	r3, [sp, #16]
    4c50:	4b57      	ldr	r3, [pc, #348]	; (4db0 <pow+0x33c>)
    4c52:	4641      	mov	r1, r8
    4c54:	6053      	str	r3, [r2, #4]
    4c56:	4643      	mov	r3, r8
    4c58:	465a      	mov	r2, fp
    4c5a:	621a      	str	r2, [r3, #32]
    4c5c:	2200      	movs	r2, #0
    4c5e:	609e      	str	r6, [r3, #8]
    4c60:	60df      	str	r7, [r3, #12]
    4c62:	611c      	str	r4, [r3, #16]
    4c64:	615d      	str	r5, [r3, #20]
    4c66:	4b53      	ldr	r3, [pc, #332]	; (4db4 <pow+0x340>)
    4c68:	618a      	str	r2, [r1, #24]
    4c6a:	61cb      	str	r3, [r1, #28]
    4c6c:	9200      	str	r2, [sp, #0]
    4c6e:	9301      	str	r3, [sp, #4]
    4c70:	464b      	mov	r3, r9
    4c72:	2b02      	cmp	r3, #2
    4c74:	d19d      	bne.n	4bb2 <pow+0x13e>
    4c76:	e752      	b.n	4b1e <pow+0xaa>
    4c78:	0030      	movs	r0, r6
    4c7a:	0039      	movs	r1, r7
    4c7c:	f000 fec0 	bl	5a00 <finite>
    4c80:	2800      	cmp	r0, #0
    4c82:	d100      	bne.n	4c86 <pow+0x212>
    4c84:	e75c      	b.n	4b40 <pow+0xcc>
    4c86:	0020      	movs	r0, r4
    4c88:	0029      	movs	r1, r5
    4c8a:	f000 feb9 	bl	5a00 <finite>
    4c8e:	2800      	cmp	r0, #0
    4c90:	d100      	bne.n	4c94 <pow+0x220>
    4c92:	e755      	b.n	4b40 <pow+0xcc>
    4c94:	9800      	ldr	r0, [sp, #0]
    4c96:	9901      	ldr	r1, [sp, #4]
    4c98:	000b      	movs	r3, r1
    4c9a:	0002      	movs	r2, r0
    4c9c:	f003 fbde 	bl	845c <__aeabi_dcmpun>
    4ca0:	ab04      	add	r3, sp, #16
    4ca2:	4698      	mov	r8, r3
    4ca4:	2800      	cmp	r0, #0
    4ca6:	d161      	bne.n	4d6c <pow+0x2f8>
    4ca8:	2303      	movs	r3, #3
    4caa:	4642      	mov	r2, r8
    4cac:	9304      	str	r3, [sp, #16]
    4cae:	4b40      	ldr	r3, [pc, #256]	; (4db0 <pow+0x33c>)
    4cb0:	6210      	str	r0, [r2, #32]
    4cb2:	6053      	str	r3, [r2, #4]
    4cb4:	4653      	mov	r3, sl
    4cb6:	781b      	ldrb	r3, [r3, #0]
    4cb8:	6096      	str	r6, [r2, #8]
    4cba:	60d7      	str	r7, [r2, #12]
    4cbc:	b25b      	sxtb	r3, r3
    4cbe:	6114      	str	r4, [r2, #16]
    4cc0:	6155      	str	r5, [r2, #20]
    4cc2:	4699      	mov	r9, r3
    4cc4:	2b00      	cmp	r3, #0
    4cc6:	d12f      	bne.n	4d28 <pow+0x2b4>
    4cc8:	22e0      	movs	r2, #224	; 0xe0
    4cca:	4641      	mov	r1, r8
    4ccc:	4b3b      	ldr	r3, [pc, #236]	; (4dbc <pow+0x348>)
    4cce:	0612      	lsls	r2, r2, #24
    4cd0:	618a      	str	r2, [r1, #24]
    4cd2:	61cb      	str	r3, [r1, #28]
    4cd4:	0030      	movs	r0, r6
    4cd6:	2200      	movs	r2, #0
    4cd8:	2300      	movs	r3, #0
    4cda:	0039      	movs	r1, r7
    4cdc:	f001 f940 	bl	5f60 <__aeabi_dcmplt>
    4ce0:	2800      	cmp	r0, #0
    4ce2:	d100      	bne.n	4ce6 <pow+0x272>
    4ce4:	e756      	b.n	4b94 <pow+0x120>
    4ce6:	2200      	movs	r2, #0
    4ce8:	4b35      	ldr	r3, [pc, #212]	; (4dc0 <pow+0x34c>)
    4cea:	0020      	movs	r0, r4
    4cec:	0029      	movs	r1, r5
    4cee:	f002 fe1f 	bl	7930 <__aeabi_dmul>
    4cf2:	0004      	movs	r4, r0
    4cf4:	000d      	movs	r5, r1
    4cf6:	f000 fe95 	bl	5a24 <rint>
    4cfa:	0002      	movs	r2, r0
    4cfc:	000b      	movs	r3, r1
    4cfe:	0020      	movs	r0, r4
    4d00:	0029      	movs	r1, r5
    4d02:	f001 f927 	bl	5f54 <__aeabi_dcmpeq>
    4d06:	2800      	cmp	r0, #0
    4d08:	d105      	bne.n	4d16 <pow+0x2a2>
    4d0a:	22e0      	movs	r2, #224	; 0xe0
    4d0c:	4b2d      	ldr	r3, [pc, #180]	; (4dc4 <pow+0x350>)
    4d0e:	0612      	lsls	r2, r2, #24
    4d10:	4641      	mov	r1, r8
    4d12:	618a      	str	r2, [r1, #24]
    4d14:	61cb      	str	r3, [r1, #28]
    4d16:	4653      	mov	r3, sl
    4d18:	781b      	ldrb	r3, [r3, #0]
    4d1a:	b25b      	sxtb	r3, r3
    4d1c:	4699      	mov	r9, r3
    4d1e:	464b      	mov	r3, r9
    4d20:	2b02      	cmp	r3, #2
    4d22:	d000      	beq.n	4d26 <pow+0x2b2>
    4d24:	e736      	b.n	4b94 <pow+0x120>
    4d26:	e73a      	b.n	4b9e <pow+0x12a>
    4d28:	2200      	movs	r2, #0
    4d2a:	4641      	mov	r1, r8
    4d2c:	4b26      	ldr	r3, [pc, #152]	; (4dc8 <pow+0x354>)
    4d2e:	0030      	movs	r0, r6
    4d30:	618a      	str	r2, [r1, #24]
    4d32:	61cb      	str	r3, [r1, #28]
    4d34:	2200      	movs	r2, #0
    4d36:	2300      	movs	r3, #0
    4d38:	0039      	movs	r1, r7
    4d3a:	f001 f911 	bl	5f60 <__aeabi_dcmplt>
    4d3e:	2800      	cmp	r0, #0
    4d40:	d0ed      	beq.n	4d1e <pow+0x2aa>
    4d42:	2200      	movs	r2, #0
    4d44:	4b1e      	ldr	r3, [pc, #120]	; (4dc0 <pow+0x34c>)
    4d46:	0020      	movs	r0, r4
    4d48:	0029      	movs	r1, r5
    4d4a:	f002 fdf1 	bl	7930 <__aeabi_dmul>
    4d4e:	0004      	movs	r4, r0
    4d50:	000d      	movs	r5, r1
    4d52:	f000 fe67 	bl	5a24 <rint>
    4d56:	0002      	movs	r2, r0
    4d58:	000b      	movs	r3, r1
    4d5a:	0020      	movs	r0, r4
    4d5c:	0029      	movs	r1, r5
    4d5e:	f001 f8f9 	bl	5f54 <__aeabi_dcmpeq>
    4d62:	2800      	cmp	r0, #0
    4d64:	d1d7      	bne.n	4d16 <pow+0x2a2>
    4d66:	2200      	movs	r2, #0
    4d68:	4b13      	ldr	r3, [pc, #76]	; (4db8 <pow+0x344>)
    4d6a:	e7d1      	b.n	4d10 <pow+0x29c>
    4d6c:	2301      	movs	r3, #1
    4d6e:	4642      	mov	r2, r8
    4d70:	9304      	str	r3, [sp, #16]
    4d72:	4b0f      	ldr	r3, [pc, #60]	; (4db0 <pow+0x33c>)
    4d74:	6053      	str	r3, [r2, #4]
    4d76:	4643      	mov	r3, r8
    4d78:	464a      	mov	r2, r9
    4d7a:	611c      	str	r4, [r3, #16]
    4d7c:	615d      	str	r5, [r3, #20]
    4d7e:	621a      	str	r2, [r3, #32]
    4d80:	609e      	str	r6, [r3, #8]
    4d82:	60df      	str	r7, [r3, #12]
    4d84:	2400      	movs	r4, #0
    4d86:	4653      	mov	r3, sl
    4d88:	571c      	ldrsb	r4, [r3, r4]
    4d8a:	2c00      	cmp	r4, #0
    4d8c:	d100      	bne.n	4d90 <pow+0x31c>
    4d8e:	e70b      	b.n	4ba8 <pow+0x134>
    4d90:	2300      	movs	r3, #0
    4d92:	2200      	movs	r2, #0
    4d94:	0019      	movs	r1, r3
    4d96:	0010      	movs	r0, r2
    4d98:	f002 f996 	bl	70c8 <__aeabi_ddiv>
    4d9c:	4643      	mov	r3, r8
    4d9e:	6198      	str	r0, [r3, #24]
    4da0:	61d9      	str	r1, [r3, #28]
    4da2:	2c02      	cmp	r4, #2
    4da4:	d100      	bne.n	4da8 <pow+0x334>
    4da6:	e741      	b.n	4c2c <pow+0x1b8>
    4da8:	e703      	b.n	4bb2 <pow+0x13e>
    4daa:	46c0      	nop			; (mov r8, r8)
    4dac:	200000a9 	.word	0x200000a9
    4db0:	0000f7cc 	.word	0x0000f7cc
    4db4:	3ff00000 	.word	0x3ff00000
    4db8:	fff00000 	.word	0xfff00000
    4dbc:	47efffff 	.word	0x47efffff
    4dc0:	3fe00000 	.word	0x3fe00000
    4dc4:	c7efffff 	.word	0xc7efffff
    4dc8:	7ff00000 	.word	0x7ff00000

00004dcc <__ieee754_pow>:
    4dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
    4dce:	4657      	mov	r7, sl
    4dd0:	464e      	mov	r6, r9
    4dd2:	4645      	mov	r5, r8
    4dd4:	46de      	mov	lr, fp
    4dd6:	001c      	movs	r4, r3
    4dd8:	0013      	movs	r3, r2
    4dda:	b5e0      	push	{r5, r6, r7, lr}
    4ddc:	0065      	lsls	r5, r4, #1
    4dde:	b091      	sub	sp, #68	; 0x44
    4de0:	086d      	lsrs	r5, r5, #1
    4de2:	9300      	str	r3, [sp, #0]
    4de4:	9401      	str	r4, [sp, #4]
    4de6:	0007      	movs	r7, r0
    4de8:	000e      	movs	r6, r1
    4dea:	4680      	mov	r8, r0
    4dec:	4689      	mov	r9, r1
    4dee:	46a2      	mov	sl, r4
    4df0:	432b      	orrs	r3, r5
    4df2:	d031      	beq.n	4e58 <__ieee754_pow+0x8c>
    4df4:	4b67      	ldr	r3, [pc, #412]	; (4f94 <__ieee754_pow+0x1c8>)
    4df6:	0074      	lsls	r4, r6, #1
    4df8:	0864      	lsrs	r4, r4, #1
    4dfa:	429c      	cmp	r4, r3
    4dfc:	dc27      	bgt.n	4e4e <__ieee754_pow+0x82>
    4dfe:	d024      	beq.n	4e4a <__ieee754_pow+0x7e>
    4e00:	429d      	cmp	r5, r3
    4e02:	dc24      	bgt.n	4e4e <__ieee754_pow+0x82>
    4e04:	4b63      	ldr	r3, [pc, #396]	; (4f94 <__ieee754_pow+0x1c8>)
    4e06:	429d      	cmp	r5, r3
    4e08:	d100      	bne.n	4e0c <__ieee754_pow+0x40>
    4e0a:	e081      	b.n	4f10 <__ieee754_pow+0x144>
    4e0c:	2300      	movs	r3, #0
    4e0e:	469b      	mov	fp, r3
    4e10:	464b      	mov	r3, r9
    4e12:	2b00      	cmp	r3, #0
    4e14:	da00      	bge.n	4e18 <__ieee754_pow+0x4c>
    4e16:	e07f      	b.n	4f18 <__ieee754_pow+0x14c>
    4e18:	2a00      	cmp	r2, #0
    4e1a:	d12c      	bne.n	4e76 <__ieee754_pow+0xaa>
    4e1c:	4b5d      	ldr	r3, [pc, #372]	; (4f94 <__ieee754_pow+0x1c8>)
    4e1e:	429d      	cmp	r5, r3
    4e20:	d100      	bne.n	4e24 <__ieee754_pow+0x58>
    4e22:	e097      	b.n	4f54 <__ieee754_pow+0x188>
    4e24:	4b5c      	ldr	r3, [pc, #368]	; (4f98 <__ieee754_pow+0x1cc>)
    4e26:	429d      	cmp	r5, r3
    4e28:	d066      	beq.n	4ef8 <__ieee754_pow+0x12c>
    4e2a:	2380      	movs	r3, #128	; 0x80
    4e2c:	05db      	lsls	r3, r3, #23
    4e2e:	459a      	cmp	sl, r3
    4e30:	d100      	bne.n	4e34 <__ieee754_pow+0x68>
    4e32:	e3b9      	b.n	55a8 <__ieee754_pow+0x7dc>
    4e34:	4b59      	ldr	r3, [pc, #356]	; (4f9c <__ieee754_pow+0x1d0>)
    4e36:	459a      	cmp	sl, r3
    4e38:	d11d      	bne.n	4e76 <__ieee754_pow+0xaa>
    4e3a:	464b      	mov	r3, r9
    4e3c:	2b00      	cmp	r3, #0
    4e3e:	db1a      	blt.n	4e76 <__ieee754_pow+0xaa>
    4e40:	0038      	movs	r0, r7
    4e42:	0031      	movs	r1, r6
    4e44:	f000 fcf8 	bl	5838 <__ieee754_sqrt>
    4e48:	e008      	b.n	4e5c <__ieee754_pow+0x90>
    4e4a:	2800      	cmp	r0, #0
    4e4c:	d00d      	beq.n	4e6a <__ieee754_pow+0x9e>
    4e4e:	4b54      	ldr	r3, [pc, #336]	; (4fa0 <__ieee754_pow+0x1d4>)
    4e50:	469c      	mov	ip, r3
    4e52:	4464      	add	r4, ip
    4e54:	4327      	orrs	r7, r4
    4e56:	d10a      	bne.n	4e6e <__ieee754_pow+0xa2>
    4e58:	2000      	movs	r0, #0
    4e5a:	494f      	ldr	r1, [pc, #316]	; (4f98 <__ieee754_pow+0x1cc>)
    4e5c:	b011      	add	sp, #68	; 0x44
    4e5e:	bc3c      	pop	{r2, r3, r4, r5}
    4e60:	4690      	mov	r8, r2
    4e62:	4699      	mov	r9, r3
    4e64:	46a2      	mov	sl, r4
    4e66:	46ab      	mov	fp, r5
    4e68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4e6a:	42a5      	cmp	r5, r4
    4e6c:	ddca      	ble.n	4e04 <__ieee754_pow+0x38>
    4e6e:	484d      	ldr	r0, [pc, #308]	; (4fa4 <__ieee754_pow+0x1d8>)
    4e70:	f000 fdd2 	bl	5a18 <nan>
    4e74:	e7f2      	b.n	4e5c <__ieee754_pow+0x90>
    4e76:	0038      	movs	r0, r7
    4e78:	0031      	movs	r1, r6
    4e7a:	f000 fdbd 	bl	59f8 <fabs>
    4e7e:	4643      	mov	r3, r8
    4e80:	2b00      	cmp	r3, #0
    4e82:	d11d      	bne.n	4ec0 <__ieee754_pow+0xf4>
    4e84:	2c00      	cmp	r4, #0
    4e86:	d004      	beq.n	4e92 <__ieee754_pow+0xc6>
    4e88:	4a43      	ldr	r2, [pc, #268]	; (4f98 <__ieee754_pow+0x1cc>)
    4e8a:	00b3      	lsls	r3, r6, #2
    4e8c:	089b      	lsrs	r3, r3, #2
    4e8e:	4293      	cmp	r3, r2
    4e90:	d116      	bne.n	4ec0 <__ieee754_pow+0xf4>
    4e92:	4653      	mov	r3, sl
    4e94:	2b00      	cmp	r3, #0
    4e96:	da00      	bge.n	4e9a <__ieee754_pow+0xce>
    4e98:	e3c5      	b.n	5626 <__ieee754_pow+0x85a>
    4e9a:	464b      	mov	r3, r9
    4e9c:	2b00      	cmp	r3, #0
    4e9e:	dadd      	bge.n	4e5c <__ieee754_pow+0x90>
    4ea0:	4b3f      	ldr	r3, [pc, #252]	; (4fa0 <__ieee754_pow+0x1d4>)
    4ea2:	469c      	mov	ip, r3
    4ea4:	465b      	mov	r3, fp
    4ea6:	4464      	add	r4, ip
    4ea8:	431c      	orrs	r4, r3
    4eaa:	d101      	bne.n	4eb0 <__ieee754_pow+0xe4>
    4eac:	f000 fc53 	bl	5756 <__ieee754_pow+0x98a>
    4eb0:	465b      	mov	r3, fp
    4eb2:	2b01      	cmp	r3, #1
    4eb4:	d1d2      	bne.n	4e5c <__ieee754_pow+0x90>
    4eb6:	2480      	movs	r4, #128	; 0x80
    4eb8:	0624      	lsls	r4, r4, #24
    4eba:	190b      	adds	r3, r1, r4
    4ebc:	0019      	movs	r1, r3
    4ebe:	e7cd      	b.n	4e5c <__ieee754_pow+0x90>
    4ec0:	0ff3      	lsrs	r3, r6, #31
    4ec2:	3b01      	subs	r3, #1
    4ec4:	4698      	mov	r8, r3
    4ec6:	465b      	mov	r3, fp
    4ec8:	4642      	mov	r2, r8
    4eca:	4313      	orrs	r3, r2
    4ecc:	d057      	beq.n	4f7e <__ieee754_pow+0x1b2>
    4ece:	4b36      	ldr	r3, [pc, #216]	; (4fa8 <__ieee754_pow+0x1dc>)
    4ed0:	429d      	cmp	r5, r3
    4ed2:	dd77      	ble.n	4fc4 <__ieee754_pow+0x1f8>
    4ed4:	4b35      	ldr	r3, [pc, #212]	; (4fac <__ieee754_pow+0x1e0>)
    4ed6:	429d      	cmp	r5, r3
    4ed8:	dc00      	bgt.n	4edc <__ieee754_pow+0x110>
    4eda:	e3b1      	b.n	5640 <__ieee754_pow+0x874>
    4edc:	4b34      	ldr	r3, [pc, #208]	; (4fb0 <__ieee754_pow+0x1e4>)
    4ede:	429c      	cmp	r4, r3
    4ee0:	dc00      	bgt.n	4ee4 <__ieee754_pow+0x118>
    4ee2:	e3a8      	b.n	5636 <__ieee754_pow+0x86a>
    4ee4:	4653      	mov	r3, sl
    4ee6:	2b00      	cmp	r3, #0
    4ee8:	dd43      	ble.n	4f72 <__ieee754_pow+0x1a6>
    4eea:	4a32      	ldr	r2, [pc, #200]	; (4fb4 <__ieee754_pow+0x1e8>)
    4eec:	4b32      	ldr	r3, [pc, #200]	; (4fb8 <__ieee754_pow+0x1ec>)
    4eee:	0010      	movs	r0, r2
    4ef0:	0019      	movs	r1, r3
    4ef2:	f002 fd1d 	bl	7930 <__aeabi_dmul>
    4ef6:	e7b1      	b.n	4e5c <__ieee754_pow+0x90>
    4ef8:	4653      	mov	r3, sl
    4efa:	0038      	movs	r0, r7
    4efc:	0031      	movs	r1, r6
    4efe:	2b00      	cmp	r3, #0
    4f00:	daac      	bge.n	4e5c <__ieee754_pow+0x90>
    4f02:	003a      	movs	r2, r7
    4f04:	0033      	movs	r3, r6
    4f06:	2000      	movs	r0, #0
    4f08:	4923      	ldr	r1, [pc, #140]	; (4f98 <__ieee754_pow+0x1cc>)
    4f0a:	f002 f8dd 	bl	70c8 <__aeabi_ddiv>
    4f0e:	e7a5      	b.n	4e5c <__ieee754_pow+0x90>
    4f10:	2a00      	cmp	r2, #0
    4f12:	d100      	bne.n	4f16 <__ieee754_pow+0x14a>
    4f14:	e77a      	b.n	4e0c <__ieee754_pow+0x40>
    4f16:	e79a      	b.n	4e4e <__ieee754_pow+0x82>
    4f18:	4b28      	ldr	r3, [pc, #160]	; (4fbc <__ieee754_pow+0x1f0>)
    4f1a:	429d      	cmp	r5, r3
    4f1c:	dc2c      	bgt.n	4f78 <__ieee754_pow+0x1ac>
    4f1e:	4b24      	ldr	r3, [pc, #144]	; (4fb0 <__ieee754_pow+0x1e4>)
    4f20:	429d      	cmp	r5, r3
    4f22:	dc00      	bgt.n	4f26 <__ieee754_pow+0x15a>
    4f24:	e778      	b.n	4e18 <__ieee754_pow+0x4c>
    4f26:	4926      	ldr	r1, [pc, #152]	; (4fc0 <__ieee754_pow+0x1f4>)
    4f28:	152b      	asrs	r3, r5, #20
    4f2a:	468c      	mov	ip, r1
    4f2c:	4463      	add	r3, ip
    4f2e:	2b14      	cmp	r3, #20
    4f30:	dc01      	bgt.n	4f36 <__ieee754_pow+0x16a>
    4f32:	f000 fbf3 	bl	571c <__ieee754_pow+0x950>
    4f36:	2134      	movs	r1, #52	; 0x34
    4f38:	1acb      	subs	r3, r1, r3
    4f3a:	9900      	ldr	r1, [sp, #0]
    4f3c:	40d9      	lsrs	r1, r3
    4f3e:	0008      	movs	r0, r1
    4f40:	4098      	lsls	r0, r3
    4f42:	4282      	cmp	r2, r0
    4f44:	d000      	beq.n	4f48 <__ieee754_pow+0x17c>
    4f46:	e767      	b.n	4e18 <__ieee754_pow+0x4c>
    4f48:	2301      	movs	r3, #1
    4f4a:	4019      	ands	r1, r3
    4f4c:	3301      	adds	r3, #1
    4f4e:	1a5b      	subs	r3, r3, r1
    4f50:	469b      	mov	fp, r3
    4f52:	e761      	b.n	4e18 <__ieee754_pow+0x4c>
    4f54:	4b12      	ldr	r3, [pc, #72]	; (4fa0 <__ieee754_pow+0x1d4>)
    4f56:	18e3      	adds	r3, r4, r3
    4f58:	431f      	orrs	r7, r3
    4f5a:	d100      	bne.n	4f5e <__ieee754_pow+0x192>
    4f5c:	e77c      	b.n	4e58 <__ieee754_pow+0x8c>
    4f5e:	4b14      	ldr	r3, [pc, #80]	; (4fb0 <__ieee754_pow+0x1e4>)
    4f60:	429c      	cmp	r4, r3
    4f62:	dc00      	bgt.n	4f66 <__ieee754_pow+0x19a>
    4f64:	e327      	b.n	55b6 <__ieee754_pow+0x7ea>
    4f66:	9800      	ldr	r0, [sp, #0]
    4f68:	9901      	ldr	r1, [sp, #4]
    4f6a:	4653      	mov	r3, sl
    4f6c:	2b00      	cmp	r3, #0
    4f6e:	db00      	blt.n	4f72 <__ieee754_pow+0x1a6>
    4f70:	e774      	b.n	4e5c <__ieee754_pow+0x90>
    4f72:	2000      	movs	r0, #0
    4f74:	2100      	movs	r1, #0
    4f76:	e771      	b.n	4e5c <__ieee754_pow+0x90>
    4f78:	2302      	movs	r3, #2
    4f7a:	469b      	mov	fp, r3
    4f7c:	e74c      	b.n	4e18 <__ieee754_pow+0x4c>
    4f7e:	003a      	movs	r2, r7
    4f80:	0033      	movs	r3, r6
    4f82:	0038      	movs	r0, r7
    4f84:	0031      	movs	r1, r6
    4f86:	f002 ff53 	bl	7e30 <__aeabi_dsub>
    4f8a:	0002      	movs	r2, r0
    4f8c:	000b      	movs	r3, r1
    4f8e:	f002 f89b 	bl	70c8 <__aeabi_ddiv>
    4f92:	e763      	b.n	4e5c <__ieee754_pow+0x90>
    4f94:	7ff00000 	.word	0x7ff00000
    4f98:	3ff00000 	.word	0x3ff00000
    4f9c:	3fe00000 	.word	0x3fe00000
    4fa0:	c0100000 	.word	0xc0100000
    4fa4:	0000f754 	.word	0x0000f754
    4fa8:	41e00000 	.word	0x41e00000
    4fac:	43f00000 	.word	0x43f00000
    4fb0:	3fefffff 	.word	0x3fefffff
    4fb4:	8800759c 	.word	0x8800759c
    4fb8:	7e37e43c 	.word	0x7e37e43c
    4fbc:	433fffff 	.word	0x433fffff
    4fc0:	fffffc01 	.word	0xfffffc01
    4fc4:	4be9      	ldr	r3, [pc, #932]	; (536c <__ieee754_pow+0x5a0>)
    4fc6:	2200      	movs	r2, #0
    4fc8:	429c      	cmp	r4, r3
    4fca:	dc06      	bgt.n	4fda <__ieee754_pow+0x20e>
    4fcc:	2200      	movs	r2, #0
    4fce:	4be8      	ldr	r3, [pc, #928]	; (5370 <__ieee754_pow+0x5a4>)
    4fd0:	f002 fcae 	bl	7930 <__aeabi_dmul>
    4fd4:	2235      	movs	r2, #53	; 0x35
    4fd6:	000c      	movs	r4, r1
    4fd8:	4252      	negs	r2, r2
    4fda:	4de6      	ldr	r5, [pc, #920]	; (5374 <__ieee754_pow+0x5a8>)
    4fdc:	1523      	asrs	r3, r4, #20
    4fde:	46ac      	mov	ip, r5
    4fe0:	4463      	add	r3, ip
    4fe2:	4699      	mov	r9, r3
    4fe4:	0324      	lsls	r4, r4, #12
    4fe6:	4de4      	ldr	r5, [pc, #912]	; (5378 <__ieee754_pow+0x5ac>)
    4fe8:	4be4      	ldr	r3, [pc, #912]	; (537c <__ieee754_pow+0x5b0>)
    4fea:	0b24      	lsrs	r4, r4, #12
    4fec:	4491      	add	r9, r2
    4fee:	4325      	orrs	r5, r4
    4ff0:	429c      	cmp	r4, r3
    4ff2:	dd09      	ble.n	5008 <__ieee754_pow+0x23c>
    4ff4:	4be2      	ldr	r3, [pc, #904]	; (5380 <__ieee754_pow+0x5b4>)
    4ff6:	429c      	cmp	r4, r3
    4ff8:	dc00      	bgt.n	4ffc <__ieee754_pow+0x230>
    4ffa:	e3b6      	b.n	576a <__ieee754_pow+0x99e>
    4ffc:	2301      	movs	r3, #1
    4ffe:	469c      	mov	ip, r3
    5000:	4be0      	ldr	r3, [pc, #896]	; (5384 <__ieee754_pow+0x5b8>)
    5002:	44e1      	add	r9, ip
    5004:	469c      	mov	ip, r3
    5006:	4465      	add	r5, ip
    5008:	2300      	movs	r3, #0
    500a:	2400      	movs	r4, #0
    500c:	2200      	movs	r2, #0
    500e:	9308      	str	r3, [sp, #32]
    5010:	9409      	str	r4, [sp, #36]	; 0x24
    5012:	930c      	str	r3, [sp, #48]	; 0x30
    5014:	940d      	str	r4, [sp, #52]	; 0x34
    5016:	2400      	movs	r4, #0
    5018:	4bd7      	ldr	r3, [pc, #860]	; (5378 <__ieee754_pow+0x5ac>)
    501a:	9206      	str	r2, [sp, #24]
    501c:	9307      	str	r3, [sp, #28]
    501e:	9a06      	ldr	r2, [sp, #24]
    5020:	9b07      	ldr	r3, [sp, #28]
    5022:	0029      	movs	r1, r5
    5024:	900a      	str	r0, [sp, #40]	; 0x28
    5026:	910b      	str	r1, [sp, #44]	; 0x2c
    5028:	f002 ff02 	bl	7e30 <__aeabi_dsub>
    502c:	9a06      	ldr	r2, [sp, #24]
    502e:	9b07      	ldr	r3, [sp, #28]
    5030:	0006      	movs	r6, r0
    5032:	000f      	movs	r7, r1
    5034:	980a      	ldr	r0, [sp, #40]	; 0x28
    5036:	990b      	ldr	r1, [sp, #44]	; 0x2c
    5038:	f001 fd36 	bl	6aa8 <__aeabi_dadd>
    503c:	0002      	movs	r2, r0
    503e:	000b      	movs	r3, r1
    5040:	2000      	movs	r0, #0
    5042:	49cd      	ldr	r1, [pc, #820]	; (5378 <__ieee754_pow+0x5ac>)
    5044:	f002 f840 	bl	70c8 <__aeabi_ddiv>
    5048:	000a      	movs	r2, r1
    504a:	0001      	movs	r1, r0
    504c:	0013      	movs	r3, r2
    504e:	910e      	str	r1, [sp, #56]	; 0x38
    5050:	920f      	str	r2, [sp, #60]	; 0x3c
    5052:	0002      	movs	r2, r0
    5054:	0039      	movs	r1, r7
    5056:	0030      	movs	r0, r6
    5058:	f002 fc6a 	bl	7930 <__aeabi_dmul>
    505c:	000a      	movs	r2, r1
    505e:	0001      	movs	r1, r0
    5060:	2080      	movs	r0, #128	; 0x80
    5062:	9104      	str	r1, [sp, #16]
    5064:	9205      	str	r2, [sp, #20]
    5066:	0013      	movs	r3, r2
    5068:	2200      	movs	r2, #0
    506a:	1069      	asrs	r1, r5, #1
    506c:	2580      	movs	r5, #128	; 0x80
    506e:	0300      	lsls	r0, r0, #12
    5070:	4684      	mov	ip, r0
    5072:	9202      	str	r2, [sp, #8]
    5074:	9303      	str	r3, [sp, #12]
    5076:	2200      	movs	r2, #0
    5078:	05ad      	lsls	r5, r5, #22
    507a:	430d      	orrs	r5, r1
    507c:	4465      	add	r5, ip
    507e:	192b      	adds	r3, r5, r4
    5080:	9802      	ldr	r0, [sp, #8]
    5082:	9903      	ldr	r1, [sp, #12]
    5084:	0014      	movs	r4, r2
    5086:	001d      	movs	r5, r3
    5088:	f002 fc52 	bl	7930 <__aeabi_dmul>
    508c:	0002      	movs	r2, r0
    508e:	000b      	movs	r3, r1
    5090:	0030      	movs	r0, r6
    5092:	0039      	movs	r1, r7
    5094:	f002 fecc 	bl	7e30 <__aeabi_dsub>
    5098:	9a06      	ldr	r2, [sp, #24]
    509a:	9b07      	ldr	r3, [sp, #28]
    509c:	0006      	movs	r6, r0
    509e:	000f      	movs	r7, r1
    50a0:	0020      	movs	r0, r4
    50a2:	0029      	movs	r1, r5
    50a4:	f002 fec4 	bl	7e30 <__aeabi_dsub>
    50a8:	0002      	movs	r2, r0
    50aa:	000b      	movs	r3, r1
    50ac:	980a      	ldr	r0, [sp, #40]	; 0x28
    50ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
    50b0:	f002 febe 	bl	7e30 <__aeabi_dsub>
    50b4:	9a02      	ldr	r2, [sp, #8]
    50b6:	9b03      	ldr	r3, [sp, #12]
    50b8:	f002 fc3a 	bl	7930 <__aeabi_dmul>
    50bc:	0002      	movs	r2, r0
    50be:	000b      	movs	r3, r1
    50c0:	0030      	movs	r0, r6
    50c2:	0039      	movs	r1, r7
    50c4:	f002 feb4 	bl	7e30 <__aeabi_dsub>
    50c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    50ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    50cc:	f002 fc30 	bl	7930 <__aeabi_dmul>
    50d0:	9d04      	ldr	r5, [sp, #16]
    50d2:	9e05      	ldr	r6, [sp, #20]
    50d4:	9006      	str	r0, [sp, #24]
    50d6:	9107      	str	r1, [sp, #28]
    50d8:	002a      	movs	r2, r5
    50da:	0033      	movs	r3, r6
    50dc:	0028      	movs	r0, r5
    50de:	0031      	movs	r1, r6
    50e0:	f002 fc26 	bl	7930 <__aeabi_dmul>
    50e4:	0006      	movs	r6, r0
    50e6:	000f      	movs	r7, r1
    50e8:	4aa7      	ldr	r2, [pc, #668]	; (5388 <__ieee754_pow+0x5bc>)
    50ea:	4ba8      	ldr	r3, [pc, #672]	; (538c <__ieee754_pow+0x5c0>)
    50ec:	f002 fc20 	bl	7930 <__aeabi_dmul>
    50f0:	4aa7      	ldr	r2, [pc, #668]	; (5390 <__ieee754_pow+0x5c4>)
    50f2:	4ba8      	ldr	r3, [pc, #672]	; (5394 <__ieee754_pow+0x5c8>)
    50f4:	f001 fcd8 	bl	6aa8 <__aeabi_dadd>
    50f8:	0032      	movs	r2, r6
    50fa:	003b      	movs	r3, r7
    50fc:	f002 fc18 	bl	7930 <__aeabi_dmul>
    5100:	4aa5      	ldr	r2, [pc, #660]	; (5398 <__ieee754_pow+0x5cc>)
    5102:	4ba6      	ldr	r3, [pc, #664]	; (539c <__ieee754_pow+0x5d0>)
    5104:	f001 fcd0 	bl	6aa8 <__aeabi_dadd>
    5108:	0032      	movs	r2, r6
    510a:	003b      	movs	r3, r7
    510c:	f002 fc10 	bl	7930 <__aeabi_dmul>
    5110:	4aa3      	ldr	r2, [pc, #652]	; (53a0 <__ieee754_pow+0x5d4>)
    5112:	4ba4      	ldr	r3, [pc, #656]	; (53a4 <__ieee754_pow+0x5d8>)
    5114:	f001 fcc8 	bl	6aa8 <__aeabi_dadd>
    5118:	0032      	movs	r2, r6
    511a:	003b      	movs	r3, r7
    511c:	f002 fc08 	bl	7930 <__aeabi_dmul>
    5120:	4aa1      	ldr	r2, [pc, #644]	; (53a8 <__ieee754_pow+0x5dc>)
    5122:	4ba2      	ldr	r3, [pc, #648]	; (53ac <__ieee754_pow+0x5e0>)
    5124:	f001 fcc0 	bl	6aa8 <__aeabi_dadd>
    5128:	0032      	movs	r2, r6
    512a:	003b      	movs	r3, r7
    512c:	f002 fc00 	bl	7930 <__aeabi_dmul>
    5130:	4a9f      	ldr	r2, [pc, #636]	; (53b0 <__ieee754_pow+0x5e4>)
    5132:	4ba0      	ldr	r3, [pc, #640]	; (53b4 <__ieee754_pow+0x5e8>)
    5134:	f001 fcb8 	bl	6aa8 <__aeabi_dadd>
    5138:	0032      	movs	r2, r6
    513a:	0004      	movs	r4, r0
    513c:	000d      	movs	r5, r1
    513e:	003b      	movs	r3, r7
    5140:	0030      	movs	r0, r6
    5142:	0039      	movs	r1, r7
    5144:	f002 fbf4 	bl	7930 <__aeabi_dmul>
    5148:	0002      	movs	r2, r0
    514a:	000b      	movs	r3, r1
    514c:	0020      	movs	r0, r4
    514e:	0029      	movs	r1, r5
    5150:	f002 fbee 	bl	7930 <__aeabi_dmul>
    5154:	9e02      	ldr	r6, [sp, #8]
    5156:	9f03      	ldr	r7, [sp, #12]
    5158:	0004      	movs	r4, r0
    515a:	000d      	movs	r5, r1
    515c:	9804      	ldr	r0, [sp, #16]
    515e:	9905      	ldr	r1, [sp, #20]
    5160:	0032      	movs	r2, r6
    5162:	003b      	movs	r3, r7
    5164:	f001 fca0 	bl	6aa8 <__aeabi_dadd>
    5168:	9a06      	ldr	r2, [sp, #24]
    516a:	9b07      	ldr	r3, [sp, #28]
    516c:	f002 fbe0 	bl	7930 <__aeabi_dmul>
    5170:	0022      	movs	r2, r4
    5172:	002b      	movs	r3, r5
    5174:	f001 fc98 	bl	6aa8 <__aeabi_dadd>
    5178:	0032      	movs	r2, r6
    517a:	900a      	str	r0, [sp, #40]	; 0x28
    517c:	910b      	str	r1, [sp, #44]	; 0x2c
    517e:	003b      	movs	r3, r7
    5180:	0030      	movs	r0, r6
    5182:	0039      	movs	r1, r7
    5184:	9602      	str	r6, [sp, #8]
    5186:	9703      	str	r7, [sp, #12]
    5188:	f002 fbd2 	bl	7930 <__aeabi_dmul>
    518c:	2200      	movs	r2, #0
    518e:	4b8a      	ldr	r3, [pc, #552]	; (53b8 <__ieee754_pow+0x5ec>)
    5190:	0004      	movs	r4, r0
    5192:	000d      	movs	r5, r1
    5194:	f001 fc88 	bl	6aa8 <__aeabi_dadd>
    5198:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    519a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    519c:	f001 fc84 	bl	6aa8 <__aeabi_dadd>
    51a0:	2600      	movs	r6, #0
    51a2:	000f      	movs	r7, r1
    51a4:	0032      	movs	r2, r6
    51a6:	000b      	movs	r3, r1
    51a8:	9802      	ldr	r0, [sp, #8]
    51aa:	9903      	ldr	r1, [sp, #12]
    51ac:	f002 fbc0 	bl	7930 <__aeabi_dmul>
    51b0:	2200      	movs	r2, #0
    51b2:	9002      	str	r0, [sp, #8]
    51b4:	9103      	str	r1, [sp, #12]
    51b6:	4b80      	ldr	r3, [pc, #512]	; (53b8 <__ieee754_pow+0x5ec>)
    51b8:	0030      	movs	r0, r6
    51ba:	0039      	movs	r1, r7
    51bc:	f002 fe38 	bl	7e30 <__aeabi_dsub>
    51c0:	0022      	movs	r2, r4
    51c2:	002b      	movs	r3, r5
    51c4:	f002 fe34 	bl	7e30 <__aeabi_dsub>
    51c8:	0002      	movs	r2, r0
    51ca:	000b      	movs	r3, r1
    51cc:	980a      	ldr	r0, [sp, #40]	; 0x28
    51ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
    51d0:	f002 fe2e 	bl	7e30 <__aeabi_dsub>
    51d4:	9a04      	ldr	r2, [sp, #16]
    51d6:	9b05      	ldr	r3, [sp, #20]
    51d8:	f002 fbaa 	bl	7930 <__aeabi_dmul>
    51dc:	0032      	movs	r2, r6
    51de:	0004      	movs	r4, r0
    51e0:	000d      	movs	r5, r1
    51e2:	9806      	ldr	r0, [sp, #24]
    51e4:	9907      	ldr	r1, [sp, #28]
    51e6:	003b      	movs	r3, r7
    51e8:	f002 fba2 	bl	7930 <__aeabi_dmul>
    51ec:	0002      	movs	r2, r0
    51ee:	000b      	movs	r3, r1
    51f0:	0020      	movs	r0, r4
    51f2:	0029      	movs	r1, r5
    51f4:	f001 fc58 	bl	6aa8 <__aeabi_dadd>
    51f8:	0004      	movs	r4, r0
    51fa:	000d      	movs	r5, r1
    51fc:	0002      	movs	r2, r0
    51fe:	000b      	movs	r3, r1
    5200:	9802      	ldr	r0, [sp, #8]
    5202:	9903      	ldr	r1, [sp, #12]
    5204:	f001 fc50 	bl	6aa8 <__aeabi_dadd>
    5208:	2600      	movs	r6, #0
    520a:	22e0      	movs	r2, #224	; 0xe0
    520c:	4b6b      	ldr	r3, [pc, #428]	; (53bc <__ieee754_pow+0x5f0>)
    520e:	0612      	lsls	r2, r2, #24
    5210:	0030      	movs	r0, r6
    5212:	000f      	movs	r7, r1
    5214:	f002 fb8c 	bl	7930 <__aeabi_dmul>
    5218:	9a02      	ldr	r2, [sp, #8]
    521a:	9b03      	ldr	r3, [sp, #12]
    521c:	9004      	str	r0, [sp, #16]
    521e:	9105      	str	r1, [sp, #20]
    5220:	0030      	movs	r0, r6
    5222:	0039      	movs	r1, r7
    5224:	f002 fe04 	bl	7e30 <__aeabi_dsub>
    5228:	0002      	movs	r2, r0
    522a:	000b      	movs	r3, r1
    522c:	0020      	movs	r0, r4
    522e:	0029      	movs	r1, r5
    5230:	f002 fdfe 	bl	7e30 <__aeabi_dsub>
    5234:	4a62      	ldr	r2, [pc, #392]	; (53c0 <__ieee754_pow+0x5f4>)
    5236:	4b61      	ldr	r3, [pc, #388]	; (53bc <__ieee754_pow+0x5f0>)
    5238:	f002 fb7a 	bl	7930 <__aeabi_dmul>
    523c:	4a61      	ldr	r2, [pc, #388]	; (53c4 <__ieee754_pow+0x5f8>)
    523e:	0004      	movs	r4, r0
    5240:	000d      	movs	r5, r1
    5242:	4b61      	ldr	r3, [pc, #388]	; (53c8 <__ieee754_pow+0x5fc>)
    5244:	0030      	movs	r0, r6
    5246:	0039      	movs	r1, r7
    5248:	f002 fb72 	bl	7930 <__aeabi_dmul>
    524c:	0002      	movs	r2, r0
    524e:	000b      	movs	r3, r1
    5250:	0020      	movs	r0, r4
    5252:	0029      	movs	r1, r5
    5254:	f001 fc28 	bl	6aa8 <__aeabi_dadd>
    5258:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    525a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    525c:	f001 fc24 	bl	6aa8 <__aeabi_dadd>
    5260:	0006      	movs	r6, r0
    5262:	4648      	mov	r0, r9
    5264:	000f      	movs	r7, r1
    5266:	f003 f94d 	bl	8504 <__aeabi_i2d>
    526a:	0004      	movs	r4, r0
    526c:	000d      	movs	r5, r1
    526e:	9804      	ldr	r0, [sp, #16]
    5270:	9905      	ldr	r1, [sp, #20]
    5272:	0032      	movs	r2, r6
    5274:	003b      	movs	r3, r7
    5276:	f001 fc17 	bl	6aa8 <__aeabi_dadd>
    527a:	9a08      	ldr	r2, [sp, #32]
    527c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    527e:	f001 fc13 	bl	6aa8 <__aeabi_dadd>
    5282:	0022      	movs	r2, r4
    5284:	002b      	movs	r3, r5
    5286:	f001 fc0f 	bl	6aa8 <__aeabi_dadd>
    528a:	2000      	movs	r0, #0
    528c:	0022      	movs	r2, r4
    528e:	002b      	movs	r3, r5
    5290:	9002      	str	r0, [sp, #8]
    5292:	9103      	str	r1, [sp, #12]
    5294:	f002 fdcc 	bl	7e30 <__aeabi_dsub>
    5298:	9a08      	ldr	r2, [sp, #32]
    529a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    529c:	f002 fdc8 	bl	7e30 <__aeabi_dsub>
    52a0:	9a04      	ldr	r2, [sp, #16]
    52a2:	9b05      	ldr	r3, [sp, #20]
    52a4:	f002 fdc4 	bl	7e30 <__aeabi_dsub>
    52a8:	0002      	movs	r2, r0
    52aa:	000b      	movs	r3, r1
    52ac:	0030      	movs	r0, r6
    52ae:	0039      	movs	r1, r7
    52b0:	f002 fdbe 	bl	7e30 <__aeabi_dsub>
    52b4:	9004      	str	r0, [sp, #16]
    52b6:	9105      	str	r1, [sp, #20]
    52b8:	465b      	mov	r3, fp
    52ba:	4642      	mov	r2, r8
    52bc:	3b01      	subs	r3, #1
    52be:	4313      	orrs	r3, r2
    52c0:	d100      	bne.n	52c4 <__ieee754_pow+0x4f8>
    52c2:	e1ab      	b.n	561c <__ieee754_pow+0x850>
    52c4:	2300      	movs	r3, #0
    52c6:	4c2c      	ldr	r4, [pc, #176]	; (5378 <__ieee754_pow+0x5ac>)
    52c8:	9306      	str	r3, [sp, #24]
    52ca:	9407      	str	r4, [sp, #28]
    52cc:	9800      	ldr	r0, [sp, #0]
    52ce:	9901      	ldr	r1, [sp, #4]
    52d0:	2600      	movs	r6, #0
    52d2:	000b      	movs	r3, r1
    52d4:	0032      	movs	r2, r6
    52d6:	000f      	movs	r7, r1
    52d8:	f002 fdaa 	bl	7e30 <__aeabi_dsub>
    52dc:	9a02      	ldr	r2, [sp, #8]
    52de:	9b03      	ldr	r3, [sp, #12]
    52e0:	f002 fb26 	bl	7930 <__aeabi_dmul>
    52e4:	9a00      	ldr	r2, [sp, #0]
    52e6:	9b01      	ldr	r3, [sp, #4]
    52e8:	0004      	movs	r4, r0
    52ea:	000d      	movs	r5, r1
    52ec:	9804      	ldr	r0, [sp, #16]
    52ee:	9905      	ldr	r1, [sp, #20]
    52f0:	f002 fb1e 	bl	7930 <__aeabi_dmul>
    52f4:	0002      	movs	r2, r0
    52f6:	000b      	movs	r3, r1
    52f8:	0020      	movs	r0, r4
    52fa:	0029      	movs	r1, r5
    52fc:	f001 fbd4 	bl	6aa8 <__aeabi_dadd>
    5300:	0004      	movs	r4, r0
    5302:	000d      	movs	r5, r1
    5304:	9802      	ldr	r0, [sp, #8]
    5306:	9903      	ldr	r1, [sp, #12]
    5308:	0032      	movs	r2, r6
    530a:	003b      	movs	r3, r7
    530c:	9400      	str	r4, [sp, #0]
    530e:	9501      	str	r5, [sp, #4]
    5310:	f002 fb0e 	bl	7930 <__aeabi_dmul>
    5314:	0002      	movs	r2, r0
    5316:	000b      	movs	r3, r1
    5318:	0006      	movs	r6, r0
    531a:	000f      	movs	r7, r1
    531c:	0020      	movs	r0, r4
    531e:	0029      	movs	r1, r5
    5320:	f001 fbc2 	bl	6aa8 <__aeabi_dadd>
    5324:	4b29      	ldr	r3, [pc, #164]	; (53cc <__ieee754_pow+0x600>)
    5326:	0004      	movs	r4, r0
    5328:	000d      	movs	r5, r1
    532a:	0002      	movs	r2, r0
    532c:	468b      	mov	fp, r1
    532e:	4299      	cmp	r1, r3
    5330:	dc00      	bgt.n	5334 <__ieee754_pow+0x568>
    5332:	e14f      	b.n	55d4 <__ieee754_pow+0x808>
    5334:	4b26      	ldr	r3, [pc, #152]	; (53d0 <__ieee754_pow+0x604>)
    5336:	18cb      	adds	r3, r1, r3
    5338:	4303      	orrs	r3, r0
    533a:	d000      	beq.n	533e <__ieee754_pow+0x572>
    533c:	e1e2      	b.n	5704 <__ieee754_pow+0x938>
    533e:	9800      	ldr	r0, [sp, #0]
    5340:	9901      	ldr	r1, [sp, #4]
    5342:	4a24      	ldr	r2, [pc, #144]	; (53d4 <__ieee754_pow+0x608>)
    5344:	4b24      	ldr	r3, [pc, #144]	; (53d8 <__ieee754_pow+0x60c>)
    5346:	f001 fbaf 	bl	6aa8 <__aeabi_dadd>
    534a:	0032      	movs	r2, r6
    534c:	9002      	str	r0, [sp, #8]
    534e:	9103      	str	r1, [sp, #12]
    5350:	003b      	movs	r3, r7
    5352:	0020      	movs	r0, r4
    5354:	0029      	movs	r1, r5
    5356:	f002 fd6b 	bl	7e30 <__aeabi_dsub>
    535a:	0002      	movs	r2, r0
    535c:	000b      	movs	r3, r1
    535e:	9802      	ldr	r0, [sp, #8]
    5360:	9903      	ldr	r1, [sp, #12]
    5362:	f000 fe11 	bl	5f88 <__aeabi_dcmpgt>
    5366:	46aa      	mov	sl, r5
    5368:	e038      	b.n	53dc <__ieee754_pow+0x610>
    536a:	46c0      	nop			; (mov r8, r8)
    536c:	000fffff 	.word	0x000fffff
    5370:	43400000 	.word	0x43400000
    5374:	fffffc01 	.word	0xfffffc01
    5378:	3ff00000 	.word	0x3ff00000
    537c:	0003988e 	.word	0x0003988e
    5380:	000bb679 	.word	0x000bb679
    5384:	fff00000 	.word	0xfff00000
    5388:	4a454eef 	.word	0x4a454eef
    538c:	3fca7e28 	.word	0x3fca7e28
    5390:	93c9db65 	.word	0x93c9db65
    5394:	3fcd864a 	.word	0x3fcd864a
    5398:	a91d4101 	.word	0xa91d4101
    539c:	3fd17460 	.word	0x3fd17460
    53a0:	518f264d 	.word	0x518f264d
    53a4:	3fd55555 	.word	0x3fd55555
    53a8:	db6fabff 	.word	0xdb6fabff
    53ac:	3fdb6db6 	.word	0x3fdb6db6
    53b0:	33333303 	.word	0x33333303
    53b4:	3fe33333 	.word	0x3fe33333
    53b8:	40080000 	.word	0x40080000
    53bc:	3feec709 	.word	0x3feec709
    53c0:	dc3a03fd 	.word	0xdc3a03fd
    53c4:	145b01f5 	.word	0x145b01f5
    53c8:	be3e2fe0 	.word	0xbe3e2fe0
    53cc:	408fffff 	.word	0x408fffff
    53d0:	bf700000 	.word	0xbf700000
    53d4:	652b82fe 	.word	0x652b82fe
    53d8:	3c971547 	.word	0x3c971547
    53dc:	2800      	cmp	r0, #0
    53de:	d000      	beq.n	53e2 <__ieee754_pow+0x616>
    53e0:	e190      	b.n	5704 <__ieee754_pow+0x938>
    53e2:	4aec      	ldr	r2, [pc, #944]	; (5794 <__ieee754_pow+0x9c8>)
    53e4:	4653      	mov	r3, sl
    53e6:	4694      	mov	ip, r2
    53e8:	2280      	movs	r2, #128	; 0x80
    53ea:	0352      	lsls	r2, r2, #13
    53ec:	0011      	movs	r1, r2
    53ee:	151b      	asrs	r3, r3, #20
    53f0:	4463      	add	r3, ip
    53f2:	4119      	asrs	r1, r3
    53f4:	000b      	movs	r3, r1
    53f6:	4690      	mov	r8, r2
    53f8:	4ae7      	ldr	r2, [pc, #924]	; (5798 <__ieee754_pow+0x9cc>)
    53fa:	445b      	add	r3, fp
    53fc:	4694      	mov	ip, r2
    53fe:	005c      	lsls	r4, r3, #1
    5400:	0d64      	lsrs	r4, r4, #21
    5402:	4de6      	ldr	r5, [pc, #920]	; (579c <__ieee754_pow+0x9d0>)
    5404:	4464      	add	r4, ip
    5406:	4125      	asrs	r5, r4
    5408:	001a      	movs	r2, r3
    540a:	43aa      	bics	r2, r5
    540c:	0011      	movs	r1, r2
    540e:	4642      	mov	r2, r8
    5410:	031b      	lsls	r3, r3, #12
    5412:	0b1b      	lsrs	r3, r3, #12
    5414:	4313      	orrs	r3, r2
    5416:	2214      	movs	r2, #20
    5418:	1b14      	subs	r4, r2, r4
    541a:	4123      	asrs	r3, r4
    541c:	4699      	mov	r9, r3
    541e:	465b      	mov	r3, fp
    5420:	2000      	movs	r0, #0
    5422:	2b00      	cmp	r3, #0
    5424:	da00      	bge.n	5428 <__ieee754_pow+0x65c>
    5426:	e1b0      	b.n	578a <__ieee754_pow+0x9be>
    5428:	0002      	movs	r2, r0
    542a:	000b      	movs	r3, r1
    542c:	0030      	movs	r0, r6
    542e:	0039      	movs	r1, r7
    5430:	f002 fcfe 	bl	7e30 <__aeabi_dsub>
    5434:	000b      	movs	r3, r1
    5436:	0002      	movs	r2, r0
    5438:	0006      	movs	r6, r0
    543a:	000f      	movs	r7, r1
    543c:	9800      	ldr	r0, [sp, #0]
    543e:	9901      	ldr	r1, [sp, #4]
    5440:	f001 fb32 	bl	6aa8 <__aeabi_dadd>
    5444:	464b      	mov	r3, r9
    5446:	051b      	lsls	r3, r3, #20
    5448:	000d      	movs	r5, r1
    544a:	4698      	mov	r8, r3
    544c:	2400      	movs	r4, #0
    544e:	2200      	movs	r2, #0
    5450:	4bd3      	ldr	r3, [pc, #844]	; (57a0 <__ieee754_pow+0x9d4>)
    5452:	0020      	movs	r0, r4
    5454:	0029      	movs	r1, r5
    5456:	f002 fa6b 	bl	7930 <__aeabi_dmul>
    545a:	0032      	movs	r2, r6
    545c:	9002      	str	r0, [sp, #8]
    545e:	9103      	str	r1, [sp, #12]
    5460:	003b      	movs	r3, r7
    5462:	0020      	movs	r0, r4
    5464:	0029      	movs	r1, r5
    5466:	f002 fce3 	bl	7e30 <__aeabi_dsub>
    546a:	0002      	movs	r2, r0
    546c:	000b      	movs	r3, r1
    546e:	9800      	ldr	r0, [sp, #0]
    5470:	9901      	ldr	r1, [sp, #4]
    5472:	f002 fcdd 	bl	7e30 <__aeabi_dsub>
    5476:	4acb      	ldr	r2, [pc, #812]	; (57a4 <__ieee754_pow+0x9d8>)
    5478:	4bcb      	ldr	r3, [pc, #812]	; (57a8 <__ieee754_pow+0x9dc>)
    547a:	f002 fa59 	bl	7930 <__aeabi_dmul>
    547e:	4acb      	ldr	r2, [pc, #812]	; (57ac <__ieee754_pow+0x9e0>)
    5480:	0006      	movs	r6, r0
    5482:	000f      	movs	r7, r1
    5484:	4bca      	ldr	r3, [pc, #808]	; (57b0 <__ieee754_pow+0x9e4>)
    5486:	0020      	movs	r0, r4
    5488:	0029      	movs	r1, r5
    548a:	f002 fa51 	bl	7930 <__aeabi_dmul>
    548e:	0002      	movs	r2, r0
    5490:	000b      	movs	r3, r1
    5492:	0030      	movs	r0, r6
    5494:	0039      	movs	r1, r7
    5496:	f001 fb07 	bl	6aa8 <__aeabi_dadd>
    549a:	0004      	movs	r4, r0
    549c:	000d      	movs	r5, r1
    549e:	0002      	movs	r2, r0
    54a0:	000b      	movs	r3, r1
    54a2:	9802      	ldr	r0, [sp, #8]
    54a4:	9903      	ldr	r1, [sp, #12]
    54a6:	f001 faff 	bl	6aa8 <__aeabi_dadd>
    54aa:	9a02      	ldr	r2, [sp, #8]
    54ac:	9b03      	ldr	r3, [sp, #12]
    54ae:	0006      	movs	r6, r0
    54b0:	000f      	movs	r7, r1
    54b2:	f002 fcbd 	bl	7e30 <__aeabi_dsub>
    54b6:	0002      	movs	r2, r0
    54b8:	000b      	movs	r3, r1
    54ba:	0020      	movs	r0, r4
    54bc:	0029      	movs	r1, r5
    54be:	f002 fcb7 	bl	7e30 <__aeabi_dsub>
    54c2:	0032      	movs	r2, r6
    54c4:	9000      	str	r0, [sp, #0]
    54c6:	9101      	str	r1, [sp, #4]
    54c8:	003b      	movs	r3, r7
    54ca:	0030      	movs	r0, r6
    54cc:	0039      	movs	r1, r7
    54ce:	f002 fa2f 	bl	7930 <__aeabi_dmul>
    54d2:	0004      	movs	r4, r0
    54d4:	000d      	movs	r5, r1
    54d6:	4ab7      	ldr	r2, [pc, #732]	; (57b4 <__ieee754_pow+0x9e8>)
    54d8:	4bb7      	ldr	r3, [pc, #732]	; (57b8 <__ieee754_pow+0x9ec>)
    54da:	f002 fa29 	bl	7930 <__aeabi_dmul>
    54de:	4ab7      	ldr	r2, [pc, #732]	; (57bc <__ieee754_pow+0x9f0>)
    54e0:	4bb7      	ldr	r3, [pc, #732]	; (57c0 <__ieee754_pow+0x9f4>)
    54e2:	f002 fca5 	bl	7e30 <__aeabi_dsub>
    54e6:	0022      	movs	r2, r4
    54e8:	002b      	movs	r3, r5
    54ea:	f002 fa21 	bl	7930 <__aeabi_dmul>
    54ee:	4ab5      	ldr	r2, [pc, #724]	; (57c4 <__ieee754_pow+0x9f8>)
    54f0:	4bb5      	ldr	r3, [pc, #724]	; (57c8 <__ieee754_pow+0x9fc>)
    54f2:	f001 fad9 	bl	6aa8 <__aeabi_dadd>
    54f6:	0022      	movs	r2, r4
    54f8:	002b      	movs	r3, r5
    54fa:	f002 fa19 	bl	7930 <__aeabi_dmul>
    54fe:	4ab3      	ldr	r2, [pc, #716]	; (57cc <__ieee754_pow+0xa00>)
    5500:	4bb3      	ldr	r3, [pc, #716]	; (57d0 <__ieee754_pow+0xa04>)
    5502:	f002 fc95 	bl	7e30 <__aeabi_dsub>
    5506:	0022      	movs	r2, r4
    5508:	002b      	movs	r3, r5
    550a:	f002 fa11 	bl	7930 <__aeabi_dmul>
    550e:	4ab1      	ldr	r2, [pc, #708]	; (57d4 <__ieee754_pow+0xa08>)
    5510:	4bb1      	ldr	r3, [pc, #708]	; (57d8 <__ieee754_pow+0xa0c>)
    5512:	f001 fac9 	bl	6aa8 <__aeabi_dadd>
    5516:	0022      	movs	r2, r4
    5518:	002b      	movs	r3, r5
    551a:	f002 fa09 	bl	7930 <__aeabi_dmul>
    551e:	0002      	movs	r2, r0
    5520:	000b      	movs	r3, r1
    5522:	0030      	movs	r0, r6
    5524:	0039      	movs	r1, r7
    5526:	f002 fc83 	bl	7e30 <__aeabi_dsub>
    552a:	0004      	movs	r4, r0
    552c:	000d      	movs	r5, r1
    552e:	0002      	movs	r2, r0
    5530:	000b      	movs	r3, r1
    5532:	0030      	movs	r0, r6
    5534:	0039      	movs	r1, r7
    5536:	f002 f9fb 	bl	7930 <__aeabi_dmul>
    553a:	2380      	movs	r3, #128	; 0x80
    553c:	9002      	str	r0, [sp, #8]
    553e:	9103      	str	r1, [sp, #12]
    5540:	2200      	movs	r2, #0
    5542:	05db      	lsls	r3, r3, #23
    5544:	0020      	movs	r0, r4
    5546:	0029      	movs	r1, r5
    5548:	f002 fc72 	bl	7e30 <__aeabi_dsub>
    554c:	0002      	movs	r2, r0
    554e:	000b      	movs	r3, r1
    5550:	9802      	ldr	r0, [sp, #8]
    5552:	9903      	ldr	r1, [sp, #12]
    5554:	f001 fdb8 	bl	70c8 <__aeabi_ddiv>
    5558:	9a00      	ldr	r2, [sp, #0]
    555a:	9b01      	ldr	r3, [sp, #4]
    555c:	0004      	movs	r4, r0
    555e:	000d      	movs	r5, r1
    5560:	0030      	movs	r0, r6
    5562:	0039      	movs	r1, r7
    5564:	f002 f9e4 	bl	7930 <__aeabi_dmul>
    5568:	9a00      	ldr	r2, [sp, #0]
    556a:	9b01      	ldr	r3, [sp, #4]
    556c:	f001 fa9c 	bl	6aa8 <__aeabi_dadd>
    5570:	0002      	movs	r2, r0
    5572:	000b      	movs	r3, r1
    5574:	0020      	movs	r0, r4
    5576:	0029      	movs	r1, r5
    5578:	f002 fc5a 	bl	7e30 <__aeabi_dsub>
    557c:	0032      	movs	r2, r6
    557e:	003b      	movs	r3, r7
    5580:	f002 fc56 	bl	7e30 <__aeabi_dsub>
    5584:	0002      	movs	r2, r0
    5586:	000b      	movs	r3, r1
    5588:	2000      	movs	r0, #0
    558a:	4994      	ldr	r1, [pc, #592]	; (57dc <__ieee754_pow+0xa10>)
    558c:	f002 fc50 	bl	7e30 <__aeabi_dsub>
    5590:	4643      	mov	r3, r8
    5592:	185b      	adds	r3, r3, r1
    5594:	151a      	asrs	r2, r3, #20
    5596:	2a00      	cmp	r2, #0
    5598:	dc00      	bgt.n	559c <__ieee754_pow+0x7d0>
    559a:	e149      	b.n	5830 <__ieee754_pow+0xa64>
    559c:	0019      	movs	r1, r3
    559e:	9a06      	ldr	r2, [sp, #24]
    55a0:	9b07      	ldr	r3, [sp, #28]
    55a2:	f002 f9c5 	bl	7930 <__aeabi_dmul>
    55a6:	e459      	b.n	4e5c <__ieee754_pow+0x90>
    55a8:	003a      	movs	r2, r7
    55aa:	0033      	movs	r3, r6
    55ac:	0038      	movs	r0, r7
    55ae:	0031      	movs	r1, r6
    55b0:	f002 f9be 	bl	7930 <__aeabi_dmul>
    55b4:	e452      	b.n	4e5c <__ieee754_pow+0x90>
    55b6:	4653      	mov	r3, sl
    55b8:	2b00      	cmp	r3, #0
    55ba:	db00      	blt.n	55be <__ieee754_pow+0x7f2>
    55bc:	e4d9      	b.n	4f72 <__ieee754_pow+0x1a6>
    55be:	9c00      	ldr	r4, [sp, #0]
    55c0:	9d01      	ldr	r5, [sp, #4]
    55c2:	2280      	movs	r2, #128	; 0x80
    55c4:	0612      	lsls	r2, r2, #24
    55c6:	002b      	movs	r3, r5
    55c8:	4694      	mov	ip, r2
    55ca:	4463      	add	r3, ip
    55cc:	0020      	movs	r0, r4
    55ce:	0019      	movs	r1, r3
    55d0:	f7ff fc44 	bl	4e5c <__ieee754_pow+0x90>
    55d4:	004b      	lsls	r3, r1, #1
    55d6:	085b      	lsrs	r3, r3, #1
    55d8:	469a      	mov	sl, r3
    55da:	4b81      	ldr	r3, [pc, #516]	; (57e0 <__ieee754_pow+0xa14>)
    55dc:	459a      	cmp	sl, r3
    55de:	dc00      	bgt.n	55e2 <__ieee754_pow+0x816>
    55e0:	e0b1      	b.n	5746 <__ieee754_pow+0x97a>
    55e2:	4b80      	ldr	r3, [pc, #512]	; (57e4 <__ieee754_pow+0xa18>)
    55e4:	445b      	add	r3, fp
    55e6:	431a      	orrs	r2, r3
    55e8:	d10c      	bne.n	5604 <__ieee754_pow+0x838>
    55ea:	0032      	movs	r2, r6
    55ec:	003b      	movs	r3, r7
    55ee:	f002 fc1f 	bl	7e30 <__aeabi_dsub>
    55f2:	0002      	movs	r2, r0
    55f4:	000b      	movs	r3, r1
    55f6:	9800      	ldr	r0, [sp, #0]
    55f8:	9901      	ldr	r1, [sp, #4]
    55fa:	f000 fcbb 	bl	5f74 <__aeabi_dcmple>
    55fe:	2800      	cmp	r0, #0
    5600:	d100      	bne.n	5604 <__ieee754_pow+0x838>
    5602:	e6ee      	b.n	53e2 <__ieee754_pow+0x616>
    5604:	9806      	ldr	r0, [sp, #24]
    5606:	9907      	ldr	r1, [sp, #28]
    5608:	4a77      	ldr	r2, [pc, #476]	; (57e8 <__ieee754_pow+0xa1c>)
    560a:	4b78      	ldr	r3, [pc, #480]	; (57ec <__ieee754_pow+0xa20>)
    560c:	f002 f990 	bl	7930 <__aeabi_dmul>
    5610:	4a75      	ldr	r2, [pc, #468]	; (57e8 <__ieee754_pow+0xa1c>)
    5612:	4b76      	ldr	r3, [pc, #472]	; (57ec <__ieee754_pow+0xa20>)
    5614:	f002 f98c 	bl	7930 <__aeabi_dmul>
    5618:	f7ff fc20 	bl	4e5c <__ieee754_pow+0x90>
    561c:	2300      	movs	r3, #0
    561e:	4c74      	ldr	r4, [pc, #464]	; (57f0 <__ieee754_pow+0xa24>)
    5620:	9306      	str	r3, [sp, #24]
    5622:	9407      	str	r4, [sp, #28]
    5624:	e652      	b.n	52cc <__ieee754_pow+0x500>
    5626:	0002      	movs	r2, r0
    5628:	000b      	movs	r3, r1
    562a:	2000      	movs	r0, #0
    562c:	496b      	ldr	r1, [pc, #428]	; (57dc <__ieee754_pow+0xa10>)
    562e:	f001 fd4b 	bl	70c8 <__aeabi_ddiv>
    5632:	f7ff fc32 	bl	4e9a <__ieee754_pow+0xce>
    5636:	4653      	mov	r3, sl
    5638:	2b00      	cmp	r3, #0
    563a:	db00      	blt.n	563e <__ieee754_pow+0x872>
    563c:	e499      	b.n	4f72 <__ieee754_pow+0x1a6>
    563e:	e454      	b.n	4eea <__ieee754_pow+0x11e>
    5640:	4b6c      	ldr	r3, [pc, #432]	; (57f4 <__ieee754_pow+0xa28>)
    5642:	429c      	cmp	r4, r3
    5644:	ddf7      	ble.n	5636 <__ieee754_pow+0x86a>
    5646:	4b65      	ldr	r3, [pc, #404]	; (57dc <__ieee754_pow+0xa10>)
    5648:	429c      	cmp	r4, r3
    564a:	dd00      	ble.n	564e <__ieee754_pow+0x882>
    564c:	e44a      	b.n	4ee4 <__ieee754_pow+0x118>
    564e:	2200      	movs	r2, #0
    5650:	4b62      	ldr	r3, [pc, #392]	; (57dc <__ieee754_pow+0xa10>)
    5652:	f002 fbed 	bl	7e30 <__aeabi_dsub>
    5656:	22c0      	movs	r2, #192	; 0xc0
    5658:	4b67      	ldr	r3, [pc, #412]	; (57f8 <__ieee754_pow+0xa2c>)
    565a:	05d2      	lsls	r2, r2, #23
    565c:	0004      	movs	r4, r0
    565e:	000d      	movs	r5, r1
    5660:	f002 f966 	bl	7930 <__aeabi_dmul>
    5664:	4a65      	ldr	r2, [pc, #404]	; (57fc <__ieee754_pow+0xa30>)
    5666:	0006      	movs	r6, r0
    5668:	000f      	movs	r7, r1
    566a:	4b65      	ldr	r3, [pc, #404]	; (5800 <__ieee754_pow+0xa34>)
    566c:	0020      	movs	r0, r4
    566e:	0029      	movs	r1, r5
    5670:	f002 f95e 	bl	7930 <__aeabi_dmul>
    5674:	2200      	movs	r2, #0
    5676:	9002      	str	r0, [sp, #8]
    5678:	9103      	str	r1, [sp, #12]
    567a:	4b62      	ldr	r3, [pc, #392]	; (5804 <__ieee754_pow+0xa38>)
    567c:	0020      	movs	r0, r4
    567e:	0029      	movs	r1, r5
    5680:	f002 f956 	bl	7930 <__aeabi_dmul>
    5684:	0002      	movs	r2, r0
    5686:	000b      	movs	r3, r1
    5688:	485f      	ldr	r0, [pc, #380]	; (5808 <__ieee754_pow+0xa3c>)
    568a:	4960      	ldr	r1, [pc, #384]	; (580c <__ieee754_pow+0xa40>)
    568c:	f002 fbd0 	bl	7e30 <__aeabi_dsub>
    5690:	0022      	movs	r2, r4
    5692:	002b      	movs	r3, r5
    5694:	f002 f94c 	bl	7930 <__aeabi_dmul>
    5698:	0002      	movs	r2, r0
    569a:	000b      	movs	r3, r1
    569c:	2000      	movs	r0, #0
    569e:	495c      	ldr	r1, [pc, #368]	; (5810 <__ieee754_pow+0xa44>)
    56a0:	f002 fbc6 	bl	7e30 <__aeabi_dsub>
    56a4:	0022      	movs	r2, r4
    56a6:	9004      	str	r0, [sp, #16]
    56a8:	9105      	str	r1, [sp, #20]
    56aa:	002b      	movs	r3, r5
    56ac:	0020      	movs	r0, r4
    56ae:	0029      	movs	r1, r5
    56b0:	f002 f93e 	bl	7930 <__aeabi_dmul>
    56b4:	0002      	movs	r2, r0
    56b6:	000b      	movs	r3, r1
    56b8:	9804      	ldr	r0, [sp, #16]
    56ba:	9905      	ldr	r1, [sp, #20]
    56bc:	f002 f938 	bl	7930 <__aeabi_dmul>
    56c0:	4a54      	ldr	r2, [pc, #336]	; (5814 <__ieee754_pow+0xa48>)
    56c2:	4b4d      	ldr	r3, [pc, #308]	; (57f8 <__ieee754_pow+0xa2c>)
    56c4:	f002 f934 	bl	7930 <__aeabi_dmul>
    56c8:	0002      	movs	r2, r0
    56ca:	000b      	movs	r3, r1
    56cc:	9802      	ldr	r0, [sp, #8]
    56ce:	9903      	ldr	r1, [sp, #12]
    56d0:	f002 fbae 	bl	7e30 <__aeabi_dsub>
    56d4:	0002      	movs	r2, r0
    56d6:	000b      	movs	r3, r1
    56d8:	0004      	movs	r4, r0
    56da:	000d      	movs	r5, r1
    56dc:	0030      	movs	r0, r6
    56de:	0039      	movs	r1, r7
    56e0:	f001 f9e2 	bl	6aa8 <__aeabi_dadd>
    56e4:	2000      	movs	r0, #0
    56e6:	0032      	movs	r2, r6
    56e8:	003b      	movs	r3, r7
    56ea:	9002      	str	r0, [sp, #8]
    56ec:	9103      	str	r1, [sp, #12]
    56ee:	f002 fb9f 	bl	7e30 <__aeabi_dsub>
    56f2:	0002      	movs	r2, r0
    56f4:	000b      	movs	r3, r1
    56f6:	0020      	movs	r0, r4
    56f8:	0029      	movs	r1, r5
    56fa:	f002 fb99 	bl	7e30 <__aeabi_dsub>
    56fe:	9004      	str	r0, [sp, #16]
    5700:	9105      	str	r1, [sp, #20]
    5702:	e5d9      	b.n	52b8 <__ieee754_pow+0x4ec>
    5704:	4a44      	ldr	r2, [pc, #272]	; (5818 <__ieee754_pow+0xa4c>)
    5706:	4b45      	ldr	r3, [pc, #276]	; (581c <__ieee754_pow+0xa50>)
    5708:	9806      	ldr	r0, [sp, #24]
    570a:	9907      	ldr	r1, [sp, #28]
    570c:	f002 f910 	bl	7930 <__aeabi_dmul>
    5710:	4a41      	ldr	r2, [pc, #260]	; (5818 <__ieee754_pow+0xa4c>)
    5712:	4b42      	ldr	r3, [pc, #264]	; (581c <__ieee754_pow+0xa50>)
    5714:	f002 f90c 	bl	7930 <__aeabi_dmul>
    5718:	f7ff fba0 	bl	4e5c <__ieee754_pow+0x90>
    571c:	2a00      	cmp	r2, #0
    571e:	d001      	beq.n	5724 <__ieee754_pow+0x958>
    5720:	f7ff fba9 	bl	4e76 <__ieee754_pow+0xaa>
    5724:	3214      	adds	r2, #20
    5726:	1ad3      	subs	r3, r2, r3
    5728:	002a      	movs	r2, r5
    572a:	411a      	asrs	r2, r3
    572c:	0011      	movs	r1, r2
    572e:	4099      	lsls	r1, r3
    5730:	428d      	cmp	r5, r1
    5732:	d001      	beq.n	5738 <__ieee754_pow+0x96c>
    5734:	f7ff fb76 	bl	4e24 <__ieee754_pow+0x58>
    5738:	2301      	movs	r3, #1
    573a:	401a      	ands	r2, r3
    573c:	18db      	adds	r3, r3, r3
    573e:	1a9b      	subs	r3, r3, r2
    5740:	469b      	mov	fp, r3
    5742:	f7ff fb6f 	bl	4e24 <__ieee754_pow+0x58>
    5746:	2200      	movs	r2, #0
    5748:	4b31      	ldr	r3, [pc, #196]	; (5810 <__ieee754_pow+0xa44>)
    574a:	4690      	mov	r8, r2
    574c:	4691      	mov	r9, r2
    574e:	459a      	cmp	sl, r3
    5750:	dc00      	bgt.n	5754 <__ieee754_pow+0x988>
    5752:	e67b      	b.n	544c <__ieee754_pow+0x680>
    5754:	e645      	b.n	53e2 <__ieee754_pow+0x616>
    5756:	0002      	movs	r2, r0
    5758:	000b      	movs	r3, r1
    575a:	f002 fb69 	bl	7e30 <__aeabi_dsub>
    575e:	0002      	movs	r2, r0
    5760:	000b      	movs	r3, r1
    5762:	f001 fcb1 	bl	70c8 <__aeabi_ddiv>
    5766:	f7ff fb79 	bl	4e5c <__ieee754_pow+0x90>
    576a:	2380      	movs	r3, #128	; 0x80
    576c:	4c2c      	ldr	r4, [pc, #176]	; (5820 <__ieee754_pow+0xa54>)
    576e:	05db      	lsls	r3, r3, #23
    5770:	9308      	str	r3, [sp, #32]
    5772:	9409      	str	r4, [sp, #36]	; 0x24
    5774:	4b2b      	ldr	r3, [pc, #172]	; (5824 <__ieee754_pow+0xa58>)
    5776:	4c2c      	ldr	r4, [pc, #176]	; (5828 <__ieee754_pow+0xa5c>)
    5778:	2200      	movs	r2, #0
    577a:	930c      	str	r3, [sp, #48]	; 0x30
    577c:	940d      	str	r4, [sp, #52]	; 0x34
    577e:	2480      	movs	r4, #128	; 0x80
    5780:	4b2a      	ldr	r3, [pc, #168]	; (582c <__ieee754_pow+0xa60>)
    5782:	02e4      	lsls	r4, r4, #11
    5784:	9206      	str	r2, [sp, #24]
    5786:	9307      	str	r3, [sp, #28]
    5788:	e449      	b.n	501e <__ieee754_pow+0x252>
    578a:	464b      	mov	r3, r9
    578c:	425b      	negs	r3, r3
    578e:	4699      	mov	r9, r3
    5790:	e64a      	b.n	5428 <__ieee754_pow+0x65c>
    5792:	46c0      	nop			; (mov r8, r8)
    5794:	fffffc02 	.word	0xfffffc02
    5798:	fffffc01 	.word	0xfffffc01
    579c:	000fffff 	.word	0x000fffff
    57a0:	3fe62e43 	.word	0x3fe62e43
    57a4:	fefa39ef 	.word	0xfefa39ef
    57a8:	3fe62e42 	.word	0x3fe62e42
    57ac:	0ca86c39 	.word	0x0ca86c39
    57b0:	be205c61 	.word	0xbe205c61
    57b4:	72bea4d0 	.word	0x72bea4d0
    57b8:	3e663769 	.word	0x3e663769
    57bc:	c5d26bf1 	.word	0xc5d26bf1
    57c0:	3ebbbd41 	.word	0x3ebbbd41
    57c4:	af25de2c 	.word	0xaf25de2c
    57c8:	3f11566a 	.word	0x3f11566a
    57cc:	16bebd93 	.word	0x16bebd93
    57d0:	3f66c16c 	.word	0x3f66c16c
    57d4:	5555553e 	.word	0x5555553e
    57d8:	3fc55555 	.word	0x3fc55555
    57dc:	3ff00000 	.word	0x3ff00000
    57e0:	4090cbff 	.word	0x4090cbff
    57e4:	3f6f3400 	.word	0x3f6f3400
    57e8:	c2f8f359 	.word	0xc2f8f359
    57ec:	01a56e1f 	.word	0x01a56e1f
    57f0:	bff00000 	.word	0xbff00000
    57f4:	3feffffe 	.word	0x3feffffe
    57f8:	3ff71547 	.word	0x3ff71547
    57fc:	f85ddf44 	.word	0xf85ddf44
    5800:	3e54ae0b 	.word	0x3e54ae0b
    5804:	3fd00000 	.word	0x3fd00000
    5808:	55555555 	.word	0x55555555
    580c:	3fd55555 	.word	0x3fd55555
    5810:	3fe00000 	.word	0x3fe00000
    5814:	652b82fe 	.word	0x652b82fe
    5818:	8800759c 	.word	0x8800759c
    581c:	7e37e43c 	.word	0x7e37e43c
    5820:	3fe2b803 	.word	0x3fe2b803
    5824:	43cfd006 	.word	0x43cfd006
    5828:	3e4cfdeb 	.word	0x3e4cfdeb
    582c:	3ff80000 	.word	0x3ff80000
    5830:	464a      	mov	r2, r9
    5832:	f000 f999 	bl	5b68 <scalbn>
    5836:	e6b2      	b.n	559e <__ieee754_pow+0x7d2>

00005838 <__ieee754_sqrt>:
    5838:	4b6c      	ldr	r3, [pc, #432]	; (59ec <__ieee754_sqrt+0x1b4>)
    583a:	b5f0      	push	{r4, r5, r6, r7, lr}
    583c:	000a      	movs	r2, r1
    583e:	4646      	mov	r6, r8
    5840:	000d      	movs	r5, r1
    5842:	46d6      	mov	lr, sl
    5844:	464f      	mov	r7, r9
    5846:	0019      	movs	r1, r3
    5848:	b5c0      	push	{r6, r7, lr}
    584a:	0004      	movs	r4, r0
    584c:	0006      	movs	r6, r0
    584e:	4029      	ands	r1, r5
    5850:	4299      	cmp	r1, r3
    5852:	d100      	bne.n	5856 <__ieee754_sqrt+0x1e>
    5854:	e0a7      	b.n	59a6 <__ieee754_sqrt+0x16e>
    5856:	2d00      	cmp	r5, #0
    5858:	dc00      	bgt.n	585c <__ieee754_sqrt+0x24>
    585a:	e081      	b.n	5960 <__ieee754_sqrt+0x128>
    585c:	152f      	asrs	r7, r5, #20
    585e:	d100      	bne.n	5862 <__ieee754_sqrt+0x2a>
    5860:	e08e      	b.n	5980 <__ieee754_sqrt+0x148>
    5862:	4b63      	ldr	r3, [pc, #396]	; (59f0 <__ieee754_sqrt+0x1b8>)
    5864:	0312      	lsls	r2, r2, #12
    5866:	469c      	mov	ip, r3
    5868:	2380      	movs	r3, #128	; 0x80
    586a:	0b12      	lsrs	r2, r2, #12
    586c:	035b      	lsls	r3, r3, #13
    586e:	4467      	add	r7, ip
    5870:	431a      	orrs	r2, r3
    5872:	07fb      	lsls	r3, r7, #31
    5874:	d468      	bmi.n	5948 <__ieee754_sqrt+0x110>
    5876:	107b      	asrs	r3, r7, #1
    5878:	469c      	mov	ip, r3
    587a:	0fe3      	lsrs	r3, r4, #31
    587c:	189b      	adds	r3, r3, r2
    587e:	189b      	adds	r3, r3, r2
    5880:	2280      	movs	r2, #128	; 0x80
    5882:	2116      	movs	r1, #22
    5884:	2600      	movs	r6, #0
    5886:	2500      	movs	r5, #0
    5888:	0064      	lsls	r4, r4, #1
    588a:	0392      	lsls	r2, r2, #14
    588c:	18a8      	adds	r0, r5, r2
    588e:	4298      	cmp	r0, r3
    5890:	dc02      	bgt.n	5898 <__ieee754_sqrt+0x60>
    5892:	1885      	adds	r5, r0, r2
    5894:	1a1b      	subs	r3, r3, r0
    5896:	18b6      	adds	r6, r6, r2
    5898:	0fe0      	lsrs	r0, r4, #31
    589a:	005b      	lsls	r3, r3, #1
    589c:	3901      	subs	r1, #1
    589e:	181b      	adds	r3, r3, r0
    58a0:	0064      	lsls	r4, r4, #1
    58a2:	0852      	lsrs	r2, r2, #1
    58a4:	2900      	cmp	r1, #0
    58a6:	d1f1      	bne.n	588c <__ieee754_sqrt+0x54>
    58a8:	2200      	movs	r2, #0
    58aa:	4692      	mov	sl, r2
    58ac:	4690      	mov	r8, r2
    58ae:	2280      	movs	r2, #128	; 0x80
    58b0:	2020      	movs	r0, #32
    58b2:	0612      	lsls	r2, r2, #24
    58b4:	e009      	b.n	58ca <__ieee754_sqrt+0x92>
    58b6:	42ab      	cmp	r3, r5
    58b8:	d038      	beq.n	592c <__ieee754_sqrt+0xf4>
    58ba:	0fe1      	lsrs	r1, r4, #31
    58bc:	18c9      	adds	r1, r1, r3
    58be:	3801      	subs	r0, #1
    58c0:	18cb      	adds	r3, r1, r3
    58c2:	0064      	lsls	r4, r4, #1
    58c4:	0852      	lsrs	r2, r2, #1
    58c6:	2800      	cmp	r0, #0
    58c8:	d018      	beq.n	58fc <__ieee754_sqrt+0xc4>
    58ca:	4641      	mov	r1, r8
    58cc:	1851      	adds	r1, r2, r1
    58ce:	42ab      	cmp	r3, r5
    58d0:	ddf1      	ble.n	58b6 <__ieee754_sqrt+0x7e>
    58d2:	188f      	adds	r7, r1, r2
    58d4:	46b8      	mov	r8, r7
    58d6:	46a9      	mov	r9, r5
    58d8:	2900      	cmp	r1, #0
    58da:	db30      	blt.n	593e <__ieee754_sqrt+0x106>
    58dc:	1b5b      	subs	r3, r3, r5
    58de:	428c      	cmp	r4, r1
    58e0:	41ad      	sbcs	r5, r5
    58e2:	426d      	negs	r5, r5
    58e4:	1b5b      	subs	r3, r3, r5
    58e6:	1a64      	subs	r4, r4, r1
    58e8:	0fe1      	lsrs	r1, r4, #31
    58ea:	18c9      	adds	r1, r1, r3
    58ec:	3801      	subs	r0, #1
    58ee:	4492      	add	sl, r2
    58f0:	464d      	mov	r5, r9
    58f2:	18cb      	adds	r3, r1, r3
    58f4:	0064      	lsls	r4, r4, #1
    58f6:	0852      	lsrs	r2, r2, #1
    58f8:	2800      	cmp	r0, #0
    58fa:	d1e6      	bne.n	58ca <__ieee754_sqrt+0x92>
    58fc:	4323      	orrs	r3, r4
    58fe:	d128      	bne.n	5952 <__ieee754_sqrt+0x11a>
    5900:	4653      	mov	r3, sl
    5902:	085b      	lsrs	r3, r3, #1
    5904:	493b      	ldr	r1, [pc, #236]	; (59f4 <__ieee754_sqrt+0x1bc>)
    5906:	1072      	asrs	r2, r6, #1
    5908:	4688      	mov	r8, r1
    590a:	4442      	add	r2, r8
    590c:	07f1      	lsls	r1, r6, #31
    590e:	d502      	bpl.n	5916 <__ieee754_sqrt+0xde>
    5910:	2180      	movs	r1, #128	; 0x80
    5912:	0609      	lsls	r1, r1, #24
    5914:	430b      	orrs	r3, r1
    5916:	4661      	mov	r1, ip
    5918:	001e      	movs	r6, r3
    591a:	050f      	lsls	r7, r1, #20
    591c:	18bd      	adds	r5, r7, r2
    591e:	0030      	movs	r0, r6
    5920:	0029      	movs	r1, r5
    5922:	bc1c      	pop	{r2, r3, r4}
    5924:	4690      	mov	r8, r2
    5926:	4699      	mov	r9, r3
    5928:	46a2      	mov	sl, r4
    592a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    592c:	42a1      	cmp	r1, r4
    592e:	d8c4      	bhi.n	58ba <__ieee754_sqrt+0x82>
    5930:	188f      	adds	r7, r1, r2
    5932:	46b8      	mov	r8, r7
    5934:	2900      	cmp	r1, #0
    5936:	db42      	blt.n	59be <__ieee754_sqrt+0x186>
    5938:	4699      	mov	r9, r3
    593a:	2300      	movs	r3, #0
    593c:	e7d3      	b.n	58e6 <__ieee754_sqrt+0xae>
    593e:	2f00      	cmp	r7, #0
    5940:	db2f      	blt.n	59a2 <__ieee754_sqrt+0x16a>
    5942:	1c6f      	adds	r7, r5, #1
    5944:	46b9      	mov	r9, r7
    5946:	e7c9      	b.n	58dc <__ieee754_sqrt+0xa4>
    5948:	0fe1      	lsrs	r1, r4, #31
    594a:	0052      	lsls	r2, r2, #1
    594c:	188a      	adds	r2, r1, r2
    594e:	0064      	lsls	r4, r4, #1
    5950:	e791      	b.n	5876 <__ieee754_sqrt+0x3e>
    5952:	4653      	mov	r3, sl
    5954:	3301      	adds	r3, #1
    5956:	d035      	beq.n	59c4 <__ieee754_sqrt+0x18c>
    5958:	4653      	mov	r3, sl
    595a:	3301      	adds	r3, #1
    595c:	085b      	lsrs	r3, r3, #1
    595e:	e7d1      	b.n	5904 <__ieee754_sqrt+0xcc>
    5960:	006b      	lsls	r3, r5, #1
    5962:	085b      	lsrs	r3, r3, #1
    5964:	4303      	orrs	r3, r0
    5966:	d0da      	beq.n	591e <__ieee754_sqrt+0xe6>
    5968:	2700      	movs	r7, #0
    596a:	2d00      	cmp	r5, #0
    596c:	d132      	bne.n	59d4 <__ieee754_sqrt+0x19c>
    596e:	0ae2      	lsrs	r2, r4, #11
    5970:	3f15      	subs	r7, #21
    5972:	0564      	lsls	r4, r4, #21
    5974:	2a00      	cmp	r2, #0
    5976:	d0fa      	beq.n	596e <__ieee754_sqrt+0x136>
    5978:	2380      	movs	r3, #128	; 0x80
    597a:	035b      	lsls	r3, r3, #13
    597c:	421a      	tst	r2, r3
    597e:	d124      	bne.n	59ca <__ieee754_sqrt+0x192>
    5980:	2080      	movs	r0, #128	; 0x80
    5982:	2300      	movs	r3, #0
    5984:	0340      	lsls	r0, r0, #13
    5986:	e000      	b.n	598a <__ieee754_sqrt+0x152>
    5988:	000b      	movs	r3, r1
    598a:	0052      	lsls	r2, r2, #1
    598c:	1c59      	adds	r1, r3, #1
    598e:	4202      	tst	r2, r0
    5990:	d0fa      	beq.n	5988 <__ieee754_sqrt+0x150>
    5992:	2020      	movs	r0, #32
    5994:	1a40      	subs	r0, r0, r1
    5996:	1aff      	subs	r7, r7, r3
    5998:	0023      	movs	r3, r4
    599a:	40c3      	lsrs	r3, r0
    599c:	408c      	lsls	r4, r1
    599e:	431a      	orrs	r2, r3
    59a0:	e75f      	b.n	5862 <__ieee754_sqrt+0x2a>
    59a2:	46a9      	mov	r9, r5
    59a4:	e79a      	b.n	58dc <__ieee754_sqrt+0xa4>
    59a6:	002b      	movs	r3, r5
    59a8:	0002      	movs	r2, r0
    59aa:	0029      	movs	r1, r5
    59ac:	f001 ffc0 	bl	7930 <__aeabi_dmul>
    59b0:	0032      	movs	r2, r6
    59b2:	002b      	movs	r3, r5
    59b4:	f001 f878 	bl	6aa8 <__aeabi_dadd>
    59b8:	0006      	movs	r6, r0
    59ba:	000d      	movs	r5, r1
    59bc:	e7af      	b.n	591e <__ieee754_sqrt+0xe6>
    59be:	2f00      	cmp	r7, #0
    59c0:	dabf      	bge.n	5942 <__ieee754_sqrt+0x10a>
    59c2:	e7b9      	b.n	5938 <__ieee754_sqrt+0x100>
    59c4:	3601      	adds	r6, #1
    59c6:	2300      	movs	r3, #0
    59c8:	e79c      	b.n	5904 <__ieee754_sqrt+0xcc>
    59ca:	2301      	movs	r3, #1
    59cc:	2100      	movs	r1, #0
    59ce:	2020      	movs	r0, #32
    59d0:	425b      	negs	r3, r3
    59d2:	e7e0      	b.n	5996 <__ieee754_sqrt+0x15e>
    59d4:	002b      	movs	r3, r5
    59d6:	0002      	movs	r2, r0
    59d8:	0029      	movs	r1, r5
    59da:	f002 fa29 	bl	7e30 <__aeabi_dsub>
    59de:	0002      	movs	r2, r0
    59e0:	000b      	movs	r3, r1
    59e2:	f001 fb71 	bl	70c8 <__aeabi_ddiv>
    59e6:	0006      	movs	r6, r0
    59e8:	000d      	movs	r5, r1
    59ea:	e798      	b.n	591e <__ieee754_sqrt+0xe6>
    59ec:	7ff00000 	.word	0x7ff00000
    59f0:	fffffc01 	.word	0xfffffc01
    59f4:	3fe00000 	.word	0x3fe00000

000059f8 <fabs>:
    59f8:	0049      	lsls	r1, r1, #1
    59fa:	084b      	lsrs	r3, r1, #1
    59fc:	0019      	movs	r1, r3
    59fe:	4770      	bx	lr

00005a00 <finite>:
    5a00:	4b03      	ldr	r3, [pc, #12]	; (5a10 <finite+0x10>)
    5a02:	0048      	lsls	r0, r1, #1
    5a04:	469c      	mov	ip, r3
    5a06:	0840      	lsrs	r0, r0, #1
    5a08:	4460      	add	r0, ip
    5a0a:	0fc0      	lsrs	r0, r0, #31
    5a0c:	4770      	bx	lr
    5a0e:	46c0      	nop			; (mov r8, r8)
    5a10:	80100000 	.word	0x80100000

00005a14 <matherr>:
    5a14:	2000      	movs	r0, #0
    5a16:	4770      	bx	lr

00005a18 <nan>:
    5a18:	2000      	movs	r0, #0
    5a1a:	4901      	ldr	r1, [pc, #4]	; (5a20 <nan+0x8>)
    5a1c:	4770      	bx	lr
    5a1e:	46c0      	nop			; (mov r8, r8)
    5a20:	7ff80000 	.word	0x7ff80000

00005a24 <rint>:
    5a24:	b5f0      	push	{r4, r5, r6, r7, lr}
    5a26:	46c6      	mov	lr, r8
    5a28:	b500      	push	{lr}
    5a2a:	0fcb      	lsrs	r3, r1, #31
    5a2c:	4698      	mov	r8, r3
    5a2e:	4c4a      	ldr	r4, [pc, #296]	; (5b58 <rint+0x134>)
    5a30:	004b      	lsls	r3, r1, #1
    5a32:	0d5b      	lsrs	r3, r3, #21
    5a34:	191e      	adds	r6, r3, r4
    5a36:	b082      	sub	sp, #8
    5a38:	0007      	movs	r7, r0
    5a3a:	000a      	movs	r2, r1
    5a3c:	2e13      	cmp	r6, #19
    5a3e:	dc35      	bgt.n	5aac <rint+0x88>
    5a40:	2e00      	cmp	r6, #0
    5a42:	db57      	blt.n	5af4 <rint+0xd0>
    5a44:	4b45      	ldr	r3, [pc, #276]	; (5b5c <rint+0x138>)
    5a46:	0004      	movs	r4, r0
    5a48:	4133      	asrs	r3, r6
    5a4a:	001f      	movs	r7, r3
    5a4c:	400f      	ands	r7, r1
    5a4e:	4307      	orrs	r7, r0
    5a50:	000d      	movs	r5, r1
    5a52:	2f00      	cmp	r7, #0
    5a54:	d024      	beq.n	5aa0 <rint+0x7c>
    5a56:	085b      	lsrs	r3, r3, #1
    5a58:	001c      	movs	r4, r3
    5a5a:	400c      	ands	r4, r1
    5a5c:	4320      	orrs	r0, r4
    5a5e:	2700      	movs	r7, #0
    5a60:	2800      	cmp	r0, #0
    5a62:	d007      	beq.n	5a74 <rint+0x50>
    5a64:	2e13      	cmp	r6, #19
    5a66:	d100      	bne.n	5a6a <rint+0x46>
    5a68:	e073      	b.n	5b52 <rint+0x12e>
    5a6a:	2280      	movs	r2, #128	; 0x80
    5a6c:	02d2      	lsls	r2, r2, #11
    5a6e:	4132      	asrs	r2, r6
    5a70:	4399      	bics	r1, r3
    5a72:	430a      	orrs	r2, r1
    5a74:	4643      	mov	r3, r8
    5a76:	00de      	lsls	r6, r3, #3
    5a78:	4b39      	ldr	r3, [pc, #228]	; (5b60 <rint+0x13c>)
    5a7a:	0011      	movs	r1, r2
    5a7c:	199e      	adds	r6, r3, r6
    5a7e:	6834      	ldr	r4, [r6, #0]
    5a80:	6875      	ldr	r5, [r6, #4]
    5a82:	0038      	movs	r0, r7
    5a84:	0022      	movs	r2, r4
    5a86:	002b      	movs	r3, r5
    5a88:	f001 f80e 	bl	6aa8 <__aeabi_dadd>
    5a8c:	9000      	str	r0, [sp, #0]
    5a8e:	9101      	str	r1, [sp, #4]
    5a90:	9800      	ldr	r0, [sp, #0]
    5a92:	9901      	ldr	r1, [sp, #4]
    5a94:	0022      	movs	r2, r4
    5a96:	002b      	movs	r3, r5
    5a98:	f002 f9ca 	bl	7e30 <__aeabi_dsub>
    5a9c:	0004      	movs	r4, r0
    5a9e:	000d      	movs	r5, r1
    5aa0:	0020      	movs	r0, r4
    5aa2:	0029      	movs	r1, r5
    5aa4:	b002      	add	sp, #8
    5aa6:	bc04      	pop	{r2}
    5aa8:	4690      	mov	r8, r2
    5aaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5aac:	2e33      	cmp	r6, #51	; 0x33
    5aae:	dd0c      	ble.n	5aca <rint+0xa6>
    5ab0:	2380      	movs	r3, #128	; 0x80
    5ab2:	0004      	movs	r4, r0
    5ab4:	00db      	lsls	r3, r3, #3
    5ab6:	000d      	movs	r5, r1
    5ab8:	429e      	cmp	r6, r3
    5aba:	d1f1      	bne.n	5aa0 <rint+0x7c>
    5abc:	0002      	movs	r2, r0
    5abe:	000b      	movs	r3, r1
    5ac0:	f000 fff2 	bl	6aa8 <__aeabi_dadd>
    5ac4:	0004      	movs	r4, r0
    5ac6:	000d      	movs	r5, r1
    5ac8:	e7ea      	b.n	5aa0 <rint+0x7c>
    5aca:	4c26      	ldr	r4, [pc, #152]	; (5b64 <rint+0x140>)
    5acc:	000d      	movs	r5, r1
    5ace:	46a4      	mov	ip, r4
    5ad0:	2401      	movs	r4, #1
    5ad2:	4463      	add	r3, ip
    5ad4:	4264      	negs	r4, r4
    5ad6:	40dc      	lsrs	r4, r3
    5ad8:	46a4      	mov	ip, r4
    5ada:	4661      	mov	r1, ip
    5adc:	0004      	movs	r4, r0
    5ade:	4201      	tst	r1, r0
    5ae0:	d0de      	beq.n	5aa0 <rint+0x7c>
    5ae2:	0849      	lsrs	r1, r1, #1
    5ae4:	4201      	tst	r1, r0
    5ae6:	d0c5      	beq.n	5a74 <rint+0x50>
    5ae8:	2780      	movs	r7, #128	; 0x80
    5aea:	05ff      	lsls	r7, r7, #23
    5aec:	411f      	asrs	r7, r3
    5aee:	4388      	bics	r0, r1
    5af0:	4307      	orrs	r7, r0
    5af2:	e7bf      	b.n	5a74 <rint+0x50>
    5af4:	004b      	lsls	r3, r1, #1
    5af6:	085b      	lsrs	r3, r3, #1
    5af8:	4303      	orrs	r3, r0
    5afa:	0004      	movs	r4, r0
    5afc:	000d      	movs	r5, r1
    5afe:	2b00      	cmp	r3, #0
    5b00:	d0ce      	beq.n	5aa0 <rint+0x7c>
    5b02:	030b      	lsls	r3, r1, #12
    5b04:	0b1b      	lsrs	r3, r3, #12
    5b06:	4303      	orrs	r3, r0
    5b08:	001a      	movs	r2, r3
    5b0a:	425b      	negs	r3, r3
    5b0c:	4313      	orrs	r3, r2
    5b0e:	2280      	movs	r2, #128	; 0x80
    5b10:	0b1b      	lsrs	r3, r3, #12
    5b12:	0312      	lsls	r2, r2, #12
    5b14:	4013      	ands	r3, r2
    5b16:	0c4a      	lsrs	r2, r1, #17
    5b18:	0452      	lsls	r2, r2, #17
    5b1a:	4313      	orrs	r3, r2
    5b1c:	0019      	movs	r1, r3
    5b1e:	4643      	mov	r3, r8
    5b20:	00da      	lsls	r2, r3, #3
    5b22:	4b0f      	ldr	r3, [pc, #60]	; (5b60 <rint+0x13c>)
    5b24:	189b      	adds	r3, r3, r2
    5b26:	681c      	ldr	r4, [r3, #0]
    5b28:	685d      	ldr	r5, [r3, #4]
    5b2a:	0022      	movs	r2, r4
    5b2c:	002b      	movs	r3, r5
    5b2e:	f000 ffbb 	bl	6aa8 <__aeabi_dadd>
    5b32:	9000      	str	r0, [sp, #0]
    5b34:	9101      	str	r1, [sp, #4]
    5b36:	9800      	ldr	r0, [sp, #0]
    5b38:	9901      	ldr	r1, [sp, #4]
    5b3a:	0022      	movs	r2, r4
    5b3c:	002b      	movs	r3, r5
    5b3e:	f002 f977 	bl	7e30 <__aeabi_dsub>
    5b42:	4642      	mov	r2, r8
    5b44:	004b      	lsls	r3, r1, #1
    5b46:	085b      	lsrs	r3, r3, #1
    5b48:	07d6      	lsls	r6, r2, #31
    5b4a:	4333      	orrs	r3, r6
    5b4c:	0004      	movs	r4, r0
    5b4e:	001d      	movs	r5, r3
    5b50:	e7a6      	b.n	5aa0 <rint+0x7c>
    5b52:	2780      	movs	r7, #128	; 0x80
    5b54:	063f      	lsls	r7, r7, #24
    5b56:	e788      	b.n	5a6a <rint+0x46>
    5b58:	fffffc01 	.word	0xfffffc01
    5b5c:	000fffff 	.word	0x000fffff
    5b60:	0000f7d0 	.word	0x0000f7d0
    5b64:	fffffbed 	.word	0xfffffbed

00005b68 <scalbn>:
    5b68:	004b      	lsls	r3, r1, #1
    5b6a:	b570      	push	{r4, r5, r6, lr}
    5b6c:	0d5b      	lsrs	r3, r3, #21
    5b6e:	0014      	movs	r4, r2
    5b70:	000a      	movs	r2, r1
    5b72:	2b00      	cmp	r3, #0
    5b74:	d11a      	bne.n	5bac <scalbn+0x44>
    5b76:	004b      	lsls	r3, r1, #1
    5b78:	085b      	lsrs	r3, r3, #1
    5b7a:	4303      	orrs	r3, r0
    5b7c:	d015      	beq.n	5baa <scalbn+0x42>
    5b7e:	2200      	movs	r2, #0
    5b80:	4b22      	ldr	r3, [pc, #136]	; (5c0c <scalbn+0xa4>)
    5b82:	f001 fed5 	bl	7930 <__aeabi_dmul>
    5b86:	4b22      	ldr	r3, [pc, #136]	; (5c10 <scalbn+0xa8>)
    5b88:	000a      	movs	r2, r1
    5b8a:	429c      	cmp	r4, r3
    5b8c:	db22      	blt.n	5bd4 <scalbn+0x6c>
    5b8e:	004b      	lsls	r3, r1, #1
    5b90:	0d5b      	lsrs	r3, r3, #21
    5b92:	3b36      	subs	r3, #54	; 0x36
    5b94:	4d1f      	ldr	r5, [pc, #124]	; (5c14 <scalbn+0xac>)
    5b96:	18e3      	adds	r3, r4, r3
    5b98:	42ab      	cmp	r3, r5
    5b9a:	dc20      	bgt.n	5bde <scalbn+0x76>
    5b9c:	2b00      	cmp	r3, #0
    5b9e:	dd0d      	ble.n	5bbc <scalbn+0x54>
    5ba0:	4c1d      	ldr	r4, [pc, #116]	; (5c18 <scalbn+0xb0>)
    5ba2:	051b      	lsls	r3, r3, #20
    5ba4:	4022      	ands	r2, r4
    5ba6:	431a      	orrs	r2, r3
    5ba8:	0011      	movs	r1, r2
    5baa:	bd70      	pop	{r4, r5, r6, pc}
    5bac:	4d1b      	ldr	r5, [pc, #108]	; (5c1c <scalbn+0xb4>)
    5bae:	42ab      	cmp	r3, r5
    5bb0:	d1f0      	bne.n	5b94 <scalbn+0x2c>
    5bb2:	0002      	movs	r2, r0
    5bb4:	000b      	movs	r3, r1
    5bb6:	f000 ff77 	bl	6aa8 <__aeabi_dadd>
    5bba:	e7f6      	b.n	5baa <scalbn+0x42>
    5bbc:	001d      	movs	r5, r3
    5bbe:	3535      	adds	r5, #53	; 0x35
    5bc0:	da18      	bge.n	5bf4 <scalbn+0x8c>
    5bc2:	4b17      	ldr	r3, [pc, #92]	; (5c20 <scalbn+0xb8>)
    5bc4:	0002      	movs	r2, r0
    5bc6:	429c      	cmp	r4, r3
    5bc8:	dc0a      	bgt.n	5be0 <scalbn+0x78>
    5bca:	000b      	movs	r3, r1
    5bcc:	4815      	ldr	r0, [pc, #84]	; (5c24 <scalbn+0xbc>)
    5bce:	4916      	ldr	r1, [pc, #88]	; (5c28 <scalbn+0xc0>)
    5bd0:	f000 f832 	bl	5c38 <copysign>
    5bd4:	4a13      	ldr	r2, [pc, #76]	; (5c24 <scalbn+0xbc>)
    5bd6:	4b14      	ldr	r3, [pc, #80]	; (5c28 <scalbn+0xc0>)
    5bd8:	f001 feaa 	bl	7930 <__aeabi_dmul>
    5bdc:	e7e5      	b.n	5baa <scalbn+0x42>
    5bde:	0002      	movs	r2, r0
    5be0:	000b      	movs	r3, r1
    5be2:	4812      	ldr	r0, [pc, #72]	; (5c2c <scalbn+0xc4>)
    5be4:	4912      	ldr	r1, [pc, #72]	; (5c30 <scalbn+0xc8>)
    5be6:	f000 f827 	bl	5c38 <copysign>
    5bea:	4a10      	ldr	r2, [pc, #64]	; (5c2c <scalbn+0xc4>)
    5bec:	4b10      	ldr	r3, [pc, #64]	; (5c30 <scalbn+0xc8>)
    5bee:	f001 fe9f 	bl	7930 <__aeabi_dmul>
    5bf2:	e7da      	b.n	5baa <scalbn+0x42>
    5bf4:	4c08      	ldr	r4, [pc, #32]	; (5c18 <scalbn+0xb0>)
    5bf6:	3336      	adds	r3, #54	; 0x36
    5bf8:	4022      	ands	r2, r4
    5bfa:	051b      	lsls	r3, r3, #20
    5bfc:	4313      	orrs	r3, r2
    5bfe:	0019      	movs	r1, r3
    5c00:	2200      	movs	r2, #0
    5c02:	4b0c      	ldr	r3, [pc, #48]	; (5c34 <scalbn+0xcc>)
    5c04:	f001 fe94 	bl	7930 <__aeabi_dmul>
    5c08:	e7cf      	b.n	5baa <scalbn+0x42>
    5c0a:	46c0      	nop			; (mov r8, r8)
    5c0c:	43500000 	.word	0x43500000
    5c10:	ffff3cb0 	.word	0xffff3cb0
    5c14:	000007fe 	.word	0x000007fe
    5c18:	800fffff 	.word	0x800fffff
    5c1c:	000007ff 	.word	0x000007ff
    5c20:	0000c350 	.word	0x0000c350
    5c24:	c2f8f359 	.word	0xc2f8f359
    5c28:	01a56e1f 	.word	0x01a56e1f
    5c2c:	8800759c 	.word	0x8800759c
    5c30:	7e37e43c 	.word	0x7e37e43c
    5c34:	3c900000 	.word	0x3c900000

00005c38 <copysign>:
    5c38:	b530      	push	{r4, r5, lr}
    5c3a:	004a      	lsls	r2, r1, #1
    5c3c:	0fdb      	lsrs	r3, r3, #31
    5c3e:	07db      	lsls	r3, r3, #31
    5c40:	0852      	lsrs	r2, r2, #1
    5c42:	431a      	orrs	r2, r3
    5c44:	0011      	movs	r1, r2
    5c46:	bd30      	pop	{r4, r5, pc}

00005c48 <__udivsi3>:
    5c48:	2200      	movs	r2, #0
    5c4a:	0843      	lsrs	r3, r0, #1
    5c4c:	428b      	cmp	r3, r1
    5c4e:	d374      	bcc.n	5d3a <__udivsi3+0xf2>
    5c50:	0903      	lsrs	r3, r0, #4
    5c52:	428b      	cmp	r3, r1
    5c54:	d35f      	bcc.n	5d16 <__udivsi3+0xce>
    5c56:	0a03      	lsrs	r3, r0, #8
    5c58:	428b      	cmp	r3, r1
    5c5a:	d344      	bcc.n	5ce6 <__udivsi3+0x9e>
    5c5c:	0b03      	lsrs	r3, r0, #12
    5c5e:	428b      	cmp	r3, r1
    5c60:	d328      	bcc.n	5cb4 <__udivsi3+0x6c>
    5c62:	0c03      	lsrs	r3, r0, #16
    5c64:	428b      	cmp	r3, r1
    5c66:	d30d      	bcc.n	5c84 <__udivsi3+0x3c>
    5c68:	22ff      	movs	r2, #255	; 0xff
    5c6a:	0209      	lsls	r1, r1, #8
    5c6c:	ba12      	rev	r2, r2
    5c6e:	0c03      	lsrs	r3, r0, #16
    5c70:	428b      	cmp	r3, r1
    5c72:	d302      	bcc.n	5c7a <__udivsi3+0x32>
    5c74:	1212      	asrs	r2, r2, #8
    5c76:	0209      	lsls	r1, r1, #8
    5c78:	d065      	beq.n	5d46 <__udivsi3+0xfe>
    5c7a:	0b03      	lsrs	r3, r0, #12
    5c7c:	428b      	cmp	r3, r1
    5c7e:	d319      	bcc.n	5cb4 <__udivsi3+0x6c>
    5c80:	e000      	b.n	5c84 <__udivsi3+0x3c>
    5c82:	0a09      	lsrs	r1, r1, #8
    5c84:	0bc3      	lsrs	r3, r0, #15
    5c86:	428b      	cmp	r3, r1
    5c88:	d301      	bcc.n	5c8e <__udivsi3+0x46>
    5c8a:	03cb      	lsls	r3, r1, #15
    5c8c:	1ac0      	subs	r0, r0, r3
    5c8e:	4152      	adcs	r2, r2
    5c90:	0b83      	lsrs	r3, r0, #14
    5c92:	428b      	cmp	r3, r1
    5c94:	d301      	bcc.n	5c9a <__udivsi3+0x52>
    5c96:	038b      	lsls	r3, r1, #14
    5c98:	1ac0      	subs	r0, r0, r3
    5c9a:	4152      	adcs	r2, r2
    5c9c:	0b43      	lsrs	r3, r0, #13
    5c9e:	428b      	cmp	r3, r1
    5ca0:	d301      	bcc.n	5ca6 <__udivsi3+0x5e>
    5ca2:	034b      	lsls	r3, r1, #13
    5ca4:	1ac0      	subs	r0, r0, r3
    5ca6:	4152      	adcs	r2, r2
    5ca8:	0b03      	lsrs	r3, r0, #12
    5caa:	428b      	cmp	r3, r1
    5cac:	d301      	bcc.n	5cb2 <__udivsi3+0x6a>
    5cae:	030b      	lsls	r3, r1, #12
    5cb0:	1ac0      	subs	r0, r0, r3
    5cb2:	4152      	adcs	r2, r2
    5cb4:	0ac3      	lsrs	r3, r0, #11
    5cb6:	428b      	cmp	r3, r1
    5cb8:	d301      	bcc.n	5cbe <__udivsi3+0x76>
    5cba:	02cb      	lsls	r3, r1, #11
    5cbc:	1ac0      	subs	r0, r0, r3
    5cbe:	4152      	adcs	r2, r2
    5cc0:	0a83      	lsrs	r3, r0, #10
    5cc2:	428b      	cmp	r3, r1
    5cc4:	d301      	bcc.n	5cca <__udivsi3+0x82>
    5cc6:	028b      	lsls	r3, r1, #10
    5cc8:	1ac0      	subs	r0, r0, r3
    5cca:	4152      	adcs	r2, r2
    5ccc:	0a43      	lsrs	r3, r0, #9
    5cce:	428b      	cmp	r3, r1
    5cd0:	d301      	bcc.n	5cd6 <__udivsi3+0x8e>
    5cd2:	024b      	lsls	r3, r1, #9
    5cd4:	1ac0      	subs	r0, r0, r3
    5cd6:	4152      	adcs	r2, r2
    5cd8:	0a03      	lsrs	r3, r0, #8
    5cda:	428b      	cmp	r3, r1
    5cdc:	d301      	bcc.n	5ce2 <__udivsi3+0x9a>
    5cde:	020b      	lsls	r3, r1, #8
    5ce0:	1ac0      	subs	r0, r0, r3
    5ce2:	4152      	adcs	r2, r2
    5ce4:	d2cd      	bcs.n	5c82 <__udivsi3+0x3a>
    5ce6:	09c3      	lsrs	r3, r0, #7
    5ce8:	428b      	cmp	r3, r1
    5cea:	d301      	bcc.n	5cf0 <__udivsi3+0xa8>
    5cec:	01cb      	lsls	r3, r1, #7
    5cee:	1ac0      	subs	r0, r0, r3
    5cf0:	4152      	adcs	r2, r2
    5cf2:	0983      	lsrs	r3, r0, #6
    5cf4:	428b      	cmp	r3, r1
    5cf6:	d301      	bcc.n	5cfc <__udivsi3+0xb4>
    5cf8:	018b      	lsls	r3, r1, #6
    5cfa:	1ac0      	subs	r0, r0, r3
    5cfc:	4152      	adcs	r2, r2
    5cfe:	0943      	lsrs	r3, r0, #5
    5d00:	428b      	cmp	r3, r1
    5d02:	d301      	bcc.n	5d08 <__udivsi3+0xc0>
    5d04:	014b      	lsls	r3, r1, #5
    5d06:	1ac0      	subs	r0, r0, r3
    5d08:	4152      	adcs	r2, r2
    5d0a:	0903      	lsrs	r3, r0, #4
    5d0c:	428b      	cmp	r3, r1
    5d0e:	d301      	bcc.n	5d14 <__udivsi3+0xcc>
    5d10:	010b      	lsls	r3, r1, #4
    5d12:	1ac0      	subs	r0, r0, r3
    5d14:	4152      	adcs	r2, r2
    5d16:	08c3      	lsrs	r3, r0, #3
    5d18:	428b      	cmp	r3, r1
    5d1a:	d301      	bcc.n	5d20 <__udivsi3+0xd8>
    5d1c:	00cb      	lsls	r3, r1, #3
    5d1e:	1ac0      	subs	r0, r0, r3
    5d20:	4152      	adcs	r2, r2
    5d22:	0883      	lsrs	r3, r0, #2
    5d24:	428b      	cmp	r3, r1
    5d26:	d301      	bcc.n	5d2c <__udivsi3+0xe4>
    5d28:	008b      	lsls	r3, r1, #2
    5d2a:	1ac0      	subs	r0, r0, r3
    5d2c:	4152      	adcs	r2, r2
    5d2e:	0843      	lsrs	r3, r0, #1
    5d30:	428b      	cmp	r3, r1
    5d32:	d301      	bcc.n	5d38 <__udivsi3+0xf0>
    5d34:	004b      	lsls	r3, r1, #1
    5d36:	1ac0      	subs	r0, r0, r3
    5d38:	4152      	adcs	r2, r2
    5d3a:	1a41      	subs	r1, r0, r1
    5d3c:	d200      	bcs.n	5d40 <__udivsi3+0xf8>
    5d3e:	4601      	mov	r1, r0
    5d40:	4152      	adcs	r2, r2
    5d42:	4610      	mov	r0, r2
    5d44:	4770      	bx	lr
    5d46:	e7ff      	b.n	5d48 <__udivsi3+0x100>
    5d48:	b501      	push	{r0, lr}
    5d4a:	2000      	movs	r0, #0
    5d4c:	f000 f8f0 	bl	5f30 <__aeabi_idiv0>
    5d50:	bd02      	pop	{r1, pc}
    5d52:	46c0      	nop			; (mov r8, r8)

00005d54 <__aeabi_uidivmod>:
    5d54:	2900      	cmp	r1, #0
    5d56:	d0f7      	beq.n	5d48 <__udivsi3+0x100>
    5d58:	e776      	b.n	5c48 <__udivsi3>
    5d5a:	4770      	bx	lr

00005d5c <__divsi3>:
    5d5c:	4603      	mov	r3, r0
    5d5e:	430b      	orrs	r3, r1
    5d60:	d47f      	bmi.n	5e62 <__divsi3+0x106>
    5d62:	2200      	movs	r2, #0
    5d64:	0843      	lsrs	r3, r0, #1
    5d66:	428b      	cmp	r3, r1
    5d68:	d374      	bcc.n	5e54 <__divsi3+0xf8>
    5d6a:	0903      	lsrs	r3, r0, #4
    5d6c:	428b      	cmp	r3, r1
    5d6e:	d35f      	bcc.n	5e30 <__divsi3+0xd4>
    5d70:	0a03      	lsrs	r3, r0, #8
    5d72:	428b      	cmp	r3, r1
    5d74:	d344      	bcc.n	5e00 <__divsi3+0xa4>
    5d76:	0b03      	lsrs	r3, r0, #12
    5d78:	428b      	cmp	r3, r1
    5d7a:	d328      	bcc.n	5dce <__divsi3+0x72>
    5d7c:	0c03      	lsrs	r3, r0, #16
    5d7e:	428b      	cmp	r3, r1
    5d80:	d30d      	bcc.n	5d9e <__divsi3+0x42>
    5d82:	22ff      	movs	r2, #255	; 0xff
    5d84:	0209      	lsls	r1, r1, #8
    5d86:	ba12      	rev	r2, r2
    5d88:	0c03      	lsrs	r3, r0, #16
    5d8a:	428b      	cmp	r3, r1
    5d8c:	d302      	bcc.n	5d94 <__divsi3+0x38>
    5d8e:	1212      	asrs	r2, r2, #8
    5d90:	0209      	lsls	r1, r1, #8
    5d92:	d065      	beq.n	5e60 <__divsi3+0x104>
    5d94:	0b03      	lsrs	r3, r0, #12
    5d96:	428b      	cmp	r3, r1
    5d98:	d319      	bcc.n	5dce <__divsi3+0x72>
    5d9a:	e000      	b.n	5d9e <__divsi3+0x42>
    5d9c:	0a09      	lsrs	r1, r1, #8
    5d9e:	0bc3      	lsrs	r3, r0, #15
    5da0:	428b      	cmp	r3, r1
    5da2:	d301      	bcc.n	5da8 <__divsi3+0x4c>
    5da4:	03cb      	lsls	r3, r1, #15
    5da6:	1ac0      	subs	r0, r0, r3
    5da8:	4152      	adcs	r2, r2
    5daa:	0b83      	lsrs	r3, r0, #14
    5dac:	428b      	cmp	r3, r1
    5dae:	d301      	bcc.n	5db4 <__divsi3+0x58>
    5db0:	038b      	lsls	r3, r1, #14
    5db2:	1ac0      	subs	r0, r0, r3
    5db4:	4152      	adcs	r2, r2
    5db6:	0b43      	lsrs	r3, r0, #13
    5db8:	428b      	cmp	r3, r1
    5dba:	d301      	bcc.n	5dc0 <__divsi3+0x64>
    5dbc:	034b      	lsls	r3, r1, #13
    5dbe:	1ac0      	subs	r0, r0, r3
    5dc0:	4152      	adcs	r2, r2
    5dc2:	0b03      	lsrs	r3, r0, #12
    5dc4:	428b      	cmp	r3, r1
    5dc6:	d301      	bcc.n	5dcc <__divsi3+0x70>
    5dc8:	030b      	lsls	r3, r1, #12
    5dca:	1ac0      	subs	r0, r0, r3
    5dcc:	4152      	adcs	r2, r2
    5dce:	0ac3      	lsrs	r3, r0, #11
    5dd0:	428b      	cmp	r3, r1
    5dd2:	d301      	bcc.n	5dd8 <__divsi3+0x7c>
    5dd4:	02cb      	lsls	r3, r1, #11
    5dd6:	1ac0      	subs	r0, r0, r3
    5dd8:	4152      	adcs	r2, r2
    5dda:	0a83      	lsrs	r3, r0, #10
    5ddc:	428b      	cmp	r3, r1
    5dde:	d301      	bcc.n	5de4 <__divsi3+0x88>
    5de0:	028b      	lsls	r3, r1, #10
    5de2:	1ac0      	subs	r0, r0, r3
    5de4:	4152      	adcs	r2, r2
    5de6:	0a43      	lsrs	r3, r0, #9
    5de8:	428b      	cmp	r3, r1
    5dea:	d301      	bcc.n	5df0 <__divsi3+0x94>
    5dec:	024b      	lsls	r3, r1, #9
    5dee:	1ac0      	subs	r0, r0, r3
    5df0:	4152      	adcs	r2, r2
    5df2:	0a03      	lsrs	r3, r0, #8
    5df4:	428b      	cmp	r3, r1
    5df6:	d301      	bcc.n	5dfc <__divsi3+0xa0>
    5df8:	020b      	lsls	r3, r1, #8
    5dfa:	1ac0      	subs	r0, r0, r3
    5dfc:	4152      	adcs	r2, r2
    5dfe:	d2cd      	bcs.n	5d9c <__divsi3+0x40>
    5e00:	09c3      	lsrs	r3, r0, #7
    5e02:	428b      	cmp	r3, r1
    5e04:	d301      	bcc.n	5e0a <__divsi3+0xae>
    5e06:	01cb      	lsls	r3, r1, #7
    5e08:	1ac0      	subs	r0, r0, r3
    5e0a:	4152      	adcs	r2, r2
    5e0c:	0983      	lsrs	r3, r0, #6
    5e0e:	428b      	cmp	r3, r1
    5e10:	d301      	bcc.n	5e16 <__divsi3+0xba>
    5e12:	018b      	lsls	r3, r1, #6
    5e14:	1ac0      	subs	r0, r0, r3
    5e16:	4152      	adcs	r2, r2
    5e18:	0943      	lsrs	r3, r0, #5
    5e1a:	428b      	cmp	r3, r1
    5e1c:	d301      	bcc.n	5e22 <__divsi3+0xc6>
    5e1e:	014b      	lsls	r3, r1, #5
    5e20:	1ac0      	subs	r0, r0, r3
    5e22:	4152      	adcs	r2, r2
    5e24:	0903      	lsrs	r3, r0, #4
    5e26:	428b      	cmp	r3, r1
    5e28:	d301      	bcc.n	5e2e <__divsi3+0xd2>
    5e2a:	010b      	lsls	r3, r1, #4
    5e2c:	1ac0      	subs	r0, r0, r3
    5e2e:	4152      	adcs	r2, r2
    5e30:	08c3      	lsrs	r3, r0, #3
    5e32:	428b      	cmp	r3, r1
    5e34:	d301      	bcc.n	5e3a <__divsi3+0xde>
    5e36:	00cb      	lsls	r3, r1, #3
    5e38:	1ac0      	subs	r0, r0, r3
    5e3a:	4152      	adcs	r2, r2
    5e3c:	0883      	lsrs	r3, r0, #2
    5e3e:	428b      	cmp	r3, r1
    5e40:	d301      	bcc.n	5e46 <__divsi3+0xea>
    5e42:	008b      	lsls	r3, r1, #2
    5e44:	1ac0      	subs	r0, r0, r3
    5e46:	4152      	adcs	r2, r2
    5e48:	0843      	lsrs	r3, r0, #1
    5e4a:	428b      	cmp	r3, r1
    5e4c:	d301      	bcc.n	5e52 <__divsi3+0xf6>
    5e4e:	004b      	lsls	r3, r1, #1
    5e50:	1ac0      	subs	r0, r0, r3
    5e52:	4152      	adcs	r2, r2
    5e54:	1a41      	subs	r1, r0, r1
    5e56:	d200      	bcs.n	5e5a <__divsi3+0xfe>
    5e58:	4601      	mov	r1, r0
    5e5a:	4152      	adcs	r2, r2
    5e5c:	4610      	mov	r0, r2
    5e5e:	4770      	bx	lr
    5e60:	e05d      	b.n	5f1e <__divsi3+0x1c2>
    5e62:	0fca      	lsrs	r2, r1, #31
    5e64:	d000      	beq.n	5e68 <__divsi3+0x10c>
    5e66:	4249      	negs	r1, r1
    5e68:	1003      	asrs	r3, r0, #32
    5e6a:	d300      	bcc.n	5e6e <__divsi3+0x112>
    5e6c:	4240      	negs	r0, r0
    5e6e:	4053      	eors	r3, r2
    5e70:	2200      	movs	r2, #0
    5e72:	469c      	mov	ip, r3
    5e74:	0903      	lsrs	r3, r0, #4
    5e76:	428b      	cmp	r3, r1
    5e78:	d32d      	bcc.n	5ed6 <__divsi3+0x17a>
    5e7a:	0a03      	lsrs	r3, r0, #8
    5e7c:	428b      	cmp	r3, r1
    5e7e:	d312      	bcc.n	5ea6 <__divsi3+0x14a>
    5e80:	22fc      	movs	r2, #252	; 0xfc
    5e82:	0189      	lsls	r1, r1, #6
    5e84:	ba12      	rev	r2, r2
    5e86:	0a03      	lsrs	r3, r0, #8
    5e88:	428b      	cmp	r3, r1
    5e8a:	d30c      	bcc.n	5ea6 <__divsi3+0x14a>
    5e8c:	0189      	lsls	r1, r1, #6
    5e8e:	1192      	asrs	r2, r2, #6
    5e90:	428b      	cmp	r3, r1
    5e92:	d308      	bcc.n	5ea6 <__divsi3+0x14a>
    5e94:	0189      	lsls	r1, r1, #6
    5e96:	1192      	asrs	r2, r2, #6
    5e98:	428b      	cmp	r3, r1
    5e9a:	d304      	bcc.n	5ea6 <__divsi3+0x14a>
    5e9c:	0189      	lsls	r1, r1, #6
    5e9e:	d03a      	beq.n	5f16 <__divsi3+0x1ba>
    5ea0:	1192      	asrs	r2, r2, #6
    5ea2:	e000      	b.n	5ea6 <__divsi3+0x14a>
    5ea4:	0989      	lsrs	r1, r1, #6
    5ea6:	09c3      	lsrs	r3, r0, #7
    5ea8:	428b      	cmp	r3, r1
    5eaa:	d301      	bcc.n	5eb0 <__divsi3+0x154>
    5eac:	01cb      	lsls	r3, r1, #7
    5eae:	1ac0      	subs	r0, r0, r3
    5eb0:	4152      	adcs	r2, r2
    5eb2:	0983      	lsrs	r3, r0, #6
    5eb4:	428b      	cmp	r3, r1
    5eb6:	d301      	bcc.n	5ebc <__divsi3+0x160>
    5eb8:	018b      	lsls	r3, r1, #6
    5eba:	1ac0      	subs	r0, r0, r3
    5ebc:	4152      	adcs	r2, r2
    5ebe:	0943      	lsrs	r3, r0, #5
    5ec0:	428b      	cmp	r3, r1
    5ec2:	d301      	bcc.n	5ec8 <__divsi3+0x16c>
    5ec4:	014b      	lsls	r3, r1, #5
    5ec6:	1ac0      	subs	r0, r0, r3
    5ec8:	4152      	adcs	r2, r2
    5eca:	0903      	lsrs	r3, r0, #4
    5ecc:	428b      	cmp	r3, r1
    5ece:	d301      	bcc.n	5ed4 <__divsi3+0x178>
    5ed0:	010b      	lsls	r3, r1, #4
    5ed2:	1ac0      	subs	r0, r0, r3
    5ed4:	4152      	adcs	r2, r2
    5ed6:	08c3      	lsrs	r3, r0, #3
    5ed8:	428b      	cmp	r3, r1
    5eda:	d301      	bcc.n	5ee0 <__divsi3+0x184>
    5edc:	00cb      	lsls	r3, r1, #3
    5ede:	1ac0      	subs	r0, r0, r3
    5ee0:	4152      	adcs	r2, r2
    5ee2:	0883      	lsrs	r3, r0, #2
    5ee4:	428b      	cmp	r3, r1
    5ee6:	d301      	bcc.n	5eec <__divsi3+0x190>
    5ee8:	008b      	lsls	r3, r1, #2
    5eea:	1ac0      	subs	r0, r0, r3
    5eec:	4152      	adcs	r2, r2
    5eee:	d2d9      	bcs.n	5ea4 <__divsi3+0x148>
    5ef0:	0843      	lsrs	r3, r0, #1
    5ef2:	428b      	cmp	r3, r1
    5ef4:	d301      	bcc.n	5efa <__divsi3+0x19e>
    5ef6:	004b      	lsls	r3, r1, #1
    5ef8:	1ac0      	subs	r0, r0, r3
    5efa:	4152      	adcs	r2, r2
    5efc:	1a41      	subs	r1, r0, r1
    5efe:	d200      	bcs.n	5f02 <__divsi3+0x1a6>
    5f00:	4601      	mov	r1, r0
    5f02:	4663      	mov	r3, ip
    5f04:	4152      	adcs	r2, r2
    5f06:	105b      	asrs	r3, r3, #1
    5f08:	4610      	mov	r0, r2
    5f0a:	d301      	bcc.n	5f10 <__divsi3+0x1b4>
    5f0c:	4240      	negs	r0, r0
    5f0e:	2b00      	cmp	r3, #0
    5f10:	d500      	bpl.n	5f14 <__divsi3+0x1b8>
    5f12:	4249      	negs	r1, r1
    5f14:	4770      	bx	lr
    5f16:	4663      	mov	r3, ip
    5f18:	105b      	asrs	r3, r3, #1
    5f1a:	d300      	bcc.n	5f1e <__divsi3+0x1c2>
    5f1c:	4240      	negs	r0, r0
    5f1e:	b501      	push	{r0, lr}
    5f20:	2000      	movs	r0, #0
    5f22:	f000 f805 	bl	5f30 <__aeabi_idiv0>
    5f26:	bd02      	pop	{r1, pc}

00005f28 <__aeabi_idivmod>:
    5f28:	2900      	cmp	r1, #0
    5f2a:	d0f8      	beq.n	5f1e <__divsi3+0x1c2>
    5f2c:	e716      	b.n	5d5c <__divsi3>
    5f2e:	4770      	bx	lr

00005f30 <__aeabi_idiv0>:
    5f30:	4770      	bx	lr
    5f32:	46c0      	nop			; (mov r8, r8)

00005f34 <__aeabi_cdrcmple>:
    5f34:	4684      	mov	ip, r0
    5f36:	1c10      	adds	r0, r2, #0
    5f38:	4662      	mov	r2, ip
    5f3a:	468c      	mov	ip, r1
    5f3c:	1c19      	adds	r1, r3, #0
    5f3e:	4663      	mov	r3, ip
    5f40:	e000      	b.n	5f44 <__aeabi_cdcmpeq>
    5f42:	46c0      	nop			; (mov r8, r8)

00005f44 <__aeabi_cdcmpeq>:
    5f44:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    5f46:	f001 fc91 	bl	786c <__ledf2>
    5f4a:	2800      	cmp	r0, #0
    5f4c:	d401      	bmi.n	5f52 <__aeabi_cdcmpeq+0xe>
    5f4e:	2100      	movs	r1, #0
    5f50:	42c8      	cmn	r0, r1
    5f52:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00005f54 <__aeabi_dcmpeq>:
    5f54:	b510      	push	{r4, lr}
    5f56:	f001 fbeb 	bl	7730 <__eqdf2>
    5f5a:	4240      	negs	r0, r0
    5f5c:	3001      	adds	r0, #1
    5f5e:	bd10      	pop	{r4, pc}

00005f60 <__aeabi_dcmplt>:
    5f60:	b510      	push	{r4, lr}
    5f62:	f001 fc83 	bl	786c <__ledf2>
    5f66:	2800      	cmp	r0, #0
    5f68:	db01      	blt.n	5f6e <__aeabi_dcmplt+0xe>
    5f6a:	2000      	movs	r0, #0
    5f6c:	bd10      	pop	{r4, pc}
    5f6e:	2001      	movs	r0, #1
    5f70:	bd10      	pop	{r4, pc}
    5f72:	46c0      	nop			; (mov r8, r8)

00005f74 <__aeabi_dcmple>:
    5f74:	b510      	push	{r4, lr}
    5f76:	f001 fc79 	bl	786c <__ledf2>
    5f7a:	2800      	cmp	r0, #0
    5f7c:	dd01      	ble.n	5f82 <__aeabi_dcmple+0xe>
    5f7e:	2000      	movs	r0, #0
    5f80:	bd10      	pop	{r4, pc}
    5f82:	2001      	movs	r0, #1
    5f84:	bd10      	pop	{r4, pc}
    5f86:	46c0      	nop			; (mov r8, r8)

00005f88 <__aeabi_dcmpgt>:
    5f88:	b510      	push	{r4, lr}
    5f8a:	f001 fc0b 	bl	77a4 <__gedf2>
    5f8e:	2800      	cmp	r0, #0
    5f90:	dc01      	bgt.n	5f96 <__aeabi_dcmpgt+0xe>
    5f92:	2000      	movs	r0, #0
    5f94:	bd10      	pop	{r4, pc}
    5f96:	2001      	movs	r0, #1
    5f98:	bd10      	pop	{r4, pc}
    5f9a:	46c0      	nop			; (mov r8, r8)

00005f9c <__aeabi_dcmpge>:
    5f9c:	b510      	push	{r4, lr}
    5f9e:	f001 fc01 	bl	77a4 <__gedf2>
    5fa2:	2800      	cmp	r0, #0
    5fa4:	da01      	bge.n	5faa <__aeabi_dcmpge+0xe>
    5fa6:	2000      	movs	r0, #0
    5fa8:	bd10      	pop	{r4, pc}
    5faa:	2001      	movs	r0, #1
    5fac:	bd10      	pop	{r4, pc}
    5fae:	46c0      	nop			; (mov r8, r8)

00005fb0 <__aeabi_ldivmod>:
    5fb0:	2b00      	cmp	r3, #0
    5fb2:	d115      	bne.n	5fe0 <__aeabi_ldivmod+0x30>
    5fb4:	2a00      	cmp	r2, #0
    5fb6:	d113      	bne.n	5fe0 <__aeabi_ldivmod+0x30>
    5fb8:	2900      	cmp	r1, #0
    5fba:	db06      	blt.n	5fca <__aeabi_ldivmod+0x1a>
    5fbc:	dc01      	bgt.n	5fc2 <__aeabi_ldivmod+0x12>
    5fbe:	2800      	cmp	r0, #0
    5fc0:	d006      	beq.n	5fd0 <__aeabi_ldivmod+0x20>
    5fc2:	2000      	movs	r0, #0
    5fc4:	43c0      	mvns	r0, r0
    5fc6:	0841      	lsrs	r1, r0, #1
    5fc8:	e002      	b.n	5fd0 <__aeabi_ldivmod+0x20>
    5fca:	2180      	movs	r1, #128	; 0x80
    5fcc:	0609      	lsls	r1, r1, #24
    5fce:	2000      	movs	r0, #0
    5fd0:	b407      	push	{r0, r1, r2}
    5fd2:	4802      	ldr	r0, [pc, #8]	; (5fdc <__aeabi_ldivmod+0x2c>)
    5fd4:	a101      	add	r1, pc, #4	; (adr r1, 5fdc <__aeabi_ldivmod+0x2c>)
    5fd6:	1840      	adds	r0, r0, r1
    5fd8:	9002      	str	r0, [sp, #8]
    5fda:	bd03      	pop	{r0, r1, pc}
    5fdc:	ffffff55 	.word	0xffffff55
    5fe0:	b403      	push	{r0, r1}
    5fe2:	4668      	mov	r0, sp
    5fe4:	b501      	push	{r0, lr}
    5fe6:	9802      	ldr	r0, [sp, #8]
    5fe8:	f000 f866 	bl	60b8 <__gnu_ldivmod_helper>
    5fec:	9b01      	ldr	r3, [sp, #4]
    5fee:	469e      	mov	lr, r3
    5ff0:	b002      	add	sp, #8
    5ff2:	bc0c      	pop	{r2, r3}
    5ff4:	4770      	bx	lr
    5ff6:	46c0      	nop			; (mov r8, r8)

00005ff8 <__aeabi_lmul>:
    5ff8:	b5f0      	push	{r4, r5, r6, r7, lr}
    5ffa:	46ce      	mov	lr, r9
    5ffc:	4647      	mov	r7, r8
    5ffe:	0415      	lsls	r5, r2, #16
    6000:	0c2d      	lsrs	r5, r5, #16
    6002:	002e      	movs	r6, r5
    6004:	b580      	push	{r7, lr}
    6006:	0407      	lsls	r7, r0, #16
    6008:	0c14      	lsrs	r4, r2, #16
    600a:	0c3f      	lsrs	r7, r7, #16
    600c:	4699      	mov	r9, r3
    600e:	0c03      	lsrs	r3, r0, #16
    6010:	437e      	muls	r6, r7
    6012:	435d      	muls	r5, r3
    6014:	4367      	muls	r7, r4
    6016:	4363      	muls	r3, r4
    6018:	197f      	adds	r7, r7, r5
    601a:	0c34      	lsrs	r4, r6, #16
    601c:	19e4      	adds	r4, r4, r7
    601e:	469c      	mov	ip, r3
    6020:	42a5      	cmp	r5, r4
    6022:	d903      	bls.n	602c <__aeabi_lmul+0x34>
    6024:	2380      	movs	r3, #128	; 0x80
    6026:	025b      	lsls	r3, r3, #9
    6028:	4698      	mov	r8, r3
    602a:	44c4      	add	ip, r8
    602c:	464b      	mov	r3, r9
    602e:	4351      	muls	r1, r2
    6030:	4343      	muls	r3, r0
    6032:	0436      	lsls	r6, r6, #16
    6034:	0c36      	lsrs	r6, r6, #16
    6036:	0c25      	lsrs	r5, r4, #16
    6038:	0424      	lsls	r4, r4, #16
    603a:	4465      	add	r5, ip
    603c:	19a4      	adds	r4, r4, r6
    603e:	1859      	adds	r1, r3, r1
    6040:	1949      	adds	r1, r1, r5
    6042:	0020      	movs	r0, r4
    6044:	bc0c      	pop	{r2, r3}
    6046:	4690      	mov	r8, r2
    6048:	4699      	mov	r9, r3
    604a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000604c <__aeabi_f2uiz>:
    604c:	219e      	movs	r1, #158	; 0x9e
    604e:	b510      	push	{r4, lr}
    6050:	05c9      	lsls	r1, r1, #23
    6052:	1c04      	adds	r4, r0, #0
    6054:	f002 fbdc 	bl	8810 <__aeabi_fcmpge>
    6058:	2800      	cmp	r0, #0
    605a:	d103      	bne.n	6064 <__aeabi_f2uiz+0x18>
    605c:	1c20      	adds	r0, r4, #0
    605e:	f000 fcbd 	bl	69dc <__aeabi_f2iz>
    6062:	bd10      	pop	{r4, pc}
    6064:	219e      	movs	r1, #158	; 0x9e
    6066:	1c20      	adds	r0, r4, #0
    6068:	05c9      	lsls	r1, r1, #23
    606a:	f000 fb1b 	bl	66a4 <__aeabi_fsub>
    606e:	f000 fcb5 	bl	69dc <__aeabi_f2iz>
    6072:	2380      	movs	r3, #128	; 0x80
    6074:	061b      	lsls	r3, r3, #24
    6076:	469c      	mov	ip, r3
    6078:	4460      	add	r0, ip
    607a:	e7f2      	b.n	6062 <__aeabi_f2uiz+0x16>

0000607c <__aeabi_d2uiz>:
    607c:	b570      	push	{r4, r5, r6, lr}
    607e:	2200      	movs	r2, #0
    6080:	4b0c      	ldr	r3, [pc, #48]	; (60b4 <__aeabi_d2uiz+0x38>)
    6082:	0004      	movs	r4, r0
    6084:	000d      	movs	r5, r1
    6086:	f7ff ff89 	bl	5f9c <__aeabi_dcmpge>
    608a:	2800      	cmp	r0, #0
    608c:	d104      	bne.n	6098 <__aeabi_d2uiz+0x1c>
    608e:	0020      	movs	r0, r4
    6090:	0029      	movs	r1, r5
    6092:	f002 fa03 	bl	849c <__aeabi_d2iz>
    6096:	bd70      	pop	{r4, r5, r6, pc}
    6098:	4b06      	ldr	r3, [pc, #24]	; (60b4 <__aeabi_d2uiz+0x38>)
    609a:	2200      	movs	r2, #0
    609c:	0020      	movs	r0, r4
    609e:	0029      	movs	r1, r5
    60a0:	f001 fec6 	bl	7e30 <__aeabi_dsub>
    60a4:	f002 f9fa 	bl	849c <__aeabi_d2iz>
    60a8:	2380      	movs	r3, #128	; 0x80
    60aa:	061b      	lsls	r3, r3, #24
    60ac:	469c      	mov	ip, r3
    60ae:	4460      	add	r0, ip
    60b0:	e7f1      	b.n	6096 <__aeabi_d2uiz+0x1a>
    60b2:	46c0      	nop			; (mov r8, r8)
    60b4:	41e00000 	.word	0x41e00000

000060b8 <__gnu_ldivmod_helper>:
    60b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    60ba:	b083      	sub	sp, #12
    60bc:	0016      	movs	r6, r2
    60be:	001f      	movs	r7, r3
    60c0:	9000      	str	r0, [sp, #0]
    60c2:	9101      	str	r1, [sp, #4]
    60c4:	f002 fbcc 	bl	8860 <__divdi3>
    60c8:	0004      	movs	r4, r0
    60ca:	000d      	movs	r5, r1
    60cc:	0002      	movs	r2, r0
    60ce:	000b      	movs	r3, r1
    60d0:	0030      	movs	r0, r6
    60d2:	0039      	movs	r1, r7
    60d4:	f7ff ff90 	bl	5ff8 <__aeabi_lmul>
    60d8:	9a00      	ldr	r2, [sp, #0]
    60da:	9b01      	ldr	r3, [sp, #4]
    60dc:	1a12      	subs	r2, r2, r0
    60de:	418b      	sbcs	r3, r1
    60e0:	9908      	ldr	r1, [sp, #32]
    60e2:	0020      	movs	r0, r4
    60e4:	600a      	str	r2, [r1, #0]
    60e6:	604b      	str	r3, [r1, #4]
    60e8:	0029      	movs	r1, r5
    60ea:	b003      	add	sp, #12
    60ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    60ee:	46c0      	nop			; (mov r8, r8)

000060f0 <__aeabi_fadd>:
    60f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    60f2:	46c6      	mov	lr, r8
    60f4:	024e      	lsls	r6, r1, #9
    60f6:	0247      	lsls	r7, r0, #9
    60f8:	0a76      	lsrs	r6, r6, #9
    60fa:	0a7b      	lsrs	r3, r7, #9
    60fc:	0044      	lsls	r4, r0, #1
    60fe:	0fc5      	lsrs	r5, r0, #31
    6100:	00f7      	lsls	r7, r6, #3
    6102:	0048      	lsls	r0, r1, #1
    6104:	4698      	mov	r8, r3
    6106:	b500      	push	{lr}
    6108:	0e24      	lsrs	r4, r4, #24
    610a:	002a      	movs	r2, r5
    610c:	00db      	lsls	r3, r3, #3
    610e:	0e00      	lsrs	r0, r0, #24
    6110:	0fc9      	lsrs	r1, r1, #31
    6112:	46bc      	mov	ip, r7
    6114:	428d      	cmp	r5, r1
    6116:	d067      	beq.n	61e8 <__aeabi_fadd+0xf8>
    6118:	1a22      	subs	r2, r4, r0
    611a:	2a00      	cmp	r2, #0
    611c:	dc00      	bgt.n	6120 <__aeabi_fadd+0x30>
    611e:	e0a5      	b.n	626c <__aeabi_fadd+0x17c>
    6120:	2800      	cmp	r0, #0
    6122:	d13a      	bne.n	619a <__aeabi_fadd+0xaa>
    6124:	2f00      	cmp	r7, #0
    6126:	d100      	bne.n	612a <__aeabi_fadd+0x3a>
    6128:	e093      	b.n	6252 <__aeabi_fadd+0x162>
    612a:	1e51      	subs	r1, r2, #1
    612c:	2900      	cmp	r1, #0
    612e:	d000      	beq.n	6132 <__aeabi_fadd+0x42>
    6130:	e0bc      	b.n	62ac <__aeabi_fadd+0x1bc>
    6132:	2401      	movs	r4, #1
    6134:	1bdb      	subs	r3, r3, r7
    6136:	015a      	lsls	r2, r3, #5
    6138:	d546      	bpl.n	61c8 <__aeabi_fadd+0xd8>
    613a:	019b      	lsls	r3, r3, #6
    613c:	099e      	lsrs	r6, r3, #6
    613e:	0030      	movs	r0, r6
    6140:	f002 fb70 	bl	8824 <__clzsi2>
    6144:	3805      	subs	r0, #5
    6146:	4086      	lsls	r6, r0
    6148:	4284      	cmp	r4, r0
    614a:	dd00      	ble.n	614e <__aeabi_fadd+0x5e>
    614c:	e09d      	b.n	628a <__aeabi_fadd+0x19a>
    614e:	1b04      	subs	r4, r0, r4
    6150:	0032      	movs	r2, r6
    6152:	2020      	movs	r0, #32
    6154:	3401      	adds	r4, #1
    6156:	40e2      	lsrs	r2, r4
    6158:	1b04      	subs	r4, r0, r4
    615a:	40a6      	lsls	r6, r4
    615c:	0033      	movs	r3, r6
    615e:	1e5e      	subs	r6, r3, #1
    6160:	41b3      	sbcs	r3, r6
    6162:	2400      	movs	r4, #0
    6164:	4313      	orrs	r3, r2
    6166:	075a      	lsls	r2, r3, #29
    6168:	d004      	beq.n	6174 <__aeabi_fadd+0x84>
    616a:	220f      	movs	r2, #15
    616c:	401a      	ands	r2, r3
    616e:	2a04      	cmp	r2, #4
    6170:	d000      	beq.n	6174 <__aeabi_fadd+0x84>
    6172:	3304      	adds	r3, #4
    6174:	015a      	lsls	r2, r3, #5
    6176:	d529      	bpl.n	61cc <__aeabi_fadd+0xdc>
    6178:	3401      	adds	r4, #1
    617a:	2cff      	cmp	r4, #255	; 0xff
    617c:	d100      	bne.n	6180 <__aeabi_fadd+0x90>
    617e:	e081      	b.n	6284 <__aeabi_fadd+0x194>
    6180:	002a      	movs	r2, r5
    6182:	019b      	lsls	r3, r3, #6
    6184:	0a5b      	lsrs	r3, r3, #9
    6186:	b2e4      	uxtb	r4, r4
    6188:	025b      	lsls	r3, r3, #9
    618a:	05e4      	lsls	r4, r4, #23
    618c:	0a58      	lsrs	r0, r3, #9
    618e:	07d2      	lsls	r2, r2, #31
    6190:	4320      	orrs	r0, r4
    6192:	4310      	orrs	r0, r2
    6194:	bc04      	pop	{r2}
    6196:	4690      	mov	r8, r2
    6198:	bdf0      	pop	{r4, r5, r6, r7, pc}
    619a:	2cff      	cmp	r4, #255	; 0xff
    619c:	d0e3      	beq.n	6166 <__aeabi_fadd+0x76>
    619e:	2180      	movs	r1, #128	; 0x80
    61a0:	0038      	movs	r0, r7
    61a2:	04c9      	lsls	r1, r1, #19
    61a4:	4308      	orrs	r0, r1
    61a6:	4684      	mov	ip, r0
    61a8:	2a1b      	cmp	r2, #27
    61aa:	dd00      	ble.n	61ae <__aeabi_fadd+0xbe>
    61ac:	e082      	b.n	62b4 <__aeabi_fadd+0x1c4>
    61ae:	2020      	movs	r0, #32
    61b0:	4661      	mov	r1, ip
    61b2:	40d1      	lsrs	r1, r2
    61b4:	1a82      	subs	r2, r0, r2
    61b6:	4660      	mov	r0, ip
    61b8:	4090      	lsls	r0, r2
    61ba:	0002      	movs	r2, r0
    61bc:	1e50      	subs	r0, r2, #1
    61be:	4182      	sbcs	r2, r0
    61c0:	430a      	orrs	r2, r1
    61c2:	1a9b      	subs	r3, r3, r2
    61c4:	015a      	lsls	r2, r3, #5
    61c6:	d4b8      	bmi.n	613a <__aeabi_fadd+0x4a>
    61c8:	075a      	lsls	r2, r3, #29
    61ca:	d1ce      	bne.n	616a <__aeabi_fadd+0x7a>
    61cc:	08de      	lsrs	r6, r3, #3
    61ce:	002a      	movs	r2, r5
    61d0:	2cff      	cmp	r4, #255	; 0xff
    61d2:	d13a      	bne.n	624a <__aeabi_fadd+0x15a>
    61d4:	2e00      	cmp	r6, #0
    61d6:	d100      	bne.n	61da <__aeabi_fadd+0xea>
    61d8:	e0ae      	b.n	6338 <__aeabi_fadd+0x248>
    61da:	2380      	movs	r3, #128	; 0x80
    61dc:	03db      	lsls	r3, r3, #15
    61de:	4333      	orrs	r3, r6
    61e0:	025b      	lsls	r3, r3, #9
    61e2:	0a5b      	lsrs	r3, r3, #9
    61e4:	24ff      	movs	r4, #255	; 0xff
    61e6:	e7cf      	b.n	6188 <__aeabi_fadd+0x98>
    61e8:	1a21      	subs	r1, r4, r0
    61ea:	2900      	cmp	r1, #0
    61ec:	dd52      	ble.n	6294 <__aeabi_fadd+0x1a4>
    61ee:	2800      	cmp	r0, #0
    61f0:	d031      	beq.n	6256 <__aeabi_fadd+0x166>
    61f2:	2cff      	cmp	r4, #255	; 0xff
    61f4:	d0b7      	beq.n	6166 <__aeabi_fadd+0x76>
    61f6:	2080      	movs	r0, #128	; 0x80
    61f8:	003e      	movs	r6, r7
    61fa:	04c0      	lsls	r0, r0, #19
    61fc:	4306      	orrs	r6, r0
    61fe:	46b4      	mov	ip, r6
    6200:	291b      	cmp	r1, #27
    6202:	dd00      	ble.n	6206 <__aeabi_fadd+0x116>
    6204:	e0aa      	b.n	635c <__aeabi_fadd+0x26c>
    6206:	2620      	movs	r6, #32
    6208:	4660      	mov	r0, ip
    620a:	40c8      	lsrs	r0, r1
    620c:	1a71      	subs	r1, r6, r1
    620e:	4666      	mov	r6, ip
    6210:	408e      	lsls	r6, r1
    6212:	0031      	movs	r1, r6
    6214:	1e4e      	subs	r6, r1, #1
    6216:	41b1      	sbcs	r1, r6
    6218:	4301      	orrs	r1, r0
    621a:	185b      	adds	r3, r3, r1
    621c:	0159      	lsls	r1, r3, #5
    621e:	d5d3      	bpl.n	61c8 <__aeabi_fadd+0xd8>
    6220:	3401      	adds	r4, #1
    6222:	2cff      	cmp	r4, #255	; 0xff
    6224:	d100      	bne.n	6228 <__aeabi_fadd+0x138>
    6226:	e087      	b.n	6338 <__aeabi_fadd+0x248>
    6228:	2201      	movs	r2, #1
    622a:	4978      	ldr	r1, [pc, #480]	; (640c <__aeabi_fadd+0x31c>)
    622c:	401a      	ands	r2, r3
    622e:	085b      	lsrs	r3, r3, #1
    6230:	400b      	ands	r3, r1
    6232:	4313      	orrs	r3, r2
    6234:	e797      	b.n	6166 <__aeabi_fadd+0x76>
    6236:	2c00      	cmp	r4, #0
    6238:	d000      	beq.n	623c <__aeabi_fadd+0x14c>
    623a:	e0a7      	b.n	638c <__aeabi_fadd+0x29c>
    623c:	2b00      	cmp	r3, #0
    623e:	d000      	beq.n	6242 <__aeabi_fadd+0x152>
    6240:	e0b6      	b.n	63b0 <__aeabi_fadd+0x2c0>
    6242:	1e3b      	subs	r3, r7, #0
    6244:	d162      	bne.n	630c <__aeabi_fadd+0x21c>
    6246:	2600      	movs	r6, #0
    6248:	2200      	movs	r2, #0
    624a:	0273      	lsls	r3, r6, #9
    624c:	0a5b      	lsrs	r3, r3, #9
    624e:	b2e4      	uxtb	r4, r4
    6250:	e79a      	b.n	6188 <__aeabi_fadd+0x98>
    6252:	0014      	movs	r4, r2
    6254:	e787      	b.n	6166 <__aeabi_fadd+0x76>
    6256:	2f00      	cmp	r7, #0
    6258:	d04d      	beq.n	62f6 <__aeabi_fadd+0x206>
    625a:	1e48      	subs	r0, r1, #1
    625c:	2800      	cmp	r0, #0
    625e:	d157      	bne.n	6310 <__aeabi_fadd+0x220>
    6260:	4463      	add	r3, ip
    6262:	2401      	movs	r4, #1
    6264:	015a      	lsls	r2, r3, #5
    6266:	d5af      	bpl.n	61c8 <__aeabi_fadd+0xd8>
    6268:	2402      	movs	r4, #2
    626a:	e7dd      	b.n	6228 <__aeabi_fadd+0x138>
    626c:	2a00      	cmp	r2, #0
    626e:	d124      	bne.n	62ba <__aeabi_fadd+0x1ca>
    6270:	1c62      	adds	r2, r4, #1
    6272:	b2d2      	uxtb	r2, r2
    6274:	2a01      	cmp	r2, #1
    6276:	ddde      	ble.n	6236 <__aeabi_fadd+0x146>
    6278:	1bde      	subs	r6, r3, r7
    627a:	0172      	lsls	r2, r6, #5
    627c:	d535      	bpl.n	62ea <__aeabi_fadd+0x1fa>
    627e:	1afe      	subs	r6, r7, r3
    6280:	000d      	movs	r5, r1
    6282:	e75c      	b.n	613e <__aeabi_fadd+0x4e>
    6284:	002a      	movs	r2, r5
    6286:	2300      	movs	r3, #0
    6288:	e77e      	b.n	6188 <__aeabi_fadd+0x98>
    628a:	0033      	movs	r3, r6
    628c:	4a60      	ldr	r2, [pc, #384]	; (6410 <__aeabi_fadd+0x320>)
    628e:	1a24      	subs	r4, r4, r0
    6290:	4013      	ands	r3, r2
    6292:	e768      	b.n	6166 <__aeabi_fadd+0x76>
    6294:	2900      	cmp	r1, #0
    6296:	d163      	bne.n	6360 <__aeabi_fadd+0x270>
    6298:	1c61      	adds	r1, r4, #1
    629a:	b2c8      	uxtb	r0, r1
    629c:	2801      	cmp	r0, #1
    629e:	dd4e      	ble.n	633e <__aeabi_fadd+0x24e>
    62a0:	29ff      	cmp	r1, #255	; 0xff
    62a2:	d049      	beq.n	6338 <__aeabi_fadd+0x248>
    62a4:	4463      	add	r3, ip
    62a6:	085b      	lsrs	r3, r3, #1
    62a8:	000c      	movs	r4, r1
    62aa:	e75c      	b.n	6166 <__aeabi_fadd+0x76>
    62ac:	2aff      	cmp	r2, #255	; 0xff
    62ae:	d041      	beq.n	6334 <__aeabi_fadd+0x244>
    62b0:	000a      	movs	r2, r1
    62b2:	e779      	b.n	61a8 <__aeabi_fadd+0xb8>
    62b4:	2201      	movs	r2, #1
    62b6:	1a9b      	subs	r3, r3, r2
    62b8:	e784      	b.n	61c4 <__aeabi_fadd+0xd4>
    62ba:	2c00      	cmp	r4, #0
    62bc:	d01d      	beq.n	62fa <__aeabi_fadd+0x20a>
    62be:	28ff      	cmp	r0, #255	; 0xff
    62c0:	d022      	beq.n	6308 <__aeabi_fadd+0x218>
    62c2:	2480      	movs	r4, #128	; 0x80
    62c4:	04e4      	lsls	r4, r4, #19
    62c6:	4252      	negs	r2, r2
    62c8:	4323      	orrs	r3, r4
    62ca:	2a1b      	cmp	r2, #27
    62cc:	dd00      	ble.n	62d0 <__aeabi_fadd+0x1e0>
    62ce:	e08a      	b.n	63e6 <__aeabi_fadd+0x2f6>
    62d0:	001c      	movs	r4, r3
    62d2:	2520      	movs	r5, #32
    62d4:	40d4      	lsrs	r4, r2
    62d6:	1aaa      	subs	r2, r5, r2
    62d8:	4093      	lsls	r3, r2
    62da:	1e5a      	subs	r2, r3, #1
    62dc:	4193      	sbcs	r3, r2
    62de:	4323      	orrs	r3, r4
    62e0:	4662      	mov	r2, ip
    62e2:	0004      	movs	r4, r0
    62e4:	1ad3      	subs	r3, r2, r3
    62e6:	000d      	movs	r5, r1
    62e8:	e725      	b.n	6136 <__aeabi_fadd+0x46>
    62ea:	2e00      	cmp	r6, #0
    62ec:	d000      	beq.n	62f0 <__aeabi_fadd+0x200>
    62ee:	e726      	b.n	613e <__aeabi_fadd+0x4e>
    62f0:	2200      	movs	r2, #0
    62f2:	2400      	movs	r4, #0
    62f4:	e7a9      	b.n	624a <__aeabi_fadd+0x15a>
    62f6:	000c      	movs	r4, r1
    62f8:	e735      	b.n	6166 <__aeabi_fadd+0x76>
    62fa:	2b00      	cmp	r3, #0
    62fc:	d04d      	beq.n	639a <__aeabi_fadd+0x2aa>
    62fe:	43d2      	mvns	r2, r2
    6300:	2a00      	cmp	r2, #0
    6302:	d0ed      	beq.n	62e0 <__aeabi_fadd+0x1f0>
    6304:	28ff      	cmp	r0, #255	; 0xff
    6306:	d1e0      	bne.n	62ca <__aeabi_fadd+0x1da>
    6308:	4663      	mov	r3, ip
    630a:	24ff      	movs	r4, #255	; 0xff
    630c:	000d      	movs	r5, r1
    630e:	e72a      	b.n	6166 <__aeabi_fadd+0x76>
    6310:	29ff      	cmp	r1, #255	; 0xff
    6312:	d00f      	beq.n	6334 <__aeabi_fadd+0x244>
    6314:	0001      	movs	r1, r0
    6316:	e773      	b.n	6200 <__aeabi_fadd+0x110>
    6318:	2b00      	cmp	r3, #0
    631a:	d061      	beq.n	63e0 <__aeabi_fadd+0x2f0>
    631c:	24ff      	movs	r4, #255	; 0xff
    631e:	2f00      	cmp	r7, #0
    6320:	d100      	bne.n	6324 <__aeabi_fadd+0x234>
    6322:	e720      	b.n	6166 <__aeabi_fadd+0x76>
    6324:	2280      	movs	r2, #128	; 0x80
    6326:	4641      	mov	r1, r8
    6328:	03d2      	lsls	r2, r2, #15
    632a:	4211      	tst	r1, r2
    632c:	d002      	beq.n	6334 <__aeabi_fadd+0x244>
    632e:	4216      	tst	r6, r2
    6330:	d100      	bne.n	6334 <__aeabi_fadd+0x244>
    6332:	003b      	movs	r3, r7
    6334:	24ff      	movs	r4, #255	; 0xff
    6336:	e716      	b.n	6166 <__aeabi_fadd+0x76>
    6338:	24ff      	movs	r4, #255	; 0xff
    633a:	2300      	movs	r3, #0
    633c:	e724      	b.n	6188 <__aeabi_fadd+0x98>
    633e:	2c00      	cmp	r4, #0
    6340:	d1ea      	bne.n	6318 <__aeabi_fadd+0x228>
    6342:	2b00      	cmp	r3, #0
    6344:	d058      	beq.n	63f8 <__aeabi_fadd+0x308>
    6346:	2f00      	cmp	r7, #0
    6348:	d100      	bne.n	634c <__aeabi_fadd+0x25c>
    634a:	e70c      	b.n	6166 <__aeabi_fadd+0x76>
    634c:	4463      	add	r3, ip
    634e:	015a      	lsls	r2, r3, #5
    6350:	d400      	bmi.n	6354 <__aeabi_fadd+0x264>
    6352:	e739      	b.n	61c8 <__aeabi_fadd+0xd8>
    6354:	4a2e      	ldr	r2, [pc, #184]	; (6410 <__aeabi_fadd+0x320>)
    6356:	000c      	movs	r4, r1
    6358:	4013      	ands	r3, r2
    635a:	e704      	b.n	6166 <__aeabi_fadd+0x76>
    635c:	2101      	movs	r1, #1
    635e:	e75c      	b.n	621a <__aeabi_fadd+0x12a>
    6360:	2c00      	cmp	r4, #0
    6362:	d11e      	bne.n	63a2 <__aeabi_fadd+0x2b2>
    6364:	2b00      	cmp	r3, #0
    6366:	d040      	beq.n	63ea <__aeabi_fadd+0x2fa>
    6368:	43c9      	mvns	r1, r1
    636a:	2900      	cmp	r1, #0
    636c:	d00b      	beq.n	6386 <__aeabi_fadd+0x296>
    636e:	28ff      	cmp	r0, #255	; 0xff
    6370:	d036      	beq.n	63e0 <__aeabi_fadd+0x2f0>
    6372:	291b      	cmp	r1, #27
    6374:	dc47      	bgt.n	6406 <__aeabi_fadd+0x316>
    6376:	001c      	movs	r4, r3
    6378:	2620      	movs	r6, #32
    637a:	40cc      	lsrs	r4, r1
    637c:	1a71      	subs	r1, r6, r1
    637e:	408b      	lsls	r3, r1
    6380:	1e59      	subs	r1, r3, #1
    6382:	418b      	sbcs	r3, r1
    6384:	4323      	orrs	r3, r4
    6386:	4463      	add	r3, ip
    6388:	0004      	movs	r4, r0
    638a:	e747      	b.n	621c <__aeabi_fadd+0x12c>
    638c:	2b00      	cmp	r3, #0
    638e:	d118      	bne.n	63c2 <__aeabi_fadd+0x2d2>
    6390:	1e3b      	subs	r3, r7, #0
    6392:	d02d      	beq.n	63f0 <__aeabi_fadd+0x300>
    6394:	000d      	movs	r5, r1
    6396:	24ff      	movs	r4, #255	; 0xff
    6398:	e6e5      	b.n	6166 <__aeabi_fadd+0x76>
    639a:	003b      	movs	r3, r7
    639c:	0004      	movs	r4, r0
    639e:	000d      	movs	r5, r1
    63a0:	e6e1      	b.n	6166 <__aeabi_fadd+0x76>
    63a2:	28ff      	cmp	r0, #255	; 0xff
    63a4:	d01c      	beq.n	63e0 <__aeabi_fadd+0x2f0>
    63a6:	2480      	movs	r4, #128	; 0x80
    63a8:	04e4      	lsls	r4, r4, #19
    63aa:	4249      	negs	r1, r1
    63ac:	4323      	orrs	r3, r4
    63ae:	e7e0      	b.n	6372 <__aeabi_fadd+0x282>
    63b0:	2f00      	cmp	r7, #0
    63b2:	d100      	bne.n	63b6 <__aeabi_fadd+0x2c6>
    63b4:	e6d7      	b.n	6166 <__aeabi_fadd+0x76>
    63b6:	1bde      	subs	r6, r3, r7
    63b8:	0172      	lsls	r2, r6, #5
    63ba:	d51f      	bpl.n	63fc <__aeabi_fadd+0x30c>
    63bc:	1afb      	subs	r3, r7, r3
    63be:	000d      	movs	r5, r1
    63c0:	e6d1      	b.n	6166 <__aeabi_fadd+0x76>
    63c2:	24ff      	movs	r4, #255	; 0xff
    63c4:	2f00      	cmp	r7, #0
    63c6:	d100      	bne.n	63ca <__aeabi_fadd+0x2da>
    63c8:	e6cd      	b.n	6166 <__aeabi_fadd+0x76>
    63ca:	2280      	movs	r2, #128	; 0x80
    63cc:	4640      	mov	r0, r8
    63ce:	03d2      	lsls	r2, r2, #15
    63d0:	4210      	tst	r0, r2
    63d2:	d0af      	beq.n	6334 <__aeabi_fadd+0x244>
    63d4:	4216      	tst	r6, r2
    63d6:	d1ad      	bne.n	6334 <__aeabi_fadd+0x244>
    63d8:	003b      	movs	r3, r7
    63da:	000d      	movs	r5, r1
    63dc:	24ff      	movs	r4, #255	; 0xff
    63de:	e6c2      	b.n	6166 <__aeabi_fadd+0x76>
    63e0:	4663      	mov	r3, ip
    63e2:	24ff      	movs	r4, #255	; 0xff
    63e4:	e6bf      	b.n	6166 <__aeabi_fadd+0x76>
    63e6:	2301      	movs	r3, #1
    63e8:	e77a      	b.n	62e0 <__aeabi_fadd+0x1f0>
    63ea:	003b      	movs	r3, r7
    63ec:	0004      	movs	r4, r0
    63ee:	e6ba      	b.n	6166 <__aeabi_fadd+0x76>
    63f0:	2680      	movs	r6, #128	; 0x80
    63f2:	2200      	movs	r2, #0
    63f4:	03f6      	lsls	r6, r6, #15
    63f6:	e6f0      	b.n	61da <__aeabi_fadd+0xea>
    63f8:	003b      	movs	r3, r7
    63fa:	e6b4      	b.n	6166 <__aeabi_fadd+0x76>
    63fc:	1e33      	subs	r3, r6, #0
    63fe:	d000      	beq.n	6402 <__aeabi_fadd+0x312>
    6400:	e6e2      	b.n	61c8 <__aeabi_fadd+0xd8>
    6402:	2200      	movs	r2, #0
    6404:	e721      	b.n	624a <__aeabi_fadd+0x15a>
    6406:	2301      	movs	r3, #1
    6408:	e7bd      	b.n	6386 <__aeabi_fadd+0x296>
    640a:	46c0      	nop			; (mov r8, r8)
    640c:	7dffffff 	.word	0x7dffffff
    6410:	fbffffff 	.word	0xfbffffff

00006414 <__aeabi_fdiv>:
    6414:	b5f0      	push	{r4, r5, r6, r7, lr}
    6416:	4657      	mov	r7, sl
    6418:	464e      	mov	r6, r9
    641a:	46de      	mov	lr, fp
    641c:	4645      	mov	r5, r8
    641e:	b5e0      	push	{r5, r6, r7, lr}
    6420:	0244      	lsls	r4, r0, #9
    6422:	0043      	lsls	r3, r0, #1
    6424:	0fc6      	lsrs	r6, r0, #31
    6426:	b083      	sub	sp, #12
    6428:	1c0f      	adds	r7, r1, #0
    642a:	0a64      	lsrs	r4, r4, #9
    642c:	0e1b      	lsrs	r3, r3, #24
    642e:	46b2      	mov	sl, r6
    6430:	d053      	beq.n	64da <__aeabi_fdiv+0xc6>
    6432:	2bff      	cmp	r3, #255	; 0xff
    6434:	d027      	beq.n	6486 <__aeabi_fdiv+0x72>
    6436:	2280      	movs	r2, #128	; 0x80
    6438:	00e4      	lsls	r4, r4, #3
    643a:	04d2      	lsls	r2, r2, #19
    643c:	4314      	orrs	r4, r2
    643e:	227f      	movs	r2, #127	; 0x7f
    6440:	4252      	negs	r2, r2
    6442:	4690      	mov	r8, r2
    6444:	4498      	add	r8, r3
    6446:	2300      	movs	r3, #0
    6448:	4699      	mov	r9, r3
    644a:	469b      	mov	fp, r3
    644c:	027d      	lsls	r5, r7, #9
    644e:	0078      	lsls	r0, r7, #1
    6450:	0ffb      	lsrs	r3, r7, #31
    6452:	0a6d      	lsrs	r5, r5, #9
    6454:	0e00      	lsrs	r0, r0, #24
    6456:	9300      	str	r3, [sp, #0]
    6458:	d024      	beq.n	64a4 <__aeabi_fdiv+0x90>
    645a:	28ff      	cmp	r0, #255	; 0xff
    645c:	d046      	beq.n	64ec <__aeabi_fdiv+0xd8>
    645e:	2380      	movs	r3, #128	; 0x80
    6460:	2100      	movs	r1, #0
    6462:	00ed      	lsls	r5, r5, #3
    6464:	04db      	lsls	r3, r3, #19
    6466:	431d      	orrs	r5, r3
    6468:	387f      	subs	r0, #127	; 0x7f
    646a:	4647      	mov	r7, r8
    646c:	1a38      	subs	r0, r7, r0
    646e:	464f      	mov	r7, r9
    6470:	430f      	orrs	r7, r1
    6472:	00bf      	lsls	r7, r7, #2
    6474:	46b9      	mov	r9, r7
    6476:	0033      	movs	r3, r6
    6478:	9a00      	ldr	r2, [sp, #0]
    647a:	4f87      	ldr	r7, [pc, #540]	; (6698 <__aeabi_fdiv+0x284>)
    647c:	4053      	eors	r3, r2
    647e:	464a      	mov	r2, r9
    6480:	58ba      	ldr	r2, [r7, r2]
    6482:	9301      	str	r3, [sp, #4]
    6484:	4697      	mov	pc, r2
    6486:	2c00      	cmp	r4, #0
    6488:	d14e      	bne.n	6528 <__aeabi_fdiv+0x114>
    648a:	2308      	movs	r3, #8
    648c:	4699      	mov	r9, r3
    648e:	33f7      	adds	r3, #247	; 0xf7
    6490:	4698      	mov	r8, r3
    6492:	3bfd      	subs	r3, #253	; 0xfd
    6494:	469b      	mov	fp, r3
    6496:	027d      	lsls	r5, r7, #9
    6498:	0078      	lsls	r0, r7, #1
    649a:	0ffb      	lsrs	r3, r7, #31
    649c:	0a6d      	lsrs	r5, r5, #9
    649e:	0e00      	lsrs	r0, r0, #24
    64a0:	9300      	str	r3, [sp, #0]
    64a2:	d1da      	bne.n	645a <__aeabi_fdiv+0x46>
    64a4:	2d00      	cmp	r5, #0
    64a6:	d126      	bne.n	64f6 <__aeabi_fdiv+0xe2>
    64a8:	2000      	movs	r0, #0
    64aa:	2101      	movs	r1, #1
    64ac:	0033      	movs	r3, r6
    64ae:	9a00      	ldr	r2, [sp, #0]
    64b0:	4f7a      	ldr	r7, [pc, #488]	; (669c <__aeabi_fdiv+0x288>)
    64b2:	4053      	eors	r3, r2
    64b4:	4642      	mov	r2, r8
    64b6:	1a10      	subs	r0, r2, r0
    64b8:	464a      	mov	r2, r9
    64ba:	430a      	orrs	r2, r1
    64bc:	0092      	lsls	r2, r2, #2
    64be:	58ba      	ldr	r2, [r7, r2]
    64c0:	001d      	movs	r5, r3
    64c2:	4697      	mov	pc, r2
    64c4:	9b00      	ldr	r3, [sp, #0]
    64c6:	002c      	movs	r4, r5
    64c8:	469a      	mov	sl, r3
    64ca:	468b      	mov	fp, r1
    64cc:	465b      	mov	r3, fp
    64ce:	2b02      	cmp	r3, #2
    64d0:	d131      	bne.n	6536 <__aeabi_fdiv+0x122>
    64d2:	4653      	mov	r3, sl
    64d4:	21ff      	movs	r1, #255	; 0xff
    64d6:	2400      	movs	r4, #0
    64d8:	e038      	b.n	654c <__aeabi_fdiv+0x138>
    64da:	2c00      	cmp	r4, #0
    64dc:	d117      	bne.n	650e <__aeabi_fdiv+0xfa>
    64de:	2304      	movs	r3, #4
    64e0:	4699      	mov	r9, r3
    64e2:	2300      	movs	r3, #0
    64e4:	4698      	mov	r8, r3
    64e6:	3301      	adds	r3, #1
    64e8:	469b      	mov	fp, r3
    64ea:	e7af      	b.n	644c <__aeabi_fdiv+0x38>
    64ec:	20ff      	movs	r0, #255	; 0xff
    64ee:	2d00      	cmp	r5, #0
    64f0:	d10b      	bne.n	650a <__aeabi_fdiv+0xf6>
    64f2:	2102      	movs	r1, #2
    64f4:	e7da      	b.n	64ac <__aeabi_fdiv+0x98>
    64f6:	0028      	movs	r0, r5
    64f8:	f002 f994 	bl	8824 <__clzsi2>
    64fc:	1f43      	subs	r3, r0, #5
    64fe:	409d      	lsls	r5, r3
    6500:	2376      	movs	r3, #118	; 0x76
    6502:	425b      	negs	r3, r3
    6504:	1a18      	subs	r0, r3, r0
    6506:	2100      	movs	r1, #0
    6508:	e7af      	b.n	646a <__aeabi_fdiv+0x56>
    650a:	2103      	movs	r1, #3
    650c:	e7ad      	b.n	646a <__aeabi_fdiv+0x56>
    650e:	0020      	movs	r0, r4
    6510:	f002 f988 	bl	8824 <__clzsi2>
    6514:	1f43      	subs	r3, r0, #5
    6516:	409c      	lsls	r4, r3
    6518:	2376      	movs	r3, #118	; 0x76
    651a:	425b      	negs	r3, r3
    651c:	1a1b      	subs	r3, r3, r0
    651e:	4698      	mov	r8, r3
    6520:	2300      	movs	r3, #0
    6522:	4699      	mov	r9, r3
    6524:	469b      	mov	fp, r3
    6526:	e791      	b.n	644c <__aeabi_fdiv+0x38>
    6528:	230c      	movs	r3, #12
    652a:	4699      	mov	r9, r3
    652c:	33f3      	adds	r3, #243	; 0xf3
    652e:	4698      	mov	r8, r3
    6530:	3bfc      	subs	r3, #252	; 0xfc
    6532:	469b      	mov	fp, r3
    6534:	e78a      	b.n	644c <__aeabi_fdiv+0x38>
    6536:	2b03      	cmp	r3, #3
    6538:	d100      	bne.n	653c <__aeabi_fdiv+0x128>
    653a:	e0a5      	b.n	6688 <__aeabi_fdiv+0x274>
    653c:	4655      	mov	r5, sl
    653e:	2b01      	cmp	r3, #1
    6540:	d000      	beq.n	6544 <__aeabi_fdiv+0x130>
    6542:	e081      	b.n	6648 <__aeabi_fdiv+0x234>
    6544:	2301      	movs	r3, #1
    6546:	2100      	movs	r1, #0
    6548:	2400      	movs	r4, #0
    654a:	402b      	ands	r3, r5
    654c:	0264      	lsls	r4, r4, #9
    654e:	05c9      	lsls	r1, r1, #23
    6550:	0a60      	lsrs	r0, r4, #9
    6552:	07db      	lsls	r3, r3, #31
    6554:	4308      	orrs	r0, r1
    6556:	4318      	orrs	r0, r3
    6558:	b003      	add	sp, #12
    655a:	bc3c      	pop	{r2, r3, r4, r5}
    655c:	4690      	mov	r8, r2
    655e:	4699      	mov	r9, r3
    6560:	46a2      	mov	sl, r4
    6562:	46ab      	mov	fp, r5
    6564:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6566:	2480      	movs	r4, #128	; 0x80
    6568:	2300      	movs	r3, #0
    656a:	03e4      	lsls	r4, r4, #15
    656c:	21ff      	movs	r1, #255	; 0xff
    656e:	e7ed      	b.n	654c <__aeabi_fdiv+0x138>
    6570:	21ff      	movs	r1, #255	; 0xff
    6572:	2400      	movs	r4, #0
    6574:	e7ea      	b.n	654c <__aeabi_fdiv+0x138>
    6576:	2301      	movs	r3, #1
    6578:	1a59      	subs	r1, r3, r1
    657a:	291b      	cmp	r1, #27
    657c:	dd66      	ble.n	664c <__aeabi_fdiv+0x238>
    657e:	9a01      	ldr	r2, [sp, #4]
    6580:	4013      	ands	r3, r2
    6582:	2100      	movs	r1, #0
    6584:	2400      	movs	r4, #0
    6586:	e7e1      	b.n	654c <__aeabi_fdiv+0x138>
    6588:	2380      	movs	r3, #128	; 0x80
    658a:	03db      	lsls	r3, r3, #15
    658c:	421c      	tst	r4, r3
    658e:	d038      	beq.n	6602 <__aeabi_fdiv+0x1ee>
    6590:	421d      	tst	r5, r3
    6592:	d051      	beq.n	6638 <__aeabi_fdiv+0x224>
    6594:	431c      	orrs	r4, r3
    6596:	0264      	lsls	r4, r4, #9
    6598:	0a64      	lsrs	r4, r4, #9
    659a:	0033      	movs	r3, r6
    659c:	21ff      	movs	r1, #255	; 0xff
    659e:	e7d5      	b.n	654c <__aeabi_fdiv+0x138>
    65a0:	0163      	lsls	r3, r4, #5
    65a2:	016c      	lsls	r4, r5, #5
    65a4:	42a3      	cmp	r3, r4
    65a6:	d23b      	bcs.n	6620 <__aeabi_fdiv+0x20c>
    65a8:	261b      	movs	r6, #27
    65aa:	2100      	movs	r1, #0
    65ac:	3801      	subs	r0, #1
    65ae:	2501      	movs	r5, #1
    65b0:	001f      	movs	r7, r3
    65b2:	0049      	lsls	r1, r1, #1
    65b4:	005b      	lsls	r3, r3, #1
    65b6:	2f00      	cmp	r7, #0
    65b8:	db01      	blt.n	65be <__aeabi_fdiv+0x1aa>
    65ba:	429c      	cmp	r4, r3
    65bc:	d801      	bhi.n	65c2 <__aeabi_fdiv+0x1ae>
    65be:	1b1b      	subs	r3, r3, r4
    65c0:	4329      	orrs	r1, r5
    65c2:	3e01      	subs	r6, #1
    65c4:	2e00      	cmp	r6, #0
    65c6:	d1f3      	bne.n	65b0 <__aeabi_fdiv+0x19c>
    65c8:	001c      	movs	r4, r3
    65ca:	1e63      	subs	r3, r4, #1
    65cc:	419c      	sbcs	r4, r3
    65ce:	430c      	orrs	r4, r1
    65d0:	0001      	movs	r1, r0
    65d2:	317f      	adds	r1, #127	; 0x7f
    65d4:	2900      	cmp	r1, #0
    65d6:	ddce      	ble.n	6576 <__aeabi_fdiv+0x162>
    65d8:	0763      	lsls	r3, r4, #29
    65da:	d004      	beq.n	65e6 <__aeabi_fdiv+0x1d2>
    65dc:	230f      	movs	r3, #15
    65de:	4023      	ands	r3, r4
    65e0:	2b04      	cmp	r3, #4
    65e2:	d000      	beq.n	65e6 <__aeabi_fdiv+0x1d2>
    65e4:	3404      	adds	r4, #4
    65e6:	0123      	lsls	r3, r4, #4
    65e8:	d503      	bpl.n	65f2 <__aeabi_fdiv+0x1de>
    65ea:	0001      	movs	r1, r0
    65ec:	4b2c      	ldr	r3, [pc, #176]	; (66a0 <__aeabi_fdiv+0x28c>)
    65ee:	3180      	adds	r1, #128	; 0x80
    65f0:	401c      	ands	r4, r3
    65f2:	29fe      	cmp	r1, #254	; 0xfe
    65f4:	dd0d      	ble.n	6612 <__aeabi_fdiv+0x1fe>
    65f6:	2301      	movs	r3, #1
    65f8:	9a01      	ldr	r2, [sp, #4]
    65fa:	21ff      	movs	r1, #255	; 0xff
    65fc:	4013      	ands	r3, r2
    65fe:	2400      	movs	r4, #0
    6600:	e7a4      	b.n	654c <__aeabi_fdiv+0x138>
    6602:	2380      	movs	r3, #128	; 0x80
    6604:	03db      	lsls	r3, r3, #15
    6606:	431c      	orrs	r4, r3
    6608:	0264      	lsls	r4, r4, #9
    660a:	0a64      	lsrs	r4, r4, #9
    660c:	0033      	movs	r3, r6
    660e:	21ff      	movs	r1, #255	; 0xff
    6610:	e79c      	b.n	654c <__aeabi_fdiv+0x138>
    6612:	2301      	movs	r3, #1
    6614:	9a01      	ldr	r2, [sp, #4]
    6616:	01a4      	lsls	r4, r4, #6
    6618:	0a64      	lsrs	r4, r4, #9
    661a:	b2c9      	uxtb	r1, r1
    661c:	4013      	ands	r3, r2
    661e:	e795      	b.n	654c <__aeabi_fdiv+0x138>
    6620:	1b1b      	subs	r3, r3, r4
    6622:	261a      	movs	r6, #26
    6624:	2101      	movs	r1, #1
    6626:	e7c2      	b.n	65ae <__aeabi_fdiv+0x19a>
    6628:	9b00      	ldr	r3, [sp, #0]
    662a:	468b      	mov	fp, r1
    662c:	469a      	mov	sl, r3
    662e:	2400      	movs	r4, #0
    6630:	e74c      	b.n	64cc <__aeabi_fdiv+0xb8>
    6632:	0263      	lsls	r3, r4, #9
    6634:	d5e5      	bpl.n	6602 <__aeabi_fdiv+0x1ee>
    6636:	2500      	movs	r5, #0
    6638:	2480      	movs	r4, #128	; 0x80
    663a:	03e4      	lsls	r4, r4, #15
    663c:	432c      	orrs	r4, r5
    663e:	0264      	lsls	r4, r4, #9
    6640:	0a64      	lsrs	r4, r4, #9
    6642:	9b00      	ldr	r3, [sp, #0]
    6644:	21ff      	movs	r1, #255	; 0xff
    6646:	e781      	b.n	654c <__aeabi_fdiv+0x138>
    6648:	9501      	str	r5, [sp, #4]
    664a:	e7c1      	b.n	65d0 <__aeabi_fdiv+0x1bc>
    664c:	0023      	movs	r3, r4
    664e:	2020      	movs	r0, #32
    6650:	40cb      	lsrs	r3, r1
    6652:	1a41      	subs	r1, r0, r1
    6654:	408c      	lsls	r4, r1
    6656:	1e61      	subs	r1, r4, #1
    6658:	418c      	sbcs	r4, r1
    665a:	431c      	orrs	r4, r3
    665c:	0763      	lsls	r3, r4, #29
    665e:	d004      	beq.n	666a <__aeabi_fdiv+0x256>
    6660:	230f      	movs	r3, #15
    6662:	4023      	ands	r3, r4
    6664:	2b04      	cmp	r3, #4
    6666:	d000      	beq.n	666a <__aeabi_fdiv+0x256>
    6668:	3404      	adds	r4, #4
    666a:	0163      	lsls	r3, r4, #5
    666c:	d505      	bpl.n	667a <__aeabi_fdiv+0x266>
    666e:	2301      	movs	r3, #1
    6670:	9a01      	ldr	r2, [sp, #4]
    6672:	2101      	movs	r1, #1
    6674:	4013      	ands	r3, r2
    6676:	2400      	movs	r4, #0
    6678:	e768      	b.n	654c <__aeabi_fdiv+0x138>
    667a:	2301      	movs	r3, #1
    667c:	9a01      	ldr	r2, [sp, #4]
    667e:	01a4      	lsls	r4, r4, #6
    6680:	0a64      	lsrs	r4, r4, #9
    6682:	4013      	ands	r3, r2
    6684:	2100      	movs	r1, #0
    6686:	e761      	b.n	654c <__aeabi_fdiv+0x138>
    6688:	2380      	movs	r3, #128	; 0x80
    668a:	03db      	lsls	r3, r3, #15
    668c:	431c      	orrs	r4, r3
    668e:	0264      	lsls	r4, r4, #9
    6690:	0a64      	lsrs	r4, r4, #9
    6692:	4653      	mov	r3, sl
    6694:	21ff      	movs	r1, #255	; 0xff
    6696:	e759      	b.n	654c <__aeabi_fdiv+0x138>
    6698:	0000f7e0 	.word	0x0000f7e0
    669c:	0000f820 	.word	0x0000f820
    66a0:	f7ffffff 	.word	0xf7ffffff

000066a4 <__aeabi_fsub>:
    66a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    66a6:	464f      	mov	r7, r9
    66a8:	46d6      	mov	lr, sl
    66aa:	4646      	mov	r6, r8
    66ac:	0044      	lsls	r4, r0, #1
    66ae:	b5c0      	push	{r6, r7, lr}
    66b0:	0fc2      	lsrs	r2, r0, #31
    66b2:	0247      	lsls	r7, r0, #9
    66b4:	0248      	lsls	r0, r1, #9
    66b6:	0a40      	lsrs	r0, r0, #9
    66b8:	4684      	mov	ip, r0
    66ba:	4666      	mov	r6, ip
    66bc:	0a7b      	lsrs	r3, r7, #9
    66be:	0048      	lsls	r0, r1, #1
    66c0:	0fc9      	lsrs	r1, r1, #31
    66c2:	469a      	mov	sl, r3
    66c4:	0e24      	lsrs	r4, r4, #24
    66c6:	0015      	movs	r5, r2
    66c8:	00db      	lsls	r3, r3, #3
    66ca:	0e00      	lsrs	r0, r0, #24
    66cc:	4689      	mov	r9, r1
    66ce:	00f6      	lsls	r6, r6, #3
    66d0:	28ff      	cmp	r0, #255	; 0xff
    66d2:	d100      	bne.n	66d6 <__aeabi_fsub+0x32>
    66d4:	e08f      	b.n	67f6 <__aeabi_fsub+0x152>
    66d6:	2101      	movs	r1, #1
    66d8:	464f      	mov	r7, r9
    66da:	404f      	eors	r7, r1
    66dc:	0039      	movs	r1, r7
    66de:	4291      	cmp	r1, r2
    66e0:	d066      	beq.n	67b0 <__aeabi_fsub+0x10c>
    66e2:	1a22      	subs	r2, r4, r0
    66e4:	2a00      	cmp	r2, #0
    66e6:	dc00      	bgt.n	66ea <__aeabi_fsub+0x46>
    66e8:	e09d      	b.n	6826 <__aeabi_fsub+0x182>
    66ea:	2800      	cmp	r0, #0
    66ec:	d13d      	bne.n	676a <__aeabi_fsub+0xc6>
    66ee:	2e00      	cmp	r6, #0
    66f0:	d100      	bne.n	66f4 <__aeabi_fsub+0x50>
    66f2:	e08b      	b.n	680c <__aeabi_fsub+0x168>
    66f4:	1e51      	subs	r1, r2, #1
    66f6:	2900      	cmp	r1, #0
    66f8:	d000      	beq.n	66fc <__aeabi_fsub+0x58>
    66fa:	e0b5      	b.n	6868 <__aeabi_fsub+0x1c4>
    66fc:	2401      	movs	r4, #1
    66fe:	1b9b      	subs	r3, r3, r6
    6700:	015a      	lsls	r2, r3, #5
    6702:	d544      	bpl.n	678e <__aeabi_fsub+0xea>
    6704:	019b      	lsls	r3, r3, #6
    6706:	099f      	lsrs	r7, r3, #6
    6708:	0038      	movs	r0, r7
    670a:	f002 f88b 	bl	8824 <__clzsi2>
    670e:	3805      	subs	r0, #5
    6710:	4087      	lsls	r7, r0
    6712:	4284      	cmp	r4, r0
    6714:	dd00      	ble.n	6718 <__aeabi_fsub+0x74>
    6716:	e096      	b.n	6846 <__aeabi_fsub+0x1a2>
    6718:	1b04      	subs	r4, r0, r4
    671a:	003a      	movs	r2, r7
    671c:	2020      	movs	r0, #32
    671e:	3401      	adds	r4, #1
    6720:	40e2      	lsrs	r2, r4
    6722:	1b04      	subs	r4, r0, r4
    6724:	40a7      	lsls	r7, r4
    6726:	003b      	movs	r3, r7
    6728:	1e5f      	subs	r7, r3, #1
    672a:	41bb      	sbcs	r3, r7
    672c:	2400      	movs	r4, #0
    672e:	4313      	orrs	r3, r2
    6730:	075a      	lsls	r2, r3, #29
    6732:	d004      	beq.n	673e <__aeabi_fsub+0x9a>
    6734:	220f      	movs	r2, #15
    6736:	401a      	ands	r2, r3
    6738:	2a04      	cmp	r2, #4
    673a:	d000      	beq.n	673e <__aeabi_fsub+0x9a>
    673c:	3304      	adds	r3, #4
    673e:	015a      	lsls	r2, r3, #5
    6740:	d527      	bpl.n	6792 <__aeabi_fsub+0xee>
    6742:	3401      	adds	r4, #1
    6744:	2cff      	cmp	r4, #255	; 0xff
    6746:	d100      	bne.n	674a <__aeabi_fsub+0xa6>
    6748:	e079      	b.n	683e <__aeabi_fsub+0x19a>
    674a:	2201      	movs	r2, #1
    674c:	019b      	lsls	r3, r3, #6
    674e:	0a5b      	lsrs	r3, r3, #9
    6750:	b2e4      	uxtb	r4, r4
    6752:	402a      	ands	r2, r5
    6754:	025b      	lsls	r3, r3, #9
    6756:	05e4      	lsls	r4, r4, #23
    6758:	0a58      	lsrs	r0, r3, #9
    675a:	07d2      	lsls	r2, r2, #31
    675c:	4320      	orrs	r0, r4
    675e:	4310      	orrs	r0, r2
    6760:	bc1c      	pop	{r2, r3, r4}
    6762:	4690      	mov	r8, r2
    6764:	4699      	mov	r9, r3
    6766:	46a2      	mov	sl, r4
    6768:	bdf0      	pop	{r4, r5, r6, r7, pc}
    676a:	2cff      	cmp	r4, #255	; 0xff
    676c:	d0e0      	beq.n	6730 <__aeabi_fsub+0x8c>
    676e:	2180      	movs	r1, #128	; 0x80
    6770:	04c9      	lsls	r1, r1, #19
    6772:	430e      	orrs	r6, r1
    6774:	2a1b      	cmp	r2, #27
    6776:	dc7b      	bgt.n	6870 <__aeabi_fsub+0x1cc>
    6778:	0031      	movs	r1, r6
    677a:	2020      	movs	r0, #32
    677c:	40d1      	lsrs	r1, r2
    677e:	1a82      	subs	r2, r0, r2
    6780:	4096      	lsls	r6, r2
    6782:	1e72      	subs	r2, r6, #1
    6784:	4196      	sbcs	r6, r2
    6786:	430e      	orrs	r6, r1
    6788:	1b9b      	subs	r3, r3, r6
    678a:	015a      	lsls	r2, r3, #5
    678c:	d4ba      	bmi.n	6704 <__aeabi_fsub+0x60>
    678e:	075a      	lsls	r2, r3, #29
    6790:	d1d0      	bne.n	6734 <__aeabi_fsub+0x90>
    6792:	2201      	movs	r2, #1
    6794:	08df      	lsrs	r7, r3, #3
    6796:	402a      	ands	r2, r5
    6798:	2cff      	cmp	r4, #255	; 0xff
    679a:	d133      	bne.n	6804 <__aeabi_fsub+0x160>
    679c:	2f00      	cmp	r7, #0
    679e:	d100      	bne.n	67a2 <__aeabi_fsub+0xfe>
    67a0:	e0a8      	b.n	68f4 <__aeabi_fsub+0x250>
    67a2:	2380      	movs	r3, #128	; 0x80
    67a4:	03db      	lsls	r3, r3, #15
    67a6:	433b      	orrs	r3, r7
    67a8:	025b      	lsls	r3, r3, #9
    67aa:	0a5b      	lsrs	r3, r3, #9
    67ac:	24ff      	movs	r4, #255	; 0xff
    67ae:	e7d1      	b.n	6754 <__aeabi_fsub+0xb0>
    67b0:	1a21      	subs	r1, r4, r0
    67b2:	2900      	cmp	r1, #0
    67b4:	dd4c      	ble.n	6850 <__aeabi_fsub+0x1ac>
    67b6:	2800      	cmp	r0, #0
    67b8:	d02a      	beq.n	6810 <__aeabi_fsub+0x16c>
    67ba:	2cff      	cmp	r4, #255	; 0xff
    67bc:	d0b8      	beq.n	6730 <__aeabi_fsub+0x8c>
    67be:	2080      	movs	r0, #128	; 0x80
    67c0:	04c0      	lsls	r0, r0, #19
    67c2:	4306      	orrs	r6, r0
    67c4:	291b      	cmp	r1, #27
    67c6:	dd00      	ble.n	67ca <__aeabi_fsub+0x126>
    67c8:	e0af      	b.n	692a <__aeabi_fsub+0x286>
    67ca:	0030      	movs	r0, r6
    67cc:	2720      	movs	r7, #32
    67ce:	40c8      	lsrs	r0, r1
    67d0:	1a79      	subs	r1, r7, r1
    67d2:	408e      	lsls	r6, r1
    67d4:	1e71      	subs	r1, r6, #1
    67d6:	418e      	sbcs	r6, r1
    67d8:	4306      	orrs	r6, r0
    67da:	199b      	adds	r3, r3, r6
    67dc:	0159      	lsls	r1, r3, #5
    67de:	d5d6      	bpl.n	678e <__aeabi_fsub+0xea>
    67e0:	3401      	adds	r4, #1
    67e2:	2cff      	cmp	r4, #255	; 0xff
    67e4:	d100      	bne.n	67e8 <__aeabi_fsub+0x144>
    67e6:	e085      	b.n	68f4 <__aeabi_fsub+0x250>
    67e8:	2201      	movs	r2, #1
    67ea:	497a      	ldr	r1, [pc, #488]	; (69d4 <__aeabi_fsub+0x330>)
    67ec:	401a      	ands	r2, r3
    67ee:	085b      	lsrs	r3, r3, #1
    67f0:	400b      	ands	r3, r1
    67f2:	4313      	orrs	r3, r2
    67f4:	e79c      	b.n	6730 <__aeabi_fsub+0x8c>
    67f6:	2e00      	cmp	r6, #0
    67f8:	d000      	beq.n	67fc <__aeabi_fsub+0x158>
    67fa:	e770      	b.n	66de <__aeabi_fsub+0x3a>
    67fc:	e76b      	b.n	66d6 <__aeabi_fsub+0x32>
    67fe:	1e3b      	subs	r3, r7, #0
    6800:	d1c5      	bne.n	678e <__aeabi_fsub+0xea>
    6802:	2200      	movs	r2, #0
    6804:	027b      	lsls	r3, r7, #9
    6806:	0a5b      	lsrs	r3, r3, #9
    6808:	b2e4      	uxtb	r4, r4
    680a:	e7a3      	b.n	6754 <__aeabi_fsub+0xb0>
    680c:	0014      	movs	r4, r2
    680e:	e78f      	b.n	6730 <__aeabi_fsub+0x8c>
    6810:	2e00      	cmp	r6, #0
    6812:	d04d      	beq.n	68b0 <__aeabi_fsub+0x20c>
    6814:	1e48      	subs	r0, r1, #1
    6816:	2800      	cmp	r0, #0
    6818:	d157      	bne.n	68ca <__aeabi_fsub+0x226>
    681a:	199b      	adds	r3, r3, r6
    681c:	2401      	movs	r4, #1
    681e:	015a      	lsls	r2, r3, #5
    6820:	d5b5      	bpl.n	678e <__aeabi_fsub+0xea>
    6822:	2402      	movs	r4, #2
    6824:	e7e0      	b.n	67e8 <__aeabi_fsub+0x144>
    6826:	2a00      	cmp	r2, #0
    6828:	d125      	bne.n	6876 <__aeabi_fsub+0x1d2>
    682a:	1c62      	adds	r2, r4, #1
    682c:	b2d2      	uxtb	r2, r2
    682e:	2a01      	cmp	r2, #1
    6830:	dd72      	ble.n	6918 <__aeabi_fsub+0x274>
    6832:	1b9f      	subs	r7, r3, r6
    6834:	017a      	lsls	r2, r7, #5
    6836:	d535      	bpl.n	68a4 <__aeabi_fsub+0x200>
    6838:	1af7      	subs	r7, r6, r3
    683a:	000d      	movs	r5, r1
    683c:	e764      	b.n	6708 <__aeabi_fsub+0x64>
    683e:	2201      	movs	r2, #1
    6840:	2300      	movs	r3, #0
    6842:	402a      	ands	r2, r5
    6844:	e786      	b.n	6754 <__aeabi_fsub+0xb0>
    6846:	003b      	movs	r3, r7
    6848:	4a63      	ldr	r2, [pc, #396]	; (69d8 <__aeabi_fsub+0x334>)
    684a:	1a24      	subs	r4, r4, r0
    684c:	4013      	ands	r3, r2
    684e:	e76f      	b.n	6730 <__aeabi_fsub+0x8c>
    6850:	2900      	cmp	r1, #0
    6852:	d16c      	bne.n	692e <__aeabi_fsub+0x28a>
    6854:	1c61      	adds	r1, r4, #1
    6856:	b2c8      	uxtb	r0, r1
    6858:	2801      	cmp	r0, #1
    685a:	dd4e      	ble.n	68fa <__aeabi_fsub+0x256>
    685c:	29ff      	cmp	r1, #255	; 0xff
    685e:	d049      	beq.n	68f4 <__aeabi_fsub+0x250>
    6860:	199b      	adds	r3, r3, r6
    6862:	085b      	lsrs	r3, r3, #1
    6864:	000c      	movs	r4, r1
    6866:	e763      	b.n	6730 <__aeabi_fsub+0x8c>
    6868:	2aff      	cmp	r2, #255	; 0xff
    686a:	d041      	beq.n	68f0 <__aeabi_fsub+0x24c>
    686c:	000a      	movs	r2, r1
    686e:	e781      	b.n	6774 <__aeabi_fsub+0xd0>
    6870:	2601      	movs	r6, #1
    6872:	1b9b      	subs	r3, r3, r6
    6874:	e789      	b.n	678a <__aeabi_fsub+0xe6>
    6876:	2c00      	cmp	r4, #0
    6878:	d01c      	beq.n	68b4 <__aeabi_fsub+0x210>
    687a:	28ff      	cmp	r0, #255	; 0xff
    687c:	d021      	beq.n	68c2 <__aeabi_fsub+0x21e>
    687e:	2480      	movs	r4, #128	; 0x80
    6880:	04e4      	lsls	r4, r4, #19
    6882:	4252      	negs	r2, r2
    6884:	4323      	orrs	r3, r4
    6886:	2a1b      	cmp	r2, #27
    6888:	dd00      	ble.n	688c <__aeabi_fsub+0x1e8>
    688a:	e096      	b.n	69ba <__aeabi_fsub+0x316>
    688c:	001c      	movs	r4, r3
    688e:	2520      	movs	r5, #32
    6890:	40d4      	lsrs	r4, r2
    6892:	1aaa      	subs	r2, r5, r2
    6894:	4093      	lsls	r3, r2
    6896:	1e5a      	subs	r2, r3, #1
    6898:	4193      	sbcs	r3, r2
    689a:	4323      	orrs	r3, r4
    689c:	1af3      	subs	r3, r6, r3
    689e:	0004      	movs	r4, r0
    68a0:	000d      	movs	r5, r1
    68a2:	e72d      	b.n	6700 <__aeabi_fsub+0x5c>
    68a4:	2f00      	cmp	r7, #0
    68a6:	d000      	beq.n	68aa <__aeabi_fsub+0x206>
    68a8:	e72e      	b.n	6708 <__aeabi_fsub+0x64>
    68aa:	2200      	movs	r2, #0
    68ac:	2400      	movs	r4, #0
    68ae:	e7a9      	b.n	6804 <__aeabi_fsub+0x160>
    68b0:	000c      	movs	r4, r1
    68b2:	e73d      	b.n	6730 <__aeabi_fsub+0x8c>
    68b4:	2b00      	cmp	r3, #0
    68b6:	d058      	beq.n	696a <__aeabi_fsub+0x2c6>
    68b8:	43d2      	mvns	r2, r2
    68ba:	2a00      	cmp	r2, #0
    68bc:	d0ee      	beq.n	689c <__aeabi_fsub+0x1f8>
    68be:	28ff      	cmp	r0, #255	; 0xff
    68c0:	d1e1      	bne.n	6886 <__aeabi_fsub+0x1e2>
    68c2:	0033      	movs	r3, r6
    68c4:	24ff      	movs	r4, #255	; 0xff
    68c6:	000d      	movs	r5, r1
    68c8:	e732      	b.n	6730 <__aeabi_fsub+0x8c>
    68ca:	29ff      	cmp	r1, #255	; 0xff
    68cc:	d010      	beq.n	68f0 <__aeabi_fsub+0x24c>
    68ce:	0001      	movs	r1, r0
    68d0:	e778      	b.n	67c4 <__aeabi_fsub+0x120>
    68d2:	2b00      	cmp	r3, #0
    68d4:	d06e      	beq.n	69b4 <__aeabi_fsub+0x310>
    68d6:	24ff      	movs	r4, #255	; 0xff
    68d8:	2e00      	cmp	r6, #0
    68da:	d100      	bne.n	68de <__aeabi_fsub+0x23a>
    68dc:	e728      	b.n	6730 <__aeabi_fsub+0x8c>
    68de:	2280      	movs	r2, #128	; 0x80
    68e0:	4651      	mov	r1, sl
    68e2:	03d2      	lsls	r2, r2, #15
    68e4:	4211      	tst	r1, r2
    68e6:	d003      	beq.n	68f0 <__aeabi_fsub+0x24c>
    68e8:	4661      	mov	r1, ip
    68ea:	4211      	tst	r1, r2
    68ec:	d100      	bne.n	68f0 <__aeabi_fsub+0x24c>
    68ee:	0033      	movs	r3, r6
    68f0:	24ff      	movs	r4, #255	; 0xff
    68f2:	e71d      	b.n	6730 <__aeabi_fsub+0x8c>
    68f4:	24ff      	movs	r4, #255	; 0xff
    68f6:	2300      	movs	r3, #0
    68f8:	e72c      	b.n	6754 <__aeabi_fsub+0xb0>
    68fa:	2c00      	cmp	r4, #0
    68fc:	d1e9      	bne.n	68d2 <__aeabi_fsub+0x22e>
    68fe:	2b00      	cmp	r3, #0
    6900:	d063      	beq.n	69ca <__aeabi_fsub+0x326>
    6902:	2e00      	cmp	r6, #0
    6904:	d100      	bne.n	6908 <__aeabi_fsub+0x264>
    6906:	e713      	b.n	6730 <__aeabi_fsub+0x8c>
    6908:	199b      	adds	r3, r3, r6
    690a:	015a      	lsls	r2, r3, #5
    690c:	d400      	bmi.n	6910 <__aeabi_fsub+0x26c>
    690e:	e73e      	b.n	678e <__aeabi_fsub+0xea>
    6910:	4a31      	ldr	r2, [pc, #196]	; (69d8 <__aeabi_fsub+0x334>)
    6912:	000c      	movs	r4, r1
    6914:	4013      	ands	r3, r2
    6916:	e70b      	b.n	6730 <__aeabi_fsub+0x8c>
    6918:	2c00      	cmp	r4, #0
    691a:	d11e      	bne.n	695a <__aeabi_fsub+0x2b6>
    691c:	2b00      	cmp	r3, #0
    691e:	d12f      	bne.n	6980 <__aeabi_fsub+0x2dc>
    6920:	2e00      	cmp	r6, #0
    6922:	d04f      	beq.n	69c4 <__aeabi_fsub+0x320>
    6924:	0033      	movs	r3, r6
    6926:	000d      	movs	r5, r1
    6928:	e702      	b.n	6730 <__aeabi_fsub+0x8c>
    692a:	2601      	movs	r6, #1
    692c:	e755      	b.n	67da <__aeabi_fsub+0x136>
    692e:	2c00      	cmp	r4, #0
    6930:	d11f      	bne.n	6972 <__aeabi_fsub+0x2ce>
    6932:	2b00      	cmp	r3, #0
    6934:	d043      	beq.n	69be <__aeabi_fsub+0x31a>
    6936:	43c9      	mvns	r1, r1
    6938:	2900      	cmp	r1, #0
    693a:	d00b      	beq.n	6954 <__aeabi_fsub+0x2b0>
    693c:	28ff      	cmp	r0, #255	; 0xff
    693e:	d039      	beq.n	69b4 <__aeabi_fsub+0x310>
    6940:	291b      	cmp	r1, #27
    6942:	dc44      	bgt.n	69ce <__aeabi_fsub+0x32a>
    6944:	001c      	movs	r4, r3
    6946:	2720      	movs	r7, #32
    6948:	40cc      	lsrs	r4, r1
    694a:	1a79      	subs	r1, r7, r1
    694c:	408b      	lsls	r3, r1
    694e:	1e59      	subs	r1, r3, #1
    6950:	418b      	sbcs	r3, r1
    6952:	4323      	orrs	r3, r4
    6954:	199b      	adds	r3, r3, r6
    6956:	0004      	movs	r4, r0
    6958:	e740      	b.n	67dc <__aeabi_fsub+0x138>
    695a:	2b00      	cmp	r3, #0
    695c:	d11a      	bne.n	6994 <__aeabi_fsub+0x2f0>
    695e:	2e00      	cmp	r6, #0
    6960:	d124      	bne.n	69ac <__aeabi_fsub+0x308>
    6962:	2780      	movs	r7, #128	; 0x80
    6964:	2200      	movs	r2, #0
    6966:	03ff      	lsls	r7, r7, #15
    6968:	e71b      	b.n	67a2 <__aeabi_fsub+0xfe>
    696a:	0033      	movs	r3, r6
    696c:	0004      	movs	r4, r0
    696e:	000d      	movs	r5, r1
    6970:	e6de      	b.n	6730 <__aeabi_fsub+0x8c>
    6972:	28ff      	cmp	r0, #255	; 0xff
    6974:	d01e      	beq.n	69b4 <__aeabi_fsub+0x310>
    6976:	2480      	movs	r4, #128	; 0x80
    6978:	04e4      	lsls	r4, r4, #19
    697a:	4249      	negs	r1, r1
    697c:	4323      	orrs	r3, r4
    697e:	e7df      	b.n	6940 <__aeabi_fsub+0x29c>
    6980:	2e00      	cmp	r6, #0
    6982:	d100      	bne.n	6986 <__aeabi_fsub+0x2e2>
    6984:	e6d4      	b.n	6730 <__aeabi_fsub+0x8c>
    6986:	1b9f      	subs	r7, r3, r6
    6988:	017a      	lsls	r2, r7, #5
    698a:	d400      	bmi.n	698e <__aeabi_fsub+0x2ea>
    698c:	e737      	b.n	67fe <__aeabi_fsub+0x15a>
    698e:	1af3      	subs	r3, r6, r3
    6990:	000d      	movs	r5, r1
    6992:	e6cd      	b.n	6730 <__aeabi_fsub+0x8c>
    6994:	24ff      	movs	r4, #255	; 0xff
    6996:	2e00      	cmp	r6, #0
    6998:	d100      	bne.n	699c <__aeabi_fsub+0x2f8>
    699a:	e6c9      	b.n	6730 <__aeabi_fsub+0x8c>
    699c:	2280      	movs	r2, #128	; 0x80
    699e:	4650      	mov	r0, sl
    69a0:	03d2      	lsls	r2, r2, #15
    69a2:	4210      	tst	r0, r2
    69a4:	d0a4      	beq.n	68f0 <__aeabi_fsub+0x24c>
    69a6:	4660      	mov	r0, ip
    69a8:	4210      	tst	r0, r2
    69aa:	d1a1      	bne.n	68f0 <__aeabi_fsub+0x24c>
    69ac:	0033      	movs	r3, r6
    69ae:	000d      	movs	r5, r1
    69b0:	24ff      	movs	r4, #255	; 0xff
    69b2:	e6bd      	b.n	6730 <__aeabi_fsub+0x8c>
    69b4:	0033      	movs	r3, r6
    69b6:	24ff      	movs	r4, #255	; 0xff
    69b8:	e6ba      	b.n	6730 <__aeabi_fsub+0x8c>
    69ba:	2301      	movs	r3, #1
    69bc:	e76e      	b.n	689c <__aeabi_fsub+0x1f8>
    69be:	0033      	movs	r3, r6
    69c0:	0004      	movs	r4, r0
    69c2:	e6b5      	b.n	6730 <__aeabi_fsub+0x8c>
    69c4:	2700      	movs	r7, #0
    69c6:	2200      	movs	r2, #0
    69c8:	e71c      	b.n	6804 <__aeabi_fsub+0x160>
    69ca:	0033      	movs	r3, r6
    69cc:	e6b0      	b.n	6730 <__aeabi_fsub+0x8c>
    69ce:	2301      	movs	r3, #1
    69d0:	e7c0      	b.n	6954 <__aeabi_fsub+0x2b0>
    69d2:	46c0      	nop			; (mov r8, r8)
    69d4:	7dffffff 	.word	0x7dffffff
    69d8:	fbffffff 	.word	0xfbffffff

000069dc <__aeabi_f2iz>:
    69dc:	0241      	lsls	r1, r0, #9
    69de:	0043      	lsls	r3, r0, #1
    69e0:	0fc2      	lsrs	r2, r0, #31
    69e2:	0a49      	lsrs	r1, r1, #9
    69e4:	0e1b      	lsrs	r3, r3, #24
    69e6:	2000      	movs	r0, #0
    69e8:	2b7e      	cmp	r3, #126	; 0x7e
    69ea:	dd0d      	ble.n	6a08 <__aeabi_f2iz+0x2c>
    69ec:	2b9d      	cmp	r3, #157	; 0x9d
    69ee:	dc0c      	bgt.n	6a0a <__aeabi_f2iz+0x2e>
    69f0:	2080      	movs	r0, #128	; 0x80
    69f2:	0400      	lsls	r0, r0, #16
    69f4:	4301      	orrs	r1, r0
    69f6:	2b95      	cmp	r3, #149	; 0x95
    69f8:	dc0a      	bgt.n	6a10 <__aeabi_f2iz+0x34>
    69fa:	2096      	movs	r0, #150	; 0x96
    69fc:	1ac3      	subs	r3, r0, r3
    69fe:	40d9      	lsrs	r1, r3
    6a00:	4248      	negs	r0, r1
    6a02:	2a00      	cmp	r2, #0
    6a04:	d100      	bne.n	6a08 <__aeabi_f2iz+0x2c>
    6a06:	0008      	movs	r0, r1
    6a08:	4770      	bx	lr
    6a0a:	4b03      	ldr	r3, [pc, #12]	; (6a18 <__aeabi_f2iz+0x3c>)
    6a0c:	18d0      	adds	r0, r2, r3
    6a0e:	e7fb      	b.n	6a08 <__aeabi_f2iz+0x2c>
    6a10:	3b96      	subs	r3, #150	; 0x96
    6a12:	4099      	lsls	r1, r3
    6a14:	e7f4      	b.n	6a00 <__aeabi_f2iz+0x24>
    6a16:	46c0      	nop			; (mov r8, r8)
    6a18:	7fffffff 	.word	0x7fffffff

00006a1c <__aeabi_ui2f>:
    6a1c:	b510      	push	{r4, lr}
    6a1e:	1e04      	subs	r4, r0, #0
    6a20:	d027      	beq.n	6a72 <__aeabi_ui2f+0x56>
    6a22:	f001 feff 	bl	8824 <__clzsi2>
    6a26:	239e      	movs	r3, #158	; 0x9e
    6a28:	1a1b      	subs	r3, r3, r0
    6a2a:	2b96      	cmp	r3, #150	; 0x96
    6a2c:	dc0a      	bgt.n	6a44 <__aeabi_ui2f+0x28>
    6a2e:	2296      	movs	r2, #150	; 0x96
    6a30:	1ad2      	subs	r2, r2, r3
    6a32:	4094      	lsls	r4, r2
    6a34:	0264      	lsls	r4, r4, #9
    6a36:	0a64      	lsrs	r4, r4, #9
    6a38:	b2db      	uxtb	r3, r3
    6a3a:	0264      	lsls	r4, r4, #9
    6a3c:	05db      	lsls	r3, r3, #23
    6a3e:	0a60      	lsrs	r0, r4, #9
    6a40:	4318      	orrs	r0, r3
    6a42:	bd10      	pop	{r4, pc}
    6a44:	2b99      	cmp	r3, #153	; 0x99
    6a46:	dc17      	bgt.n	6a78 <__aeabi_ui2f+0x5c>
    6a48:	2299      	movs	r2, #153	; 0x99
    6a4a:	1ad2      	subs	r2, r2, r3
    6a4c:	2a00      	cmp	r2, #0
    6a4e:	dd27      	ble.n	6aa0 <__aeabi_ui2f+0x84>
    6a50:	4094      	lsls	r4, r2
    6a52:	0022      	movs	r2, r4
    6a54:	4c13      	ldr	r4, [pc, #76]	; (6aa4 <__aeabi_ui2f+0x88>)
    6a56:	4014      	ands	r4, r2
    6a58:	0751      	lsls	r1, r2, #29
    6a5a:	d004      	beq.n	6a66 <__aeabi_ui2f+0x4a>
    6a5c:	210f      	movs	r1, #15
    6a5e:	400a      	ands	r2, r1
    6a60:	2a04      	cmp	r2, #4
    6a62:	d000      	beq.n	6a66 <__aeabi_ui2f+0x4a>
    6a64:	3404      	adds	r4, #4
    6a66:	0162      	lsls	r2, r4, #5
    6a68:	d412      	bmi.n	6a90 <__aeabi_ui2f+0x74>
    6a6a:	01a4      	lsls	r4, r4, #6
    6a6c:	0a64      	lsrs	r4, r4, #9
    6a6e:	b2db      	uxtb	r3, r3
    6a70:	e7e3      	b.n	6a3a <__aeabi_ui2f+0x1e>
    6a72:	2300      	movs	r3, #0
    6a74:	2400      	movs	r4, #0
    6a76:	e7e0      	b.n	6a3a <__aeabi_ui2f+0x1e>
    6a78:	22b9      	movs	r2, #185	; 0xb9
    6a7a:	0021      	movs	r1, r4
    6a7c:	1ad2      	subs	r2, r2, r3
    6a7e:	4091      	lsls	r1, r2
    6a80:	000a      	movs	r2, r1
    6a82:	1e51      	subs	r1, r2, #1
    6a84:	418a      	sbcs	r2, r1
    6a86:	2105      	movs	r1, #5
    6a88:	1a09      	subs	r1, r1, r0
    6a8a:	40cc      	lsrs	r4, r1
    6a8c:	4314      	orrs	r4, r2
    6a8e:	e7db      	b.n	6a48 <__aeabi_ui2f+0x2c>
    6a90:	4b04      	ldr	r3, [pc, #16]	; (6aa4 <__aeabi_ui2f+0x88>)
    6a92:	401c      	ands	r4, r3
    6a94:	239f      	movs	r3, #159	; 0x9f
    6a96:	01a4      	lsls	r4, r4, #6
    6a98:	1a1b      	subs	r3, r3, r0
    6a9a:	0a64      	lsrs	r4, r4, #9
    6a9c:	b2db      	uxtb	r3, r3
    6a9e:	e7cc      	b.n	6a3a <__aeabi_ui2f+0x1e>
    6aa0:	0022      	movs	r2, r4
    6aa2:	e7d7      	b.n	6a54 <__aeabi_ui2f+0x38>
    6aa4:	fbffffff 	.word	0xfbffffff

00006aa8 <__aeabi_dadd>:
    6aa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6aaa:	4645      	mov	r5, r8
    6aac:	46de      	mov	lr, fp
    6aae:	4657      	mov	r7, sl
    6ab0:	464e      	mov	r6, r9
    6ab2:	030c      	lsls	r4, r1, #12
    6ab4:	b5e0      	push	{r5, r6, r7, lr}
    6ab6:	004e      	lsls	r6, r1, #1
    6ab8:	0fc9      	lsrs	r1, r1, #31
    6aba:	4688      	mov	r8, r1
    6abc:	000d      	movs	r5, r1
    6abe:	0a61      	lsrs	r1, r4, #9
    6ac0:	0f44      	lsrs	r4, r0, #29
    6ac2:	430c      	orrs	r4, r1
    6ac4:	00c7      	lsls	r7, r0, #3
    6ac6:	0319      	lsls	r1, r3, #12
    6ac8:	0058      	lsls	r0, r3, #1
    6aca:	0fdb      	lsrs	r3, r3, #31
    6acc:	469b      	mov	fp, r3
    6ace:	0a4b      	lsrs	r3, r1, #9
    6ad0:	0f51      	lsrs	r1, r2, #29
    6ad2:	430b      	orrs	r3, r1
    6ad4:	0d76      	lsrs	r6, r6, #21
    6ad6:	0d40      	lsrs	r0, r0, #21
    6ad8:	0019      	movs	r1, r3
    6ada:	00d2      	lsls	r2, r2, #3
    6adc:	45d8      	cmp	r8, fp
    6ade:	d100      	bne.n	6ae2 <__aeabi_dadd+0x3a>
    6ae0:	e0ae      	b.n	6c40 <__aeabi_dadd+0x198>
    6ae2:	1a35      	subs	r5, r6, r0
    6ae4:	2d00      	cmp	r5, #0
    6ae6:	dc00      	bgt.n	6aea <__aeabi_dadd+0x42>
    6ae8:	e0f6      	b.n	6cd8 <__aeabi_dadd+0x230>
    6aea:	2800      	cmp	r0, #0
    6aec:	d10f      	bne.n	6b0e <__aeabi_dadd+0x66>
    6aee:	4313      	orrs	r3, r2
    6af0:	d100      	bne.n	6af4 <__aeabi_dadd+0x4c>
    6af2:	e0db      	b.n	6cac <__aeabi_dadd+0x204>
    6af4:	1e6b      	subs	r3, r5, #1
    6af6:	2b00      	cmp	r3, #0
    6af8:	d000      	beq.n	6afc <__aeabi_dadd+0x54>
    6afa:	e137      	b.n	6d6c <__aeabi_dadd+0x2c4>
    6afc:	1aba      	subs	r2, r7, r2
    6afe:	4297      	cmp	r7, r2
    6b00:	41bf      	sbcs	r7, r7
    6b02:	1a64      	subs	r4, r4, r1
    6b04:	427f      	negs	r7, r7
    6b06:	1be4      	subs	r4, r4, r7
    6b08:	2601      	movs	r6, #1
    6b0a:	0017      	movs	r7, r2
    6b0c:	e024      	b.n	6b58 <__aeabi_dadd+0xb0>
    6b0e:	4bc6      	ldr	r3, [pc, #792]	; (6e28 <__aeabi_dadd+0x380>)
    6b10:	429e      	cmp	r6, r3
    6b12:	d04d      	beq.n	6bb0 <__aeabi_dadd+0x108>
    6b14:	2380      	movs	r3, #128	; 0x80
    6b16:	041b      	lsls	r3, r3, #16
    6b18:	4319      	orrs	r1, r3
    6b1a:	2d38      	cmp	r5, #56	; 0x38
    6b1c:	dd00      	ble.n	6b20 <__aeabi_dadd+0x78>
    6b1e:	e107      	b.n	6d30 <__aeabi_dadd+0x288>
    6b20:	2d1f      	cmp	r5, #31
    6b22:	dd00      	ble.n	6b26 <__aeabi_dadd+0x7e>
    6b24:	e138      	b.n	6d98 <__aeabi_dadd+0x2f0>
    6b26:	2020      	movs	r0, #32
    6b28:	1b43      	subs	r3, r0, r5
    6b2a:	469a      	mov	sl, r3
    6b2c:	000b      	movs	r3, r1
    6b2e:	4650      	mov	r0, sl
    6b30:	4083      	lsls	r3, r0
    6b32:	4699      	mov	r9, r3
    6b34:	0013      	movs	r3, r2
    6b36:	4648      	mov	r0, r9
    6b38:	40eb      	lsrs	r3, r5
    6b3a:	4318      	orrs	r0, r3
    6b3c:	0003      	movs	r3, r0
    6b3e:	4650      	mov	r0, sl
    6b40:	4082      	lsls	r2, r0
    6b42:	1e50      	subs	r0, r2, #1
    6b44:	4182      	sbcs	r2, r0
    6b46:	40e9      	lsrs	r1, r5
    6b48:	431a      	orrs	r2, r3
    6b4a:	1aba      	subs	r2, r7, r2
    6b4c:	1a61      	subs	r1, r4, r1
    6b4e:	4297      	cmp	r7, r2
    6b50:	41a4      	sbcs	r4, r4
    6b52:	0017      	movs	r7, r2
    6b54:	4264      	negs	r4, r4
    6b56:	1b0c      	subs	r4, r1, r4
    6b58:	0223      	lsls	r3, r4, #8
    6b5a:	d562      	bpl.n	6c22 <__aeabi_dadd+0x17a>
    6b5c:	0264      	lsls	r4, r4, #9
    6b5e:	0a65      	lsrs	r5, r4, #9
    6b60:	2d00      	cmp	r5, #0
    6b62:	d100      	bne.n	6b66 <__aeabi_dadd+0xbe>
    6b64:	e0df      	b.n	6d26 <__aeabi_dadd+0x27e>
    6b66:	0028      	movs	r0, r5
    6b68:	f001 fe5c 	bl	8824 <__clzsi2>
    6b6c:	0003      	movs	r3, r0
    6b6e:	3b08      	subs	r3, #8
    6b70:	2b1f      	cmp	r3, #31
    6b72:	dd00      	ble.n	6b76 <__aeabi_dadd+0xce>
    6b74:	e0d2      	b.n	6d1c <__aeabi_dadd+0x274>
    6b76:	2220      	movs	r2, #32
    6b78:	003c      	movs	r4, r7
    6b7a:	1ad2      	subs	r2, r2, r3
    6b7c:	409d      	lsls	r5, r3
    6b7e:	40d4      	lsrs	r4, r2
    6b80:	409f      	lsls	r7, r3
    6b82:	4325      	orrs	r5, r4
    6b84:	429e      	cmp	r6, r3
    6b86:	dd00      	ble.n	6b8a <__aeabi_dadd+0xe2>
    6b88:	e0c4      	b.n	6d14 <__aeabi_dadd+0x26c>
    6b8a:	1b9e      	subs	r6, r3, r6
    6b8c:	1c73      	adds	r3, r6, #1
    6b8e:	2b1f      	cmp	r3, #31
    6b90:	dd00      	ble.n	6b94 <__aeabi_dadd+0xec>
    6b92:	e0f1      	b.n	6d78 <__aeabi_dadd+0x2d0>
    6b94:	2220      	movs	r2, #32
    6b96:	0038      	movs	r0, r7
    6b98:	0029      	movs	r1, r5
    6b9a:	1ad2      	subs	r2, r2, r3
    6b9c:	40d8      	lsrs	r0, r3
    6b9e:	4091      	lsls	r1, r2
    6ba0:	4097      	lsls	r7, r2
    6ba2:	002c      	movs	r4, r5
    6ba4:	4301      	orrs	r1, r0
    6ba6:	1e78      	subs	r0, r7, #1
    6ba8:	4187      	sbcs	r7, r0
    6baa:	40dc      	lsrs	r4, r3
    6bac:	2600      	movs	r6, #0
    6bae:	430f      	orrs	r7, r1
    6bb0:	077b      	lsls	r3, r7, #29
    6bb2:	d009      	beq.n	6bc8 <__aeabi_dadd+0x120>
    6bb4:	230f      	movs	r3, #15
    6bb6:	403b      	ands	r3, r7
    6bb8:	2b04      	cmp	r3, #4
    6bba:	d005      	beq.n	6bc8 <__aeabi_dadd+0x120>
    6bbc:	1d3b      	adds	r3, r7, #4
    6bbe:	42bb      	cmp	r3, r7
    6bc0:	41bf      	sbcs	r7, r7
    6bc2:	427f      	negs	r7, r7
    6bc4:	19e4      	adds	r4, r4, r7
    6bc6:	001f      	movs	r7, r3
    6bc8:	0223      	lsls	r3, r4, #8
    6bca:	d52c      	bpl.n	6c26 <__aeabi_dadd+0x17e>
    6bcc:	4b96      	ldr	r3, [pc, #600]	; (6e28 <__aeabi_dadd+0x380>)
    6bce:	3601      	adds	r6, #1
    6bd0:	429e      	cmp	r6, r3
    6bd2:	d100      	bne.n	6bd6 <__aeabi_dadd+0x12e>
    6bd4:	e09a      	b.n	6d0c <__aeabi_dadd+0x264>
    6bd6:	4645      	mov	r5, r8
    6bd8:	4b94      	ldr	r3, [pc, #592]	; (6e2c <__aeabi_dadd+0x384>)
    6bda:	08ff      	lsrs	r7, r7, #3
    6bdc:	401c      	ands	r4, r3
    6bde:	0760      	lsls	r0, r4, #29
    6be0:	0576      	lsls	r6, r6, #21
    6be2:	0264      	lsls	r4, r4, #9
    6be4:	4307      	orrs	r7, r0
    6be6:	0b24      	lsrs	r4, r4, #12
    6be8:	0d76      	lsrs	r6, r6, #21
    6bea:	2100      	movs	r1, #0
    6bec:	0324      	lsls	r4, r4, #12
    6bee:	0b23      	lsrs	r3, r4, #12
    6bf0:	0d0c      	lsrs	r4, r1, #20
    6bf2:	4a8f      	ldr	r2, [pc, #572]	; (6e30 <__aeabi_dadd+0x388>)
    6bf4:	0524      	lsls	r4, r4, #20
    6bf6:	431c      	orrs	r4, r3
    6bf8:	4014      	ands	r4, r2
    6bfa:	0533      	lsls	r3, r6, #20
    6bfc:	4323      	orrs	r3, r4
    6bfe:	005b      	lsls	r3, r3, #1
    6c00:	07ed      	lsls	r5, r5, #31
    6c02:	085b      	lsrs	r3, r3, #1
    6c04:	432b      	orrs	r3, r5
    6c06:	0038      	movs	r0, r7
    6c08:	0019      	movs	r1, r3
    6c0a:	bc3c      	pop	{r2, r3, r4, r5}
    6c0c:	4690      	mov	r8, r2
    6c0e:	4699      	mov	r9, r3
    6c10:	46a2      	mov	sl, r4
    6c12:	46ab      	mov	fp, r5
    6c14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6c16:	4664      	mov	r4, ip
    6c18:	4304      	orrs	r4, r0
    6c1a:	d100      	bne.n	6c1e <__aeabi_dadd+0x176>
    6c1c:	e211      	b.n	7042 <__aeabi_dadd+0x59a>
    6c1e:	0004      	movs	r4, r0
    6c20:	4667      	mov	r7, ip
    6c22:	077b      	lsls	r3, r7, #29
    6c24:	d1c6      	bne.n	6bb4 <__aeabi_dadd+0x10c>
    6c26:	4645      	mov	r5, r8
    6c28:	0760      	lsls	r0, r4, #29
    6c2a:	08ff      	lsrs	r7, r7, #3
    6c2c:	4307      	orrs	r7, r0
    6c2e:	08e4      	lsrs	r4, r4, #3
    6c30:	4b7d      	ldr	r3, [pc, #500]	; (6e28 <__aeabi_dadd+0x380>)
    6c32:	429e      	cmp	r6, r3
    6c34:	d030      	beq.n	6c98 <__aeabi_dadd+0x1f0>
    6c36:	0324      	lsls	r4, r4, #12
    6c38:	0576      	lsls	r6, r6, #21
    6c3a:	0b24      	lsrs	r4, r4, #12
    6c3c:	0d76      	lsrs	r6, r6, #21
    6c3e:	e7d4      	b.n	6bea <__aeabi_dadd+0x142>
    6c40:	1a33      	subs	r3, r6, r0
    6c42:	469a      	mov	sl, r3
    6c44:	2b00      	cmp	r3, #0
    6c46:	dd78      	ble.n	6d3a <__aeabi_dadd+0x292>
    6c48:	2800      	cmp	r0, #0
    6c4a:	d031      	beq.n	6cb0 <__aeabi_dadd+0x208>
    6c4c:	4876      	ldr	r0, [pc, #472]	; (6e28 <__aeabi_dadd+0x380>)
    6c4e:	4286      	cmp	r6, r0
    6c50:	d0ae      	beq.n	6bb0 <__aeabi_dadd+0x108>
    6c52:	2080      	movs	r0, #128	; 0x80
    6c54:	0400      	lsls	r0, r0, #16
    6c56:	4301      	orrs	r1, r0
    6c58:	4653      	mov	r3, sl
    6c5a:	2b38      	cmp	r3, #56	; 0x38
    6c5c:	dc00      	bgt.n	6c60 <__aeabi_dadd+0x1b8>
    6c5e:	e0e9      	b.n	6e34 <__aeabi_dadd+0x38c>
    6c60:	430a      	orrs	r2, r1
    6c62:	1e51      	subs	r1, r2, #1
    6c64:	418a      	sbcs	r2, r1
    6c66:	2100      	movs	r1, #0
    6c68:	19d2      	adds	r2, r2, r7
    6c6a:	42ba      	cmp	r2, r7
    6c6c:	41bf      	sbcs	r7, r7
    6c6e:	1909      	adds	r1, r1, r4
    6c70:	427c      	negs	r4, r7
    6c72:	0017      	movs	r7, r2
    6c74:	190c      	adds	r4, r1, r4
    6c76:	0223      	lsls	r3, r4, #8
    6c78:	d5d3      	bpl.n	6c22 <__aeabi_dadd+0x17a>
    6c7a:	4b6b      	ldr	r3, [pc, #428]	; (6e28 <__aeabi_dadd+0x380>)
    6c7c:	3601      	adds	r6, #1
    6c7e:	429e      	cmp	r6, r3
    6c80:	d100      	bne.n	6c84 <__aeabi_dadd+0x1dc>
    6c82:	e13a      	b.n	6efa <__aeabi_dadd+0x452>
    6c84:	2001      	movs	r0, #1
    6c86:	4b69      	ldr	r3, [pc, #420]	; (6e2c <__aeabi_dadd+0x384>)
    6c88:	401c      	ands	r4, r3
    6c8a:	087b      	lsrs	r3, r7, #1
    6c8c:	4007      	ands	r7, r0
    6c8e:	431f      	orrs	r7, r3
    6c90:	07e0      	lsls	r0, r4, #31
    6c92:	4307      	orrs	r7, r0
    6c94:	0864      	lsrs	r4, r4, #1
    6c96:	e78b      	b.n	6bb0 <__aeabi_dadd+0x108>
    6c98:	0023      	movs	r3, r4
    6c9a:	433b      	orrs	r3, r7
    6c9c:	d100      	bne.n	6ca0 <__aeabi_dadd+0x1f8>
    6c9e:	e1cb      	b.n	7038 <__aeabi_dadd+0x590>
    6ca0:	2280      	movs	r2, #128	; 0x80
    6ca2:	0312      	lsls	r2, r2, #12
    6ca4:	4314      	orrs	r4, r2
    6ca6:	0324      	lsls	r4, r4, #12
    6ca8:	0b24      	lsrs	r4, r4, #12
    6caa:	e79e      	b.n	6bea <__aeabi_dadd+0x142>
    6cac:	002e      	movs	r6, r5
    6cae:	e77f      	b.n	6bb0 <__aeabi_dadd+0x108>
    6cb0:	0008      	movs	r0, r1
    6cb2:	4310      	orrs	r0, r2
    6cb4:	d100      	bne.n	6cb8 <__aeabi_dadd+0x210>
    6cb6:	e0b4      	b.n	6e22 <__aeabi_dadd+0x37a>
    6cb8:	1e58      	subs	r0, r3, #1
    6cba:	2800      	cmp	r0, #0
    6cbc:	d000      	beq.n	6cc0 <__aeabi_dadd+0x218>
    6cbe:	e0de      	b.n	6e7e <__aeabi_dadd+0x3d6>
    6cc0:	18ba      	adds	r2, r7, r2
    6cc2:	42ba      	cmp	r2, r7
    6cc4:	419b      	sbcs	r3, r3
    6cc6:	1864      	adds	r4, r4, r1
    6cc8:	425b      	negs	r3, r3
    6cca:	18e4      	adds	r4, r4, r3
    6ccc:	0017      	movs	r7, r2
    6cce:	2601      	movs	r6, #1
    6cd0:	0223      	lsls	r3, r4, #8
    6cd2:	d5a6      	bpl.n	6c22 <__aeabi_dadd+0x17a>
    6cd4:	2602      	movs	r6, #2
    6cd6:	e7d5      	b.n	6c84 <__aeabi_dadd+0x1dc>
    6cd8:	2d00      	cmp	r5, #0
    6cda:	d16e      	bne.n	6dba <__aeabi_dadd+0x312>
    6cdc:	1c70      	adds	r0, r6, #1
    6cde:	0540      	lsls	r0, r0, #21
    6ce0:	0d40      	lsrs	r0, r0, #21
    6ce2:	2801      	cmp	r0, #1
    6ce4:	dc00      	bgt.n	6ce8 <__aeabi_dadd+0x240>
    6ce6:	e0f9      	b.n	6edc <__aeabi_dadd+0x434>
    6ce8:	1ab8      	subs	r0, r7, r2
    6cea:	4684      	mov	ip, r0
    6cec:	4287      	cmp	r7, r0
    6cee:	4180      	sbcs	r0, r0
    6cf0:	1ae5      	subs	r5, r4, r3
    6cf2:	4240      	negs	r0, r0
    6cf4:	1a2d      	subs	r5, r5, r0
    6cf6:	0228      	lsls	r0, r5, #8
    6cf8:	d400      	bmi.n	6cfc <__aeabi_dadd+0x254>
    6cfa:	e089      	b.n	6e10 <__aeabi_dadd+0x368>
    6cfc:	1bd7      	subs	r7, r2, r7
    6cfe:	42ba      	cmp	r2, r7
    6d00:	4192      	sbcs	r2, r2
    6d02:	1b1c      	subs	r4, r3, r4
    6d04:	4252      	negs	r2, r2
    6d06:	1aa5      	subs	r5, r4, r2
    6d08:	46d8      	mov	r8, fp
    6d0a:	e729      	b.n	6b60 <__aeabi_dadd+0xb8>
    6d0c:	4645      	mov	r5, r8
    6d0e:	2400      	movs	r4, #0
    6d10:	2700      	movs	r7, #0
    6d12:	e76a      	b.n	6bea <__aeabi_dadd+0x142>
    6d14:	4c45      	ldr	r4, [pc, #276]	; (6e2c <__aeabi_dadd+0x384>)
    6d16:	1af6      	subs	r6, r6, r3
    6d18:	402c      	ands	r4, r5
    6d1a:	e749      	b.n	6bb0 <__aeabi_dadd+0x108>
    6d1c:	003d      	movs	r5, r7
    6d1e:	3828      	subs	r0, #40	; 0x28
    6d20:	4085      	lsls	r5, r0
    6d22:	2700      	movs	r7, #0
    6d24:	e72e      	b.n	6b84 <__aeabi_dadd+0xdc>
    6d26:	0038      	movs	r0, r7
    6d28:	f001 fd7c 	bl	8824 <__clzsi2>
    6d2c:	3020      	adds	r0, #32
    6d2e:	e71d      	b.n	6b6c <__aeabi_dadd+0xc4>
    6d30:	430a      	orrs	r2, r1
    6d32:	1e51      	subs	r1, r2, #1
    6d34:	418a      	sbcs	r2, r1
    6d36:	2100      	movs	r1, #0
    6d38:	e707      	b.n	6b4a <__aeabi_dadd+0xa2>
    6d3a:	2b00      	cmp	r3, #0
    6d3c:	d000      	beq.n	6d40 <__aeabi_dadd+0x298>
    6d3e:	e0f3      	b.n	6f28 <__aeabi_dadd+0x480>
    6d40:	1c70      	adds	r0, r6, #1
    6d42:	0543      	lsls	r3, r0, #21
    6d44:	0d5b      	lsrs	r3, r3, #21
    6d46:	2b01      	cmp	r3, #1
    6d48:	dc00      	bgt.n	6d4c <__aeabi_dadd+0x2a4>
    6d4a:	e0ad      	b.n	6ea8 <__aeabi_dadd+0x400>
    6d4c:	4b36      	ldr	r3, [pc, #216]	; (6e28 <__aeabi_dadd+0x380>)
    6d4e:	4298      	cmp	r0, r3
    6d50:	d100      	bne.n	6d54 <__aeabi_dadd+0x2ac>
    6d52:	e0d1      	b.n	6ef8 <__aeabi_dadd+0x450>
    6d54:	18ba      	adds	r2, r7, r2
    6d56:	42ba      	cmp	r2, r7
    6d58:	41bf      	sbcs	r7, r7
    6d5a:	1864      	adds	r4, r4, r1
    6d5c:	427f      	negs	r7, r7
    6d5e:	19e4      	adds	r4, r4, r7
    6d60:	07e7      	lsls	r7, r4, #31
    6d62:	0852      	lsrs	r2, r2, #1
    6d64:	4317      	orrs	r7, r2
    6d66:	0864      	lsrs	r4, r4, #1
    6d68:	0006      	movs	r6, r0
    6d6a:	e721      	b.n	6bb0 <__aeabi_dadd+0x108>
    6d6c:	482e      	ldr	r0, [pc, #184]	; (6e28 <__aeabi_dadd+0x380>)
    6d6e:	4285      	cmp	r5, r0
    6d70:	d100      	bne.n	6d74 <__aeabi_dadd+0x2cc>
    6d72:	e093      	b.n	6e9c <__aeabi_dadd+0x3f4>
    6d74:	001d      	movs	r5, r3
    6d76:	e6d0      	b.n	6b1a <__aeabi_dadd+0x72>
    6d78:	0029      	movs	r1, r5
    6d7a:	3e1f      	subs	r6, #31
    6d7c:	40f1      	lsrs	r1, r6
    6d7e:	2b20      	cmp	r3, #32
    6d80:	d100      	bne.n	6d84 <__aeabi_dadd+0x2dc>
    6d82:	e08d      	b.n	6ea0 <__aeabi_dadd+0x3f8>
    6d84:	2240      	movs	r2, #64	; 0x40
    6d86:	1ad3      	subs	r3, r2, r3
    6d88:	409d      	lsls	r5, r3
    6d8a:	432f      	orrs	r7, r5
    6d8c:	1e7d      	subs	r5, r7, #1
    6d8e:	41af      	sbcs	r7, r5
    6d90:	2400      	movs	r4, #0
    6d92:	430f      	orrs	r7, r1
    6d94:	2600      	movs	r6, #0
    6d96:	e744      	b.n	6c22 <__aeabi_dadd+0x17a>
    6d98:	002b      	movs	r3, r5
    6d9a:	0008      	movs	r0, r1
    6d9c:	3b20      	subs	r3, #32
    6d9e:	40d8      	lsrs	r0, r3
    6da0:	0003      	movs	r3, r0
    6da2:	2d20      	cmp	r5, #32
    6da4:	d100      	bne.n	6da8 <__aeabi_dadd+0x300>
    6da6:	e07d      	b.n	6ea4 <__aeabi_dadd+0x3fc>
    6da8:	2040      	movs	r0, #64	; 0x40
    6daa:	1b45      	subs	r5, r0, r5
    6dac:	40a9      	lsls	r1, r5
    6dae:	430a      	orrs	r2, r1
    6db0:	1e51      	subs	r1, r2, #1
    6db2:	418a      	sbcs	r2, r1
    6db4:	2100      	movs	r1, #0
    6db6:	431a      	orrs	r2, r3
    6db8:	e6c7      	b.n	6b4a <__aeabi_dadd+0xa2>
    6dba:	2e00      	cmp	r6, #0
    6dbc:	d050      	beq.n	6e60 <__aeabi_dadd+0x3b8>
    6dbe:	4e1a      	ldr	r6, [pc, #104]	; (6e28 <__aeabi_dadd+0x380>)
    6dc0:	42b0      	cmp	r0, r6
    6dc2:	d057      	beq.n	6e74 <__aeabi_dadd+0x3cc>
    6dc4:	2680      	movs	r6, #128	; 0x80
    6dc6:	426b      	negs	r3, r5
    6dc8:	4699      	mov	r9, r3
    6dca:	0436      	lsls	r6, r6, #16
    6dcc:	4334      	orrs	r4, r6
    6dce:	464b      	mov	r3, r9
    6dd0:	2b38      	cmp	r3, #56	; 0x38
    6dd2:	dd00      	ble.n	6dd6 <__aeabi_dadd+0x32e>
    6dd4:	e0d6      	b.n	6f84 <__aeabi_dadd+0x4dc>
    6dd6:	2b1f      	cmp	r3, #31
    6dd8:	dd00      	ble.n	6ddc <__aeabi_dadd+0x334>
    6dda:	e135      	b.n	7048 <__aeabi_dadd+0x5a0>
    6ddc:	2620      	movs	r6, #32
    6dde:	1af5      	subs	r5, r6, r3
    6de0:	0026      	movs	r6, r4
    6de2:	40ae      	lsls	r6, r5
    6de4:	46b2      	mov	sl, r6
    6de6:	003e      	movs	r6, r7
    6de8:	40de      	lsrs	r6, r3
    6dea:	46ac      	mov	ip, r5
    6dec:	0035      	movs	r5, r6
    6dee:	4656      	mov	r6, sl
    6df0:	432e      	orrs	r6, r5
    6df2:	4665      	mov	r5, ip
    6df4:	40af      	lsls	r7, r5
    6df6:	1e7d      	subs	r5, r7, #1
    6df8:	41af      	sbcs	r7, r5
    6dfa:	40dc      	lsrs	r4, r3
    6dfc:	4337      	orrs	r7, r6
    6dfe:	1bd7      	subs	r7, r2, r7
    6e00:	42ba      	cmp	r2, r7
    6e02:	4192      	sbcs	r2, r2
    6e04:	1b0c      	subs	r4, r1, r4
    6e06:	4252      	negs	r2, r2
    6e08:	1aa4      	subs	r4, r4, r2
    6e0a:	0006      	movs	r6, r0
    6e0c:	46d8      	mov	r8, fp
    6e0e:	e6a3      	b.n	6b58 <__aeabi_dadd+0xb0>
    6e10:	4664      	mov	r4, ip
    6e12:	4667      	mov	r7, ip
    6e14:	432c      	orrs	r4, r5
    6e16:	d000      	beq.n	6e1a <__aeabi_dadd+0x372>
    6e18:	e6a2      	b.n	6b60 <__aeabi_dadd+0xb8>
    6e1a:	2500      	movs	r5, #0
    6e1c:	2600      	movs	r6, #0
    6e1e:	2700      	movs	r7, #0
    6e20:	e706      	b.n	6c30 <__aeabi_dadd+0x188>
    6e22:	001e      	movs	r6, r3
    6e24:	e6c4      	b.n	6bb0 <__aeabi_dadd+0x108>
    6e26:	46c0      	nop			; (mov r8, r8)
    6e28:	000007ff 	.word	0x000007ff
    6e2c:	ff7fffff 	.word	0xff7fffff
    6e30:	800fffff 	.word	0x800fffff
    6e34:	2b1f      	cmp	r3, #31
    6e36:	dc63      	bgt.n	6f00 <__aeabi_dadd+0x458>
    6e38:	2020      	movs	r0, #32
    6e3a:	1ac3      	subs	r3, r0, r3
    6e3c:	0008      	movs	r0, r1
    6e3e:	4098      	lsls	r0, r3
    6e40:	469c      	mov	ip, r3
    6e42:	4683      	mov	fp, r0
    6e44:	4653      	mov	r3, sl
    6e46:	0010      	movs	r0, r2
    6e48:	40d8      	lsrs	r0, r3
    6e4a:	0003      	movs	r3, r0
    6e4c:	4658      	mov	r0, fp
    6e4e:	4318      	orrs	r0, r3
    6e50:	4663      	mov	r3, ip
    6e52:	409a      	lsls	r2, r3
    6e54:	1e53      	subs	r3, r2, #1
    6e56:	419a      	sbcs	r2, r3
    6e58:	4653      	mov	r3, sl
    6e5a:	4302      	orrs	r2, r0
    6e5c:	40d9      	lsrs	r1, r3
    6e5e:	e703      	b.n	6c68 <__aeabi_dadd+0x1c0>
    6e60:	0026      	movs	r6, r4
    6e62:	433e      	orrs	r6, r7
    6e64:	d006      	beq.n	6e74 <__aeabi_dadd+0x3cc>
    6e66:	43eb      	mvns	r3, r5
    6e68:	4699      	mov	r9, r3
    6e6a:	2b00      	cmp	r3, #0
    6e6c:	d0c7      	beq.n	6dfe <__aeabi_dadd+0x356>
    6e6e:	4e94      	ldr	r6, [pc, #592]	; (70c0 <__aeabi_dadd+0x618>)
    6e70:	42b0      	cmp	r0, r6
    6e72:	d1ac      	bne.n	6dce <__aeabi_dadd+0x326>
    6e74:	000c      	movs	r4, r1
    6e76:	0017      	movs	r7, r2
    6e78:	0006      	movs	r6, r0
    6e7a:	46d8      	mov	r8, fp
    6e7c:	e698      	b.n	6bb0 <__aeabi_dadd+0x108>
    6e7e:	4b90      	ldr	r3, [pc, #576]	; (70c0 <__aeabi_dadd+0x618>)
    6e80:	459a      	cmp	sl, r3
    6e82:	d00b      	beq.n	6e9c <__aeabi_dadd+0x3f4>
    6e84:	4682      	mov	sl, r0
    6e86:	e6e7      	b.n	6c58 <__aeabi_dadd+0x1b0>
    6e88:	2800      	cmp	r0, #0
    6e8a:	d000      	beq.n	6e8e <__aeabi_dadd+0x3e6>
    6e8c:	e09e      	b.n	6fcc <__aeabi_dadd+0x524>
    6e8e:	0018      	movs	r0, r3
    6e90:	4310      	orrs	r0, r2
    6e92:	d100      	bne.n	6e96 <__aeabi_dadd+0x3ee>
    6e94:	e0e9      	b.n	706a <__aeabi_dadd+0x5c2>
    6e96:	001c      	movs	r4, r3
    6e98:	0017      	movs	r7, r2
    6e9a:	46d8      	mov	r8, fp
    6e9c:	4e88      	ldr	r6, [pc, #544]	; (70c0 <__aeabi_dadd+0x618>)
    6e9e:	e687      	b.n	6bb0 <__aeabi_dadd+0x108>
    6ea0:	2500      	movs	r5, #0
    6ea2:	e772      	b.n	6d8a <__aeabi_dadd+0x2e2>
    6ea4:	2100      	movs	r1, #0
    6ea6:	e782      	b.n	6dae <__aeabi_dadd+0x306>
    6ea8:	0023      	movs	r3, r4
    6eaa:	433b      	orrs	r3, r7
    6eac:	2e00      	cmp	r6, #0
    6eae:	d000      	beq.n	6eb2 <__aeabi_dadd+0x40a>
    6eb0:	e0ab      	b.n	700a <__aeabi_dadd+0x562>
    6eb2:	2b00      	cmp	r3, #0
    6eb4:	d100      	bne.n	6eb8 <__aeabi_dadd+0x410>
    6eb6:	e0e7      	b.n	7088 <__aeabi_dadd+0x5e0>
    6eb8:	000b      	movs	r3, r1
    6eba:	4313      	orrs	r3, r2
    6ebc:	d100      	bne.n	6ec0 <__aeabi_dadd+0x418>
    6ebe:	e677      	b.n	6bb0 <__aeabi_dadd+0x108>
    6ec0:	18ba      	adds	r2, r7, r2
    6ec2:	42ba      	cmp	r2, r7
    6ec4:	41bf      	sbcs	r7, r7
    6ec6:	1864      	adds	r4, r4, r1
    6ec8:	427f      	negs	r7, r7
    6eca:	19e4      	adds	r4, r4, r7
    6ecc:	0223      	lsls	r3, r4, #8
    6ece:	d400      	bmi.n	6ed2 <__aeabi_dadd+0x42a>
    6ed0:	e0f2      	b.n	70b8 <__aeabi_dadd+0x610>
    6ed2:	4b7c      	ldr	r3, [pc, #496]	; (70c4 <__aeabi_dadd+0x61c>)
    6ed4:	0017      	movs	r7, r2
    6ed6:	401c      	ands	r4, r3
    6ed8:	0006      	movs	r6, r0
    6eda:	e669      	b.n	6bb0 <__aeabi_dadd+0x108>
    6edc:	0020      	movs	r0, r4
    6ede:	4338      	orrs	r0, r7
    6ee0:	2e00      	cmp	r6, #0
    6ee2:	d1d1      	bne.n	6e88 <__aeabi_dadd+0x3e0>
    6ee4:	2800      	cmp	r0, #0
    6ee6:	d15b      	bne.n	6fa0 <__aeabi_dadd+0x4f8>
    6ee8:	001c      	movs	r4, r3
    6eea:	4314      	orrs	r4, r2
    6eec:	d100      	bne.n	6ef0 <__aeabi_dadd+0x448>
    6eee:	e0a8      	b.n	7042 <__aeabi_dadd+0x59a>
    6ef0:	001c      	movs	r4, r3
    6ef2:	0017      	movs	r7, r2
    6ef4:	46d8      	mov	r8, fp
    6ef6:	e65b      	b.n	6bb0 <__aeabi_dadd+0x108>
    6ef8:	0006      	movs	r6, r0
    6efa:	2400      	movs	r4, #0
    6efc:	2700      	movs	r7, #0
    6efe:	e697      	b.n	6c30 <__aeabi_dadd+0x188>
    6f00:	4650      	mov	r0, sl
    6f02:	000b      	movs	r3, r1
    6f04:	3820      	subs	r0, #32
    6f06:	40c3      	lsrs	r3, r0
    6f08:	4699      	mov	r9, r3
    6f0a:	4653      	mov	r3, sl
    6f0c:	2b20      	cmp	r3, #32
    6f0e:	d100      	bne.n	6f12 <__aeabi_dadd+0x46a>
    6f10:	e095      	b.n	703e <__aeabi_dadd+0x596>
    6f12:	2340      	movs	r3, #64	; 0x40
    6f14:	4650      	mov	r0, sl
    6f16:	1a1b      	subs	r3, r3, r0
    6f18:	4099      	lsls	r1, r3
    6f1a:	430a      	orrs	r2, r1
    6f1c:	1e51      	subs	r1, r2, #1
    6f1e:	418a      	sbcs	r2, r1
    6f20:	464b      	mov	r3, r9
    6f22:	2100      	movs	r1, #0
    6f24:	431a      	orrs	r2, r3
    6f26:	e69f      	b.n	6c68 <__aeabi_dadd+0x1c0>
    6f28:	2e00      	cmp	r6, #0
    6f2a:	d130      	bne.n	6f8e <__aeabi_dadd+0x4e6>
    6f2c:	0026      	movs	r6, r4
    6f2e:	433e      	orrs	r6, r7
    6f30:	d067      	beq.n	7002 <__aeabi_dadd+0x55a>
    6f32:	43db      	mvns	r3, r3
    6f34:	469a      	mov	sl, r3
    6f36:	2b00      	cmp	r3, #0
    6f38:	d01c      	beq.n	6f74 <__aeabi_dadd+0x4cc>
    6f3a:	4e61      	ldr	r6, [pc, #388]	; (70c0 <__aeabi_dadd+0x618>)
    6f3c:	42b0      	cmp	r0, r6
    6f3e:	d060      	beq.n	7002 <__aeabi_dadd+0x55a>
    6f40:	4653      	mov	r3, sl
    6f42:	2b38      	cmp	r3, #56	; 0x38
    6f44:	dd00      	ble.n	6f48 <__aeabi_dadd+0x4a0>
    6f46:	e096      	b.n	7076 <__aeabi_dadd+0x5ce>
    6f48:	2b1f      	cmp	r3, #31
    6f4a:	dd00      	ble.n	6f4e <__aeabi_dadd+0x4a6>
    6f4c:	e09f      	b.n	708e <__aeabi_dadd+0x5e6>
    6f4e:	2620      	movs	r6, #32
    6f50:	1af3      	subs	r3, r6, r3
    6f52:	0026      	movs	r6, r4
    6f54:	409e      	lsls	r6, r3
    6f56:	469c      	mov	ip, r3
    6f58:	46b3      	mov	fp, r6
    6f5a:	4653      	mov	r3, sl
    6f5c:	003e      	movs	r6, r7
    6f5e:	40de      	lsrs	r6, r3
    6f60:	0033      	movs	r3, r6
    6f62:	465e      	mov	r6, fp
    6f64:	431e      	orrs	r6, r3
    6f66:	4663      	mov	r3, ip
    6f68:	409f      	lsls	r7, r3
    6f6a:	1e7b      	subs	r3, r7, #1
    6f6c:	419f      	sbcs	r7, r3
    6f6e:	4653      	mov	r3, sl
    6f70:	40dc      	lsrs	r4, r3
    6f72:	4337      	orrs	r7, r6
    6f74:	18bf      	adds	r7, r7, r2
    6f76:	4297      	cmp	r7, r2
    6f78:	4192      	sbcs	r2, r2
    6f7a:	1864      	adds	r4, r4, r1
    6f7c:	4252      	negs	r2, r2
    6f7e:	18a4      	adds	r4, r4, r2
    6f80:	0006      	movs	r6, r0
    6f82:	e678      	b.n	6c76 <__aeabi_dadd+0x1ce>
    6f84:	4327      	orrs	r7, r4
    6f86:	1e7c      	subs	r4, r7, #1
    6f88:	41a7      	sbcs	r7, r4
    6f8a:	2400      	movs	r4, #0
    6f8c:	e737      	b.n	6dfe <__aeabi_dadd+0x356>
    6f8e:	4e4c      	ldr	r6, [pc, #304]	; (70c0 <__aeabi_dadd+0x618>)
    6f90:	42b0      	cmp	r0, r6
    6f92:	d036      	beq.n	7002 <__aeabi_dadd+0x55a>
    6f94:	2680      	movs	r6, #128	; 0x80
    6f96:	425b      	negs	r3, r3
    6f98:	0436      	lsls	r6, r6, #16
    6f9a:	469a      	mov	sl, r3
    6f9c:	4334      	orrs	r4, r6
    6f9e:	e7cf      	b.n	6f40 <__aeabi_dadd+0x498>
    6fa0:	0018      	movs	r0, r3
    6fa2:	4310      	orrs	r0, r2
    6fa4:	d100      	bne.n	6fa8 <__aeabi_dadd+0x500>
    6fa6:	e603      	b.n	6bb0 <__aeabi_dadd+0x108>
    6fa8:	1ab8      	subs	r0, r7, r2
    6faa:	4684      	mov	ip, r0
    6fac:	4567      	cmp	r7, ip
    6fae:	41ad      	sbcs	r5, r5
    6fb0:	1ae0      	subs	r0, r4, r3
    6fb2:	426d      	negs	r5, r5
    6fb4:	1b40      	subs	r0, r0, r5
    6fb6:	0205      	lsls	r5, r0, #8
    6fb8:	d400      	bmi.n	6fbc <__aeabi_dadd+0x514>
    6fba:	e62c      	b.n	6c16 <__aeabi_dadd+0x16e>
    6fbc:	1bd7      	subs	r7, r2, r7
    6fbe:	42ba      	cmp	r2, r7
    6fc0:	4192      	sbcs	r2, r2
    6fc2:	1b1c      	subs	r4, r3, r4
    6fc4:	4252      	negs	r2, r2
    6fc6:	1aa4      	subs	r4, r4, r2
    6fc8:	46d8      	mov	r8, fp
    6fca:	e5f1      	b.n	6bb0 <__aeabi_dadd+0x108>
    6fcc:	0018      	movs	r0, r3
    6fce:	4310      	orrs	r0, r2
    6fd0:	d100      	bne.n	6fd4 <__aeabi_dadd+0x52c>
    6fd2:	e763      	b.n	6e9c <__aeabi_dadd+0x3f4>
    6fd4:	08f8      	lsrs	r0, r7, #3
    6fd6:	0767      	lsls	r7, r4, #29
    6fd8:	4307      	orrs	r7, r0
    6fda:	2080      	movs	r0, #128	; 0x80
    6fdc:	08e4      	lsrs	r4, r4, #3
    6fde:	0300      	lsls	r0, r0, #12
    6fe0:	4204      	tst	r4, r0
    6fe2:	d008      	beq.n	6ff6 <__aeabi_dadd+0x54e>
    6fe4:	08dd      	lsrs	r5, r3, #3
    6fe6:	4205      	tst	r5, r0
    6fe8:	d105      	bne.n	6ff6 <__aeabi_dadd+0x54e>
    6fea:	08d2      	lsrs	r2, r2, #3
    6fec:	0759      	lsls	r1, r3, #29
    6fee:	4311      	orrs	r1, r2
    6ff0:	000f      	movs	r7, r1
    6ff2:	002c      	movs	r4, r5
    6ff4:	46d8      	mov	r8, fp
    6ff6:	0f7b      	lsrs	r3, r7, #29
    6ff8:	00e4      	lsls	r4, r4, #3
    6ffa:	431c      	orrs	r4, r3
    6ffc:	00ff      	lsls	r7, r7, #3
    6ffe:	4e30      	ldr	r6, [pc, #192]	; (70c0 <__aeabi_dadd+0x618>)
    7000:	e5d6      	b.n	6bb0 <__aeabi_dadd+0x108>
    7002:	000c      	movs	r4, r1
    7004:	0017      	movs	r7, r2
    7006:	0006      	movs	r6, r0
    7008:	e5d2      	b.n	6bb0 <__aeabi_dadd+0x108>
    700a:	2b00      	cmp	r3, #0
    700c:	d038      	beq.n	7080 <__aeabi_dadd+0x5d8>
    700e:	000b      	movs	r3, r1
    7010:	4313      	orrs	r3, r2
    7012:	d100      	bne.n	7016 <__aeabi_dadd+0x56e>
    7014:	e742      	b.n	6e9c <__aeabi_dadd+0x3f4>
    7016:	08f8      	lsrs	r0, r7, #3
    7018:	0767      	lsls	r7, r4, #29
    701a:	4307      	orrs	r7, r0
    701c:	2080      	movs	r0, #128	; 0x80
    701e:	08e4      	lsrs	r4, r4, #3
    7020:	0300      	lsls	r0, r0, #12
    7022:	4204      	tst	r4, r0
    7024:	d0e7      	beq.n	6ff6 <__aeabi_dadd+0x54e>
    7026:	08cb      	lsrs	r3, r1, #3
    7028:	4203      	tst	r3, r0
    702a:	d1e4      	bne.n	6ff6 <__aeabi_dadd+0x54e>
    702c:	08d2      	lsrs	r2, r2, #3
    702e:	0749      	lsls	r1, r1, #29
    7030:	4311      	orrs	r1, r2
    7032:	000f      	movs	r7, r1
    7034:	001c      	movs	r4, r3
    7036:	e7de      	b.n	6ff6 <__aeabi_dadd+0x54e>
    7038:	2700      	movs	r7, #0
    703a:	2400      	movs	r4, #0
    703c:	e5d5      	b.n	6bea <__aeabi_dadd+0x142>
    703e:	2100      	movs	r1, #0
    7040:	e76b      	b.n	6f1a <__aeabi_dadd+0x472>
    7042:	2500      	movs	r5, #0
    7044:	2700      	movs	r7, #0
    7046:	e5f3      	b.n	6c30 <__aeabi_dadd+0x188>
    7048:	464e      	mov	r6, r9
    704a:	0025      	movs	r5, r4
    704c:	3e20      	subs	r6, #32
    704e:	40f5      	lsrs	r5, r6
    7050:	464b      	mov	r3, r9
    7052:	002e      	movs	r6, r5
    7054:	2b20      	cmp	r3, #32
    7056:	d02d      	beq.n	70b4 <__aeabi_dadd+0x60c>
    7058:	2540      	movs	r5, #64	; 0x40
    705a:	1aed      	subs	r5, r5, r3
    705c:	40ac      	lsls	r4, r5
    705e:	4327      	orrs	r7, r4
    7060:	1e7c      	subs	r4, r7, #1
    7062:	41a7      	sbcs	r7, r4
    7064:	2400      	movs	r4, #0
    7066:	4337      	orrs	r7, r6
    7068:	e6c9      	b.n	6dfe <__aeabi_dadd+0x356>
    706a:	2480      	movs	r4, #128	; 0x80
    706c:	2500      	movs	r5, #0
    706e:	0324      	lsls	r4, r4, #12
    7070:	4e13      	ldr	r6, [pc, #76]	; (70c0 <__aeabi_dadd+0x618>)
    7072:	2700      	movs	r7, #0
    7074:	e5dc      	b.n	6c30 <__aeabi_dadd+0x188>
    7076:	4327      	orrs	r7, r4
    7078:	1e7c      	subs	r4, r7, #1
    707a:	41a7      	sbcs	r7, r4
    707c:	2400      	movs	r4, #0
    707e:	e779      	b.n	6f74 <__aeabi_dadd+0x4cc>
    7080:	000c      	movs	r4, r1
    7082:	0017      	movs	r7, r2
    7084:	4e0e      	ldr	r6, [pc, #56]	; (70c0 <__aeabi_dadd+0x618>)
    7086:	e593      	b.n	6bb0 <__aeabi_dadd+0x108>
    7088:	000c      	movs	r4, r1
    708a:	0017      	movs	r7, r2
    708c:	e590      	b.n	6bb0 <__aeabi_dadd+0x108>
    708e:	4656      	mov	r6, sl
    7090:	0023      	movs	r3, r4
    7092:	3e20      	subs	r6, #32
    7094:	40f3      	lsrs	r3, r6
    7096:	4699      	mov	r9, r3
    7098:	4653      	mov	r3, sl
    709a:	2b20      	cmp	r3, #32
    709c:	d00e      	beq.n	70bc <__aeabi_dadd+0x614>
    709e:	2340      	movs	r3, #64	; 0x40
    70a0:	4656      	mov	r6, sl
    70a2:	1b9b      	subs	r3, r3, r6
    70a4:	409c      	lsls	r4, r3
    70a6:	4327      	orrs	r7, r4
    70a8:	1e7c      	subs	r4, r7, #1
    70aa:	41a7      	sbcs	r7, r4
    70ac:	464b      	mov	r3, r9
    70ae:	2400      	movs	r4, #0
    70b0:	431f      	orrs	r7, r3
    70b2:	e75f      	b.n	6f74 <__aeabi_dadd+0x4cc>
    70b4:	2400      	movs	r4, #0
    70b6:	e7d2      	b.n	705e <__aeabi_dadd+0x5b6>
    70b8:	0017      	movs	r7, r2
    70ba:	e5b2      	b.n	6c22 <__aeabi_dadd+0x17a>
    70bc:	2400      	movs	r4, #0
    70be:	e7f2      	b.n	70a6 <__aeabi_dadd+0x5fe>
    70c0:	000007ff 	.word	0x000007ff
    70c4:	ff7fffff 	.word	0xff7fffff

000070c8 <__aeabi_ddiv>:
    70c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    70ca:	4657      	mov	r7, sl
    70cc:	4645      	mov	r5, r8
    70ce:	46de      	mov	lr, fp
    70d0:	464e      	mov	r6, r9
    70d2:	b5e0      	push	{r5, r6, r7, lr}
    70d4:	004c      	lsls	r4, r1, #1
    70d6:	030e      	lsls	r6, r1, #12
    70d8:	b087      	sub	sp, #28
    70da:	4683      	mov	fp, r0
    70dc:	4692      	mov	sl, r2
    70de:	001d      	movs	r5, r3
    70e0:	4680      	mov	r8, r0
    70e2:	0b36      	lsrs	r6, r6, #12
    70e4:	0d64      	lsrs	r4, r4, #21
    70e6:	0fcf      	lsrs	r7, r1, #31
    70e8:	2c00      	cmp	r4, #0
    70ea:	d04f      	beq.n	718c <__aeabi_ddiv+0xc4>
    70ec:	4b6f      	ldr	r3, [pc, #444]	; (72ac <__aeabi_ddiv+0x1e4>)
    70ee:	429c      	cmp	r4, r3
    70f0:	d035      	beq.n	715e <__aeabi_ddiv+0x96>
    70f2:	2380      	movs	r3, #128	; 0x80
    70f4:	0f42      	lsrs	r2, r0, #29
    70f6:	041b      	lsls	r3, r3, #16
    70f8:	00f6      	lsls	r6, r6, #3
    70fa:	4313      	orrs	r3, r2
    70fc:	4333      	orrs	r3, r6
    70fe:	4699      	mov	r9, r3
    7100:	00c3      	lsls	r3, r0, #3
    7102:	4698      	mov	r8, r3
    7104:	4b6a      	ldr	r3, [pc, #424]	; (72b0 <__aeabi_ddiv+0x1e8>)
    7106:	2600      	movs	r6, #0
    7108:	469c      	mov	ip, r3
    710a:	2300      	movs	r3, #0
    710c:	4464      	add	r4, ip
    710e:	9303      	str	r3, [sp, #12]
    7110:	032b      	lsls	r3, r5, #12
    7112:	0b1b      	lsrs	r3, r3, #12
    7114:	469b      	mov	fp, r3
    7116:	006b      	lsls	r3, r5, #1
    7118:	0fed      	lsrs	r5, r5, #31
    711a:	4650      	mov	r0, sl
    711c:	0d5b      	lsrs	r3, r3, #21
    711e:	9501      	str	r5, [sp, #4]
    7120:	d05e      	beq.n	71e0 <__aeabi_ddiv+0x118>
    7122:	4a62      	ldr	r2, [pc, #392]	; (72ac <__aeabi_ddiv+0x1e4>)
    7124:	4293      	cmp	r3, r2
    7126:	d053      	beq.n	71d0 <__aeabi_ddiv+0x108>
    7128:	465a      	mov	r2, fp
    712a:	00d1      	lsls	r1, r2, #3
    712c:	2280      	movs	r2, #128	; 0x80
    712e:	0f40      	lsrs	r0, r0, #29
    7130:	0412      	lsls	r2, r2, #16
    7132:	4302      	orrs	r2, r0
    7134:	430a      	orrs	r2, r1
    7136:	4693      	mov	fp, r2
    7138:	4652      	mov	r2, sl
    713a:	00d1      	lsls	r1, r2, #3
    713c:	4a5c      	ldr	r2, [pc, #368]	; (72b0 <__aeabi_ddiv+0x1e8>)
    713e:	4694      	mov	ip, r2
    7140:	2200      	movs	r2, #0
    7142:	4463      	add	r3, ip
    7144:	0038      	movs	r0, r7
    7146:	4068      	eors	r0, r5
    7148:	4684      	mov	ip, r0
    714a:	9002      	str	r0, [sp, #8]
    714c:	1ae4      	subs	r4, r4, r3
    714e:	4316      	orrs	r6, r2
    7150:	2e0f      	cmp	r6, #15
    7152:	d900      	bls.n	7156 <__aeabi_ddiv+0x8e>
    7154:	e0b4      	b.n	72c0 <__aeabi_ddiv+0x1f8>
    7156:	4b57      	ldr	r3, [pc, #348]	; (72b4 <__aeabi_ddiv+0x1ec>)
    7158:	00b6      	lsls	r6, r6, #2
    715a:	599b      	ldr	r3, [r3, r6]
    715c:	469f      	mov	pc, r3
    715e:	0003      	movs	r3, r0
    7160:	4333      	orrs	r3, r6
    7162:	4699      	mov	r9, r3
    7164:	d16c      	bne.n	7240 <__aeabi_ddiv+0x178>
    7166:	2300      	movs	r3, #0
    7168:	4698      	mov	r8, r3
    716a:	3302      	adds	r3, #2
    716c:	2608      	movs	r6, #8
    716e:	9303      	str	r3, [sp, #12]
    7170:	e7ce      	b.n	7110 <__aeabi_ddiv+0x48>
    7172:	46cb      	mov	fp, r9
    7174:	4641      	mov	r1, r8
    7176:	9a03      	ldr	r2, [sp, #12]
    7178:	9701      	str	r7, [sp, #4]
    717a:	2a02      	cmp	r2, #2
    717c:	d165      	bne.n	724a <__aeabi_ddiv+0x182>
    717e:	9b01      	ldr	r3, [sp, #4]
    7180:	4c4a      	ldr	r4, [pc, #296]	; (72ac <__aeabi_ddiv+0x1e4>)
    7182:	469c      	mov	ip, r3
    7184:	2300      	movs	r3, #0
    7186:	2200      	movs	r2, #0
    7188:	4698      	mov	r8, r3
    718a:	e06b      	b.n	7264 <__aeabi_ddiv+0x19c>
    718c:	0003      	movs	r3, r0
    718e:	4333      	orrs	r3, r6
    7190:	4699      	mov	r9, r3
    7192:	d04e      	beq.n	7232 <__aeabi_ddiv+0x16a>
    7194:	2e00      	cmp	r6, #0
    7196:	d100      	bne.n	719a <__aeabi_ddiv+0xd2>
    7198:	e1bc      	b.n	7514 <__aeabi_ddiv+0x44c>
    719a:	0030      	movs	r0, r6
    719c:	f001 fb42 	bl	8824 <__clzsi2>
    71a0:	0003      	movs	r3, r0
    71a2:	3b0b      	subs	r3, #11
    71a4:	2b1c      	cmp	r3, #28
    71a6:	dd00      	ble.n	71aa <__aeabi_ddiv+0xe2>
    71a8:	e1ac      	b.n	7504 <__aeabi_ddiv+0x43c>
    71aa:	221d      	movs	r2, #29
    71ac:	1ad3      	subs	r3, r2, r3
    71ae:	465a      	mov	r2, fp
    71b0:	0001      	movs	r1, r0
    71b2:	40da      	lsrs	r2, r3
    71b4:	3908      	subs	r1, #8
    71b6:	408e      	lsls	r6, r1
    71b8:	0013      	movs	r3, r2
    71ba:	4333      	orrs	r3, r6
    71bc:	4699      	mov	r9, r3
    71be:	465b      	mov	r3, fp
    71c0:	408b      	lsls	r3, r1
    71c2:	4698      	mov	r8, r3
    71c4:	2300      	movs	r3, #0
    71c6:	4c3c      	ldr	r4, [pc, #240]	; (72b8 <__aeabi_ddiv+0x1f0>)
    71c8:	2600      	movs	r6, #0
    71ca:	1a24      	subs	r4, r4, r0
    71cc:	9303      	str	r3, [sp, #12]
    71ce:	e79f      	b.n	7110 <__aeabi_ddiv+0x48>
    71d0:	4651      	mov	r1, sl
    71d2:	465a      	mov	r2, fp
    71d4:	4311      	orrs	r1, r2
    71d6:	d129      	bne.n	722c <__aeabi_ddiv+0x164>
    71d8:	2200      	movs	r2, #0
    71da:	4693      	mov	fp, r2
    71dc:	3202      	adds	r2, #2
    71de:	e7b1      	b.n	7144 <__aeabi_ddiv+0x7c>
    71e0:	4659      	mov	r1, fp
    71e2:	4301      	orrs	r1, r0
    71e4:	d01e      	beq.n	7224 <__aeabi_ddiv+0x15c>
    71e6:	465b      	mov	r3, fp
    71e8:	2b00      	cmp	r3, #0
    71ea:	d100      	bne.n	71ee <__aeabi_ddiv+0x126>
    71ec:	e19e      	b.n	752c <__aeabi_ddiv+0x464>
    71ee:	4658      	mov	r0, fp
    71f0:	f001 fb18 	bl	8824 <__clzsi2>
    71f4:	0003      	movs	r3, r0
    71f6:	3b0b      	subs	r3, #11
    71f8:	2b1c      	cmp	r3, #28
    71fa:	dd00      	ble.n	71fe <__aeabi_ddiv+0x136>
    71fc:	e18f      	b.n	751e <__aeabi_ddiv+0x456>
    71fe:	0002      	movs	r2, r0
    7200:	4659      	mov	r1, fp
    7202:	3a08      	subs	r2, #8
    7204:	4091      	lsls	r1, r2
    7206:	468b      	mov	fp, r1
    7208:	211d      	movs	r1, #29
    720a:	1acb      	subs	r3, r1, r3
    720c:	4651      	mov	r1, sl
    720e:	40d9      	lsrs	r1, r3
    7210:	000b      	movs	r3, r1
    7212:	4659      	mov	r1, fp
    7214:	430b      	orrs	r3, r1
    7216:	4651      	mov	r1, sl
    7218:	469b      	mov	fp, r3
    721a:	4091      	lsls	r1, r2
    721c:	4b26      	ldr	r3, [pc, #152]	; (72b8 <__aeabi_ddiv+0x1f0>)
    721e:	2200      	movs	r2, #0
    7220:	1a1b      	subs	r3, r3, r0
    7222:	e78f      	b.n	7144 <__aeabi_ddiv+0x7c>
    7224:	2300      	movs	r3, #0
    7226:	2201      	movs	r2, #1
    7228:	469b      	mov	fp, r3
    722a:	e78b      	b.n	7144 <__aeabi_ddiv+0x7c>
    722c:	4651      	mov	r1, sl
    722e:	2203      	movs	r2, #3
    7230:	e788      	b.n	7144 <__aeabi_ddiv+0x7c>
    7232:	2300      	movs	r3, #0
    7234:	4698      	mov	r8, r3
    7236:	3301      	adds	r3, #1
    7238:	2604      	movs	r6, #4
    723a:	2400      	movs	r4, #0
    723c:	9303      	str	r3, [sp, #12]
    723e:	e767      	b.n	7110 <__aeabi_ddiv+0x48>
    7240:	2303      	movs	r3, #3
    7242:	46b1      	mov	r9, r6
    7244:	9303      	str	r3, [sp, #12]
    7246:	260c      	movs	r6, #12
    7248:	e762      	b.n	7110 <__aeabi_ddiv+0x48>
    724a:	2a03      	cmp	r2, #3
    724c:	d100      	bne.n	7250 <__aeabi_ddiv+0x188>
    724e:	e25c      	b.n	770a <__aeabi_ddiv+0x642>
    7250:	9b01      	ldr	r3, [sp, #4]
    7252:	2a01      	cmp	r2, #1
    7254:	d000      	beq.n	7258 <__aeabi_ddiv+0x190>
    7256:	e1e4      	b.n	7622 <__aeabi_ddiv+0x55a>
    7258:	4013      	ands	r3, r2
    725a:	469c      	mov	ip, r3
    725c:	2300      	movs	r3, #0
    725e:	2400      	movs	r4, #0
    7260:	2200      	movs	r2, #0
    7262:	4698      	mov	r8, r3
    7264:	2100      	movs	r1, #0
    7266:	0312      	lsls	r2, r2, #12
    7268:	0b13      	lsrs	r3, r2, #12
    726a:	0d0a      	lsrs	r2, r1, #20
    726c:	0512      	lsls	r2, r2, #20
    726e:	431a      	orrs	r2, r3
    7270:	0523      	lsls	r3, r4, #20
    7272:	4c12      	ldr	r4, [pc, #72]	; (72bc <__aeabi_ddiv+0x1f4>)
    7274:	4640      	mov	r0, r8
    7276:	4022      	ands	r2, r4
    7278:	4313      	orrs	r3, r2
    727a:	4662      	mov	r2, ip
    727c:	005b      	lsls	r3, r3, #1
    727e:	07d2      	lsls	r2, r2, #31
    7280:	085b      	lsrs	r3, r3, #1
    7282:	4313      	orrs	r3, r2
    7284:	0019      	movs	r1, r3
    7286:	b007      	add	sp, #28
    7288:	bc3c      	pop	{r2, r3, r4, r5}
    728a:	4690      	mov	r8, r2
    728c:	4699      	mov	r9, r3
    728e:	46a2      	mov	sl, r4
    7290:	46ab      	mov	fp, r5
    7292:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7294:	2300      	movs	r3, #0
    7296:	2280      	movs	r2, #128	; 0x80
    7298:	469c      	mov	ip, r3
    729a:	0312      	lsls	r2, r2, #12
    729c:	4698      	mov	r8, r3
    729e:	4c03      	ldr	r4, [pc, #12]	; (72ac <__aeabi_ddiv+0x1e4>)
    72a0:	e7e0      	b.n	7264 <__aeabi_ddiv+0x19c>
    72a2:	2300      	movs	r3, #0
    72a4:	4c01      	ldr	r4, [pc, #4]	; (72ac <__aeabi_ddiv+0x1e4>)
    72a6:	2200      	movs	r2, #0
    72a8:	4698      	mov	r8, r3
    72aa:	e7db      	b.n	7264 <__aeabi_ddiv+0x19c>
    72ac:	000007ff 	.word	0x000007ff
    72b0:	fffffc01 	.word	0xfffffc01
    72b4:	0000f860 	.word	0x0000f860
    72b8:	fffffc0d 	.word	0xfffffc0d
    72bc:	800fffff 	.word	0x800fffff
    72c0:	45d9      	cmp	r9, fp
    72c2:	d900      	bls.n	72c6 <__aeabi_ddiv+0x1fe>
    72c4:	e139      	b.n	753a <__aeabi_ddiv+0x472>
    72c6:	d100      	bne.n	72ca <__aeabi_ddiv+0x202>
    72c8:	e134      	b.n	7534 <__aeabi_ddiv+0x46c>
    72ca:	2300      	movs	r3, #0
    72cc:	4646      	mov	r6, r8
    72ce:	464d      	mov	r5, r9
    72d0:	469a      	mov	sl, r3
    72d2:	3c01      	subs	r4, #1
    72d4:	465b      	mov	r3, fp
    72d6:	0e0a      	lsrs	r2, r1, #24
    72d8:	021b      	lsls	r3, r3, #8
    72da:	431a      	orrs	r2, r3
    72dc:	020b      	lsls	r3, r1, #8
    72de:	0c17      	lsrs	r7, r2, #16
    72e0:	9303      	str	r3, [sp, #12]
    72e2:	0413      	lsls	r3, r2, #16
    72e4:	0c1b      	lsrs	r3, r3, #16
    72e6:	0039      	movs	r1, r7
    72e8:	0028      	movs	r0, r5
    72ea:	4690      	mov	r8, r2
    72ec:	9301      	str	r3, [sp, #4]
    72ee:	f7fe fcab 	bl	5c48 <__udivsi3>
    72f2:	0002      	movs	r2, r0
    72f4:	9b01      	ldr	r3, [sp, #4]
    72f6:	4683      	mov	fp, r0
    72f8:	435a      	muls	r2, r3
    72fa:	0028      	movs	r0, r5
    72fc:	0039      	movs	r1, r7
    72fe:	4691      	mov	r9, r2
    7300:	f7fe fd28 	bl	5d54 <__aeabi_uidivmod>
    7304:	0c35      	lsrs	r5, r6, #16
    7306:	0409      	lsls	r1, r1, #16
    7308:	430d      	orrs	r5, r1
    730a:	45a9      	cmp	r9, r5
    730c:	d90d      	bls.n	732a <__aeabi_ddiv+0x262>
    730e:	465b      	mov	r3, fp
    7310:	4445      	add	r5, r8
    7312:	3b01      	subs	r3, #1
    7314:	45a8      	cmp	r8, r5
    7316:	d900      	bls.n	731a <__aeabi_ddiv+0x252>
    7318:	e13a      	b.n	7590 <__aeabi_ddiv+0x4c8>
    731a:	45a9      	cmp	r9, r5
    731c:	d800      	bhi.n	7320 <__aeabi_ddiv+0x258>
    731e:	e137      	b.n	7590 <__aeabi_ddiv+0x4c8>
    7320:	2302      	movs	r3, #2
    7322:	425b      	negs	r3, r3
    7324:	469c      	mov	ip, r3
    7326:	4445      	add	r5, r8
    7328:	44e3      	add	fp, ip
    732a:	464b      	mov	r3, r9
    732c:	1aeb      	subs	r3, r5, r3
    732e:	0039      	movs	r1, r7
    7330:	0018      	movs	r0, r3
    7332:	9304      	str	r3, [sp, #16]
    7334:	f7fe fc88 	bl	5c48 <__udivsi3>
    7338:	9b01      	ldr	r3, [sp, #4]
    733a:	0005      	movs	r5, r0
    733c:	4343      	muls	r3, r0
    733e:	0039      	movs	r1, r7
    7340:	9804      	ldr	r0, [sp, #16]
    7342:	4699      	mov	r9, r3
    7344:	f7fe fd06 	bl	5d54 <__aeabi_uidivmod>
    7348:	0433      	lsls	r3, r6, #16
    734a:	0409      	lsls	r1, r1, #16
    734c:	0c1b      	lsrs	r3, r3, #16
    734e:	430b      	orrs	r3, r1
    7350:	4599      	cmp	r9, r3
    7352:	d909      	bls.n	7368 <__aeabi_ddiv+0x2a0>
    7354:	4443      	add	r3, r8
    7356:	1e6a      	subs	r2, r5, #1
    7358:	4598      	cmp	r8, r3
    735a:	d900      	bls.n	735e <__aeabi_ddiv+0x296>
    735c:	e11a      	b.n	7594 <__aeabi_ddiv+0x4cc>
    735e:	4599      	cmp	r9, r3
    7360:	d800      	bhi.n	7364 <__aeabi_ddiv+0x29c>
    7362:	e117      	b.n	7594 <__aeabi_ddiv+0x4cc>
    7364:	3d02      	subs	r5, #2
    7366:	4443      	add	r3, r8
    7368:	464a      	mov	r2, r9
    736a:	1a9b      	subs	r3, r3, r2
    736c:	465a      	mov	r2, fp
    736e:	0412      	lsls	r2, r2, #16
    7370:	432a      	orrs	r2, r5
    7372:	9903      	ldr	r1, [sp, #12]
    7374:	4693      	mov	fp, r2
    7376:	0c10      	lsrs	r0, r2, #16
    7378:	0c0a      	lsrs	r2, r1, #16
    737a:	4691      	mov	r9, r2
    737c:	0409      	lsls	r1, r1, #16
    737e:	465a      	mov	r2, fp
    7380:	0c09      	lsrs	r1, r1, #16
    7382:	464e      	mov	r6, r9
    7384:	000d      	movs	r5, r1
    7386:	0412      	lsls	r2, r2, #16
    7388:	0c12      	lsrs	r2, r2, #16
    738a:	4345      	muls	r5, r0
    738c:	9105      	str	r1, [sp, #20]
    738e:	4351      	muls	r1, r2
    7390:	4372      	muls	r2, r6
    7392:	4370      	muls	r0, r6
    7394:	1952      	adds	r2, r2, r5
    7396:	0c0e      	lsrs	r6, r1, #16
    7398:	18b2      	adds	r2, r6, r2
    739a:	4295      	cmp	r5, r2
    739c:	d903      	bls.n	73a6 <__aeabi_ddiv+0x2de>
    739e:	2580      	movs	r5, #128	; 0x80
    73a0:	026d      	lsls	r5, r5, #9
    73a2:	46ac      	mov	ip, r5
    73a4:	4460      	add	r0, ip
    73a6:	0c15      	lsrs	r5, r2, #16
    73a8:	0409      	lsls	r1, r1, #16
    73aa:	0412      	lsls	r2, r2, #16
    73ac:	0c09      	lsrs	r1, r1, #16
    73ae:	1828      	adds	r0, r5, r0
    73b0:	1852      	adds	r2, r2, r1
    73b2:	4283      	cmp	r3, r0
    73b4:	d200      	bcs.n	73b8 <__aeabi_ddiv+0x2f0>
    73b6:	e0ce      	b.n	7556 <__aeabi_ddiv+0x48e>
    73b8:	d100      	bne.n	73bc <__aeabi_ddiv+0x2f4>
    73ba:	e0c8      	b.n	754e <__aeabi_ddiv+0x486>
    73bc:	1a1d      	subs	r5, r3, r0
    73be:	4653      	mov	r3, sl
    73c0:	1a9e      	subs	r6, r3, r2
    73c2:	45b2      	cmp	sl, r6
    73c4:	4192      	sbcs	r2, r2
    73c6:	4252      	negs	r2, r2
    73c8:	1aab      	subs	r3, r5, r2
    73ca:	469a      	mov	sl, r3
    73cc:	4598      	cmp	r8, r3
    73ce:	d100      	bne.n	73d2 <__aeabi_ddiv+0x30a>
    73d0:	e117      	b.n	7602 <__aeabi_ddiv+0x53a>
    73d2:	0039      	movs	r1, r7
    73d4:	0018      	movs	r0, r3
    73d6:	f7fe fc37 	bl	5c48 <__udivsi3>
    73da:	9b01      	ldr	r3, [sp, #4]
    73dc:	0005      	movs	r5, r0
    73de:	4343      	muls	r3, r0
    73e0:	0039      	movs	r1, r7
    73e2:	4650      	mov	r0, sl
    73e4:	9304      	str	r3, [sp, #16]
    73e6:	f7fe fcb5 	bl	5d54 <__aeabi_uidivmod>
    73ea:	9804      	ldr	r0, [sp, #16]
    73ec:	040b      	lsls	r3, r1, #16
    73ee:	0c31      	lsrs	r1, r6, #16
    73f0:	4319      	orrs	r1, r3
    73f2:	4288      	cmp	r0, r1
    73f4:	d909      	bls.n	740a <__aeabi_ddiv+0x342>
    73f6:	4441      	add	r1, r8
    73f8:	1e6b      	subs	r3, r5, #1
    73fa:	4588      	cmp	r8, r1
    73fc:	d900      	bls.n	7400 <__aeabi_ddiv+0x338>
    73fe:	e107      	b.n	7610 <__aeabi_ddiv+0x548>
    7400:	4288      	cmp	r0, r1
    7402:	d800      	bhi.n	7406 <__aeabi_ddiv+0x33e>
    7404:	e104      	b.n	7610 <__aeabi_ddiv+0x548>
    7406:	3d02      	subs	r5, #2
    7408:	4441      	add	r1, r8
    740a:	9b04      	ldr	r3, [sp, #16]
    740c:	1acb      	subs	r3, r1, r3
    740e:	0018      	movs	r0, r3
    7410:	0039      	movs	r1, r7
    7412:	9304      	str	r3, [sp, #16]
    7414:	f7fe fc18 	bl	5c48 <__udivsi3>
    7418:	9b01      	ldr	r3, [sp, #4]
    741a:	4682      	mov	sl, r0
    741c:	4343      	muls	r3, r0
    741e:	0039      	movs	r1, r7
    7420:	9804      	ldr	r0, [sp, #16]
    7422:	9301      	str	r3, [sp, #4]
    7424:	f7fe fc96 	bl	5d54 <__aeabi_uidivmod>
    7428:	9801      	ldr	r0, [sp, #4]
    742a:	040b      	lsls	r3, r1, #16
    742c:	0431      	lsls	r1, r6, #16
    742e:	0c09      	lsrs	r1, r1, #16
    7430:	4319      	orrs	r1, r3
    7432:	4288      	cmp	r0, r1
    7434:	d90d      	bls.n	7452 <__aeabi_ddiv+0x38a>
    7436:	4653      	mov	r3, sl
    7438:	4441      	add	r1, r8
    743a:	3b01      	subs	r3, #1
    743c:	4588      	cmp	r8, r1
    743e:	d900      	bls.n	7442 <__aeabi_ddiv+0x37a>
    7440:	e0e8      	b.n	7614 <__aeabi_ddiv+0x54c>
    7442:	4288      	cmp	r0, r1
    7444:	d800      	bhi.n	7448 <__aeabi_ddiv+0x380>
    7446:	e0e5      	b.n	7614 <__aeabi_ddiv+0x54c>
    7448:	2302      	movs	r3, #2
    744a:	425b      	negs	r3, r3
    744c:	469c      	mov	ip, r3
    744e:	4441      	add	r1, r8
    7450:	44e2      	add	sl, ip
    7452:	9b01      	ldr	r3, [sp, #4]
    7454:	042d      	lsls	r5, r5, #16
    7456:	1ace      	subs	r6, r1, r3
    7458:	4651      	mov	r1, sl
    745a:	4329      	orrs	r1, r5
    745c:	9d05      	ldr	r5, [sp, #20]
    745e:	464f      	mov	r7, r9
    7460:	002a      	movs	r2, r5
    7462:	040b      	lsls	r3, r1, #16
    7464:	0c08      	lsrs	r0, r1, #16
    7466:	0c1b      	lsrs	r3, r3, #16
    7468:	435a      	muls	r2, r3
    746a:	4345      	muls	r5, r0
    746c:	437b      	muls	r3, r7
    746e:	4378      	muls	r0, r7
    7470:	195b      	adds	r3, r3, r5
    7472:	0c17      	lsrs	r7, r2, #16
    7474:	18fb      	adds	r3, r7, r3
    7476:	429d      	cmp	r5, r3
    7478:	d903      	bls.n	7482 <__aeabi_ddiv+0x3ba>
    747a:	2580      	movs	r5, #128	; 0x80
    747c:	026d      	lsls	r5, r5, #9
    747e:	46ac      	mov	ip, r5
    7480:	4460      	add	r0, ip
    7482:	0c1d      	lsrs	r5, r3, #16
    7484:	0412      	lsls	r2, r2, #16
    7486:	041b      	lsls	r3, r3, #16
    7488:	0c12      	lsrs	r2, r2, #16
    748a:	1828      	adds	r0, r5, r0
    748c:	189b      	adds	r3, r3, r2
    748e:	4286      	cmp	r6, r0
    7490:	d200      	bcs.n	7494 <__aeabi_ddiv+0x3cc>
    7492:	e093      	b.n	75bc <__aeabi_ddiv+0x4f4>
    7494:	d100      	bne.n	7498 <__aeabi_ddiv+0x3d0>
    7496:	e08e      	b.n	75b6 <__aeabi_ddiv+0x4ee>
    7498:	2301      	movs	r3, #1
    749a:	4319      	orrs	r1, r3
    749c:	4ba0      	ldr	r3, [pc, #640]	; (7720 <__aeabi_ddiv+0x658>)
    749e:	18e3      	adds	r3, r4, r3
    74a0:	2b00      	cmp	r3, #0
    74a2:	dc00      	bgt.n	74a6 <__aeabi_ddiv+0x3de>
    74a4:	e099      	b.n	75da <__aeabi_ddiv+0x512>
    74a6:	074a      	lsls	r2, r1, #29
    74a8:	d000      	beq.n	74ac <__aeabi_ddiv+0x3e4>
    74aa:	e09e      	b.n	75ea <__aeabi_ddiv+0x522>
    74ac:	465a      	mov	r2, fp
    74ae:	01d2      	lsls	r2, r2, #7
    74b0:	d506      	bpl.n	74c0 <__aeabi_ddiv+0x3f8>
    74b2:	465a      	mov	r2, fp
    74b4:	4b9b      	ldr	r3, [pc, #620]	; (7724 <__aeabi_ddiv+0x65c>)
    74b6:	401a      	ands	r2, r3
    74b8:	2380      	movs	r3, #128	; 0x80
    74ba:	4693      	mov	fp, r2
    74bc:	00db      	lsls	r3, r3, #3
    74be:	18e3      	adds	r3, r4, r3
    74c0:	4a99      	ldr	r2, [pc, #612]	; (7728 <__aeabi_ddiv+0x660>)
    74c2:	4293      	cmp	r3, r2
    74c4:	dd68      	ble.n	7598 <__aeabi_ddiv+0x4d0>
    74c6:	2301      	movs	r3, #1
    74c8:	9a02      	ldr	r2, [sp, #8]
    74ca:	4c98      	ldr	r4, [pc, #608]	; (772c <__aeabi_ddiv+0x664>)
    74cc:	401a      	ands	r2, r3
    74ce:	2300      	movs	r3, #0
    74d0:	4694      	mov	ip, r2
    74d2:	4698      	mov	r8, r3
    74d4:	2200      	movs	r2, #0
    74d6:	e6c5      	b.n	7264 <__aeabi_ddiv+0x19c>
    74d8:	2280      	movs	r2, #128	; 0x80
    74da:	464b      	mov	r3, r9
    74dc:	0312      	lsls	r2, r2, #12
    74de:	4213      	tst	r3, r2
    74e0:	d00a      	beq.n	74f8 <__aeabi_ddiv+0x430>
    74e2:	465b      	mov	r3, fp
    74e4:	4213      	tst	r3, r2
    74e6:	d106      	bne.n	74f6 <__aeabi_ddiv+0x42e>
    74e8:	431a      	orrs	r2, r3
    74ea:	0312      	lsls	r2, r2, #12
    74ec:	0b12      	lsrs	r2, r2, #12
    74ee:	46ac      	mov	ip, r5
    74f0:	4688      	mov	r8, r1
    74f2:	4c8e      	ldr	r4, [pc, #568]	; (772c <__aeabi_ddiv+0x664>)
    74f4:	e6b6      	b.n	7264 <__aeabi_ddiv+0x19c>
    74f6:	464b      	mov	r3, r9
    74f8:	431a      	orrs	r2, r3
    74fa:	0312      	lsls	r2, r2, #12
    74fc:	0b12      	lsrs	r2, r2, #12
    74fe:	46bc      	mov	ip, r7
    7500:	4c8a      	ldr	r4, [pc, #552]	; (772c <__aeabi_ddiv+0x664>)
    7502:	e6af      	b.n	7264 <__aeabi_ddiv+0x19c>
    7504:	0003      	movs	r3, r0
    7506:	465a      	mov	r2, fp
    7508:	3b28      	subs	r3, #40	; 0x28
    750a:	409a      	lsls	r2, r3
    750c:	2300      	movs	r3, #0
    750e:	4691      	mov	r9, r2
    7510:	4698      	mov	r8, r3
    7512:	e657      	b.n	71c4 <__aeabi_ddiv+0xfc>
    7514:	4658      	mov	r0, fp
    7516:	f001 f985 	bl	8824 <__clzsi2>
    751a:	3020      	adds	r0, #32
    751c:	e640      	b.n	71a0 <__aeabi_ddiv+0xd8>
    751e:	0003      	movs	r3, r0
    7520:	4652      	mov	r2, sl
    7522:	3b28      	subs	r3, #40	; 0x28
    7524:	409a      	lsls	r2, r3
    7526:	2100      	movs	r1, #0
    7528:	4693      	mov	fp, r2
    752a:	e677      	b.n	721c <__aeabi_ddiv+0x154>
    752c:	f001 f97a 	bl	8824 <__clzsi2>
    7530:	3020      	adds	r0, #32
    7532:	e65f      	b.n	71f4 <__aeabi_ddiv+0x12c>
    7534:	4588      	cmp	r8, r1
    7536:	d200      	bcs.n	753a <__aeabi_ddiv+0x472>
    7538:	e6c7      	b.n	72ca <__aeabi_ddiv+0x202>
    753a:	464b      	mov	r3, r9
    753c:	07de      	lsls	r6, r3, #31
    753e:	085d      	lsrs	r5, r3, #1
    7540:	4643      	mov	r3, r8
    7542:	085b      	lsrs	r3, r3, #1
    7544:	431e      	orrs	r6, r3
    7546:	4643      	mov	r3, r8
    7548:	07db      	lsls	r3, r3, #31
    754a:	469a      	mov	sl, r3
    754c:	e6c2      	b.n	72d4 <__aeabi_ddiv+0x20c>
    754e:	2500      	movs	r5, #0
    7550:	4592      	cmp	sl, r2
    7552:	d300      	bcc.n	7556 <__aeabi_ddiv+0x48e>
    7554:	e733      	b.n	73be <__aeabi_ddiv+0x2f6>
    7556:	9e03      	ldr	r6, [sp, #12]
    7558:	4659      	mov	r1, fp
    755a:	46b4      	mov	ip, r6
    755c:	44e2      	add	sl, ip
    755e:	45b2      	cmp	sl, r6
    7560:	41ad      	sbcs	r5, r5
    7562:	426d      	negs	r5, r5
    7564:	4445      	add	r5, r8
    7566:	18eb      	adds	r3, r5, r3
    7568:	3901      	subs	r1, #1
    756a:	4598      	cmp	r8, r3
    756c:	d207      	bcs.n	757e <__aeabi_ddiv+0x4b6>
    756e:	4298      	cmp	r0, r3
    7570:	d900      	bls.n	7574 <__aeabi_ddiv+0x4ac>
    7572:	e07f      	b.n	7674 <__aeabi_ddiv+0x5ac>
    7574:	d100      	bne.n	7578 <__aeabi_ddiv+0x4b0>
    7576:	e0bc      	b.n	76f2 <__aeabi_ddiv+0x62a>
    7578:	1a1d      	subs	r5, r3, r0
    757a:	468b      	mov	fp, r1
    757c:	e71f      	b.n	73be <__aeabi_ddiv+0x2f6>
    757e:	4598      	cmp	r8, r3
    7580:	d1fa      	bne.n	7578 <__aeabi_ddiv+0x4b0>
    7582:	9d03      	ldr	r5, [sp, #12]
    7584:	4555      	cmp	r5, sl
    7586:	d9f2      	bls.n	756e <__aeabi_ddiv+0x4a6>
    7588:	4643      	mov	r3, r8
    758a:	468b      	mov	fp, r1
    758c:	1a1d      	subs	r5, r3, r0
    758e:	e716      	b.n	73be <__aeabi_ddiv+0x2f6>
    7590:	469b      	mov	fp, r3
    7592:	e6ca      	b.n	732a <__aeabi_ddiv+0x262>
    7594:	0015      	movs	r5, r2
    7596:	e6e7      	b.n	7368 <__aeabi_ddiv+0x2a0>
    7598:	465a      	mov	r2, fp
    759a:	08c9      	lsrs	r1, r1, #3
    759c:	0752      	lsls	r2, r2, #29
    759e:	430a      	orrs	r2, r1
    75a0:	055b      	lsls	r3, r3, #21
    75a2:	4690      	mov	r8, r2
    75a4:	0d5c      	lsrs	r4, r3, #21
    75a6:	465a      	mov	r2, fp
    75a8:	2301      	movs	r3, #1
    75aa:	9902      	ldr	r1, [sp, #8]
    75ac:	0252      	lsls	r2, r2, #9
    75ae:	4019      	ands	r1, r3
    75b0:	0b12      	lsrs	r2, r2, #12
    75b2:	468c      	mov	ip, r1
    75b4:	e656      	b.n	7264 <__aeabi_ddiv+0x19c>
    75b6:	2b00      	cmp	r3, #0
    75b8:	d100      	bne.n	75bc <__aeabi_ddiv+0x4f4>
    75ba:	e76f      	b.n	749c <__aeabi_ddiv+0x3d4>
    75bc:	4446      	add	r6, r8
    75be:	1e4a      	subs	r2, r1, #1
    75c0:	45b0      	cmp	r8, r6
    75c2:	d929      	bls.n	7618 <__aeabi_ddiv+0x550>
    75c4:	0011      	movs	r1, r2
    75c6:	4286      	cmp	r6, r0
    75c8:	d000      	beq.n	75cc <__aeabi_ddiv+0x504>
    75ca:	e765      	b.n	7498 <__aeabi_ddiv+0x3d0>
    75cc:	9a03      	ldr	r2, [sp, #12]
    75ce:	4293      	cmp	r3, r2
    75d0:	d000      	beq.n	75d4 <__aeabi_ddiv+0x50c>
    75d2:	e761      	b.n	7498 <__aeabi_ddiv+0x3d0>
    75d4:	e762      	b.n	749c <__aeabi_ddiv+0x3d4>
    75d6:	2101      	movs	r1, #1
    75d8:	4249      	negs	r1, r1
    75da:	2001      	movs	r0, #1
    75dc:	1ac2      	subs	r2, r0, r3
    75de:	2a38      	cmp	r2, #56	; 0x38
    75e0:	dd21      	ble.n	7626 <__aeabi_ddiv+0x55e>
    75e2:	9b02      	ldr	r3, [sp, #8]
    75e4:	4003      	ands	r3, r0
    75e6:	469c      	mov	ip, r3
    75e8:	e638      	b.n	725c <__aeabi_ddiv+0x194>
    75ea:	220f      	movs	r2, #15
    75ec:	400a      	ands	r2, r1
    75ee:	2a04      	cmp	r2, #4
    75f0:	d100      	bne.n	75f4 <__aeabi_ddiv+0x52c>
    75f2:	e75b      	b.n	74ac <__aeabi_ddiv+0x3e4>
    75f4:	000a      	movs	r2, r1
    75f6:	1d11      	adds	r1, r2, #4
    75f8:	4291      	cmp	r1, r2
    75fa:	4192      	sbcs	r2, r2
    75fc:	4252      	negs	r2, r2
    75fe:	4493      	add	fp, r2
    7600:	e754      	b.n	74ac <__aeabi_ddiv+0x3e4>
    7602:	4b47      	ldr	r3, [pc, #284]	; (7720 <__aeabi_ddiv+0x658>)
    7604:	18e3      	adds	r3, r4, r3
    7606:	2b00      	cmp	r3, #0
    7608:	dde5      	ble.n	75d6 <__aeabi_ddiv+0x50e>
    760a:	2201      	movs	r2, #1
    760c:	4252      	negs	r2, r2
    760e:	e7f2      	b.n	75f6 <__aeabi_ddiv+0x52e>
    7610:	001d      	movs	r5, r3
    7612:	e6fa      	b.n	740a <__aeabi_ddiv+0x342>
    7614:	469a      	mov	sl, r3
    7616:	e71c      	b.n	7452 <__aeabi_ddiv+0x38a>
    7618:	42b0      	cmp	r0, r6
    761a:	d839      	bhi.n	7690 <__aeabi_ddiv+0x5c8>
    761c:	d06e      	beq.n	76fc <__aeabi_ddiv+0x634>
    761e:	0011      	movs	r1, r2
    7620:	e73a      	b.n	7498 <__aeabi_ddiv+0x3d0>
    7622:	9302      	str	r3, [sp, #8]
    7624:	e73a      	b.n	749c <__aeabi_ddiv+0x3d4>
    7626:	2a1f      	cmp	r2, #31
    7628:	dc3c      	bgt.n	76a4 <__aeabi_ddiv+0x5dc>
    762a:	2320      	movs	r3, #32
    762c:	1a9b      	subs	r3, r3, r2
    762e:	000c      	movs	r4, r1
    7630:	4658      	mov	r0, fp
    7632:	4099      	lsls	r1, r3
    7634:	4098      	lsls	r0, r3
    7636:	1e4b      	subs	r3, r1, #1
    7638:	4199      	sbcs	r1, r3
    763a:	465b      	mov	r3, fp
    763c:	40d4      	lsrs	r4, r2
    763e:	40d3      	lsrs	r3, r2
    7640:	4320      	orrs	r0, r4
    7642:	4308      	orrs	r0, r1
    7644:	001a      	movs	r2, r3
    7646:	0743      	lsls	r3, r0, #29
    7648:	d009      	beq.n	765e <__aeabi_ddiv+0x596>
    764a:	230f      	movs	r3, #15
    764c:	4003      	ands	r3, r0
    764e:	2b04      	cmp	r3, #4
    7650:	d005      	beq.n	765e <__aeabi_ddiv+0x596>
    7652:	0001      	movs	r1, r0
    7654:	1d08      	adds	r0, r1, #4
    7656:	4288      	cmp	r0, r1
    7658:	419b      	sbcs	r3, r3
    765a:	425b      	negs	r3, r3
    765c:	18d2      	adds	r2, r2, r3
    765e:	0213      	lsls	r3, r2, #8
    7660:	d53a      	bpl.n	76d8 <__aeabi_ddiv+0x610>
    7662:	2301      	movs	r3, #1
    7664:	9a02      	ldr	r2, [sp, #8]
    7666:	2401      	movs	r4, #1
    7668:	401a      	ands	r2, r3
    766a:	2300      	movs	r3, #0
    766c:	4694      	mov	ip, r2
    766e:	4698      	mov	r8, r3
    7670:	2200      	movs	r2, #0
    7672:	e5f7      	b.n	7264 <__aeabi_ddiv+0x19c>
    7674:	2102      	movs	r1, #2
    7676:	4249      	negs	r1, r1
    7678:	468c      	mov	ip, r1
    767a:	9d03      	ldr	r5, [sp, #12]
    767c:	44e3      	add	fp, ip
    767e:	46ac      	mov	ip, r5
    7680:	44e2      	add	sl, ip
    7682:	45aa      	cmp	sl, r5
    7684:	41ad      	sbcs	r5, r5
    7686:	426d      	negs	r5, r5
    7688:	4445      	add	r5, r8
    768a:	18ed      	adds	r5, r5, r3
    768c:	1a2d      	subs	r5, r5, r0
    768e:	e696      	b.n	73be <__aeabi_ddiv+0x2f6>
    7690:	1e8a      	subs	r2, r1, #2
    7692:	9903      	ldr	r1, [sp, #12]
    7694:	004d      	lsls	r5, r1, #1
    7696:	428d      	cmp	r5, r1
    7698:	4189      	sbcs	r1, r1
    769a:	4249      	negs	r1, r1
    769c:	4441      	add	r1, r8
    769e:	1876      	adds	r6, r6, r1
    76a0:	9503      	str	r5, [sp, #12]
    76a2:	e78f      	b.n	75c4 <__aeabi_ddiv+0x4fc>
    76a4:	201f      	movs	r0, #31
    76a6:	4240      	negs	r0, r0
    76a8:	1ac3      	subs	r3, r0, r3
    76aa:	4658      	mov	r0, fp
    76ac:	40d8      	lsrs	r0, r3
    76ae:	0003      	movs	r3, r0
    76b0:	2a20      	cmp	r2, #32
    76b2:	d028      	beq.n	7706 <__aeabi_ddiv+0x63e>
    76b4:	2040      	movs	r0, #64	; 0x40
    76b6:	465d      	mov	r5, fp
    76b8:	1a82      	subs	r2, r0, r2
    76ba:	4095      	lsls	r5, r2
    76bc:	4329      	orrs	r1, r5
    76be:	1e4a      	subs	r2, r1, #1
    76c0:	4191      	sbcs	r1, r2
    76c2:	4319      	orrs	r1, r3
    76c4:	2307      	movs	r3, #7
    76c6:	2200      	movs	r2, #0
    76c8:	400b      	ands	r3, r1
    76ca:	d009      	beq.n	76e0 <__aeabi_ddiv+0x618>
    76cc:	230f      	movs	r3, #15
    76ce:	2200      	movs	r2, #0
    76d0:	400b      	ands	r3, r1
    76d2:	0008      	movs	r0, r1
    76d4:	2b04      	cmp	r3, #4
    76d6:	d1bd      	bne.n	7654 <__aeabi_ddiv+0x58c>
    76d8:	0001      	movs	r1, r0
    76da:	0753      	lsls	r3, r2, #29
    76dc:	0252      	lsls	r2, r2, #9
    76de:	0b12      	lsrs	r2, r2, #12
    76e0:	08c9      	lsrs	r1, r1, #3
    76e2:	4319      	orrs	r1, r3
    76e4:	2301      	movs	r3, #1
    76e6:	4688      	mov	r8, r1
    76e8:	9902      	ldr	r1, [sp, #8]
    76ea:	2400      	movs	r4, #0
    76ec:	4019      	ands	r1, r3
    76ee:	468c      	mov	ip, r1
    76f0:	e5b8      	b.n	7264 <__aeabi_ddiv+0x19c>
    76f2:	4552      	cmp	r2, sl
    76f4:	d8be      	bhi.n	7674 <__aeabi_ddiv+0x5ac>
    76f6:	468b      	mov	fp, r1
    76f8:	2500      	movs	r5, #0
    76fa:	e660      	b.n	73be <__aeabi_ddiv+0x2f6>
    76fc:	9d03      	ldr	r5, [sp, #12]
    76fe:	429d      	cmp	r5, r3
    7700:	d3c6      	bcc.n	7690 <__aeabi_ddiv+0x5c8>
    7702:	0011      	movs	r1, r2
    7704:	e762      	b.n	75cc <__aeabi_ddiv+0x504>
    7706:	2500      	movs	r5, #0
    7708:	e7d8      	b.n	76bc <__aeabi_ddiv+0x5f4>
    770a:	2280      	movs	r2, #128	; 0x80
    770c:	465b      	mov	r3, fp
    770e:	0312      	lsls	r2, r2, #12
    7710:	431a      	orrs	r2, r3
    7712:	9b01      	ldr	r3, [sp, #4]
    7714:	0312      	lsls	r2, r2, #12
    7716:	0b12      	lsrs	r2, r2, #12
    7718:	469c      	mov	ip, r3
    771a:	4688      	mov	r8, r1
    771c:	4c03      	ldr	r4, [pc, #12]	; (772c <__aeabi_ddiv+0x664>)
    771e:	e5a1      	b.n	7264 <__aeabi_ddiv+0x19c>
    7720:	000003ff 	.word	0x000003ff
    7724:	feffffff 	.word	0xfeffffff
    7728:	000007fe 	.word	0x000007fe
    772c:	000007ff 	.word	0x000007ff

00007730 <__eqdf2>:
    7730:	b5f0      	push	{r4, r5, r6, r7, lr}
    7732:	464f      	mov	r7, r9
    7734:	4646      	mov	r6, r8
    7736:	46d6      	mov	lr, sl
    7738:	005c      	lsls	r4, r3, #1
    773a:	b5c0      	push	{r6, r7, lr}
    773c:	031f      	lsls	r7, r3, #12
    773e:	0fdb      	lsrs	r3, r3, #31
    7740:	469a      	mov	sl, r3
    7742:	4b17      	ldr	r3, [pc, #92]	; (77a0 <__eqdf2+0x70>)
    7744:	030e      	lsls	r6, r1, #12
    7746:	004d      	lsls	r5, r1, #1
    7748:	4684      	mov	ip, r0
    774a:	4680      	mov	r8, r0
    774c:	0b36      	lsrs	r6, r6, #12
    774e:	0d6d      	lsrs	r5, r5, #21
    7750:	0fc9      	lsrs	r1, r1, #31
    7752:	4691      	mov	r9, r2
    7754:	0b3f      	lsrs	r7, r7, #12
    7756:	0d64      	lsrs	r4, r4, #21
    7758:	2001      	movs	r0, #1
    775a:	429d      	cmp	r5, r3
    775c:	d008      	beq.n	7770 <__eqdf2+0x40>
    775e:	429c      	cmp	r4, r3
    7760:	d001      	beq.n	7766 <__eqdf2+0x36>
    7762:	42a5      	cmp	r5, r4
    7764:	d00b      	beq.n	777e <__eqdf2+0x4e>
    7766:	bc1c      	pop	{r2, r3, r4}
    7768:	4690      	mov	r8, r2
    776a:	4699      	mov	r9, r3
    776c:	46a2      	mov	sl, r4
    776e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7770:	4663      	mov	r3, ip
    7772:	4333      	orrs	r3, r6
    7774:	d1f7      	bne.n	7766 <__eqdf2+0x36>
    7776:	42ac      	cmp	r4, r5
    7778:	d1f5      	bne.n	7766 <__eqdf2+0x36>
    777a:	433a      	orrs	r2, r7
    777c:	d1f3      	bne.n	7766 <__eqdf2+0x36>
    777e:	2001      	movs	r0, #1
    7780:	42be      	cmp	r6, r7
    7782:	d1f0      	bne.n	7766 <__eqdf2+0x36>
    7784:	45c8      	cmp	r8, r9
    7786:	d1ee      	bne.n	7766 <__eqdf2+0x36>
    7788:	4551      	cmp	r1, sl
    778a:	d007      	beq.n	779c <__eqdf2+0x6c>
    778c:	2d00      	cmp	r5, #0
    778e:	d1ea      	bne.n	7766 <__eqdf2+0x36>
    7790:	4663      	mov	r3, ip
    7792:	431e      	orrs	r6, r3
    7794:	0030      	movs	r0, r6
    7796:	1e46      	subs	r6, r0, #1
    7798:	41b0      	sbcs	r0, r6
    779a:	e7e4      	b.n	7766 <__eqdf2+0x36>
    779c:	2000      	movs	r0, #0
    779e:	e7e2      	b.n	7766 <__eqdf2+0x36>
    77a0:	000007ff 	.word	0x000007ff

000077a4 <__gedf2>:
    77a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    77a6:	4645      	mov	r5, r8
    77a8:	46de      	mov	lr, fp
    77aa:	4657      	mov	r7, sl
    77ac:	464e      	mov	r6, r9
    77ae:	b5e0      	push	{r5, r6, r7, lr}
    77b0:	031f      	lsls	r7, r3, #12
    77b2:	0b3d      	lsrs	r5, r7, #12
    77b4:	4f2c      	ldr	r7, [pc, #176]	; (7868 <__gedf2+0xc4>)
    77b6:	030e      	lsls	r6, r1, #12
    77b8:	004c      	lsls	r4, r1, #1
    77ba:	46ab      	mov	fp, r5
    77bc:	005d      	lsls	r5, r3, #1
    77be:	4684      	mov	ip, r0
    77c0:	0b36      	lsrs	r6, r6, #12
    77c2:	0d64      	lsrs	r4, r4, #21
    77c4:	0fc9      	lsrs	r1, r1, #31
    77c6:	4690      	mov	r8, r2
    77c8:	0d6d      	lsrs	r5, r5, #21
    77ca:	0fdb      	lsrs	r3, r3, #31
    77cc:	42bc      	cmp	r4, r7
    77ce:	d02a      	beq.n	7826 <__gedf2+0x82>
    77d0:	4f25      	ldr	r7, [pc, #148]	; (7868 <__gedf2+0xc4>)
    77d2:	42bd      	cmp	r5, r7
    77d4:	d02d      	beq.n	7832 <__gedf2+0x8e>
    77d6:	2c00      	cmp	r4, #0
    77d8:	d10f      	bne.n	77fa <__gedf2+0x56>
    77da:	4330      	orrs	r0, r6
    77dc:	0007      	movs	r7, r0
    77de:	4681      	mov	r9, r0
    77e0:	4278      	negs	r0, r7
    77e2:	4178      	adcs	r0, r7
    77e4:	b2c0      	uxtb	r0, r0
    77e6:	2d00      	cmp	r5, #0
    77e8:	d117      	bne.n	781a <__gedf2+0x76>
    77ea:	465f      	mov	r7, fp
    77ec:	433a      	orrs	r2, r7
    77ee:	d114      	bne.n	781a <__gedf2+0x76>
    77f0:	464b      	mov	r3, r9
    77f2:	2000      	movs	r0, #0
    77f4:	2b00      	cmp	r3, #0
    77f6:	d00a      	beq.n	780e <__gedf2+0x6a>
    77f8:	e006      	b.n	7808 <__gedf2+0x64>
    77fa:	2d00      	cmp	r5, #0
    77fc:	d102      	bne.n	7804 <__gedf2+0x60>
    77fe:	4658      	mov	r0, fp
    7800:	4302      	orrs	r2, r0
    7802:	d001      	beq.n	7808 <__gedf2+0x64>
    7804:	4299      	cmp	r1, r3
    7806:	d018      	beq.n	783a <__gedf2+0x96>
    7808:	4248      	negs	r0, r1
    780a:	2101      	movs	r1, #1
    780c:	4308      	orrs	r0, r1
    780e:	bc3c      	pop	{r2, r3, r4, r5}
    7810:	4690      	mov	r8, r2
    7812:	4699      	mov	r9, r3
    7814:	46a2      	mov	sl, r4
    7816:	46ab      	mov	fp, r5
    7818:	bdf0      	pop	{r4, r5, r6, r7, pc}
    781a:	2800      	cmp	r0, #0
    781c:	d0f2      	beq.n	7804 <__gedf2+0x60>
    781e:	2001      	movs	r0, #1
    7820:	3b01      	subs	r3, #1
    7822:	4318      	orrs	r0, r3
    7824:	e7f3      	b.n	780e <__gedf2+0x6a>
    7826:	0037      	movs	r7, r6
    7828:	4307      	orrs	r7, r0
    782a:	d0d1      	beq.n	77d0 <__gedf2+0x2c>
    782c:	2002      	movs	r0, #2
    782e:	4240      	negs	r0, r0
    7830:	e7ed      	b.n	780e <__gedf2+0x6a>
    7832:	465f      	mov	r7, fp
    7834:	4317      	orrs	r7, r2
    7836:	d0ce      	beq.n	77d6 <__gedf2+0x32>
    7838:	e7f8      	b.n	782c <__gedf2+0x88>
    783a:	42ac      	cmp	r4, r5
    783c:	dce4      	bgt.n	7808 <__gedf2+0x64>
    783e:	da03      	bge.n	7848 <__gedf2+0xa4>
    7840:	1e48      	subs	r0, r1, #1
    7842:	2101      	movs	r1, #1
    7844:	4308      	orrs	r0, r1
    7846:	e7e2      	b.n	780e <__gedf2+0x6a>
    7848:	455e      	cmp	r6, fp
    784a:	d8dd      	bhi.n	7808 <__gedf2+0x64>
    784c:	d006      	beq.n	785c <__gedf2+0xb8>
    784e:	2000      	movs	r0, #0
    7850:	455e      	cmp	r6, fp
    7852:	d2dc      	bcs.n	780e <__gedf2+0x6a>
    7854:	2301      	movs	r3, #1
    7856:	1e48      	subs	r0, r1, #1
    7858:	4318      	orrs	r0, r3
    785a:	e7d8      	b.n	780e <__gedf2+0x6a>
    785c:	45c4      	cmp	ip, r8
    785e:	d8d3      	bhi.n	7808 <__gedf2+0x64>
    7860:	2000      	movs	r0, #0
    7862:	45c4      	cmp	ip, r8
    7864:	d3f6      	bcc.n	7854 <__gedf2+0xb0>
    7866:	e7d2      	b.n	780e <__gedf2+0x6a>
    7868:	000007ff 	.word	0x000007ff

0000786c <__ledf2>:
    786c:	b5f0      	push	{r4, r5, r6, r7, lr}
    786e:	464e      	mov	r6, r9
    7870:	4645      	mov	r5, r8
    7872:	46de      	mov	lr, fp
    7874:	4657      	mov	r7, sl
    7876:	005c      	lsls	r4, r3, #1
    7878:	b5e0      	push	{r5, r6, r7, lr}
    787a:	031f      	lsls	r7, r3, #12
    787c:	0fdb      	lsrs	r3, r3, #31
    787e:	4699      	mov	r9, r3
    7880:	4b2a      	ldr	r3, [pc, #168]	; (792c <__ledf2+0xc0>)
    7882:	030e      	lsls	r6, r1, #12
    7884:	004d      	lsls	r5, r1, #1
    7886:	0fc9      	lsrs	r1, r1, #31
    7888:	4684      	mov	ip, r0
    788a:	0b36      	lsrs	r6, r6, #12
    788c:	0d6d      	lsrs	r5, r5, #21
    788e:	468b      	mov	fp, r1
    7890:	4690      	mov	r8, r2
    7892:	0b3f      	lsrs	r7, r7, #12
    7894:	0d64      	lsrs	r4, r4, #21
    7896:	429d      	cmp	r5, r3
    7898:	d020      	beq.n	78dc <__ledf2+0x70>
    789a:	4b24      	ldr	r3, [pc, #144]	; (792c <__ledf2+0xc0>)
    789c:	429c      	cmp	r4, r3
    789e:	d022      	beq.n	78e6 <__ledf2+0x7a>
    78a0:	2d00      	cmp	r5, #0
    78a2:	d112      	bne.n	78ca <__ledf2+0x5e>
    78a4:	4330      	orrs	r0, r6
    78a6:	4243      	negs	r3, r0
    78a8:	4143      	adcs	r3, r0
    78aa:	b2db      	uxtb	r3, r3
    78ac:	2c00      	cmp	r4, #0
    78ae:	d01f      	beq.n	78f0 <__ledf2+0x84>
    78b0:	2b00      	cmp	r3, #0
    78b2:	d00c      	beq.n	78ce <__ledf2+0x62>
    78b4:	464b      	mov	r3, r9
    78b6:	2001      	movs	r0, #1
    78b8:	3b01      	subs	r3, #1
    78ba:	4303      	orrs	r3, r0
    78bc:	0018      	movs	r0, r3
    78be:	bc3c      	pop	{r2, r3, r4, r5}
    78c0:	4690      	mov	r8, r2
    78c2:	4699      	mov	r9, r3
    78c4:	46a2      	mov	sl, r4
    78c6:	46ab      	mov	fp, r5
    78c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    78ca:	2c00      	cmp	r4, #0
    78cc:	d016      	beq.n	78fc <__ledf2+0x90>
    78ce:	45cb      	cmp	fp, r9
    78d0:	d017      	beq.n	7902 <__ledf2+0x96>
    78d2:	465b      	mov	r3, fp
    78d4:	4259      	negs	r1, r3
    78d6:	2301      	movs	r3, #1
    78d8:	430b      	orrs	r3, r1
    78da:	e7ef      	b.n	78bc <__ledf2+0x50>
    78dc:	0031      	movs	r1, r6
    78de:	2302      	movs	r3, #2
    78e0:	4301      	orrs	r1, r0
    78e2:	d1eb      	bne.n	78bc <__ledf2+0x50>
    78e4:	e7d9      	b.n	789a <__ledf2+0x2e>
    78e6:	0039      	movs	r1, r7
    78e8:	2302      	movs	r3, #2
    78ea:	4311      	orrs	r1, r2
    78ec:	d1e6      	bne.n	78bc <__ledf2+0x50>
    78ee:	e7d7      	b.n	78a0 <__ledf2+0x34>
    78f0:	433a      	orrs	r2, r7
    78f2:	d1dd      	bne.n	78b0 <__ledf2+0x44>
    78f4:	2300      	movs	r3, #0
    78f6:	2800      	cmp	r0, #0
    78f8:	d0e0      	beq.n	78bc <__ledf2+0x50>
    78fa:	e7ea      	b.n	78d2 <__ledf2+0x66>
    78fc:	433a      	orrs	r2, r7
    78fe:	d1e6      	bne.n	78ce <__ledf2+0x62>
    7900:	e7e7      	b.n	78d2 <__ledf2+0x66>
    7902:	42a5      	cmp	r5, r4
    7904:	dce5      	bgt.n	78d2 <__ledf2+0x66>
    7906:	db05      	blt.n	7914 <__ledf2+0xa8>
    7908:	42be      	cmp	r6, r7
    790a:	d8e2      	bhi.n	78d2 <__ledf2+0x66>
    790c:	d007      	beq.n	791e <__ledf2+0xb2>
    790e:	2300      	movs	r3, #0
    7910:	42be      	cmp	r6, r7
    7912:	d2d3      	bcs.n	78bc <__ledf2+0x50>
    7914:	4659      	mov	r1, fp
    7916:	2301      	movs	r3, #1
    7918:	3901      	subs	r1, #1
    791a:	430b      	orrs	r3, r1
    791c:	e7ce      	b.n	78bc <__ledf2+0x50>
    791e:	45c4      	cmp	ip, r8
    7920:	d8d7      	bhi.n	78d2 <__ledf2+0x66>
    7922:	2300      	movs	r3, #0
    7924:	45c4      	cmp	ip, r8
    7926:	d3f5      	bcc.n	7914 <__ledf2+0xa8>
    7928:	e7c8      	b.n	78bc <__ledf2+0x50>
    792a:	46c0      	nop			; (mov r8, r8)
    792c:	000007ff 	.word	0x000007ff

00007930 <__aeabi_dmul>:
    7930:	b5f0      	push	{r4, r5, r6, r7, lr}
    7932:	4657      	mov	r7, sl
    7934:	4645      	mov	r5, r8
    7936:	46de      	mov	lr, fp
    7938:	464e      	mov	r6, r9
    793a:	b5e0      	push	{r5, r6, r7, lr}
    793c:	030c      	lsls	r4, r1, #12
    793e:	4698      	mov	r8, r3
    7940:	004e      	lsls	r6, r1, #1
    7942:	0b23      	lsrs	r3, r4, #12
    7944:	b087      	sub	sp, #28
    7946:	0007      	movs	r7, r0
    7948:	4692      	mov	sl, r2
    794a:	469b      	mov	fp, r3
    794c:	0d76      	lsrs	r6, r6, #21
    794e:	0fcd      	lsrs	r5, r1, #31
    7950:	2e00      	cmp	r6, #0
    7952:	d06b      	beq.n	7a2c <__aeabi_dmul+0xfc>
    7954:	4b6d      	ldr	r3, [pc, #436]	; (7b0c <__aeabi_dmul+0x1dc>)
    7956:	429e      	cmp	r6, r3
    7958:	d035      	beq.n	79c6 <__aeabi_dmul+0x96>
    795a:	2480      	movs	r4, #128	; 0x80
    795c:	465b      	mov	r3, fp
    795e:	0f42      	lsrs	r2, r0, #29
    7960:	0424      	lsls	r4, r4, #16
    7962:	00db      	lsls	r3, r3, #3
    7964:	4314      	orrs	r4, r2
    7966:	431c      	orrs	r4, r3
    7968:	00c3      	lsls	r3, r0, #3
    796a:	4699      	mov	r9, r3
    796c:	4b68      	ldr	r3, [pc, #416]	; (7b10 <__aeabi_dmul+0x1e0>)
    796e:	46a3      	mov	fp, r4
    7970:	469c      	mov	ip, r3
    7972:	2300      	movs	r3, #0
    7974:	2700      	movs	r7, #0
    7976:	4466      	add	r6, ip
    7978:	9302      	str	r3, [sp, #8]
    797a:	4643      	mov	r3, r8
    797c:	031c      	lsls	r4, r3, #12
    797e:	005a      	lsls	r2, r3, #1
    7980:	0fdb      	lsrs	r3, r3, #31
    7982:	4650      	mov	r0, sl
    7984:	0b24      	lsrs	r4, r4, #12
    7986:	0d52      	lsrs	r2, r2, #21
    7988:	4698      	mov	r8, r3
    798a:	d100      	bne.n	798e <__aeabi_dmul+0x5e>
    798c:	e076      	b.n	7a7c <__aeabi_dmul+0x14c>
    798e:	4b5f      	ldr	r3, [pc, #380]	; (7b0c <__aeabi_dmul+0x1dc>)
    7990:	429a      	cmp	r2, r3
    7992:	d06d      	beq.n	7a70 <__aeabi_dmul+0x140>
    7994:	2380      	movs	r3, #128	; 0x80
    7996:	0f41      	lsrs	r1, r0, #29
    7998:	041b      	lsls	r3, r3, #16
    799a:	430b      	orrs	r3, r1
    799c:	495c      	ldr	r1, [pc, #368]	; (7b10 <__aeabi_dmul+0x1e0>)
    799e:	00e4      	lsls	r4, r4, #3
    79a0:	468c      	mov	ip, r1
    79a2:	431c      	orrs	r4, r3
    79a4:	00c3      	lsls	r3, r0, #3
    79a6:	2000      	movs	r0, #0
    79a8:	4462      	add	r2, ip
    79aa:	4641      	mov	r1, r8
    79ac:	18b6      	adds	r6, r6, r2
    79ae:	4069      	eors	r1, r5
    79b0:	1c72      	adds	r2, r6, #1
    79b2:	9101      	str	r1, [sp, #4]
    79b4:	4694      	mov	ip, r2
    79b6:	4307      	orrs	r7, r0
    79b8:	2f0f      	cmp	r7, #15
    79ba:	d900      	bls.n	79be <__aeabi_dmul+0x8e>
    79bc:	e0b0      	b.n	7b20 <__aeabi_dmul+0x1f0>
    79be:	4a55      	ldr	r2, [pc, #340]	; (7b14 <__aeabi_dmul+0x1e4>)
    79c0:	00bf      	lsls	r7, r7, #2
    79c2:	59d2      	ldr	r2, [r2, r7]
    79c4:	4697      	mov	pc, r2
    79c6:	465b      	mov	r3, fp
    79c8:	4303      	orrs	r3, r0
    79ca:	4699      	mov	r9, r3
    79cc:	d000      	beq.n	79d0 <__aeabi_dmul+0xa0>
    79ce:	e087      	b.n	7ae0 <__aeabi_dmul+0x1b0>
    79d0:	2300      	movs	r3, #0
    79d2:	469b      	mov	fp, r3
    79d4:	3302      	adds	r3, #2
    79d6:	2708      	movs	r7, #8
    79d8:	9302      	str	r3, [sp, #8]
    79da:	e7ce      	b.n	797a <__aeabi_dmul+0x4a>
    79dc:	4642      	mov	r2, r8
    79de:	9201      	str	r2, [sp, #4]
    79e0:	2802      	cmp	r0, #2
    79e2:	d067      	beq.n	7ab4 <__aeabi_dmul+0x184>
    79e4:	2803      	cmp	r0, #3
    79e6:	d100      	bne.n	79ea <__aeabi_dmul+0xba>
    79e8:	e20e      	b.n	7e08 <__aeabi_dmul+0x4d8>
    79ea:	2801      	cmp	r0, #1
    79ec:	d000      	beq.n	79f0 <__aeabi_dmul+0xc0>
    79ee:	e162      	b.n	7cb6 <__aeabi_dmul+0x386>
    79f0:	2300      	movs	r3, #0
    79f2:	2400      	movs	r4, #0
    79f4:	2200      	movs	r2, #0
    79f6:	4699      	mov	r9, r3
    79f8:	9901      	ldr	r1, [sp, #4]
    79fa:	4001      	ands	r1, r0
    79fc:	b2cd      	uxtb	r5, r1
    79fe:	2100      	movs	r1, #0
    7a00:	0312      	lsls	r2, r2, #12
    7a02:	0d0b      	lsrs	r3, r1, #20
    7a04:	0b12      	lsrs	r2, r2, #12
    7a06:	051b      	lsls	r3, r3, #20
    7a08:	4313      	orrs	r3, r2
    7a0a:	4a43      	ldr	r2, [pc, #268]	; (7b18 <__aeabi_dmul+0x1e8>)
    7a0c:	0524      	lsls	r4, r4, #20
    7a0e:	4013      	ands	r3, r2
    7a10:	431c      	orrs	r4, r3
    7a12:	0064      	lsls	r4, r4, #1
    7a14:	07ed      	lsls	r5, r5, #31
    7a16:	0864      	lsrs	r4, r4, #1
    7a18:	432c      	orrs	r4, r5
    7a1a:	4648      	mov	r0, r9
    7a1c:	0021      	movs	r1, r4
    7a1e:	b007      	add	sp, #28
    7a20:	bc3c      	pop	{r2, r3, r4, r5}
    7a22:	4690      	mov	r8, r2
    7a24:	4699      	mov	r9, r3
    7a26:	46a2      	mov	sl, r4
    7a28:	46ab      	mov	fp, r5
    7a2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7a2c:	4303      	orrs	r3, r0
    7a2e:	4699      	mov	r9, r3
    7a30:	d04f      	beq.n	7ad2 <__aeabi_dmul+0x1a2>
    7a32:	465b      	mov	r3, fp
    7a34:	2b00      	cmp	r3, #0
    7a36:	d100      	bne.n	7a3a <__aeabi_dmul+0x10a>
    7a38:	e189      	b.n	7d4e <__aeabi_dmul+0x41e>
    7a3a:	4658      	mov	r0, fp
    7a3c:	f000 fef2 	bl	8824 <__clzsi2>
    7a40:	0003      	movs	r3, r0
    7a42:	3b0b      	subs	r3, #11
    7a44:	2b1c      	cmp	r3, #28
    7a46:	dd00      	ble.n	7a4a <__aeabi_dmul+0x11a>
    7a48:	e17a      	b.n	7d40 <__aeabi_dmul+0x410>
    7a4a:	221d      	movs	r2, #29
    7a4c:	1ad3      	subs	r3, r2, r3
    7a4e:	003a      	movs	r2, r7
    7a50:	0001      	movs	r1, r0
    7a52:	465c      	mov	r4, fp
    7a54:	40da      	lsrs	r2, r3
    7a56:	3908      	subs	r1, #8
    7a58:	408c      	lsls	r4, r1
    7a5a:	0013      	movs	r3, r2
    7a5c:	408f      	lsls	r7, r1
    7a5e:	4323      	orrs	r3, r4
    7a60:	469b      	mov	fp, r3
    7a62:	46b9      	mov	r9, r7
    7a64:	2300      	movs	r3, #0
    7a66:	4e2d      	ldr	r6, [pc, #180]	; (7b1c <__aeabi_dmul+0x1ec>)
    7a68:	2700      	movs	r7, #0
    7a6a:	1a36      	subs	r6, r6, r0
    7a6c:	9302      	str	r3, [sp, #8]
    7a6e:	e784      	b.n	797a <__aeabi_dmul+0x4a>
    7a70:	4653      	mov	r3, sl
    7a72:	4323      	orrs	r3, r4
    7a74:	d12a      	bne.n	7acc <__aeabi_dmul+0x19c>
    7a76:	2400      	movs	r4, #0
    7a78:	2002      	movs	r0, #2
    7a7a:	e796      	b.n	79aa <__aeabi_dmul+0x7a>
    7a7c:	4653      	mov	r3, sl
    7a7e:	4323      	orrs	r3, r4
    7a80:	d020      	beq.n	7ac4 <__aeabi_dmul+0x194>
    7a82:	2c00      	cmp	r4, #0
    7a84:	d100      	bne.n	7a88 <__aeabi_dmul+0x158>
    7a86:	e157      	b.n	7d38 <__aeabi_dmul+0x408>
    7a88:	0020      	movs	r0, r4
    7a8a:	f000 fecb 	bl	8824 <__clzsi2>
    7a8e:	0003      	movs	r3, r0
    7a90:	3b0b      	subs	r3, #11
    7a92:	2b1c      	cmp	r3, #28
    7a94:	dd00      	ble.n	7a98 <__aeabi_dmul+0x168>
    7a96:	e149      	b.n	7d2c <__aeabi_dmul+0x3fc>
    7a98:	211d      	movs	r1, #29
    7a9a:	1acb      	subs	r3, r1, r3
    7a9c:	4651      	mov	r1, sl
    7a9e:	0002      	movs	r2, r0
    7aa0:	40d9      	lsrs	r1, r3
    7aa2:	4653      	mov	r3, sl
    7aa4:	3a08      	subs	r2, #8
    7aa6:	4094      	lsls	r4, r2
    7aa8:	4093      	lsls	r3, r2
    7aaa:	430c      	orrs	r4, r1
    7aac:	4a1b      	ldr	r2, [pc, #108]	; (7b1c <__aeabi_dmul+0x1ec>)
    7aae:	1a12      	subs	r2, r2, r0
    7ab0:	2000      	movs	r0, #0
    7ab2:	e77a      	b.n	79aa <__aeabi_dmul+0x7a>
    7ab4:	2501      	movs	r5, #1
    7ab6:	9b01      	ldr	r3, [sp, #4]
    7ab8:	4c14      	ldr	r4, [pc, #80]	; (7b0c <__aeabi_dmul+0x1dc>)
    7aba:	401d      	ands	r5, r3
    7abc:	2300      	movs	r3, #0
    7abe:	2200      	movs	r2, #0
    7ac0:	4699      	mov	r9, r3
    7ac2:	e79c      	b.n	79fe <__aeabi_dmul+0xce>
    7ac4:	2400      	movs	r4, #0
    7ac6:	2200      	movs	r2, #0
    7ac8:	2001      	movs	r0, #1
    7aca:	e76e      	b.n	79aa <__aeabi_dmul+0x7a>
    7acc:	4653      	mov	r3, sl
    7ace:	2003      	movs	r0, #3
    7ad0:	e76b      	b.n	79aa <__aeabi_dmul+0x7a>
    7ad2:	2300      	movs	r3, #0
    7ad4:	469b      	mov	fp, r3
    7ad6:	3301      	adds	r3, #1
    7ad8:	2704      	movs	r7, #4
    7ada:	2600      	movs	r6, #0
    7adc:	9302      	str	r3, [sp, #8]
    7ade:	e74c      	b.n	797a <__aeabi_dmul+0x4a>
    7ae0:	2303      	movs	r3, #3
    7ae2:	4681      	mov	r9, r0
    7ae4:	270c      	movs	r7, #12
    7ae6:	9302      	str	r3, [sp, #8]
    7ae8:	e747      	b.n	797a <__aeabi_dmul+0x4a>
    7aea:	2280      	movs	r2, #128	; 0x80
    7aec:	2300      	movs	r3, #0
    7aee:	2500      	movs	r5, #0
    7af0:	0312      	lsls	r2, r2, #12
    7af2:	4699      	mov	r9, r3
    7af4:	4c05      	ldr	r4, [pc, #20]	; (7b0c <__aeabi_dmul+0x1dc>)
    7af6:	e782      	b.n	79fe <__aeabi_dmul+0xce>
    7af8:	465c      	mov	r4, fp
    7afa:	464b      	mov	r3, r9
    7afc:	9802      	ldr	r0, [sp, #8]
    7afe:	e76f      	b.n	79e0 <__aeabi_dmul+0xb0>
    7b00:	465c      	mov	r4, fp
    7b02:	464b      	mov	r3, r9
    7b04:	9501      	str	r5, [sp, #4]
    7b06:	9802      	ldr	r0, [sp, #8]
    7b08:	e76a      	b.n	79e0 <__aeabi_dmul+0xb0>
    7b0a:	46c0      	nop			; (mov r8, r8)
    7b0c:	000007ff 	.word	0x000007ff
    7b10:	fffffc01 	.word	0xfffffc01
    7b14:	0000f8a0 	.word	0x0000f8a0
    7b18:	800fffff 	.word	0x800fffff
    7b1c:	fffffc0d 	.word	0xfffffc0d
    7b20:	464a      	mov	r2, r9
    7b22:	4649      	mov	r1, r9
    7b24:	0c17      	lsrs	r7, r2, #16
    7b26:	0c1a      	lsrs	r2, r3, #16
    7b28:	041b      	lsls	r3, r3, #16
    7b2a:	0c1b      	lsrs	r3, r3, #16
    7b2c:	0408      	lsls	r0, r1, #16
    7b2e:	0019      	movs	r1, r3
    7b30:	0c00      	lsrs	r0, r0, #16
    7b32:	4341      	muls	r1, r0
    7b34:	0015      	movs	r5, r2
    7b36:	4688      	mov	r8, r1
    7b38:	0019      	movs	r1, r3
    7b3a:	437d      	muls	r5, r7
    7b3c:	4379      	muls	r1, r7
    7b3e:	9503      	str	r5, [sp, #12]
    7b40:	4689      	mov	r9, r1
    7b42:	0029      	movs	r1, r5
    7b44:	0015      	movs	r5, r2
    7b46:	4345      	muls	r5, r0
    7b48:	444d      	add	r5, r9
    7b4a:	9502      	str	r5, [sp, #8]
    7b4c:	4645      	mov	r5, r8
    7b4e:	0c2d      	lsrs	r5, r5, #16
    7b50:	46aa      	mov	sl, r5
    7b52:	9d02      	ldr	r5, [sp, #8]
    7b54:	4455      	add	r5, sl
    7b56:	45a9      	cmp	r9, r5
    7b58:	d906      	bls.n	7b68 <__aeabi_dmul+0x238>
    7b5a:	468a      	mov	sl, r1
    7b5c:	2180      	movs	r1, #128	; 0x80
    7b5e:	0249      	lsls	r1, r1, #9
    7b60:	4689      	mov	r9, r1
    7b62:	44ca      	add	sl, r9
    7b64:	4651      	mov	r1, sl
    7b66:	9103      	str	r1, [sp, #12]
    7b68:	0c29      	lsrs	r1, r5, #16
    7b6a:	9104      	str	r1, [sp, #16]
    7b6c:	4641      	mov	r1, r8
    7b6e:	0409      	lsls	r1, r1, #16
    7b70:	042d      	lsls	r5, r5, #16
    7b72:	0c09      	lsrs	r1, r1, #16
    7b74:	4688      	mov	r8, r1
    7b76:	0029      	movs	r1, r5
    7b78:	0c25      	lsrs	r5, r4, #16
    7b7a:	0424      	lsls	r4, r4, #16
    7b7c:	4441      	add	r1, r8
    7b7e:	0c24      	lsrs	r4, r4, #16
    7b80:	9105      	str	r1, [sp, #20]
    7b82:	0021      	movs	r1, r4
    7b84:	4341      	muls	r1, r0
    7b86:	4688      	mov	r8, r1
    7b88:	0021      	movs	r1, r4
    7b8a:	4379      	muls	r1, r7
    7b8c:	468a      	mov	sl, r1
    7b8e:	4368      	muls	r0, r5
    7b90:	4641      	mov	r1, r8
    7b92:	4450      	add	r0, sl
    7b94:	4681      	mov	r9, r0
    7b96:	0c08      	lsrs	r0, r1, #16
    7b98:	4448      	add	r0, r9
    7b9a:	436f      	muls	r7, r5
    7b9c:	4582      	cmp	sl, r0
    7b9e:	d903      	bls.n	7ba8 <__aeabi_dmul+0x278>
    7ba0:	2180      	movs	r1, #128	; 0x80
    7ba2:	0249      	lsls	r1, r1, #9
    7ba4:	4689      	mov	r9, r1
    7ba6:	444f      	add	r7, r9
    7ba8:	0c01      	lsrs	r1, r0, #16
    7baa:	4689      	mov	r9, r1
    7bac:	0039      	movs	r1, r7
    7bae:	4449      	add	r1, r9
    7bb0:	9102      	str	r1, [sp, #8]
    7bb2:	4641      	mov	r1, r8
    7bb4:	040f      	lsls	r7, r1, #16
    7bb6:	9904      	ldr	r1, [sp, #16]
    7bb8:	0c3f      	lsrs	r7, r7, #16
    7bba:	4688      	mov	r8, r1
    7bbc:	0400      	lsls	r0, r0, #16
    7bbe:	19c0      	adds	r0, r0, r7
    7bc0:	4480      	add	r8, r0
    7bc2:	4641      	mov	r1, r8
    7bc4:	9104      	str	r1, [sp, #16]
    7bc6:	4659      	mov	r1, fp
    7bc8:	0c0f      	lsrs	r7, r1, #16
    7bca:	0409      	lsls	r1, r1, #16
    7bcc:	0c09      	lsrs	r1, r1, #16
    7bce:	4688      	mov	r8, r1
    7bd0:	4359      	muls	r1, r3
    7bd2:	468a      	mov	sl, r1
    7bd4:	0039      	movs	r1, r7
    7bd6:	4351      	muls	r1, r2
    7bd8:	4689      	mov	r9, r1
    7bda:	4641      	mov	r1, r8
    7bdc:	434a      	muls	r2, r1
    7bde:	4651      	mov	r1, sl
    7be0:	0c09      	lsrs	r1, r1, #16
    7be2:	468b      	mov	fp, r1
    7be4:	437b      	muls	r3, r7
    7be6:	18d2      	adds	r2, r2, r3
    7be8:	445a      	add	r2, fp
    7bea:	4293      	cmp	r3, r2
    7bec:	d903      	bls.n	7bf6 <__aeabi_dmul+0x2c6>
    7bee:	2380      	movs	r3, #128	; 0x80
    7bf0:	025b      	lsls	r3, r3, #9
    7bf2:	469b      	mov	fp, r3
    7bf4:	44d9      	add	r9, fp
    7bf6:	4651      	mov	r1, sl
    7bf8:	0409      	lsls	r1, r1, #16
    7bfa:	0c09      	lsrs	r1, r1, #16
    7bfc:	468a      	mov	sl, r1
    7bfe:	4641      	mov	r1, r8
    7c00:	4361      	muls	r1, r4
    7c02:	437c      	muls	r4, r7
    7c04:	0c13      	lsrs	r3, r2, #16
    7c06:	0412      	lsls	r2, r2, #16
    7c08:	444b      	add	r3, r9
    7c0a:	4452      	add	r2, sl
    7c0c:	46a1      	mov	r9, r4
    7c0e:	468a      	mov	sl, r1
    7c10:	003c      	movs	r4, r7
    7c12:	4641      	mov	r1, r8
    7c14:	436c      	muls	r4, r5
    7c16:	434d      	muls	r5, r1
    7c18:	4651      	mov	r1, sl
    7c1a:	444d      	add	r5, r9
    7c1c:	0c0f      	lsrs	r7, r1, #16
    7c1e:	197d      	adds	r5, r7, r5
    7c20:	45a9      	cmp	r9, r5
    7c22:	d903      	bls.n	7c2c <__aeabi_dmul+0x2fc>
    7c24:	2180      	movs	r1, #128	; 0x80
    7c26:	0249      	lsls	r1, r1, #9
    7c28:	4688      	mov	r8, r1
    7c2a:	4444      	add	r4, r8
    7c2c:	9f04      	ldr	r7, [sp, #16]
    7c2e:	9903      	ldr	r1, [sp, #12]
    7c30:	46b8      	mov	r8, r7
    7c32:	4441      	add	r1, r8
    7c34:	468b      	mov	fp, r1
    7c36:	4583      	cmp	fp, r0
    7c38:	4180      	sbcs	r0, r0
    7c3a:	4241      	negs	r1, r0
    7c3c:	4688      	mov	r8, r1
    7c3e:	4651      	mov	r1, sl
    7c40:	0408      	lsls	r0, r1, #16
    7c42:	042f      	lsls	r7, r5, #16
    7c44:	0c00      	lsrs	r0, r0, #16
    7c46:	183f      	adds	r7, r7, r0
    7c48:	4658      	mov	r0, fp
    7c4a:	9902      	ldr	r1, [sp, #8]
    7c4c:	1810      	adds	r0, r2, r0
    7c4e:	4689      	mov	r9, r1
    7c50:	4290      	cmp	r0, r2
    7c52:	4192      	sbcs	r2, r2
    7c54:	444f      	add	r7, r9
    7c56:	46ba      	mov	sl, r7
    7c58:	4252      	negs	r2, r2
    7c5a:	4699      	mov	r9, r3
    7c5c:	4693      	mov	fp, r2
    7c5e:	44c2      	add	sl, r8
    7c60:	44d1      	add	r9, sl
    7c62:	44cb      	add	fp, r9
    7c64:	428f      	cmp	r7, r1
    7c66:	41bf      	sbcs	r7, r7
    7c68:	45c2      	cmp	sl, r8
    7c6a:	4189      	sbcs	r1, r1
    7c6c:	4599      	cmp	r9, r3
    7c6e:	419b      	sbcs	r3, r3
    7c70:	4593      	cmp	fp, r2
    7c72:	4192      	sbcs	r2, r2
    7c74:	427f      	negs	r7, r7
    7c76:	4249      	negs	r1, r1
    7c78:	0c2d      	lsrs	r5, r5, #16
    7c7a:	4252      	negs	r2, r2
    7c7c:	430f      	orrs	r7, r1
    7c7e:	425b      	negs	r3, r3
    7c80:	4313      	orrs	r3, r2
    7c82:	197f      	adds	r7, r7, r5
    7c84:	18ff      	adds	r7, r7, r3
    7c86:	465b      	mov	r3, fp
    7c88:	193c      	adds	r4, r7, r4
    7c8a:	0ddb      	lsrs	r3, r3, #23
    7c8c:	9a05      	ldr	r2, [sp, #20]
    7c8e:	0264      	lsls	r4, r4, #9
    7c90:	431c      	orrs	r4, r3
    7c92:	0243      	lsls	r3, r0, #9
    7c94:	4313      	orrs	r3, r2
    7c96:	1e5d      	subs	r5, r3, #1
    7c98:	41ab      	sbcs	r3, r5
    7c9a:	465a      	mov	r2, fp
    7c9c:	0dc0      	lsrs	r0, r0, #23
    7c9e:	4303      	orrs	r3, r0
    7ca0:	0252      	lsls	r2, r2, #9
    7ca2:	4313      	orrs	r3, r2
    7ca4:	01e2      	lsls	r2, r4, #7
    7ca6:	d556      	bpl.n	7d56 <__aeabi_dmul+0x426>
    7ca8:	2001      	movs	r0, #1
    7caa:	085a      	lsrs	r2, r3, #1
    7cac:	4003      	ands	r3, r0
    7cae:	4313      	orrs	r3, r2
    7cb0:	07e2      	lsls	r2, r4, #31
    7cb2:	4313      	orrs	r3, r2
    7cb4:	0864      	lsrs	r4, r4, #1
    7cb6:	485a      	ldr	r0, [pc, #360]	; (7e20 <__aeabi_dmul+0x4f0>)
    7cb8:	4460      	add	r0, ip
    7cba:	2800      	cmp	r0, #0
    7cbc:	dd4d      	ble.n	7d5a <__aeabi_dmul+0x42a>
    7cbe:	075a      	lsls	r2, r3, #29
    7cc0:	d009      	beq.n	7cd6 <__aeabi_dmul+0x3a6>
    7cc2:	220f      	movs	r2, #15
    7cc4:	401a      	ands	r2, r3
    7cc6:	2a04      	cmp	r2, #4
    7cc8:	d005      	beq.n	7cd6 <__aeabi_dmul+0x3a6>
    7cca:	1d1a      	adds	r2, r3, #4
    7ccc:	429a      	cmp	r2, r3
    7cce:	419b      	sbcs	r3, r3
    7cd0:	425b      	negs	r3, r3
    7cd2:	18e4      	adds	r4, r4, r3
    7cd4:	0013      	movs	r3, r2
    7cd6:	01e2      	lsls	r2, r4, #7
    7cd8:	d504      	bpl.n	7ce4 <__aeabi_dmul+0x3b4>
    7cda:	2080      	movs	r0, #128	; 0x80
    7cdc:	4a51      	ldr	r2, [pc, #324]	; (7e24 <__aeabi_dmul+0x4f4>)
    7cde:	00c0      	lsls	r0, r0, #3
    7ce0:	4014      	ands	r4, r2
    7ce2:	4460      	add	r0, ip
    7ce4:	4a50      	ldr	r2, [pc, #320]	; (7e28 <__aeabi_dmul+0x4f8>)
    7ce6:	4290      	cmp	r0, r2
    7ce8:	dd00      	ble.n	7cec <__aeabi_dmul+0x3bc>
    7cea:	e6e3      	b.n	7ab4 <__aeabi_dmul+0x184>
    7cec:	2501      	movs	r5, #1
    7cee:	08db      	lsrs	r3, r3, #3
    7cf0:	0762      	lsls	r2, r4, #29
    7cf2:	431a      	orrs	r2, r3
    7cf4:	0264      	lsls	r4, r4, #9
    7cf6:	9b01      	ldr	r3, [sp, #4]
    7cf8:	4691      	mov	r9, r2
    7cfa:	0b22      	lsrs	r2, r4, #12
    7cfc:	0544      	lsls	r4, r0, #21
    7cfe:	0d64      	lsrs	r4, r4, #21
    7d00:	401d      	ands	r5, r3
    7d02:	e67c      	b.n	79fe <__aeabi_dmul+0xce>
    7d04:	2280      	movs	r2, #128	; 0x80
    7d06:	4659      	mov	r1, fp
    7d08:	0312      	lsls	r2, r2, #12
    7d0a:	4211      	tst	r1, r2
    7d0c:	d008      	beq.n	7d20 <__aeabi_dmul+0x3f0>
    7d0e:	4214      	tst	r4, r2
    7d10:	d106      	bne.n	7d20 <__aeabi_dmul+0x3f0>
    7d12:	4322      	orrs	r2, r4
    7d14:	0312      	lsls	r2, r2, #12
    7d16:	0b12      	lsrs	r2, r2, #12
    7d18:	4645      	mov	r5, r8
    7d1a:	4699      	mov	r9, r3
    7d1c:	4c43      	ldr	r4, [pc, #268]	; (7e2c <__aeabi_dmul+0x4fc>)
    7d1e:	e66e      	b.n	79fe <__aeabi_dmul+0xce>
    7d20:	465b      	mov	r3, fp
    7d22:	431a      	orrs	r2, r3
    7d24:	0312      	lsls	r2, r2, #12
    7d26:	0b12      	lsrs	r2, r2, #12
    7d28:	4c40      	ldr	r4, [pc, #256]	; (7e2c <__aeabi_dmul+0x4fc>)
    7d2a:	e668      	b.n	79fe <__aeabi_dmul+0xce>
    7d2c:	0003      	movs	r3, r0
    7d2e:	4654      	mov	r4, sl
    7d30:	3b28      	subs	r3, #40	; 0x28
    7d32:	409c      	lsls	r4, r3
    7d34:	2300      	movs	r3, #0
    7d36:	e6b9      	b.n	7aac <__aeabi_dmul+0x17c>
    7d38:	f000 fd74 	bl	8824 <__clzsi2>
    7d3c:	3020      	adds	r0, #32
    7d3e:	e6a6      	b.n	7a8e <__aeabi_dmul+0x15e>
    7d40:	0003      	movs	r3, r0
    7d42:	3b28      	subs	r3, #40	; 0x28
    7d44:	409f      	lsls	r7, r3
    7d46:	2300      	movs	r3, #0
    7d48:	46bb      	mov	fp, r7
    7d4a:	4699      	mov	r9, r3
    7d4c:	e68a      	b.n	7a64 <__aeabi_dmul+0x134>
    7d4e:	f000 fd69 	bl	8824 <__clzsi2>
    7d52:	3020      	adds	r0, #32
    7d54:	e674      	b.n	7a40 <__aeabi_dmul+0x110>
    7d56:	46b4      	mov	ip, r6
    7d58:	e7ad      	b.n	7cb6 <__aeabi_dmul+0x386>
    7d5a:	2501      	movs	r5, #1
    7d5c:	1a2a      	subs	r2, r5, r0
    7d5e:	2a38      	cmp	r2, #56	; 0x38
    7d60:	dd06      	ble.n	7d70 <__aeabi_dmul+0x440>
    7d62:	9b01      	ldr	r3, [sp, #4]
    7d64:	2400      	movs	r4, #0
    7d66:	401d      	ands	r5, r3
    7d68:	2300      	movs	r3, #0
    7d6a:	2200      	movs	r2, #0
    7d6c:	4699      	mov	r9, r3
    7d6e:	e646      	b.n	79fe <__aeabi_dmul+0xce>
    7d70:	2a1f      	cmp	r2, #31
    7d72:	dc21      	bgt.n	7db8 <__aeabi_dmul+0x488>
    7d74:	2520      	movs	r5, #32
    7d76:	0020      	movs	r0, r4
    7d78:	1aad      	subs	r5, r5, r2
    7d7a:	001e      	movs	r6, r3
    7d7c:	40ab      	lsls	r3, r5
    7d7e:	40a8      	lsls	r0, r5
    7d80:	40d6      	lsrs	r6, r2
    7d82:	1e5d      	subs	r5, r3, #1
    7d84:	41ab      	sbcs	r3, r5
    7d86:	4330      	orrs	r0, r6
    7d88:	4318      	orrs	r0, r3
    7d8a:	40d4      	lsrs	r4, r2
    7d8c:	0743      	lsls	r3, r0, #29
    7d8e:	d009      	beq.n	7da4 <__aeabi_dmul+0x474>
    7d90:	230f      	movs	r3, #15
    7d92:	4003      	ands	r3, r0
    7d94:	2b04      	cmp	r3, #4
    7d96:	d005      	beq.n	7da4 <__aeabi_dmul+0x474>
    7d98:	0003      	movs	r3, r0
    7d9a:	1d18      	adds	r0, r3, #4
    7d9c:	4298      	cmp	r0, r3
    7d9e:	419b      	sbcs	r3, r3
    7da0:	425b      	negs	r3, r3
    7da2:	18e4      	adds	r4, r4, r3
    7da4:	0223      	lsls	r3, r4, #8
    7da6:	d521      	bpl.n	7dec <__aeabi_dmul+0x4bc>
    7da8:	2501      	movs	r5, #1
    7daa:	9b01      	ldr	r3, [sp, #4]
    7dac:	2401      	movs	r4, #1
    7dae:	401d      	ands	r5, r3
    7db0:	2300      	movs	r3, #0
    7db2:	2200      	movs	r2, #0
    7db4:	4699      	mov	r9, r3
    7db6:	e622      	b.n	79fe <__aeabi_dmul+0xce>
    7db8:	251f      	movs	r5, #31
    7dba:	0021      	movs	r1, r4
    7dbc:	426d      	negs	r5, r5
    7dbe:	1a28      	subs	r0, r5, r0
    7dc0:	40c1      	lsrs	r1, r0
    7dc2:	0008      	movs	r0, r1
    7dc4:	2a20      	cmp	r2, #32
    7dc6:	d01d      	beq.n	7e04 <__aeabi_dmul+0x4d4>
    7dc8:	355f      	adds	r5, #95	; 0x5f
    7dca:	1aaa      	subs	r2, r5, r2
    7dcc:	4094      	lsls	r4, r2
    7dce:	4323      	orrs	r3, r4
    7dd0:	1e5c      	subs	r4, r3, #1
    7dd2:	41a3      	sbcs	r3, r4
    7dd4:	2507      	movs	r5, #7
    7dd6:	4303      	orrs	r3, r0
    7dd8:	401d      	ands	r5, r3
    7dda:	2200      	movs	r2, #0
    7ddc:	2d00      	cmp	r5, #0
    7dde:	d009      	beq.n	7df4 <__aeabi_dmul+0x4c4>
    7de0:	220f      	movs	r2, #15
    7de2:	2400      	movs	r4, #0
    7de4:	401a      	ands	r2, r3
    7de6:	0018      	movs	r0, r3
    7de8:	2a04      	cmp	r2, #4
    7dea:	d1d6      	bne.n	7d9a <__aeabi_dmul+0x46a>
    7dec:	0003      	movs	r3, r0
    7dee:	0765      	lsls	r5, r4, #29
    7df0:	0264      	lsls	r4, r4, #9
    7df2:	0b22      	lsrs	r2, r4, #12
    7df4:	08db      	lsrs	r3, r3, #3
    7df6:	432b      	orrs	r3, r5
    7df8:	2501      	movs	r5, #1
    7dfa:	4699      	mov	r9, r3
    7dfc:	9b01      	ldr	r3, [sp, #4]
    7dfe:	2400      	movs	r4, #0
    7e00:	401d      	ands	r5, r3
    7e02:	e5fc      	b.n	79fe <__aeabi_dmul+0xce>
    7e04:	2400      	movs	r4, #0
    7e06:	e7e2      	b.n	7dce <__aeabi_dmul+0x49e>
    7e08:	2280      	movs	r2, #128	; 0x80
    7e0a:	2501      	movs	r5, #1
    7e0c:	0312      	lsls	r2, r2, #12
    7e0e:	4322      	orrs	r2, r4
    7e10:	9901      	ldr	r1, [sp, #4]
    7e12:	0312      	lsls	r2, r2, #12
    7e14:	0b12      	lsrs	r2, r2, #12
    7e16:	400d      	ands	r5, r1
    7e18:	4699      	mov	r9, r3
    7e1a:	4c04      	ldr	r4, [pc, #16]	; (7e2c <__aeabi_dmul+0x4fc>)
    7e1c:	e5ef      	b.n	79fe <__aeabi_dmul+0xce>
    7e1e:	46c0      	nop			; (mov r8, r8)
    7e20:	000003ff 	.word	0x000003ff
    7e24:	feffffff 	.word	0xfeffffff
    7e28:	000007fe 	.word	0x000007fe
    7e2c:	000007ff 	.word	0x000007ff

00007e30 <__aeabi_dsub>:
    7e30:	b5f0      	push	{r4, r5, r6, r7, lr}
    7e32:	4646      	mov	r6, r8
    7e34:	46d6      	mov	lr, sl
    7e36:	464f      	mov	r7, r9
    7e38:	030c      	lsls	r4, r1, #12
    7e3a:	b5c0      	push	{r6, r7, lr}
    7e3c:	0fcd      	lsrs	r5, r1, #31
    7e3e:	004e      	lsls	r6, r1, #1
    7e40:	0a61      	lsrs	r1, r4, #9
    7e42:	0f44      	lsrs	r4, r0, #29
    7e44:	430c      	orrs	r4, r1
    7e46:	00c1      	lsls	r1, r0, #3
    7e48:	0058      	lsls	r0, r3, #1
    7e4a:	0d40      	lsrs	r0, r0, #21
    7e4c:	4684      	mov	ip, r0
    7e4e:	468a      	mov	sl, r1
    7e50:	000f      	movs	r7, r1
    7e52:	0319      	lsls	r1, r3, #12
    7e54:	0f50      	lsrs	r0, r2, #29
    7e56:	0a49      	lsrs	r1, r1, #9
    7e58:	4301      	orrs	r1, r0
    7e5a:	48c6      	ldr	r0, [pc, #792]	; (8174 <__aeabi_dsub+0x344>)
    7e5c:	0d76      	lsrs	r6, r6, #21
    7e5e:	46a8      	mov	r8, r5
    7e60:	0fdb      	lsrs	r3, r3, #31
    7e62:	00d2      	lsls	r2, r2, #3
    7e64:	4584      	cmp	ip, r0
    7e66:	d100      	bne.n	7e6a <__aeabi_dsub+0x3a>
    7e68:	e0d8      	b.n	801c <__aeabi_dsub+0x1ec>
    7e6a:	2001      	movs	r0, #1
    7e6c:	4043      	eors	r3, r0
    7e6e:	42ab      	cmp	r3, r5
    7e70:	d100      	bne.n	7e74 <__aeabi_dsub+0x44>
    7e72:	e0a6      	b.n	7fc2 <__aeabi_dsub+0x192>
    7e74:	4660      	mov	r0, ip
    7e76:	1a35      	subs	r5, r6, r0
    7e78:	2d00      	cmp	r5, #0
    7e7a:	dc00      	bgt.n	7e7e <__aeabi_dsub+0x4e>
    7e7c:	e105      	b.n	808a <__aeabi_dsub+0x25a>
    7e7e:	2800      	cmp	r0, #0
    7e80:	d110      	bne.n	7ea4 <__aeabi_dsub+0x74>
    7e82:	000b      	movs	r3, r1
    7e84:	4313      	orrs	r3, r2
    7e86:	d100      	bne.n	7e8a <__aeabi_dsub+0x5a>
    7e88:	e0d7      	b.n	803a <__aeabi_dsub+0x20a>
    7e8a:	1e6b      	subs	r3, r5, #1
    7e8c:	2b00      	cmp	r3, #0
    7e8e:	d000      	beq.n	7e92 <__aeabi_dsub+0x62>
    7e90:	e14b      	b.n	812a <__aeabi_dsub+0x2fa>
    7e92:	4653      	mov	r3, sl
    7e94:	1a9f      	subs	r7, r3, r2
    7e96:	45ba      	cmp	sl, r7
    7e98:	4180      	sbcs	r0, r0
    7e9a:	1a64      	subs	r4, r4, r1
    7e9c:	4240      	negs	r0, r0
    7e9e:	1a24      	subs	r4, r4, r0
    7ea0:	2601      	movs	r6, #1
    7ea2:	e01e      	b.n	7ee2 <__aeabi_dsub+0xb2>
    7ea4:	4bb3      	ldr	r3, [pc, #716]	; (8174 <__aeabi_dsub+0x344>)
    7ea6:	429e      	cmp	r6, r3
    7ea8:	d048      	beq.n	7f3c <__aeabi_dsub+0x10c>
    7eaa:	2380      	movs	r3, #128	; 0x80
    7eac:	041b      	lsls	r3, r3, #16
    7eae:	4319      	orrs	r1, r3
    7eb0:	2d38      	cmp	r5, #56	; 0x38
    7eb2:	dd00      	ble.n	7eb6 <__aeabi_dsub+0x86>
    7eb4:	e119      	b.n	80ea <__aeabi_dsub+0x2ba>
    7eb6:	2d1f      	cmp	r5, #31
    7eb8:	dd00      	ble.n	7ebc <__aeabi_dsub+0x8c>
    7eba:	e14c      	b.n	8156 <__aeabi_dsub+0x326>
    7ebc:	2320      	movs	r3, #32
    7ebe:	000f      	movs	r7, r1
    7ec0:	1b5b      	subs	r3, r3, r5
    7ec2:	0010      	movs	r0, r2
    7ec4:	409a      	lsls	r2, r3
    7ec6:	409f      	lsls	r7, r3
    7ec8:	40e8      	lsrs	r0, r5
    7eca:	1e53      	subs	r3, r2, #1
    7ecc:	419a      	sbcs	r2, r3
    7ece:	40e9      	lsrs	r1, r5
    7ed0:	4307      	orrs	r7, r0
    7ed2:	4317      	orrs	r7, r2
    7ed4:	4653      	mov	r3, sl
    7ed6:	1bdf      	subs	r7, r3, r7
    7ed8:	1a61      	subs	r1, r4, r1
    7eda:	45ba      	cmp	sl, r7
    7edc:	41a4      	sbcs	r4, r4
    7ede:	4264      	negs	r4, r4
    7ee0:	1b0c      	subs	r4, r1, r4
    7ee2:	0223      	lsls	r3, r4, #8
    7ee4:	d400      	bmi.n	7ee8 <__aeabi_dsub+0xb8>
    7ee6:	e0c5      	b.n	8074 <__aeabi_dsub+0x244>
    7ee8:	0264      	lsls	r4, r4, #9
    7eea:	0a65      	lsrs	r5, r4, #9
    7eec:	2d00      	cmp	r5, #0
    7eee:	d100      	bne.n	7ef2 <__aeabi_dsub+0xc2>
    7ef0:	e0f6      	b.n	80e0 <__aeabi_dsub+0x2b0>
    7ef2:	0028      	movs	r0, r5
    7ef4:	f000 fc96 	bl	8824 <__clzsi2>
    7ef8:	0003      	movs	r3, r0
    7efa:	3b08      	subs	r3, #8
    7efc:	2b1f      	cmp	r3, #31
    7efe:	dd00      	ble.n	7f02 <__aeabi_dsub+0xd2>
    7f00:	e0e9      	b.n	80d6 <__aeabi_dsub+0x2a6>
    7f02:	2220      	movs	r2, #32
    7f04:	003c      	movs	r4, r7
    7f06:	1ad2      	subs	r2, r2, r3
    7f08:	409d      	lsls	r5, r3
    7f0a:	40d4      	lsrs	r4, r2
    7f0c:	409f      	lsls	r7, r3
    7f0e:	4325      	orrs	r5, r4
    7f10:	429e      	cmp	r6, r3
    7f12:	dd00      	ble.n	7f16 <__aeabi_dsub+0xe6>
    7f14:	e0db      	b.n	80ce <__aeabi_dsub+0x29e>
    7f16:	1b9e      	subs	r6, r3, r6
    7f18:	1c73      	adds	r3, r6, #1
    7f1a:	2b1f      	cmp	r3, #31
    7f1c:	dd00      	ble.n	7f20 <__aeabi_dsub+0xf0>
    7f1e:	e10a      	b.n	8136 <__aeabi_dsub+0x306>
    7f20:	2220      	movs	r2, #32
    7f22:	0038      	movs	r0, r7
    7f24:	1ad2      	subs	r2, r2, r3
    7f26:	0029      	movs	r1, r5
    7f28:	4097      	lsls	r7, r2
    7f2a:	002c      	movs	r4, r5
    7f2c:	4091      	lsls	r1, r2
    7f2e:	40d8      	lsrs	r0, r3
    7f30:	1e7a      	subs	r2, r7, #1
    7f32:	4197      	sbcs	r7, r2
    7f34:	40dc      	lsrs	r4, r3
    7f36:	2600      	movs	r6, #0
    7f38:	4301      	orrs	r1, r0
    7f3a:	430f      	orrs	r7, r1
    7f3c:	077b      	lsls	r3, r7, #29
    7f3e:	d009      	beq.n	7f54 <__aeabi_dsub+0x124>
    7f40:	230f      	movs	r3, #15
    7f42:	403b      	ands	r3, r7
    7f44:	2b04      	cmp	r3, #4
    7f46:	d005      	beq.n	7f54 <__aeabi_dsub+0x124>
    7f48:	1d3b      	adds	r3, r7, #4
    7f4a:	42bb      	cmp	r3, r7
    7f4c:	41bf      	sbcs	r7, r7
    7f4e:	427f      	negs	r7, r7
    7f50:	19e4      	adds	r4, r4, r7
    7f52:	001f      	movs	r7, r3
    7f54:	0223      	lsls	r3, r4, #8
    7f56:	d525      	bpl.n	7fa4 <__aeabi_dsub+0x174>
    7f58:	4b86      	ldr	r3, [pc, #536]	; (8174 <__aeabi_dsub+0x344>)
    7f5a:	3601      	adds	r6, #1
    7f5c:	429e      	cmp	r6, r3
    7f5e:	d100      	bne.n	7f62 <__aeabi_dsub+0x132>
    7f60:	e0af      	b.n	80c2 <__aeabi_dsub+0x292>
    7f62:	4b85      	ldr	r3, [pc, #532]	; (8178 <__aeabi_dsub+0x348>)
    7f64:	2501      	movs	r5, #1
    7f66:	401c      	ands	r4, r3
    7f68:	4643      	mov	r3, r8
    7f6a:	0762      	lsls	r2, r4, #29
    7f6c:	08ff      	lsrs	r7, r7, #3
    7f6e:	0264      	lsls	r4, r4, #9
    7f70:	0576      	lsls	r6, r6, #21
    7f72:	4317      	orrs	r7, r2
    7f74:	0b24      	lsrs	r4, r4, #12
    7f76:	0d76      	lsrs	r6, r6, #21
    7f78:	401d      	ands	r5, r3
    7f7a:	2100      	movs	r1, #0
    7f7c:	0324      	lsls	r4, r4, #12
    7f7e:	0b23      	lsrs	r3, r4, #12
    7f80:	0d0c      	lsrs	r4, r1, #20
    7f82:	4a7e      	ldr	r2, [pc, #504]	; (817c <__aeabi_dsub+0x34c>)
    7f84:	0524      	lsls	r4, r4, #20
    7f86:	431c      	orrs	r4, r3
    7f88:	4014      	ands	r4, r2
    7f8a:	0533      	lsls	r3, r6, #20
    7f8c:	4323      	orrs	r3, r4
    7f8e:	005b      	lsls	r3, r3, #1
    7f90:	07ed      	lsls	r5, r5, #31
    7f92:	085b      	lsrs	r3, r3, #1
    7f94:	432b      	orrs	r3, r5
    7f96:	0038      	movs	r0, r7
    7f98:	0019      	movs	r1, r3
    7f9a:	bc1c      	pop	{r2, r3, r4}
    7f9c:	4690      	mov	r8, r2
    7f9e:	4699      	mov	r9, r3
    7fa0:	46a2      	mov	sl, r4
    7fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7fa4:	2501      	movs	r5, #1
    7fa6:	4643      	mov	r3, r8
    7fa8:	0762      	lsls	r2, r4, #29
    7faa:	08ff      	lsrs	r7, r7, #3
    7fac:	4317      	orrs	r7, r2
    7fae:	08e4      	lsrs	r4, r4, #3
    7fb0:	401d      	ands	r5, r3
    7fb2:	4b70      	ldr	r3, [pc, #448]	; (8174 <__aeabi_dsub+0x344>)
    7fb4:	429e      	cmp	r6, r3
    7fb6:	d036      	beq.n	8026 <__aeabi_dsub+0x1f6>
    7fb8:	0324      	lsls	r4, r4, #12
    7fba:	0576      	lsls	r6, r6, #21
    7fbc:	0b24      	lsrs	r4, r4, #12
    7fbe:	0d76      	lsrs	r6, r6, #21
    7fc0:	e7db      	b.n	7f7a <__aeabi_dsub+0x14a>
    7fc2:	4663      	mov	r3, ip
    7fc4:	1af3      	subs	r3, r6, r3
    7fc6:	2b00      	cmp	r3, #0
    7fc8:	dc00      	bgt.n	7fcc <__aeabi_dsub+0x19c>
    7fca:	e094      	b.n	80f6 <__aeabi_dsub+0x2c6>
    7fcc:	4660      	mov	r0, ip
    7fce:	2800      	cmp	r0, #0
    7fd0:	d035      	beq.n	803e <__aeabi_dsub+0x20e>
    7fd2:	4868      	ldr	r0, [pc, #416]	; (8174 <__aeabi_dsub+0x344>)
    7fd4:	4286      	cmp	r6, r0
    7fd6:	d0b1      	beq.n	7f3c <__aeabi_dsub+0x10c>
    7fd8:	2780      	movs	r7, #128	; 0x80
    7fda:	043f      	lsls	r7, r7, #16
    7fdc:	4339      	orrs	r1, r7
    7fde:	2b38      	cmp	r3, #56	; 0x38
    7fe0:	dc00      	bgt.n	7fe4 <__aeabi_dsub+0x1b4>
    7fe2:	e0fd      	b.n	81e0 <__aeabi_dsub+0x3b0>
    7fe4:	430a      	orrs	r2, r1
    7fe6:	0017      	movs	r7, r2
    7fe8:	2100      	movs	r1, #0
    7fea:	1e7a      	subs	r2, r7, #1
    7fec:	4197      	sbcs	r7, r2
    7fee:	4457      	add	r7, sl
    7ff0:	4557      	cmp	r7, sl
    7ff2:	4180      	sbcs	r0, r0
    7ff4:	1909      	adds	r1, r1, r4
    7ff6:	4244      	negs	r4, r0
    7ff8:	190c      	adds	r4, r1, r4
    7ffa:	0223      	lsls	r3, r4, #8
    7ffc:	d53a      	bpl.n	8074 <__aeabi_dsub+0x244>
    7ffe:	4b5d      	ldr	r3, [pc, #372]	; (8174 <__aeabi_dsub+0x344>)
    8000:	3601      	adds	r6, #1
    8002:	429e      	cmp	r6, r3
    8004:	d100      	bne.n	8008 <__aeabi_dsub+0x1d8>
    8006:	e14b      	b.n	82a0 <__aeabi_dsub+0x470>
    8008:	2201      	movs	r2, #1
    800a:	4b5b      	ldr	r3, [pc, #364]	; (8178 <__aeabi_dsub+0x348>)
    800c:	401c      	ands	r4, r3
    800e:	087b      	lsrs	r3, r7, #1
    8010:	4017      	ands	r7, r2
    8012:	431f      	orrs	r7, r3
    8014:	07e2      	lsls	r2, r4, #31
    8016:	4317      	orrs	r7, r2
    8018:	0864      	lsrs	r4, r4, #1
    801a:	e78f      	b.n	7f3c <__aeabi_dsub+0x10c>
    801c:	0008      	movs	r0, r1
    801e:	4310      	orrs	r0, r2
    8020:	d000      	beq.n	8024 <__aeabi_dsub+0x1f4>
    8022:	e724      	b.n	7e6e <__aeabi_dsub+0x3e>
    8024:	e721      	b.n	7e6a <__aeabi_dsub+0x3a>
    8026:	0023      	movs	r3, r4
    8028:	433b      	orrs	r3, r7
    802a:	d100      	bne.n	802e <__aeabi_dsub+0x1fe>
    802c:	e1b9      	b.n	83a2 <__aeabi_dsub+0x572>
    802e:	2280      	movs	r2, #128	; 0x80
    8030:	0312      	lsls	r2, r2, #12
    8032:	4314      	orrs	r4, r2
    8034:	0324      	lsls	r4, r4, #12
    8036:	0b24      	lsrs	r4, r4, #12
    8038:	e79f      	b.n	7f7a <__aeabi_dsub+0x14a>
    803a:	002e      	movs	r6, r5
    803c:	e77e      	b.n	7f3c <__aeabi_dsub+0x10c>
    803e:	0008      	movs	r0, r1
    8040:	4310      	orrs	r0, r2
    8042:	d100      	bne.n	8046 <__aeabi_dsub+0x216>
    8044:	e0ca      	b.n	81dc <__aeabi_dsub+0x3ac>
    8046:	1e58      	subs	r0, r3, #1
    8048:	4684      	mov	ip, r0
    804a:	2800      	cmp	r0, #0
    804c:	d000      	beq.n	8050 <__aeabi_dsub+0x220>
    804e:	e0e7      	b.n	8220 <__aeabi_dsub+0x3f0>
    8050:	4452      	add	r2, sl
    8052:	4552      	cmp	r2, sl
    8054:	4180      	sbcs	r0, r0
    8056:	1864      	adds	r4, r4, r1
    8058:	4240      	negs	r0, r0
    805a:	1824      	adds	r4, r4, r0
    805c:	0017      	movs	r7, r2
    805e:	2601      	movs	r6, #1
    8060:	0223      	lsls	r3, r4, #8
    8062:	d507      	bpl.n	8074 <__aeabi_dsub+0x244>
    8064:	2602      	movs	r6, #2
    8066:	e7cf      	b.n	8008 <__aeabi_dsub+0x1d8>
    8068:	4664      	mov	r4, ip
    806a:	432c      	orrs	r4, r5
    806c:	d100      	bne.n	8070 <__aeabi_dsub+0x240>
    806e:	e1b3      	b.n	83d8 <__aeabi_dsub+0x5a8>
    8070:	002c      	movs	r4, r5
    8072:	4667      	mov	r7, ip
    8074:	077b      	lsls	r3, r7, #29
    8076:	d000      	beq.n	807a <__aeabi_dsub+0x24a>
    8078:	e762      	b.n	7f40 <__aeabi_dsub+0x110>
    807a:	0763      	lsls	r3, r4, #29
    807c:	08ff      	lsrs	r7, r7, #3
    807e:	431f      	orrs	r7, r3
    8080:	2501      	movs	r5, #1
    8082:	4643      	mov	r3, r8
    8084:	08e4      	lsrs	r4, r4, #3
    8086:	401d      	ands	r5, r3
    8088:	e793      	b.n	7fb2 <__aeabi_dsub+0x182>
    808a:	2d00      	cmp	r5, #0
    808c:	d178      	bne.n	8180 <__aeabi_dsub+0x350>
    808e:	1c75      	adds	r5, r6, #1
    8090:	056d      	lsls	r5, r5, #21
    8092:	0d6d      	lsrs	r5, r5, #21
    8094:	2d01      	cmp	r5, #1
    8096:	dc00      	bgt.n	809a <__aeabi_dsub+0x26a>
    8098:	e0f2      	b.n	8280 <__aeabi_dsub+0x450>
    809a:	4650      	mov	r0, sl
    809c:	1a80      	subs	r0, r0, r2
    809e:	4582      	cmp	sl, r0
    80a0:	41bf      	sbcs	r7, r7
    80a2:	1a65      	subs	r5, r4, r1
    80a4:	427f      	negs	r7, r7
    80a6:	1bed      	subs	r5, r5, r7
    80a8:	4684      	mov	ip, r0
    80aa:	0228      	lsls	r0, r5, #8
    80ac:	d400      	bmi.n	80b0 <__aeabi_dsub+0x280>
    80ae:	e08c      	b.n	81ca <__aeabi_dsub+0x39a>
    80b0:	4650      	mov	r0, sl
    80b2:	1a17      	subs	r7, r2, r0
    80b4:	42ba      	cmp	r2, r7
    80b6:	4192      	sbcs	r2, r2
    80b8:	1b0c      	subs	r4, r1, r4
    80ba:	4255      	negs	r5, r2
    80bc:	1b65      	subs	r5, r4, r5
    80be:	4698      	mov	r8, r3
    80c0:	e714      	b.n	7eec <__aeabi_dsub+0xbc>
    80c2:	2501      	movs	r5, #1
    80c4:	4643      	mov	r3, r8
    80c6:	2400      	movs	r4, #0
    80c8:	401d      	ands	r5, r3
    80ca:	2700      	movs	r7, #0
    80cc:	e755      	b.n	7f7a <__aeabi_dsub+0x14a>
    80ce:	4c2a      	ldr	r4, [pc, #168]	; (8178 <__aeabi_dsub+0x348>)
    80d0:	1af6      	subs	r6, r6, r3
    80d2:	402c      	ands	r4, r5
    80d4:	e732      	b.n	7f3c <__aeabi_dsub+0x10c>
    80d6:	003d      	movs	r5, r7
    80d8:	3828      	subs	r0, #40	; 0x28
    80da:	4085      	lsls	r5, r0
    80dc:	2700      	movs	r7, #0
    80de:	e717      	b.n	7f10 <__aeabi_dsub+0xe0>
    80e0:	0038      	movs	r0, r7
    80e2:	f000 fb9f 	bl	8824 <__clzsi2>
    80e6:	3020      	adds	r0, #32
    80e8:	e706      	b.n	7ef8 <__aeabi_dsub+0xc8>
    80ea:	430a      	orrs	r2, r1
    80ec:	0017      	movs	r7, r2
    80ee:	2100      	movs	r1, #0
    80f0:	1e7a      	subs	r2, r7, #1
    80f2:	4197      	sbcs	r7, r2
    80f4:	e6ee      	b.n	7ed4 <__aeabi_dsub+0xa4>
    80f6:	2b00      	cmp	r3, #0
    80f8:	d000      	beq.n	80fc <__aeabi_dsub+0x2cc>
    80fa:	e0e5      	b.n	82c8 <__aeabi_dsub+0x498>
    80fc:	1c73      	adds	r3, r6, #1
    80fe:	469c      	mov	ip, r3
    8100:	055b      	lsls	r3, r3, #21
    8102:	0d5b      	lsrs	r3, r3, #21
    8104:	2b01      	cmp	r3, #1
    8106:	dc00      	bgt.n	810a <__aeabi_dsub+0x2da>
    8108:	e09f      	b.n	824a <__aeabi_dsub+0x41a>
    810a:	4b1a      	ldr	r3, [pc, #104]	; (8174 <__aeabi_dsub+0x344>)
    810c:	459c      	cmp	ip, r3
    810e:	d100      	bne.n	8112 <__aeabi_dsub+0x2e2>
    8110:	e0c5      	b.n	829e <__aeabi_dsub+0x46e>
    8112:	4452      	add	r2, sl
    8114:	4552      	cmp	r2, sl
    8116:	4180      	sbcs	r0, r0
    8118:	1864      	adds	r4, r4, r1
    811a:	4240      	negs	r0, r0
    811c:	1824      	adds	r4, r4, r0
    811e:	07e7      	lsls	r7, r4, #31
    8120:	0852      	lsrs	r2, r2, #1
    8122:	4317      	orrs	r7, r2
    8124:	0864      	lsrs	r4, r4, #1
    8126:	4666      	mov	r6, ip
    8128:	e708      	b.n	7f3c <__aeabi_dsub+0x10c>
    812a:	4812      	ldr	r0, [pc, #72]	; (8174 <__aeabi_dsub+0x344>)
    812c:	4285      	cmp	r5, r0
    812e:	d100      	bne.n	8132 <__aeabi_dsub+0x302>
    8130:	e085      	b.n	823e <__aeabi_dsub+0x40e>
    8132:	001d      	movs	r5, r3
    8134:	e6bc      	b.n	7eb0 <__aeabi_dsub+0x80>
    8136:	0029      	movs	r1, r5
    8138:	3e1f      	subs	r6, #31
    813a:	40f1      	lsrs	r1, r6
    813c:	2b20      	cmp	r3, #32
    813e:	d100      	bne.n	8142 <__aeabi_dsub+0x312>
    8140:	e07f      	b.n	8242 <__aeabi_dsub+0x412>
    8142:	2240      	movs	r2, #64	; 0x40
    8144:	1ad3      	subs	r3, r2, r3
    8146:	409d      	lsls	r5, r3
    8148:	432f      	orrs	r7, r5
    814a:	1e7d      	subs	r5, r7, #1
    814c:	41af      	sbcs	r7, r5
    814e:	2400      	movs	r4, #0
    8150:	430f      	orrs	r7, r1
    8152:	2600      	movs	r6, #0
    8154:	e78e      	b.n	8074 <__aeabi_dsub+0x244>
    8156:	002b      	movs	r3, r5
    8158:	000f      	movs	r7, r1
    815a:	3b20      	subs	r3, #32
    815c:	40df      	lsrs	r7, r3
    815e:	2d20      	cmp	r5, #32
    8160:	d071      	beq.n	8246 <__aeabi_dsub+0x416>
    8162:	2340      	movs	r3, #64	; 0x40
    8164:	1b5d      	subs	r5, r3, r5
    8166:	40a9      	lsls	r1, r5
    8168:	430a      	orrs	r2, r1
    816a:	1e51      	subs	r1, r2, #1
    816c:	418a      	sbcs	r2, r1
    816e:	2100      	movs	r1, #0
    8170:	4317      	orrs	r7, r2
    8172:	e6af      	b.n	7ed4 <__aeabi_dsub+0xa4>
    8174:	000007ff 	.word	0x000007ff
    8178:	ff7fffff 	.word	0xff7fffff
    817c:	800fffff 	.word	0x800fffff
    8180:	2e00      	cmp	r6, #0
    8182:	d03e      	beq.n	8202 <__aeabi_dsub+0x3d2>
    8184:	4eb3      	ldr	r6, [pc, #716]	; (8454 <__aeabi_dsub+0x624>)
    8186:	45b4      	cmp	ip, r6
    8188:	d045      	beq.n	8216 <__aeabi_dsub+0x3e6>
    818a:	2680      	movs	r6, #128	; 0x80
    818c:	0436      	lsls	r6, r6, #16
    818e:	426d      	negs	r5, r5
    8190:	4334      	orrs	r4, r6
    8192:	2d38      	cmp	r5, #56	; 0x38
    8194:	dd00      	ble.n	8198 <__aeabi_dsub+0x368>
    8196:	e0a8      	b.n	82ea <__aeabi_dsub+0x4ba>
    8198:	2d1f      	cmp	r5, #31
    819a:	dd00      	ble.n	819e <__aeabi_dsub+0x36e>
    819c:	e11f      	b.n	83de <__aeabi_dsub+0x5ae>
    819e:	2620      	movs	r6, #32
    81a0:	0027      	movs	r7, r4
    81a2:	4650      	mov	r0, sl
    81a4:	1b76      	subs	r6, r6, r5
    81a6:	40b7      	lsls	r7, r6
    81a8:	40e8      	lsrs	r0, r5
    81aa:	4307      	orrs	r7, r0
    81ac:	4650      	mov	r0, sl
    81ae:	40b0      	lsls	r0, r6
    81b0:	1e46      	subs	r6, r0, #1
    81b2:	41b0      	sbcs	r0, r6
    81b4:	40ec      	lsrs	r4, r5
    81b6:	4338      	orrs	r0, r7
    81b8:	1a17      	subs	r7, r2, r0
    81ba:	42ba      	cmp	r2, r7
    81bc:	4192      	sbcs	r2, r2
    81be:	1b0c      	subs	r4, r1, r4
    81c0:	4252      	negs	r2, r2
    81c2:	1aa4      	subs	r4, r4, r2
    81c4:	4666      	mov	r6, ip
    81c6:	4698      	mov	r8, r3
    81c8:	e68b      	b.n	7ee2 <__aeabi_dsub+0xb2>
    81ca:	4664      	mov	r4, ip
    81cc:	4667      	mov	r7, ip
    81ce:	432c      	orrs	r4, r5
    81d0:	d000      	beq.n	81d4 <__aeabi_dsub+0x3a4>
    81d2:	e68b      	b.n	7eec <__aeabi_dsub+0xbc>
    81d4:	2500      	movs	r5, #0
    81d6:	2600      	movs	r6, #0
    81d8:	2700      	movs	r7, #0
    81da:	e6ea      	b.n	7fb2 <__aeabi_dsub+0x182>
    81dc:	001e      	movs	r6, r3
    81de:	e6ad      	b.n	7f3c <__aeabi_dsub+0x10c>
    81e0:	2b1f      	cmp	r3, #31
    81e2:	dc60      	bgt.n	82a6 <__aeabi_dsub+0x476>
    81e4:	2720      	movs	r7, #32
    81e6:	1af8      	subs	r0, r7, r3
    81e8:	000f      	movs	r7, r1
    81ea:	4684      	mov	ip, r0
    81ec:	4087      	lsls	r7, r0
    81ee:	0010      	movs	r0, r2
    81f0:	40d8      	lsrs	r0, r3
    81f2:	4307      	orrs	r7, r0
    81f4:	4660      	mov	r0, ip
    81f6:	4082      	lsls	r2, r0
    81f8:	1e50      	subs	r0, r2, #1
    81fa:	4182      	sbcs	r2, r0
    81fc:	40d9      	lsrs	r1, r3
    81fe:	4317      	orrs	r7, r2
    8200:	e6f5      	b.n	7fee <__aeabi_dsub+0x1be>
    8202:	0026      	movs	r6, r4
    8204:	4650      	mov	r0, sl
    8206:	4306      	orrs	r6, r0
    8208:	d005      	beq.n	8216 <__aeabi_dsub+0x3e6>
    820a:	43ed      	mvns	r5, r5
    820c:	2d00      	cmp	r5, #0
    820e:	d0d3      	beq.n	81b8 <__aeabi_dsub+0x388>
    8210:	4e90      	ldr	r6, [pc, #576]	; (8454 <__aeabi_dsub+0x624>)
    8212:	45b4      	cmp	ip, r6
    8214:	d1bd      	bne.n	8192 <__aeabi_dsub+0x362>
    8216:	000c      	movs	r4, r1
    8218:	0017      	movs	r7, r2
    821a:	4666      	mov	r6, ip
    821c:	4698      	mov	r8, r3
    821e:	e68d      	b.n	7f3c <__aeabi_dsub+0x10c>
    8220:	488c      	ldr	r0, [pc, #560]	; (8454 <__aeabi_dsub+0x624>)
    8222:	4283      	cmp	r3, r0
    8224:	d00b      	beq.n	823e <__aeabi_dsub+0x40e>
    8226:	4663      	mov	r3, ip
    8228:	e6d9      	b.n	7fde <__aeabi_dsub+0x1ae>
    822a:	2d00      	cmp	r5, #0
    822c:	d000      	beq.n	8230 <__aeabi_dsub+0x400>
    822e:	e096      	b.n	835e <__aeabi_dsub+0x52e>
    8230:	0008      	movs	r0, r1
    8232:	4310      	orrs	r0, r2
    8234:	d100      	bne.n	8238 <__aeabi_dsub+0x408>
    8236:	e0e2      	b.n	83fe <__aeabi_dsub+0x5ce>
    8238:	000c      	movs	r4, r1
    823a:	0017      	movs	r7, r2
    823c:	4698      	mov	r8, r3
    823e:	4e85      	ldr	r6, [pc, #532]	; (8454 <__aeabi_dsub+0x624>)
    8240:	e67c      	b.n	7f3c <__aeabi_dsub+0x10c>
    8242:	2500      	movs	r5, #0
    8244:	e780      	b.n	8148 <__aeabi_dsub+0x318>
    8246:	2100      	movs	r1, #0
    8248:	e78e      	b.n	8168 <__aeabi_dsub+0x338>
    824a:	0023      	movs	r3, r4
    824c:	4650      	mov	r0, sl
    824e:	4303      	orrs	r3, r0
    8250:	2e00      	cmp	r6, #0
    8252:	d000      	beq.n	8256 <__aeabi_dsub+0x426>
    8254:	e0a8      	b.n	83a8 <__aeabi_dsub+0x578>
    8256:	2b00      	cmp	r3, #0
    8258:	d100      	bne.n	825c <__aeabi_dsub+0x42c>
    825a:	e0de      	b.n	841a <__aeabi_dsub+0x5ea>
    825c:	000b      	movs	r3, r1
    825e:	4313      	orrs	r3, r2
    8260:	d100      	bne.n	8264 <__aeabi_dsub+0x434>
    8262:	e66b      	b.n	7f3c <__aeabi_dsub+0x10c>
    8264:	4452      	add	r2, sl
    8266:	4552      	cmp	r2, sl
    8268:	4180      	sbcs	r0, r0
    826a:	1864      	adds	r4, r4, r1
    826c:	4240      	negs	r0, r0
    826e:	1824      	adds	r4, r4, r0
    8270:	0017      	movs	r7, r2
    8272:	0223      	lsls	r3, r4, #8
    8274:	d400      	bmi.n	8278 <__aeabi_dsub+0x448>
    8276:	e6fd      	b.n	8074 <__aeabi_dsub+0x244>
    8278:	4b77      	ldr	r3, [pc, #476]	; (8458 <__aeabi_dsub+0x628>)
    827a:	4666      	mov	r6, ip
    827c:	401c      	ands	r4, r3
    827e:	e65d      	b.n	7f3c <__aeabi_dsub+0x10c>
    8280:	0025      	movs	r5, r4
    8282:	4650      	mov	r0, sl
    8284:	4305      	orrs	r5, r0
    8286:	2e00      	cmp	r6, #0
    8288:	d1cf      	bne.n	822a <__aeabi_dsub+0x3fa>
    828a:	2d00      	cmp	r5, #0
    828c:	d14f      	bne.n	832e <__aeabi_dsub+0x4fe>
    828e:	000c      	movs	r4, r1
    8290:	4314      	orrs	r4, r2
    8292:	d100      	bne.n	8296 <__aeabi_dsub+0x466>
    8294:	e0a0      	b.n	83d8 <__aeabi_dsub+0x5a8>
    8296:	000c      	movs	r4, r1
    8298:	0017      	movs	r7, r2
    829a:	4698      	mov	r8, r3
    829c:	e64e      	b.n	7f3c <__aeabi_dsub+0x10c>
    829e:	4666      	mov	r6, ip
    82a0:	2400      	movs	r4, #0
    82a2:	2700      	movs	r7, #0
    82a4:	e685      	b.n	7fb2 <__aeabi_dsub+0x182>
    82a6:	001f      	movs	r7, r3
    82a8:	0008      	movs	r0, r1
    82aa:	3f20      	subs	r7, #32
    82ac:	40f8      	lsrs	r0, r7
    82ae:	0007      	movs	r7, r0
    82b0:	2b20      	cmp	r3, #32
    82b2:	d100      	bne.n	82b6 <__aeabi_dsub+0x486>
    82b4:	e08e      	b.n	83d4 <__aeabi_dsub+0x5a4>
    82b6:	2040      	movs	r0, #64	; 0x40
    82b8:	1ac3      	subs	r3, r0, r3
    82ba:	4099      	lsls	r1, r3
    82bc:	430a      	orrs	r2, r1
    82be:	1e51      	subs	r1, r2, #1
    82c0:	418a      	sbcs	r2, r1
    82c2:	2100      	movs	r1, #0
    82c4:	4317      	orrs	r7, r2
    82c6:	e692      	b.n	7fee <__aeabi_dsub+0x1be>
    82c8:	2e00      	cmp	r6, #0
    82ca:	d114      	bne.n	82f6 <__aeabi_dsub+0x4c6>
    82cc:	0026      	movs	r6, r4
    82ce:	4650      	mov	r0, sl
    82d0:	4306      	orrs	r6, r0
    82d2:	d062      	beq.n	839a <__aeabi_dsub+0x56a>
    82d4:	43db      	mvns	r3, r3
    82d6:	2b00      	cmp	r3, #0
    82d8:	d15c      	bne.n	8394 <__aeabi_dsub+0x564>
    82da:	1887      	adds	r7, r0, r2
    82dc:	4297      	cmp	r7, r2
    82de:	4192      	sbcs	r2, r2
    82e0:	1864      	adds	r4, r4, r1
    82e2:	4252      	negs	r2, r2
    82e4:	18a4      	adds	r4, r4, r2
    82e6:	4666      	mov	r6, ip
    82e8:	e687      	b.n	7ffa <__aeabi_dsub+0x1ca>
    82ea:	4650      	mov	r0, sl
    82ec:	4320      	orrs	r0, r4
    82ee:	1e44      	subs	r4, r0, #1
    82f0:	41a0      	sbcs	r0, r4
    82f2:	2400      	movs	r4, #0
    82f4:	e760      	b.n	81b8 <__aeabi_dsub+0x388>
    82f6:	4e57      	ldr	r6, [pc, #348]	; (8454 <__aeabi_dsub+0x624>)
    82f8:	45b4      	cmp	ip, r6
    82fa:	d04e      	beq.n	839a <__aeabi_dsub+0x56a>
    82fc:	2680      	movs	r6, #128	; 0x80
    82fe:	0436      	lsls	r6, r6, #16
    8300:	425b      	negs	r3, r3
    8302:	4334      	orrs	r4, r6
    8304:	2b38      	cmp	r3, #56	; 0x38
    8306:	dd00      	ble.n	830a <__aeabi_dsub+0x4da>
    8308:	e07f      	b.n	840a <__aeabi_dsub+0x5da>
    830a:	2b1f      	cmp	r3, #31
    830c:	dd00      	ble.n	8310 <__aeabi_dsub+0x4e0>
    830e:	e08b      	b.n	8428 <__aeabi_dsub+0x5f8>
    8310:	2620      	movs	r6, #32
    8312:	0027      	movs	r7, r4
    8314:	4650      	mov	r0, sl
    8316:	1af6      	subs	r6, r6, r3
    8318:	40b7      	lsls	r7, r6
    831a:	40d8      	lsrs	r0, r3
    831c:	4307      	orrs	r7, r0
    831e:	4650      	mov	r0, sl
    8320:	40b0      	lsls	r0, r6
    8322:	1e46      	subs	r6, r0, #1
    8324:	41b0      	sbcs	r0, r6
    8326:	4307      	orrs	r7, r0
    8328:	40dc      	lsrs	r4, r3
    832a:	18bf      	adds	r7, r7, r2
    832c:	e7d6      	b.n	82dc <__aeabi_dsub+0x4ac>
    832e:	000d      	movs	r5, r1
    8330:	4315      	orrs	r5, r2
    8332:	d100      	bne.n	8336 <__aeabi_dsub+0x506>
    8334:	e602      	b.n	7f3c <__aeabi_dsub+0x10c>
    8336:	4650      	mov	r0, sl
    8338:	1a80      	subs	r0, r0, r2
    833a:	4582      	cmp	sl, r0
    833c:	41bf      	sbcs	r7, r7
    833e:	1a65      	subs	r5, r4, r1
    8340:	427f      	negs	r7, r7
    8342:	1bed      	subs	r5, r5, r7
    8344:	4684      	mov	ip, r0
    8346:	0228      	lsls	r0, r5, #8
    8348:	d400      	bmi.n	834c <__aeabi_dsub+0x51c>
    834a:	e68d      	b.n	8068 <__aeabi_dsub+0x238>
    834c:	4650      	mov	r0, sl
    834e:	1a17      	subs	r7, r2, r0
    8350:	42ba      	cmp	r2, r7
    8352:	4192      	sbcs	r2, r2
    8354:	1b0c      	subs	r4, r1, r4
    8356:	4252      	negs	r2, r2
    8358:	1aa4      	subs	r4, r4, r2
    835a:	4698      	mov	r8, r3
    835c:	e5ee      	b.n	7f3c <__aeabi_dsub+0x10c>
    835e:	000d      	movs	r5, r1
    8360:	4315      	orrs	r5, r2
    8362:	d100      	bne.n	8366 <__aeabi_dsub+0x536>
    8364:	e76b      	b.n	823e <__aeabi_dsub+0x40e>
    8366:	4650      	mov	r0, sl
    8368:	0767      	lsls	r7, r4, #29
    836a:	08c0      	lsrs	r0, r0, #3
    836c:	4307      	orrs	r7, r0
    836e:	2080      	movs	r0, #128	; 0x80
    8370:	08e4      	lsrs	r4, r4, #3
    8372:	0300      	lsls	r0, r0, #12
    8374:	4204      	tst	r4, r0
    8376:	d007      	beq.n	8388 <__aeabi_dsub+0x558>
    8378:	08cd      	lsrs	r5, r1, #3
    837a:	4205      	tst	r5, r0
    837c:	d104      	bne.n	8388 <__aeabi_dsub+0x558>
    837e:	002c      	movs	r4, r5
    8380:	4698      	mov	r8, r3
    8382:	08d7      	lsrs	r7, r2, #3
    8384:	0749      	lsls	r1, r1, #29
    8386:	430f      	orrs	r7, r1
    8388:	0f7b      	lsrs	r3, r7, #29
    838a:	00e4      	lsls	r4, r4, #3
    838c:	431c      	orrs	r4, r3
    838e:	00ff      	lsls	r7, r7, #3
    8390:	4e30      	ldr	r6, [pc, #192]	; (8454 <__aeabi_dsub+0x624>)
    8392:	e5d3      	b.n	7f3c <__aeabi_dsub+0x10c>
    8394:	4e2f      	ldr	r6, [pc, #188]	; (8454 <__aeabi_dsub+0x624>)
    8396:	45b4      	cmp	ip, r6
    8398:	d1b4      	bne.n	8304 <__aeabi_dsub+0x4d4>
    839a:	000c      	movs	r4, r1
    839c:	0017      	movs	r7, r2
    839e:	4666      	mov	r6, ip
    83a0:	e5cc      	b.n	7f3c <__aeabi_dsub+0x10c>
    83a2:	2700      	movs	r7, #0
    83a4:	2400      	movs	r4, #0
    83a6:	e5e8      	b.n	7f7a <__aeabi_dsub+0x14a>
    83a8:	2b00      	cmp	r3, #0
    83aa:	d039      	beq.n	8420 <__aeabi_dsub+0x5f0>
    83ac:	000b      	movs	r3, r1
    83ae:	4313      	orrs	r3, r2
    83b0:	d100      	bne.n	83b4 <__aeabi_dsub+0x584>
    83b2:	e744      	b.n	823e <__aeabi_dsub+0x40e>
    83b4:	08c0      	lsrs	r0, r0, #3
    83b6:	0767      	lsls	r7, r4, #29
    83b8:	4307      	orrs	r7, r0
    83ba:	2080      	movs	r0, #128	; 0x80
    83bc:	08e4      	lsrs	r4, r4, #3
    83be:	0300      	lsls	r0, r0, #12
    83c0:	4204      	tst	r4, r0
    83c2:	d0e1      	beq.n	8388 <__aeabi_dsub+0x558>
    83c4:	08cb      	lsrs	r3, r1, #3
    83c6:	4203      	tst	r3, r0
    83c8:	d1de      	bne.n	8388 <__aeabi_dsub+0x558>
    83ca:	08d7      	lsrs	r7, r2, #3
    83cc:	0749      	lsls	r1, r1, #29
    83ce:	430f      	orrs	r7, r1
    83d0:	001c      	movs	r4, r3
    83d2:	e7d9      	b.n	8388 <__aeabi_dsub+0x558>
    83d4:	2100      	movs	r1, #0
    83d6:	e771      	b.n	82bc <__aeabi_dsub+0x48c>
    83d8:	2500      	movs	r5, #0
    83da:	2700      	movs	r7, #0
    83dc:	e5e9      	b.n	7fb2 <__aeabi_dsub+0x182>
    83de:	002e      	movs	r6, r5
    83e0:	0027      	movs	r7, r4
    83e2:	3e20      	subs	r6, #32
    83e4:	40f7      	lsrs	r7, r6
    83e6:	2d20      	cmp	r5, #32
    83e8:	d02f      	beq.n	844a <__aeabi_dsub+0x61a>
    83ea:	2640      	movs	r6, #64	; 0x40
    83ec:	1b75      	subs	r5, r6, r5
    83ee:	40ac      	lsls	r4, r5
    83f0:	4650      	mov	r0, sl
    83f2:	4320      	orrs	r0, r4
    83f4:	1e44      	subs	r4, r0, #1
    83f6:	41a0      	sbcs	r0, r4
    83f8:	2400      	movs	r4, #0
    83fa:	4338      	orrs	r0, r7
    83fc:	e6dc      	b.n	81b8 <__aeabi_dsub+0x388>
    83fe:	2480      	movs	r4, #128	; 0x80
    8400:	2500      	movs	r5, #0
    8402:	0324      	lsls	r4, r4, #12
    8404:	4e13      	ldr	r6, [pc, #76]	; (8454 <__aeabi_dsub+0x624>)
    8406:	2700      	movs	r7, #0
    8408:	e5d3      	b.n	7fb2 <__aeabi_dsub+0x182>
    840a:	4650      	mov	r0, sl
    840c:	4320      	orrs	r0, r4
    840e:	0007      	movs	r7, r0
    8410:	1e78      	subs	r0, r7, #1
    8412:	4187      	sbcs	r7, r0
    8414:	2400      	movs	r4, #0
    8416:	18bf      	adds	r7, r7, r2
    8418:	e760      	b.n	82dc <__aeabi_dsub+0x4ac>
    841a:	000c      	movs	r4, r1
    841c:	0017      	movs	r7, r2
    841e:	e58d      	b.n	7f3c <__aeabi_dsub+0x10c>
    8420:	000c      	movs	r4, r1
    8422:	0017      	movs	r7, r2
    8424:	4e0b      	ldr	r6, [pc, #44]	; (8454 <__aeabi_dsub+0x624>)
    8426:	e589      	b.n	7f3c <__aeabi_dsub+0x10c>
    8428:	001e      	movs	r6, r3
    842a:	0027      	movs	r7, r4
    842c:	3e20      	subs	r6, #32
    842e:	40f7      	lsrs	r7, r6
    8430:	2b20      	cmp	r3, #32
    8432:	d00c      	beq.n	844e <__aeabi_dsub+0x61e>
    8434:	2640      	movs	r6, #64	; 0x40
    8436:	1af3      	subs	r3, r6, r3
    8438:	409c      	lsls	r4, r3
    843a:	4650      	mov	r0, sl
    843c:	4320      	orrs	r0, r4
    843e:	1e44      	subs	r4, r0, #1
    8440:	41a0      	sbcs	r0, r4
    8442:	4307      	orrs	r7, r0
    8444:	2400      	movs	r4, #0
    8446:	18bf      	adds	r7, r7, r2
    8448:	e748      	b.n	82dc <__aeabi_dsub+0x4ac>
    844a:	2400      	movs	r4, #0
    844c:	e7d0      	b.n	83f0 <__aeabi_dsub+0x5c0>
    844e:	2400      	movs	r4, #0
    8450:	e7f3      	b.n	843a <__aeabi_dsub+0x60a>
    8452:	46c0      	nop			; (mov r8, r8)
    8454:	000007ff 	.word	0x000007ff
    8458:	ff7fffff 	.word	0xff7fffff

0000845c <__aeabi_dcmpun>:
    845c:	b570      	push	{r4, r5, r6, lr}
    845e:	4e0e      	ldr	r6, [pc, #56]	; (8498 <__aeabi_dcmpun+0x3c>)
    8460:	030d      	lsls	r5, r1, #12
    8462:	031c      	lsls	r4, r3, #12
    8464:	0049      	lsls	r1, r1, #1
    8466:	005b      	lsls	r3, r3, #1
    8468:	0b2d      	lsrs	r5, r5, #12
    846a:	0d49      	lsrs	r1, r1, #21
    846c:	0b24      	lsrs	r4, r4, #12
    846e:	0d5b      	lsrs	r3, r3, #21
    8470:	42b1      	cmp	r1, r6
    8472:	d004      	beq.n	847e <__aeabi_dcmpun+0x22>
    8474:	4908      	ldr	r1, [pc, #32]	; (8498 <__aeabi_dcmpun+0x3c>)
    8476:	2000      	movs	r0, #0
    8478:	428b      	cmp	r3, r1
    847a:	d008      	beq.n	848e <__aeabi_dcmpun+0x32>
    847c:	bd70      	pop	{r4, r5, r6, pc}
    847e:	4305      	orrs	r5, r0
    8480:	2001      	movs	r0, #1
    8482:	2d00      	cmp	r5, #0
    8484:	d1fa      	bne.n	847c <__aeabi_dcmpun+0x20>
    8486:	4904      	ldr	r1, [pc, #16]	; (8498 <__aeabi_dcmpun+0x3c>)
    8488:	2000      	movs	r0, #0
    848a:	428b      	cmp	r3, r1
    848c:	d1f6      	bne.n	847c <__aeabi_dcmpun+0x20>
    848e:	4314      	orrs	r4, r2
    8490:	0020      	movs	r0, r4
    8492:	1e44      	subs	r4, r0, #1
    8494:	41a0      	sbcs	r0, r4
    8496:	e7f1      	b.n	847c <__aeabi_dcmpun+0x20>
    8498:	000007ff 	.word	0x000007ff

0000849c <__aeabi_d2iz>:
    849c:	b530      	push	{r4, r5, lr}
    849e:	4d13      	ldr	r5, [pc, #76]	; (84ec <__aeabi_d2iz+0x50>)
    84a0:	030a      	lsls	r2, r1, #12
    84a2:	004b      	lsls	r3, r1, #1
    84a4:	0b12      	lsrs	r2, r2, #12
    84a6:	0d5b      	lsrs	r3, r3, #21
    84a8:	0fc9      	lsrs	r1, r1, #31
    84aa:	2400      	movs	r4, #0
    84ac:	42ab      	cmp	r3, r5
    84ae:	dd10      	ble.n	84d2 <__aeabi_d2iz+0x36>
    84b0:	4c0f      	ldr	r4, [pc, #60]	; (84f0 <__aeabi_d2iz+0x54>)
    84b2:	42a3      	cmp	r3, r4
    84b4:	dc0f      	bgt.n	84d6 <__aeabi_d2iz+0x3a>
    84b6:	2480      	movs	r4, #128	; 0x80
    84b8:	4d0e      	ldr	r5, [pc, #56]	; (84f4 <__aeabi_d2iz+0x58>)
    84ba:	0364      	lsls	r4, r4, #13
    84bc:	4322      	orrs	r2, r4
    84be:	1aed      	subs	r5, r5, r3
    84c0:	2d1f      	cmp	r5, #31
    84c2:	dd0b      	ble.n	84dc <__aeabi_d2iz+0x40>
    84c4:	480c      	ldr	r0, [pc, #48]	; (84f8 <__aeabi_d2iz+0x5c>)
    84c6:	1ac3      	subs	r3, r0, r3
    84c8:	40da      	lsrs	r2, r3
    84ca:	4254      	negs	r4, r2
    84cc:	2900      	cmp	r1, #0
    84ce:	d100      	bne.n	84d2 <__aeabi_d2iz+0x36>
    84d0:	0014      	movs	r4, r2
    84d2:	0020      	movs	r0, r4
    84d4:	bd30      	pop	{r4, r5, pc}
    84d6:	4b09      	ldr	r3, [pc, #36]	; (84fc <__aeabi_d2iz+0x60>)
    84d8:	18cc      	adds	r4, r1, r3
    84da:	e7fa      	b.n	84d2 <__aeabi_d2iz+0x36>
    84dc:	4c08      	ldr	r4, [pc, #32]	; (8500 <__aeabi_d2iz+0x64>)
    84de:	40e8      	lsrs	r0, r5
    84e0:	46a4      	mov	ip, r4
    84e2:	4463      	add	r3, ip
    84e4:	409a      	lsls	r2, r3
    84e6:	4302      	orrs	r2, r0
    84e8:	e7ef      	b.n	84ca <__aeabi_d2iz+0x2e>
    84ea:	46c0      	nop			; (mov r8, r8)
    84ec:	000003fe 	.word	0x000003fe
    84f0:	0000041d 	.word	0x0000041d
    84f4:	00000433 	.word	0x00000433
    84f8:	00000413 	.word	0x00000413
    84fc:	7fffffff 	.word	0x7fffffff
    8500:	fffffbed 	.word	0xfffffbed

00008504 <__aeabi_i2d>:
    8504:	b570      	push	{r4, r5, r6, lr}
    8506:	2800      	cmp	r0, #0
    8508:	d030      	beq.n	856c <__aeabi_i2d+0x68>
    850a:	17c3      	asrs	r3, r0, #31
    850c:	18c4      	adds	r4, r0, r3
    850e:	405c      	eors	r4, r3
    8510:	0fc5      	lsrs	r5, r0, #31
    8512:	0020      	movs	r0, r4
    8514:	f000 f986 	bl	8824 <__clzsi2>
    8518:	4b17      	ldr	r3, [pc, #92]	; (8578 <__aeabi_i2d+0x74>)
    851a:	4a18      	ldr	r2, [pc, #96]	; (857c <__aeabi_i2d+0x78>)
    851c:	1a1b      	subs	r3, r3, r0
    851e:	1ad2      	subs	r2, r2, r3
    8520:	2a1f      	cmp	r2, #31
    8522:	dd18      	ble.n	8556 <__aeabi_i2d+0x52>
    8524:	4a16      	ldr	r2, [pc, #88]	; (8580 <__aeabi_i2d+0x7c>)
    8526:	1ad2      	subs	r2, r2, r3
    8528:	4094      	lsls	r4, r2
    852a:	2200      	movs	r2, #0
    852c:	0324      	lsls	r4, r4, #12
    852e:	055b      	lsls	r3, r3, #21
    8530:	0b24      	lsrs	r4, r4, #12
    8532:	0d5b      	lsrs	r3, r3, #21
    8534:	2100      	movs	r1, #0
    8536:	0010      	movs	r0, r2
    8538:	0324      	lsls	r4, r4, #12
    853a:	0d0a      	lsrs	r2, r1, #20
    853c:	0b24      	lsrs	r4, r4, #12
    853e:	0512      	lsls	r2, r2, #20
    8540:	4322      	orrs	r2, r4
    8542:	4c10      	ldr	r4, [pc, #64]	; (8584 <__aeabi_i2d+0x80>)
    8544:	051b      	lsls	r3, r3, #20
    8546:	4022      	ands	r2, r4
    8548:	4313      	orrs	r3, r2
    854a:	005b      	lsls	r3, r3, #1
    854c:	07ed      	lsls	r5, r5, #31
    854e:	085b      	lsrs	r3, r3, #1
    8550:	432b      	orrs	r3, r5
    8552:	0019      	movs	r1, r3
    8554:	bd70      	pop	{r4, r5, r6, pc}
    8556:	0021      	movs	r1, r4
    8558:	4091      	lsls	r1, r2
    855a:	000a      	movs	r2, r1
    855c:	210b      	movs	r1, #11
    855e:	1a08      	subs	r0, r1, r0
    8560:	40c4      	lsrs	r4, r0
    8562:	055b      	lsls	r3, r3, #21
    8564:	0324      	lsls	r4, r4, #12
    8566:	0b24      	lsrs	r4, r4, #12
    8568:	0d5b      	lsrs	r3, r3, #21
    856a:	e7e3      	b.n	8534 <__aeabi_i2d+0x30>
    856c:	2500      	movs	r5, #0
    856e:	2300      	movs	r3, #0
    8570:	2400      	movs	r4, #0
    8572:	2200      	movs	r2, #0
    8574:	e7de      	b.n	8534 <__aeabi_i2d+0x30>
    8576:	46c0      	nop			; (mov r8, r8)
    8578:	0000041e 	.word	0x0000041e
    857c:	00000433 	.word	0x00000433
    8580:	00000413 	.word	0x00000413
    8584:	800fffff 	.word	0x800fffff

00008588 <__aeabi_ui2d>:
    8588:	b510      	push	{r4, lr}
    858a:	1e04      	subs	r4, r0, #0
    858c:	d028      	beq.n	85e0 <__aeabi_ui2d+0x58>
    858e:	f000 f949 	bl	8824 <__clzsi2>
    8592:	4b15      	ldr	r3, [pc, #84]	; (85e8 <__aeabi_ui2d+0x60>)
    8594:	4a15      	ldr	r2, [pc, #84]	; (85ec <__aeabi_ui2d+0x64>)
    8596:	1a1b      	subs	r3, r3, r0
    8598:	1ad2      	subs	r2, r2, r3
    859a:	2a1f      	cmp	r2, #31
    859c:	dd15      	ble.n	85ca <__aeabi_ui2d+0x42>
    859e:	4a14      	ldr	r2, [pc, #80]	; (85f0 <__aeabi_ui2d+0x68>)
    85a0:	1ad2      	subs	r2, r2, r3
    85a2:	4094      	lsls	r4, r2
    85a4:	2200      	movs	r2, #0
    85a6:	0324      	lsls	r4, r4, #12
    85a8:	055b      	lsls	r3, r3, #21
    85aa:	0b24      	lsrs	r4, r4, #12
    85ac:	0d5b      	lsrs	r3, r3, #21
    85ae:	2100      	movs	r1, #0
    85b0:	0010      	movs	r0, r2
    85b2:	0324      	lsls	r4, r4, #12
    85b4:	0d0a      	lsrs	r2, r1, #20
    85b6:	0b24      	lsrs	r4, r4, #12
    85b8:	0512      	lsls	r2, r2, #20
    85ba:	4322      	orrs	r2, r4
    85bc:	4c0d      	ldr	r4, [pc, #52]	; (85f4 <__aeabi_ui2d+0x6c>)
    85be:	051b      	lsls	r3, r3, #20
    85c0:	4022      	ands	r2, r4
    85c2:	4313      	orrs	r3, r2
    85c4:	005b      	lsls	r3, r3, #1
    85c6:	0859      	lsrs	r1, r3, #1
    85c8:	bd10      	pop	{r4, pc}
    85ca:	0021      	movs	r1, r4
    85cc:	4091      	lsls	r1, r2
    85ce:	000a      	movs	r2, r1
    85d0:	210b      	movs	r1, #11
    85d2:	1a08      	subs	r0, r1, r0
    85d4:	40c4      	lsrs	r4, r0
    85d6:	055b      	lsls	r3, r3, #21
    85d8:	0324      	lsls	r4, r4, #12
    85da:	0b24      	lsrs	r4, r4, #12
    85dc:	0d5b      	lsrs	r3, r3, #21
    85de:	e7e6      	b.n	85ae <__aeabi_ui2d+0x26>
    85e0:	2300      	movs	r3, #0
    85e2:	2400      	movs	r4, #0
    85e4:	2200      	movs	r2, #0
    85e6:	e7e2      	b.n	85ae <__aeabi_ui2d+0x26>
    85e8:	0000041e 	.word	0x0000041e
    85ec:	00000433 	.word	0x00000433
    85f0:	00000413 	.word	0x00000413
    85f4:	800fffff 	.word	0x800fffff

000085f8 <__aeabi_f2d>:
    85f8:	0041      	lsls	r1, r0, #1
    85fa:	0e09      	lsrs	r1, r1, #24
    85fc:	1c4b      	adds	r3, r1, #1
    85fe:	b570      	push	{r4, r5, r6, lr}
    8600:	b2db      	uxtb	r3, r3
    8602:	0246      	lsls	r6, r0, #9
    8604:	0a75      	lsrs	r5, r6, #9
    8606:	0fc4      	lsrs	r4, r0, #31
    8608:	2b01      	cmp	r3, #1
    860a:	dd14      	ble.n	8636 <__aeabi_f2d+0x3e>
    860c:	23e0      	movs	r3, #224	; 0xe0
    860e:	009b      	lsls	r3, r3, #2
    8610:	076d      	lsls	r5, r5, #29
    8612:	0b36      	lsrs	r6, r6, #12
    8614:	18cb      	adds	r3, r1, r3
    8616:	2100      	movs	r1, #0
    8618:	0d0a      	lsrs	r2, r1, #20
    861a:	0028      	movs	r0, r5
    861c:	0512      	lsls	r2, r2, #20
    861e:	4d1c      	ldr	r5, [pc, #112]	; (8690 <__aeabi_f2d+0x98>)
    8620:	4332      	orrs	r2, r6
    8622:	055b      	lsls	r3, r3, #21
    8624:	402a      	ands	r2, r5
    8626:	085b      	lsrs	r3, r3, #1
    8628:	4313      	orrs	r3, r2
    862a:	005b      	lsls	r3, r3, #1
    862c:	07e4      	lsls	r4, r4, #31
    862e:	085b      	lsrs	r3, r3, #1
    8630:	4323      	orrs	r3, r4
    8632:	0019      	movs	r1, r3
    8634:	bd70      	pop	{r4, r5, r6, pc}
    8636:	2900      	cmp	r1, #0
    8638:	d114      	bne.n	8664 <__aeabi_f2d+0x6c>
    863a:	2d00      	cmp	r5, #0
    863c:	d01e      	beq.n	867c <__aeabi_f2d+0x84>
    863e:	0028      	movs	r0, r5
    8640:	f000 f8f0 	bl	8824 <__clzsi2>
    8644:	280a      	cmp	r0, #10
    8646:	dc1c      	bgt.n	8682 <__aeabi_f2d+0x8a>
    8648:	230b      	movs	r3, #11
    864a:	002a      	movs	r2, r5
    864c:	1a1b      	subs	r3, r3, r0
    864e:	40da      	lsrs	r2, r3
    8650:	0003      	movs	r3, r0
    8652:	3315      	adds	r3, #21
    8654:	409d      	lsls	r5, r3
    8656:	4b0f      	ldr	r3, [pc, #60]	; (8694 <__aeabi_f2d+0x9c>)
    8658:	0312      	lsls	r2, r2, #12
    865a:	1a1b      	subs	r3, r3, r0
    865c:	055b      	lsls	r3, r3, #21
    865e:	0b16      	lsrs	r6, r2, #12
    8660:	0d5b      	lsrs	r3, r3, #21
    8662:	e7d8      	b.n	8616 <__aeabi_f2d+0x1e>
    8664:	2d00      	cmp	r5, #0
    8666:	d006      	beq.n	8676 <__aeabi_f2d+0x7e>
    8668:	0b32      	lsrs	r2, r6, #12
    866a:	2680      	movs	r6, #128	; 0x80
    866c:	0336      	lsls	r6, r6, #12
    866e:	076d      	lsls	r5, r5, #29
    8670:	4316      	orrs	r6, r2
    8672:	4b09      	ldr	r3, [pc, #36]	; (8698 <__aeabi_f2d+0xa0>)
    8674:	e7cf      	b.n	8616 <__aeabi_f2d+0x1e>
    8676:	4b08      	ldr	r3, [pc, #32]	; (8698 <__aeabi_f2d+0xa0>)
    8678:	2600      	movs	r6, #0
    867a:	e7cc      	b.n	8616 <__aeabi_f2d+0x1e>
    867c:	2300      	movs	r3, #0
    867e:	2600      	movs	r6, #0
    8680:	e7c9      	b.n	8616 <__aeabi_f2d+0x1e>
    8682:	0003      	movs	r3, r0
    8684:	002a      	movs	r2, r5
    8686:	3b0b      	subs	r3, #11
    8688:	409a      	lsls	r2, r3
    868a:	2500      	movs	r5, #0
    868c:	e7e3      	b.n	8656 <__aeabi_f2d+0x5e>
    868e:	46c0      	nop			; (mov r8, r8)
    8690:	800fffff 	.word	0x800fffff
    8694:	00000389 	.word	0x00000389
    8698:	000007ff 	.word	0x000007ff

0000869c <__aeabi_d2f>:
    869c:	b5f0      	push	{r4, r5, r6, r7, lr}
    869e:	004c      	lsls	r4, r1, #1
    86a0:	0d64      	lsrs	r4, r4, #21
    86a2:	030b      	lsls	r3, r1, #12
    86a4:	1c62      	adds	r2, r4, #1
    86a6:	0f45      	lsrs	r5, r0, #29
    86a8:	0a5b      	lsrs	r3, r3, #9
    86aa:	0552      	lsls	r2, r2, #21
    86ac:	432b      	orrs	r3, r5
    86ae:	0fc9      	lsrs	r1, r1, #31
    86b0:	00c5      	lsls	r5, r0, #3
    86b2:	0d52      	lsrs	r2, r2, #21
    86b4:	2a01      	cmp	r2, #1
    86b6:	dd28      	ble.n	870a <__aeabi_d2f+0x6e>
    86b8:	4a3a      	ldr	r2, [pc, #232]	; (87a4 <__aeabi_d2f+0x108>)
    86ba:	18a6      	adds	r6, r4, r2
    86bc:	2efe      	cmp	r6, #254	; 0xfe
    86be:	dc1b      	bgt.n	86f8 <__aeabi_d2f+0x5c>
    86c0:	2e00      	cmp	r6, #0
    86c2:	dd3e      	ble.n	8742 <__aeabi_d2f+0xa6>
    86c4:	0180      	lsls	r0, r0, #6
    86c6:	0002      	movs	r2, r0
    86c8:	1e50      	subs	r0, r2, #1
    86ca:	4182      	sbcs	r2, r0
    86cc:	0f6d      	lsrs	r5, r5, #29
    86ce:	432a      	orrs	r2, r5
    86d0:	00db      	lsls	r3, r3, #3
    86d2:	4313      	orrs	r3, r2
    86d4:	075a      	lsls	r2, r3, #29
    86d6:	d004      	beq.n	86e2 <__aeabi_d2f+0x46>
    86d8:	220f      	movs	r2, #15
    86da:	401a      	ands	r2, r3
    86dc:	2a04      	cmp	r2, #4
    86de:	d000      	beq.n	86e2 <__aeabi_d2f+0x46>
    86e0:	3304      	adds	r3, #4
    86e2:	2280      	movs	r2, #128	; 0x80
    86e4:	04d2      	lsls	r2, r2, #19
    86e6:	401a      	ands	r2, r3
    86e8:	d05a      	beq.n	87a0 <__aeabi_d2f+0x104>
    86ea:	3601      	adds	r6, #1
    86ec:	2eff      	cmp	r6, #255	; 0xff
    86ee:	d003      	beq.n	86f8 <__aeabi_d2f+0x5c>
    86f0:	019b      	lsls	r3, r3, #6
    86f2:	0a5b      	lsrs	r3, r3, #9
    86f4:	b2f4      	uxtb	r4, r6
    86f6:	e001      	b.n	86fc <__aeabi_d2f+0x60>
    86f8:	24ff      	movs	r4, #255	; 0xff
    86fa:	2300      	movs	r3, #0
    86fc:	0258      	lsls	r0, r3, #9
    86fe:	05e4      	lsls	r4, r4, #23
    8700:	0a40      	lsrs	r0, r0, #9
    8702:	07c9      	lsls	r1, r1, #31
    8704:	4320      	orrs	r0, r4
    8706:	4308      	orrs	r0, r1
    8708:	bdf0      	pop	{r4, r5, r6, r7, pc}
    870a:	2c00      	cmp	r4, #0
    870c:	d007      	beq.n	871e <__aeabi_d2f+0x82>
    870e:	431d      	orrs	r5, r3
    8710:	d0f2      	beq.n	86f8 <__aeabi_d2f+0x5c>
    8712:	2080      	movs	r0, #128	; 0x80
    8714:	00db      	lsls	r3, r3, #3
    8716:	0480      	lsls	r0, r0, #18
    8718:	4303      	orrs	r3, r0
    871a:	26ff      	movs	r6, #255	; 0xff
    871c:	e7da      	b.n	86d4 <__aeabi_d2f+0x38>
    871e:	432b      	orrs	r3, r5
    8720:	d003      	beq.n	872a <__aeabi_d2f+0x8e>
    8722:	2305      	movs	r3, #5
    8724:	08db      	lsrs	r3, r3, #3
    8726:	2cff      	cmp	r4, #255	; 0xff
    8728:	d003      	beq.n	8732 <__aeabi_d2f+0x96>
    872a:	025b      	lsls	r3, r3, #9
    872c:	0a5b      	lsrs	r3, r3, #9
    872e:	b2e4      	uxtb	r4, r4
    8730:	e7e4      	b.n	86fc <__aeabi_d2f+0x60>
    8732:	2b00      	cmp	r3, #0
    8734:	d032      	beq.n	879c <__aeabi_d2f+0x100>
    8736:	2080      	movs	r0, #128	; 0x80
    8738:	03c0      	lsls	r0, r0, #15
    873a:	4303      	orrs	r3, r0
    873c:	025b      	lsls	r3, r3, #9
    873e:	0a5b      	lsrs	r3, r3, #9
    8740:	e7dc      	b.n	86fc <__aeabi_d2f+0x60>
    8742:	0032      	movs	r2, r6
    8744:	3217      	adds	r2, #23
    8746:	db14      	blt.n	8772 <__aeabi_d2f+0xd6>
    8748:	2280      	movs	r2, #128	; 0x80
    874a:	271e      	movs	r7, #30
    874c:	0412      	lsls	r2, r2, #16
    874e:	4313      	orrs	r3, r2
    8750:	1bbf      	subs	r7, r7, r6
    8752:	2f1f      	cmp	r7, #31
    8754:	dc0f      	bgt.n	8776 <__aeabi_d2f+0xda>
    8756:	4a14      	ldr	r2, [pc, #80]	; (87a8 <__aeabi_d2f+0x10c>)
    8758:	4694      	mov	ip, r2
    875a:	4464      	add	r4, ip
    875c:	002a      	movs	r2, r5
    875e:	40a5      	lsls	r5, r4
    8760:	002e      	movs	r6, r5
    8762:	40a3      	lsls	r3, r4
    8764:	1e75      	subs	r5, r6, #1
    8766:	41ae      	sbcs	r6, r5
    8768:	40fa      	lsrs	r2, r7
    876a:	4333      	orrs	r3, r6
    876c:	4313      	orrs	r3, r2
    876e:	2600      	movs	r6, #0
    8770:	e7b0      	b.n	86d4 <__aeabi_d2f+0x38>
    8772:	2400      	movs	r4, #0
    8774:	e7d5      	b.n	8722 <__aeabi_d2f+0x86>
    8776:	2202      	movs	r2, #2
    8778:	4252      	negs	r2, r2
    877a:	1b96      	subs	r6, r2, r6
    877c:	001a      	movs	r2, r3
    877e:	40f2      	lsrs	r2, r6
    8780:	2f20      	cmp	r7, #32
    8782:	d009      	beq.n	8798 <__aeabi_d2f+0xfc>
    8784:	4809      	ldr	r0, [pc, #36]	; (87ac <__aeabi_d2f+0x110>)
    8786:	4684      	mov	ip, r0
    8788:	4464      	add	r4, ip
    878a:	40a3      	lsls	r3, r4
    878c:	432b      	orrs	r3, r5
    878e:	1e5d      	subs	r5, r3, #1
    8790:	41ab      	sbcs	r3, r5
    8792:	2600      	movs	r6, #0
    8794:	4313      	orrs	r3, r2
    8796:	e79d      	b.n	86d4 <__aeabi_d2f+0x38>
    8798:	2300      	movs	r3, #0
    879a:	e7f7      	b.n	878c <__aeabi_d2f+0xf0>
    879c:	2300      	movs	r3, #0
    879e:	e7ad      	b.n	86fc <__aeabi_d2f+0x60>
    87a0:	0034      	movs	r4, r6
    87a2:	e7bf      	b.n	8724 <__aeabi_d2f+0x88>
    87a4:	fffffc80 	.word	0xfffffc80
    87a8:	fffffc82 	.word	0xfffffc82
    87ac:	fffffca2 	.word	0xfffffca2

000087b0 <__aeabi_cfrcmple>:
    87b0:	4684      	mov	ip, r0
    87b2:	1c08      	adds	r0, r1, #0
    87b4:	4661      	mov	r1, ip
    87b6:	e7ff      	b.n	87b8 <__aeabi_cfcmpeq>

000087b8 <__aeabi_cfcmpeq>:
    87b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    87ba:	f000 f993 	bl	8ae4 <__lesf2>
    87be:	2800      	cmp	r0, #0
    87c0:	d401      	bmi.n	87c6 <__aeabi_cfcmpeq+0xe>
    87c2:	2100      	movs	r1, #0
    87c4:	42c8      	cmn	r0, r1
    87c6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000087c8 <__aeabi_fcmpeq>:
    87c8:	b510      	push	{r4, lr}
    87ca:	f000 f925 	bl	8a18 <__eqsf2>
    87ce:	4240      	negs	r0, r0
    87d0:	3001      	adds	r0, #1
    87d2:	bd10      	pop	{r4, pc}

000087d4 <__aeabi_fcmplt>:
    87d4:	b510      	push	{r4, lr}
    87d6:	f000 f985 	bl	8ae4 <__lesf2>
    87da:	2800      	cmp	r0, #0
    87dc:	db01      	blt.n	87e2 <__aeabi_fcmplt+0xe>
    87de:	2000      	movs	r0, #0
    87e0:	bd10      	pop	{r4, pc}
    87e2:	2001      	movs	r0, #1
    87e4:	bd10      	pop	{r4, pc}
    87e6:	46c0      	nop			; (mov r8, r8)

000087e8 <__aeabi_fcmple>:
    87e8:	b510      	push	{r4, lr}
    87ea:	f000 f97b 	bl	8ae4 <__lesf2>
    87ee:	2800      	cmp	r0, #0
    87f0:	dd01      	ble.n	87f6 <__aeabi_fcmple+0xe>
    87f2:	2000      	movs	r0, #0
    87f4:	bd10      	pop	{r4, pc}
    87f6:	2001      	movs	r0, #1
    87f8:	bd10      	pop	{r4, pc}
    87fa:	46c0      	nop			; (mov r8, r8)

000087fc <__aeabi_fcmpgt>:
    87fc:	b510      	push	{r4, lr}
    87fe:	f000 f931 	bl	8a64 <__gesf2>
    8802:	2800      	cmp	r0, #0
    8804:	dc01      	bgt.n	880a <__aeabi_fcmpgt+0xe>
    8806:	2000      	movs	r0, #0
    8808:	bd10      	pop	{r4, pc}
    880a:	2001      	movs	r0, #1
    880c:	bd10      	pop	{r4, pc}
    880e:	46c0      	nop			; (mov r8, r8)

00008810 <__aeabi_fcmpge>:
    8810:	b510      	push	{r4, lr}
    8812:	f000 f927 	bl	8a64 <__gesf2>
    8816:	2800      	cmp	r0, #0
    8818:	da01      	bge.n	881e <__aeabi_fcmpge+0xe>
    881a:	2000      	movs	r0, #0
    881c:	bd10      	pop	{r4, pc}
    881e:	2001      	movs	r0, #1
    8820:	bd10      	pop	{r4, pc}
    8822:	46c0      	nop			; (mov r8, r8)

00008824 <__clzsi2>:
    8824:	211c      	movs	r1, #28
    8826:	2301      	movs	r3, #1
    8828:	041b      	lsls	r3, r3, #16
    882a:	4298      	cmp	r0, r3
    882c:	d301      	bcc.n	8832 <__clzsi2+0xe>
    882e:	0c00      	lsrs	r0, r0, #16
    8830:	3910      	subs	r1, #16
    8832:	0a1b      	lsrs	r3, r3, #8
    8834:	4298      	cmp	r0, r3
    8836:	d301      	bcc.n	883c <__clzsi2+0x18>
    8838:	0a00      	lsrs	r0, r0, #8
    883a:	3908      	subs	r1, #8
    883c:	091b      	lsrs	r3, r3, #4
    883e:	4298      	cmp	r0, r3
    8840:	d301      	bcc.n	8846 <__clzsi2+0x22>
    8842:	0900      	lsrs	r0, r0, #4
    8844:	3904      	subs	r1, #4
    8846:	a202      	add	r2, pc, #8	; (adr r2, 8850 <__clzsi2+0x2c>)
    8848:	5c10      	ldrb	r0, [r2, r0]
    884a:	1840      	adds	r0, r0, r1
    884c:	4770      	bx	lr
    884e:	46c0      	nop			; (mov r8, r8)
    8850:	02020304 	.word	0x02020304
    8854:	01010101 	.word	0x01010101
	...

00008860 <__divdi3>:
    8860:	b5f0      	push	{r4, r5, r6, r7, lr}
    8862:	464e      	mov	r6, r9
    8864:	4657      	mov	r7, sl
    8866:	46de      	mov	lr, fp
    8868:	4645      	mov	r5, r8
    886a:	b5e0      	push	{r5, r6, r7, lr}
    886c:	0006      	movs	r6, r0
    886e:	2000      	movs	r0, #0
    8870:	000f      	movs	r7, r1
    8872:	b083      	sub	sp, #12
    8874:	0019      	movs	r1, r3
    8876:	4681      	mov	r9, r0
    8878:	2f00      	cmp	r7, #0
    887a:	da00      	bge.n	887e <__divdi3+0x1e>
    887c:	e08c      	b.n	8998 <__divdi3+0x138>
    887e:	2900      	cmp	r1, #0
    8880:	da00      	bge.n	8884 <__divdi3+0x24>
    8882:	e080      	b.n	8986 <__divdi3+0x126>
    8884:	0034      	movs	r4, r6
    8886:	003d      	movs	r5, r7
    8888:	4692      	mov	sl, r2
    888a:	4698      	mov	r8, r3
    888c:	42bb      	cmp	r3, r7
    888e:	d869      	bhi.n	8964 <__divdi3+0x104>
    8890:	d066      	beq.n	8960 <__divdi3+0x100>
    8892:	4641      	mov	r1, r8
    8894:	4650      	mov	r0, sl
    8896:	f000 f967 	bl	8b68 <__clzdi2>
    889a:	4683      	mov	fp, r0
    889c:	0039      	movs	r1, r7
    889e:	0030      	movs	r0, r6
    88a0:	f000 f962 	bl	8b68 <__clzdi2>
    88a4:	465b      	mov	r3, fp
    88a6:	1a1b      	subs	r3, r3, r0
    88a8:	469c      	mov	ip, r3
    88aa:	3b20      	subs	r3, #32
    88ac:	469b      	mov	fp, r3
    88ae:	d500      	bpl.n	88b2 <__divdi3+0x52>
    88b0:	e087      	b.n	89c2 <__divdi3+0x162>
    88b2:	4651      	mov	r1, sl
    88b4:	4658      	mov	r0, fp
    88b6:	4081      	lsls	r1, r0
    88b8:	000b      	movs	r3, r1
    88ba:	4651      	mov	r1, sl
    88bc:	4660      	mov	r0, ip
    88be:	4081      	lsls	r1, r0
    88c0:	000a      	movs	r2, r1
    88c2:	42bb      	cmp	r3, r7
    88c4:	d900      	bls.n	88c8 <__divdi3+0x68>
    88c6:	e072      	b.n	89ae <__divdi3+0x14e>
    88c8:	d06e      	beq.n	89a8 <__divdi3+0x148>
    88ca:	0034      	movs	r4, r6
    88cc:	003d      	movs	r5, r7
    88ce:	4659      	mov	r1, fp
    88d0:	1aa4      	subs	r4, r4, r2
    88d2:	419d      	sbcs	r5, r3
    88d4:	2900      	cmp	r1, #0
    88d6:	da00      	bge.n	88da <__divdi3+0x7a>
    88d8:	e08a      	b.n	89f0 <__divdi3+0x190>
    88da:	2100      	movs	r1, #0
    88dc:	2000      	movs	r0, #0
    88de:	2601      	movs	r6, #1
    88e0:	9000      	str	r0, [sp, #0]
    88e2:	9101      	str	r1, [sp, #4]
    88e4:	4659      	mov	r1, fp
    88e6:	408e      	lsls	r6, r1
    88e8:	9601      	str	r6, [sp, #4]
    88ea:	4661      	mov	r1, ip
    88ec:	2601      	movs	r6, #1
    88ee:	408e      	lsls	r6, r1
    88f0:	4661      	mov	r1, ip
    88f2:	9600      	str	r6, [sp, #0]
    88f4:	2900      	cmp	r1, #0
    88f6:	d061      	beq.n	89bc <__divdi3+0x15c>
    88f8:	07d9      	lsls	r1, r3, #31
    88fa:	0856      	lsrs	r6, r2, #1
    88fc:	430e      	orrs	r6, r1
    88fe:	085f      	lsrs	r7, r3, #1
    8900:	4661      	mov	r1, ip
    8902:	2201      	movs	r2, #1
    8904:	2300      	movs	r3, #0
    8906:	e00c      	b.n	8922 <__divdi3+0xc2>
    8908:	42af      	cmp	r7, r5
    890a:	d101      	bne.n	8910 <__divdi3+0xb0>
    890c:	42a6      	cmp	r6, r4
    890e:	d80a      	bhi.n	8926 <__divdi3+0xc6>
    8910:	1ba4      	subs	r4, r4, r6
    8912:	41bd      	sbcs	r5, r7
    8914:	1924      	adds	r4, r4, r4
    8916:	416d      	adcs	r5, r5
    8918:	3901      	subs	r1, #1
    891a:	18a4      	adds	r4, r4, r2
    891c:	415d      	adcs	r5, r3
    891e:	2900      	cmp	r1, #0
    8920:	d006      	beq.n	8930 <__divdi3+0xd0>
    8922:	42af      	cmp	r7, r5
    8924:	d9f0      	bls.n	8908 <__divdi3+0xa8>
    8926:	3901      	subs	r1, #1
    8928:	1924      	adds	r4, r4, r4
    892a:	416d      	adcs	r5, r5
    892c:	2900      	cmp	r1, #0
    892e:	d1f8      	bne.n	8922 <__divdi3+0xc2>
    8930:	465b      	mov	r3, fp
    8932:	9800      	ldr	r0, [sp, #0]
    8934:	9901      	ldr	r1, [sp, #4]
    8936:	1900      	adds	r0, r0, r4
    8938:	4169      	adcs	r1, r5
    893a:	2b00      	cmp	r3, #0
    893c:	db4d      	blt.n	89da <__divdi3+0x17a>
    893e:	002e      	movs	r6, r5
    8940:	40de      	lsrs	r6, r3
    8942:	4663      	mov	r3, ip
    8944:	002c      	movs	r4, r5
    8946:	40dc      	lsrs	r4, r3
    8948:	465b      	mov	r3, fp
    894a:	2b00      	cmp	r3, #0
    894c:	db5b      	blt.n	8a06 <__divdi3+0x1a6>
    894e:	0034      	movs	r4, r6
    8950:	409c      	lsls	r4, r3
    8952:	0023      	movs	r3, r4
    8954:	4664      	mov	r4, ip
    8956:	40a6      	lsls	r6, r4
    8958:	0032      	movs	r2, r6
    895a:	1a80      	subs	r0, r0, r2
    895c:	4199      	sbcs	r1, r3
    895e:	e003      	b.n	8968 <__divdi3+0x108>
    8960:	42b2      	cmp	r2, r6
    8962:	d996      	bls.n	8892 <__divdi3+0x32>
    8964:	2000      	movs	r0, #0
    8966:	2100      	movs	r1, #0
    8968:	464b      	mov	r3, r9
    896a:	2b00      	cmp	r3, #0
    896c:	d004      	beq.n	8978 <__divdi3+0x118>
    896e:	0003      	movs	r3, r0
    8970:	000c      	movs	r4, r1
    8972:	2100      	movs	r1, #0
    8974:	4258      	negs	r0, r3
    8976:	41a1      	sbcs	r1, r4
    8978:	b003      	add	sp, #12
    897a:	bc3c      	pop	{r2, r3, r4, r5}
    897c:	4690      	mov	r8, r2
    897e:	4699      	mov	r9, r3
    8980:	46a2      	mov	sl, r4
    8982:	46ab      	mov	fp, r5
    8984:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8986:	4649      	mov	r1, r9
    8988:	43c9      	mvns	r1, r1
    898a:	0010      	movs	r0, r2
    898c:	4689      	mov	r9, r1
    898e:	0019      	movs	r1, r3
    8990:	2300      	movs	r3, #0
    8992:	4242      	negs	r2, r0
    8994:	418b      	sbcs	r3, r1
    8996:	e775      	b.n	8884 <__divdi3+0x24>
    8998:	0034      	movs	r4, r6
    899a:	003d      	movs	r5, r7
    899c:	3801      	subs	r0, #1
    899e:	2700      	movs	r7, #0
    89a0:	4266      	negs	r6, r4
    89a2:	41af      	sbcs	r7, r5
    89a4:	4681      	mov	r9, r0
    89a6:	e76a      	b.n	887e <__divdi3+0x1e>
    89a8:	42b1      	cmp	r1, r6
    89aa:	d800      	bhi.n	89ae <__divdi3+0x14e>
    89ac:	e78d      	b.n	88ca <__divdi3+0x6a>
    89ae:	2100      	movs	r1, #0
    89b0:	2000      	movs	r0, #0
    89b2:	9000      	str	r0, [sp, #0]
    89b4:	9101      	str	r1, [sp, #4]
    89b6:	4661      	mov	r1, ip
    89b8:	2900      	cmp	r1, #0
    89ba:	d19d      	bne.n	88f8 <__divdi3+0x98>
    89bc:	9800      	ldr	r0, [sp, #0]
    89be:	9901      	ldr	r1, [sp, #4]
    89c0:	e7d2      	b.n	8968 <__divdi3+0x108>
    89c2:	4662      	mov	r2, ip
    89c4:	4640      	mov	r0, r8
    89c6:	2320      	movs	r3, #32
    89c8:	4651      	mov	r1, sl
    89ca:	4090      	lsls	r0, r2
    89cc:	1a9b      	subs	r3, r3, r2
    89ce:	40d9      	lsrs	r1, r3
    89d0:	0003      	movs	r3, r0
    89d2:	9100      	str	r1, [sp, #0]
    89d4:	9900      	ldr	r1, [sp, #0]
    89d6:	430b      	orrs	r3, r1
    89d8:	e76f      	b.n	88ba <__divdi3+0x5a>
    89da:	4662      	mov	r2, ip
    89dc:	2320      	movs	r3, #32
    89de:	1a9b      	subs	r3, r3, r2
    89e0:	002a      	movs	r2, r5
    89e2:	409a      	lsls	r2, r3
    89e4:	0026      	movs	r6, r4
    89e6:	0013      	movs	r3, r2
    89e8:	4662      	mov	r2, ip
    89ea:	40d6      	lsrs	r6, r2
    89ec:	431e      	orrs	r6, r3
    89ee:	e7a8      	b.n	8942 <__divdi3+0xe2>
    89f0:	4661      	mov	r1, ip
    89f2:	2620      	movs	r6, #32
    89f4:	2701      	movs	r7, #1
    89f6:	1a76      	subs	r6, r6, r1
    89f8:	2000      	movs	r0, #0
    89fa:	2100      	movs	r1, #0
    89fc:	40f7      	lsrs	r7, r6
    89fe:	9000      	str	r0, [sp, #0]
    8a00:	9101      	str	r1, [sp, #4]
    8a02:	9701      	str	r7, [sp, #4]
    8a04:	e771      	b.n	88ea <__divdi3+0x8a>
    8a06:	4662      	mov	r2, ip
    8a08:	2320      	movs	r3, #32
    8a0a:	0035      	movs	r5, r6
    8a0c:	4094      	lsls	r4, r2
    8a0e:	1a9b      	subs	r3, r3, r2
    8a10:	40dd      	lsrs	r5, r3
    8a12:	0023      	movs	r3, r4
    8a14:	432b      	orrs	r3, r5
    8a16:	e79d      	b.n	8954 <__divdi3+0xf4>

00008a18 <__eqsf2>:
    8a18:	b570      	push	{r4, r5, r6, lr}
    8a1a:	0042      	lsls	r2, r0, #1
    8a1c:	0245      	lsls	r5, r0, #9
    8a1e:	024e      	lsls	r6, r1, #9
    8a20:	004c      	lsls	r4, r1, #1
    8a22:	0fc3      	lsrs	r3, r0, #31
    8a24:	0a6d      	lsrs	r5, r5, #9
    8a26:	0e12      	lsrs	r2, r2, #24
    8a28:	0a76      	lsrs	r6, r6, #9
    8a2a:	0e24      	lsrs	r4, r4, #24
    8a2c:	0fc9      	lsrs	r1, r1, #31
    8a2e:	2001      	movs	r0, #1
    8a30:	2aff      	cmp	r2, #255	; 0xff
    8a32:	d006      	beq.n	8a42 <__eqsf2+0x2a>
    8a34:	2cff      	cmp	r4, #255	; 0xff
    8a36:	d003      	beq.n	8a40 <__eqsf2+0x28>
    8a38:	42a2      	cmp	r2, r4
    8a3a:	d101      	bne.n	8a40 <__eqsf2+0x28>
    8a3c:	42b5      	cmp	r5, r6
    8a3e:	d006      	beq.n	8a4e <__eqsf2+0x36>
    8a40:	bd70      	pop	{r4, r5, r6, pc}
    8a42:	2d00      	cmp	r5, #0
    8a44:	d1fc      	bne.n	8a40 <__eqsf2+0x28>
    8a46:	2cff      	cmp	r4, #255	; 0xff
    8a48:	d1fa      	bne.n	8a40 <__eqsf2+0x28>
    8a4a:	2e00      	cmp	r6, #0
    8a4c:	d1f8      	bne.n	8a40 <__eqsf2+0x28>
    8a4e:	428b      	cmp	r3, r1
    8a50:	d006      	beq.n	8a60 <__eqsf2+0x48>
    8a52:	2001      	movs	r0, #1
    8a54:	2a00      	cmp	r2, #0
    8a56:	d1f3      	bne.n	8a40 <__eqsf2+0x28>
    8a58:	0028      	movs	r0, r5
    8a5a:	1e45      	subs	r5, r0, #1
    8a5c:	41a8      	sbcs	r0, r5
    8a5e:	e7ef      	b.n	8a40 <__eqsf2+0x28>
    8a60:	2000      	movs	r0, #0
    8a62:	e7ed      	b.n	8a40 <__eqsf2+0x28>

00008a64 <__gesf2>:
    8a64:	b5f0      	push	{r4, r5, r6, r7, lr}
    8a66:	0042      	lsls	r2, r0, #1
    8a68:	0245      	lsls	r5, r0, #9
    8a6a:	024c      	lsls	r4, r1, #9
    8a6c:	0fc3      	lsrs	r3, r0, #31
    8a6e:	0048      	lsls	r0, r1, #1
    8a70:	0a6d      	lsrs	r5, r5, #9
    8a72:	0e12      	lsrs	r2, r2, #24
    8a74:	0a64      	lsrs	r4, r4, #9
    8a76:	0e00      	lsrs	r0, r0, #24
    8a78:	0fc9      	lsrs	r1, r1, #31
    8a7a:	2aff      	cmp	r2, #255	; 0xff
    8a7c:	d01e      	beq.n	8abc <__gesf2+0x58>
    8a7e:	28ff      	cmp	r0, #255	; 0xff
    8a80:	d021      	beq.n	8ac6 <__gesf2+0x62>
    8a82:	2a00      	cmp	r2, #0
    8a84:	d10a      	bne.n	8a9c <__gesf2+0x38>
    8a86:	426e      	negs	r6, r5
    8a88:	416e      	adcs	r6, r5
    8a8a:	b2f6      	uxtb	r6, r6
    8a8c:	2800      	cmp	r0, #0
    8a8e:	d10f      	bne.n	8ab0 <__gesf2+0x4c>
    8a90:	2c00      	cmp	r4, #0
    8a92:	d10d      	bne.n	8ab0 <__gesf2+0x4c>
    8a94:	2000      	movs	r0, #0
    8a96:	2d00      	cmp	r5, #0
    8a98:	d009      	beq.n	8aae <__gesf2+0x4a>
    8a9a:	e005      	b.n	8aa8 <__gesf2+0x44>
    8a9c:	2800      	cmp	r0, #0
    8a9e:	d101      	bne.n	8aa4 <__gesf2+0x40>
    8aa0:	2c00      	cmp	r4, #0
    8aa2:	d001      	beq.n	8aa8 <__gesf2+0x44>
    8aa4:	428b      	cmp	r3, r1
    8aa6:	d011      	beq.n	8acc <__gesf2+0x68>
    8aa8:	2101      	movs	r1, #1
    8aaa:	4258      	negs	r0, r3
    8aac:	4308      	orrs	r0, r1
    8aae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8ab0:	2e00      	cmp	r6, #0
    8ab2:	d0f7      	beq.n	8aa4 <__gesf2+0x40>
    8ab4:	2001      	movs	r0, #1
    8ab6:	3901      	subs	r1, #1
    8ab8:	4308      	orrs	r0, r1
    8aba:	e7f8      	b.n	8aae <__gesf2+0x4a>
    8abc:	2d00      	cmp	r5, #0
    8abe:	d0de      	beq.n	8a7e <__gesf2+0x1a>
    8ac0:	2002      	movs	r0, #2
    8ac2:	4240      	negs	r0, r0
    8ac4:	e7f3      	b.n	8aae <__gesf2+0x4a>
    8ac6:	2c00      	cmp	r4, #0
    8ac8:	d0db      	beq.n	8a82 <__gesf2+0x1e>
    8aca:	e7f9      	b.n	8ac0 <__gesf2+0x5c>
    8acc:	4282      	cmp	r2, r0
    8ace:	dceb      	bgt.n	8aa8 <__gesf2+0x44>
    8ad0:	db04      	blt.n	8adc <__gesf2+0x78>
    8ad2:	42a5      	cmp	r5, r4
    8ad4:	d8e8      	bhi.n	8aa8 <__gesf2+0x44>
    8ad6:	2000      	movs	r0, #0
    8ad8:	42a5      	cmp	r5, r4
    8ada:	d2e8      	bcs.n	8aae <__gesf2+0x4a>
    8adc:	2101      	movs	r1, #1
    8ade:	1e58      	subs	r0, r3, #1
    8ae0:	4308      	orrs	r0, r1
    8ae2:	e7e4      	b.n	8aae <__gesf2+0x4a>

00008ae4 <__lesf2>:
    8ae4:	b5f0      	push	{r4, r5, r6, r7, lr}
    8ae6:	0042      	lsls	r2, r0, #1
    8ae8:	024d      	lsls	r5, r1, #9
    8aea:	004c      	lsls	r4, r1, #1
    8aec:	0246      	lsls	r6, r0, #9
    8aee:	0a76      	lsrs	r6, r6, #9
    8af0:	0e12      	lsrs	r2, r2, #24
    8af2:	0fc3      	lsrs	r3, r0, #31
    8af4:	0a6d      	lsrs	r5, r5, #9
    8af6:	0e24      	lsrs	r4, r4, #24
    8af8:	0fc9      	lsrs	r1, r1, #31
    8afa:	2aff      	cmp	r2, #255	; 0xff
    8afc:	d016      	beq.n	8b2c <__lesf2+0x48>
    8afe:	2cff      	cmp	r4, #255	; 0xff
    8b00:	d018      	beq.n	8b34 <__lesf2+0x50>
    8b02:	2a00      	cmp	r2, #0
    8b04:	d10a      	bne.n	8b1c <__lesf2+0x38>
    8b06:	4270      	negs	r0, r6
    8b08:	4170      	adcs	r0, r6
    8b0a:	b2c0      	uxtb	r0, r0
    8b0c:	2c00      	cmp	r4, #0
    8b0e:	d015      	beq.n	8b3c <__lesf2+0x58>
    8b10:	2800      	cmp	r0, #0
    8b12:	d005      	beq.n	8b20 <__lesf2+0x3c>
    8b14:	2001      	movs	r0, #1
    8b16:	3901      	subs	r1, #1
    8b18:	4308      	orrs	r0, r1
    8b1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8b1c:	2c00      	cmp	r4, #0
    8b1e:	d013      	beq.n	8b48 <__lesf2+0x64>
    8b20:	4299      	cmp	r1, r3
    8b22:	d014      	beq.n	8b4e <__lesf2+0x6a>
    8b24:	2001      	movs	r0, #1
    8b26:	425b      	negs	r3, r3
    8b28:	4318      	orrs	r0, r3
    8b2a:	e7f6      	b.n	8b1a <__lesf2+0x36>
    8b2c:	2002      	movs	r0, #2
    8b2e:	2e00      	cmp	r6, #0
    8b30:	d1f3      	bne.n	8b1a <__lesf2+0x36>
    8b32:	e7e4      	b.n	8afe <__lesf2+0x1a>
    8b34:	2002      	movs	r0, #2
    8b36:	2d00      	cmp	r5, #0
    8b38:	d1ef      	bne.n	8b1a <__lesf2+0x36>
    8b3a:	e7e2      	b.n	8b02 <__lesf2+0x1e>
    8b3c:	2d00      	cmp	r5, #0
    8b3e:	d1e7      	bne.n	8b10 <__lesf2+0x2c>
    8b40:	2000      	movs	r0, #0
    8b42:	2e00      	cmp	r6, #0
    8b44:	d0e9      	beq.n	8b1a <__lesf2+0x36>
    8b46:	e7ed      	b.n	8b24 <__lesf2+0x40>
    8b48:	2d00      	cmp	r5, #0
    8b4a:	d1e9      	bne.n	8b20 <__lesf2+0x3c>
    8b4c:	e7ea      	b.n	8b24 <__lesf2+0x40>
    8b4e:	42a2      	cmp	r2, r4
    8b50:	dc06      	bgt.n	8b60 <__lesf2+0x7c>
    8b52:	dbdf      	blt.n	8b14 <__lesf2+0x30>
    8b54:	42ae      	cmp	r6, r5
    8b56:	d803      	bhi.n	8b60 <__lesf2+0x7c>
    8b58:	2000      	movs	r0, #0
    8b5a:	42ae      	cmp	r6, r5
    8b5c:	d3da      	bcc.n	8b14 <__lesf2+0x30>
    8b5e:	e7dc      	b.n	8b1a <__lesf2+0x36>
    8b60:	2001      	movs	r0, #1
    8b62:	4249      	negs	r1, r1
    8b64:	4308      	orrs	r0, r1
    8b66:	e7d8      	b.n	8b1a <__lesf2+0x36>

00008b68 <__clzdi2>:
    8b68:	b510      	push	{r4, lr}
    8b6a:	2900      	cmp	r1, #0
    8b6c:	d103      	bne.n	8b76 <__clzdi2+0xe>
    8b6e:	f7ff fe59 	bl	8824 <__clzsi2>
    8b72:	3020      	adds	r0, #32
    8b74:	e002      	b.n	8b7c <__clzdi2+0x14>
    8b76:	1c08      	adds	r0, r1, #0
    8b78:	f7ff fe54 	bl	8824 <__clzsi2>
    8b7c:	bd10      	pop	{r4, pc}
    8b7e:	46c0      	nop			; (mov r8, r8)

00008b80 <__errno>:
    8b80:	4b01      	ldr	r3, [pc, #4]	; (8b88 <__errno+0x8>)
    8b82:	6818      	ldr	r0, [r3, #0]
    8b84:	4770      	bx	lr
    8b86:	46c0      	nop			; (mov r8, r8)
    8b88:	200000ac 	.word	0x200000ac

00008b8c <__libc_init_array>:
    8b8c:	b570      	push	{r4, r5, r6, lr}
    8b8e:	4e0d      	ldr	r6, [pc, #52]	; (8bc4 <__libc_init_array+0x38>)
    8b90:	4d0d      	ldr	r5, [pc, #52]	; (8bc8 <__libc_init_array+0x3c>)
    8b92:	2400      	movs	r4, #0
    8b94:	1bad      	subs	r5, r5, r6
    8b96:	10ad      	asrs	r5, r5, #2
    8b98:	d005      	beq.n	8ba6 <__libc_init_array+0x1a>
    8b9a:	00a3      	lsls	r3, r4, #2
    8b9c:	58f3      	ldr	r3, [r6, r3]
    8b9e:	3401      	adds	r4, #1
    8ba0:	4798      	blx	r3
    8ba2:	42a5      	cmp	r5, r4
    8ba4:	d1f9      	bne.n	8b9a <__libc_init_array+0xe>
    8ba6:	f006 fe9d 	bl	f8e4 <_init>
    8baa:	4e08      	ldr	r6, [pc, #32]	; (8bcc <__libc_init_array+0x40>)
    8bac:	4d08      	ldr	r5, [pc, #32]	; (8bd0 <__libc_init_array+0x44>)
    8bae:	2400      	movs	r4, #0
    8bb0:	1bad      	subs	r5, r5, r6
    8bb2:	10ad      	asrs	r5, r5, #2
    8bb4:	d005      	beq.n	8bc2 <__libc_init_array+0x36>
    8bb6:	00a3      	lsls	r3, r4, #2
    8bb8:	58f3      	ldr	r3, [r6, r3]
    8bba:	3401      	adds	r4, #1
    8bbc:	4798      	blx	r3
    8bbe:	42a5      	cmp	r5, r4
    8bc0:	d1f9      	bne.n	8bb6 <__libc_init_array+0x2a>
    8bc2:	bd70      	pop	{r4, r5, r6, pc}
    8bc4:	0000f8f0 	.word	0x0000f8f0
    8bc8:	0000f8f0 	.word	0x0000f8f0
    8bcc:	0000f8f0 	.word	0x0000f8f0
    8bd0:	0000f8fc 	.word	0x0000f8fc

00008bd4 <memcpy>:
    8bd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    8bd6:	0005      	movs	r5, r0
    8bd8:	2a0f      	cmp	r2, #15
    8bda:	d92f      	bls.n	8c3c <memcpy+0x68>
    8bdc:	000b      	movs	r3, r1
    8bde:	4303      	orrs	r3, r0
    8be0:	079b      	lsls	r3, r3, #30
    8be2:	d134      	bne.n	8c4e <memcpy+0x7a>
    8be4:	0016      	movs	r6, r2
    8be6:	000c      	movs	r4, r1
    8be8:	0003      	movs	r3, r0
    8bea:	3e10      	subs	r6, #16
    8bec:	0935      	lsrs	r5, r6, #4
    8bee:	3501      	adds	r5, #1
    8bf0:	012d      	lsls	r5, r5, #4
    8bf2:	1945      	adds	r5, r0, r5
    8bf4:	6827      	ldr	r7, [r4, #0]
    8bf6:	601f      	str	r7, [r3, #0]
    8bf8:	6867      	ldr	r7, [r4, #4]
    8bfa:	605f      	str	r7, [r3, #4]
    8bfc:	68a7      	ldr	r7, [r4, #8]
    8bfe:	609f      	str	r7, [r3, #8]
    8c00:	68e7      	ldr	r7, [r4, #12]
    8c02:	3410      	adds	r4, #16
    8c04:	60df      	str	r7, [r3, #12]
    8c06:	3310      	adds	r3, #16
    8c08:	429d      	cmp	r5, r3
    8c0a:	d1f3      	bne.n	8bf4 <memcpy+0x20>
    8c0c:	230f      	movs	r3, #15
    8c0e:	439e      	bics	r6, r3
    8c10:	3610      	adds	r6, #16
    8c12:	1985      	adds	r5, r0, r6
    8c14:	1989      	adds	r1, r1, r6
    8c16:	4013      	ands	r3, r2
    8c18:	2b03      	cmp	r3, #3
    8c1a:	d91a      	bls.n	8c52 <memcpy+0x7e>
    8c1c:	1f1e      	subs	r6, r3, #4
    8c1e:	2300      	movs	r3, #0
    8c20:	08b4      	lsrs	r4, r6, #2
    8c22:	3401      	adds	r4, #1
    8c24:	00a4      	lsls	r4, r4, #2
    8c26:	58cf      	ldr	r7, [r1, r3]
    8c28:	50ef      	str	r7, [r5, r3]
    8c2a:	3304      	adds	r3, #4
    8c2c:	42a3      	cmp	r3, r4
    8c2e:	d1fa      	bne.n	8c26 <memcpy+0x52>
    8c30:	2403      	movs	r4, #3
    8c32:	43a6      	bics	r6, r4
    8c34:	1d33      	adds	r3, r6, #4
    8c36:	4022      	ands	r2, r4
    8c38:	18c9      	adds	r1, r1, r3
    8c3a:	18ed      	adds	r5, r5, r3
    8c3c:	2a00      	cmp	r2, #0
    8c3e:	d005      	beq.n	8c4c <memcpy+0x78>
    8c40:	2300      	movs	r3, #0
    8c42:	5ccc      	ldrb	r4, [r1, r3]
    8c44:	54ec      	strb	r4, [r5, r3]
    8c46:	3301      	adds	r3, #1
    8c48:	4293      	cmp	r3, r2
    8c4a:	d1fa      	bne.n	8c42 <memcpy+0x6e>
    8c4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8c4e:	0005      	movs	r5, r0
    8c50:	e7f6      	b.n	8c40 <memcpy+0x6c>
    8c52:	001a      	movs	r2, r3
    8c54:	e7f2      	b.n	8c3c <memcpy+0x68>
    8c56:	46c0      	nop			; (mov r8, r8)

00008c58 <memset>:
    8c58:	b5f0      	push	{r4, r5, r6, r7, lr}
    8c5a:	0783      	lsls	r3, r0, #30
    8c5c:	d043      	beq.n	8ce6 <memset+0x8e>
    8c5e:	1e54      	subs	r4, r2, #1
    8c60:	2a00      	cmp	r2, #0
    8c62:	d03f      	beq.n	8ce4 <memset+0x8c>
    8c64:	b2ce      	uxtb	r6, r1
    8c66:	0002      	movs	r2, r0
    8c68:	2503      	movs	r5, #3
    8c6a:	e002      	b.n	8c72 <memset+0x1a>
    8c6c:	001a      	movs	r2, r3
    8c6e:	3c01      	subs	r4, #1
    8c70:	d338      	bcc.n	8ce4 <memset+0x8c>
    8c72:	1c53      	adds	r3, r2, #1
    8c74:	7016      	strb	r6, [r2, #0]
    8c76:	422b      	tst	r3, r5
    8c78:	d1f8      	bne.n	8c6c <memset+0x14>
    8c7a:	2c03      	cmp	r4, #3
    8c7c:	d92a      	bls.n	8cd4 <memset+0x7c>
    8c7e:	22ff      	movs	r2, #255	; 0xff
    8c80:	400a      	ands	r2, r1
    8c82:	0215      	lsls	r5, r2, #8
    8c84:	4315      	orrs	r5, r2
    8c86:	042a      	lsls	r2, r5, #16
    8c88:	4315      	orrs	r5, r2
    8c8a:	2c0f      	cmp	r4, #15
    8c8c:	d914      	bls.n	8cb8 <memset+0x60>
    8c8e:	0027      	movs	r7, r4
    8c90:	001a      	movs	r2, r3
    8c92:	3f10      	subs	r7, #16
    8c94:	093e      	lsrs	r6, r7, #4
    8c96:	3601      	adds	r6, #1
    8c98:	0136      	lsls	r6, r6, #4
    8c9a:	199e      	adds	r6, r3, r6
    8c9c:	6015      	str	r5, [r2, #0]
    8c9e:	6055      	str	r5, [r2, #4]
    8ca0:	6095      	str	r5, [r2, #8]
    8ca2:	60d5      	str	r5, [r2, #12]
    8ca4:	3210      	adds	r2, #16
    8ca6:	4296      	cmp	r6, r2
    8ca8:	d1f8      	bne.n	8c9c <memset+0x44>
    8caa:	220f      	movs	r2, #15
    8cac:	4397      	bics	r7, r2
    8cae:	3710      	adds	r7, #16
    8cb0:	19db      	adds	r3, r3, r7
    8cb2:	4014      	ands	r4, r2
    8cb4:	2c03      	cmp	r4, #3
    8cb6:	d90d      	bls.n	8cd4 <memset+0x7c>
    8cb8:	001a      	movs	r2, r3
    8cba:	1f27      	subs	r7, r4, #4
    8cbc:	08be      	lsrs	r6, r7, #2
    8cbe:	3601      	adds	r6, #1
    8cc0:	00b6      	lsls	r6, r6, #2
    8cc2:	199e      	adds	r6, r3, r6
    8cc4:	c220      	stmia	r2!, {r5}
    8cc6:	42b2      	cmp	r2, r6
    8cc8:	d1fc      	bne.n	8cc4 <memset+0x6c>
    8cca:	2203      	movs	r2, #3
    8ccc:	4397      	bics	r7, r2
    8cce:	3704      	adds	r7, #4
    8cd0:	19db      	adds	r3, r3, r7
    8cd2:	4014      	ands	r4, r2
    8cd4:	2c00      	cmp	r4, #0
    8cd6:	d005      	beq.n	8ce4 <memset+0x8c>
    8cd8:	b2c9      	uxtb	r1, r1
    8cda:	191c      	adds	r4, r3, r4
    8cdc:	7019      	strb	r1, [r3, #0]
    8cde:	3301      	adds	r3, #1
    8ce0:	429c      	cmp	r4, r3
    8ce2:	d1fb      	bne.n	8cdc <memset+0x84>
    8ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8ce6:	0014      	movs	r4, r2
    8ce8:	0003      	movs	r3, r0
    8cea:	e7c6      	b.n	8c7a <memset+0x22>

00008cec <strlen>:
    8cec:	b510      	push	{r4, lr}
    8cee:	0783      	lsls	r3, r0, #30
    8cf0:	d025      	beq.n	8d3e <strlen+0x52>
    8cf2:	7803      	ldrb	r3, [r0, #0]
    8cf4:	2b00      	cmp	r3, #0
    8cf6:	d024      	beq.n	8d42 <strlen+0x56>
    8cf8:	0003      	movs	r3, r0
    8cfa:	2103      	movs	r1, #3
    8cfc:	e002      	b.n	8d04 <strlen+0x18>
    8cfe:	781a      	ldrb	r2, [r3, #0]
    8d00:	2a00      	cmp	r2, #0
    8d02:	d01a      	beq.n	8d3a <strlen+0x4e>
    8d04:	3301      	adds	r3, #1
    8d06:	420b      	tst	r3, r1
    8d08:	d1f9      	bne.n	8cfe <strlen+0x12>
    8d0a:	6819      	ldr	r1, [r3, #0]
    8d0c:	4a0e      	ldr	r2, [pc, #56]	; (8d48 <strlen+0x5c>)
    8d0e:	4c0f      	ldr	r4, [pc, #60]	; (8d4c <strlen+0x60>)
    8d10:	188a      	adds	r2, r1, r2
    8d12:	438a      	bics	r2, r1
    8d14:	4222      	tst	r2, r4
    8d16:	d106      	bne.n	8d26 <strlen+0x3a>
    8d18:	3304      	adds	r3, #4
    8d1a:	6819      	ldr	r1, [r3, #0]
    8d1c:	4a0a      	ldr	r2, [pc, #40]	; (8d48 <strlen+0x5c>)
    8d1e:	188a      	adds	r2, r1, r2
    8d20:	438a      	bics	r2, r1
    8d22:	4222      	tst	r2, r4
    8d24:	d0f8      	beq.n	8d18 <strlen+0x2c>
    8d26:	001a      	movs	r2, r3
    8d28:	781b      	ldrb	r3, [r3, #0]
    8d2a:	2b00      	cmp	r3, #0
    8d2c:	d003      	beq.n	8d36 <strlen+0x4a>
    8d2e:	3201      	adds	r2, #1
    8d30:	7811      	ldrb	r1, [r2, #0]
    8d32:	2900      	cmp	r1, #0
    8d34:	d1fb      	bne.n	8d2e <strlen+0x42>
    8d36:	1a10      	subs	r0, r2, r0
    8d38:	bd10      	pop	{r4, pc}
    8d3a:	1a18      	subs	r0, r3, r0
    8d3c:	e7fc      	b.n	8d38 <strlen+0x4c>
    8d3e:	0003      	movs	r3, r0
    8d40:	e7e3      	b.n	8d0a <strlen+0x1e>
    8d42:	2000      	movs	r0, #0
    8d44:	e7f8      	b.n	8d38 <strlen+0x4c>
    8d46:	46c0      	nop			; (mov r8, r8)
    8d48:	fefefeff 	.word	0xfefefeff
    8d4c:	80808080 	.word	0x80808080

00008d50 <strncpy>:
    8d50:	000b      	movs	r3, r1
    8d52:	4303      	orrs	r3, r0
    8d54:	b5f0      	push	{r4, r5, r6, r7, lr}
    8d56:	079b      	lsls	r3, r3, #30
    8d58:	d101      	bne.n	8d5e <strncpy+0xe>
    8d5a:	2a03      	cmp	r2, #3
    8d5c:	d814      	bhi.n	8d88 <strncpy+0x38>
    8d5e:	0006      	movs	r6, r0
    8d60:	2a00      	cmp	r2, #0
    8d62:	d010      	beq.n	8d86 <strncpy+0x36>
    8d64:	780c      	ldrb	r4, [r1, #0]
    8d66:	3a01      	subs	r2, #1
    8d68:	1c73      	adds	r3, r6, #1
    8d6a:	7034      	strb	r4, [r6, #0]
    8d6c:	2c00      	cmp	r4, #0
    8d6e:	d01d      	beq.n	8dac <strncpy+0x5c>
    8d70:	2401      	movs	r4, #1
    8d72:	e006      	b.n	8d82 <strncpy+0x32>
    8d74:	5d0d      	ldrb	r5, [r1, r4]
    8d76:	3a01      	subs	r2, #1
    8d78:	5535      	strb	r5, [r6, r4]
    8d7a:	3301      	adds	r3, #1
    8d7c:	3401      	adds	r4, #1
    8d7e:	2d00      	cmp	r5, #0
    8d80:	d014      	beq.n	8dac <strncpy+0x5c>
    8d82:	2a00      	cmp	r2, #0
    8d84:	d1f6      	bne.n	8d74 <strncpy+0x24>
    8d86:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8d88:	0005      	movs	r5, r0
    8d8a:	4f0d      	ldr	r7, [pc, #52]	; (8dc0 <strncpy+0x70>)
    8d8c:	e006      	b.n	8d9c <strncpy+0x4c>
    8d8e:	3a04      	subs	r2, #4
    8d90:	1d2e      	adds	r6, r5, #4
    8d92:	3104      	adds	r1, #4
    8d94:	602c      	str	r4, [r5, #0]
    8d96:	2a03      	cmp	r2, #3
    8d98:	d9e2      	bls.n	8d60 <strncpy+0x10>
    8d9a:	0035      	movs	r5, r6
    8d9c:	680c      	ldr	r4, [r1, #0]
    8d9e:	4b09      	ldr	r3, [pc, #36]	; (8dc4 <strncpy+0x74>)
    8da0:	18e3      	adds	r3, r4, r3
    8da2:	43a3      	bics	r3, r4
    8da4:	423b      	tst	r3, r7
    8da6:	d0f2      	beq.n	8d8e <strncpy+0x3e>
    8da8:	002e      	movs	r6, r5
    8daa:	e7db      	b.n	8d64 <strncpy+0x14>
    8dac:	189c      	adds	r4, r3, r2
    8dae:	2100      	movs	r1, #0
    8db0:	2a00      	cmp	r2, #0
    8db2:	d0e8      	beq.n	8d86 <strncpy+0x36>
    8db4:	7019      	strb	r1, [r3, #0]
    8db6:	3301      	adds	r3, #1
    8db8:	42a3      	cmp	r3, r4
    8dba:	d1fb      	bne.n	8db4 <strncpy+0x64>
    8dbc:	e7e3      	b.n	8d86 <strncpy+0x36>
    8dbe:	46c0      	nop			; (mov r8, r8)
    8dc0:	80808080 	.word	0x80808080
    8dc4:	fefefeff 	.word	0xfefefeff

00008dc8 <register_fini>:
    8dc8:	4b03      	ldr	r3, [pc, #12]	; (8dd8 <register_fini+0x10>)
    8dca:	b510      	push	{r4, lr}
    8dcc:	2b00      	cmp	r3, #0
    8dce:	d002      	beq.n	8dd6 <register_fini+0xe>
    8dd0:	4802      	ldr	r0, [pc, #8]	; (8ddc <register_fini+0x14>)
    8dd2:	f000 f805 	bl	8de0 <atexit>
    8dd6:	bd10      	pop	{r4, pc}
    8dd8:	00000000 	.word	0x00000000
    8ddc:	00008df1 	.word	0x00008df1

00008de0 <atexit>:
    8de0:	b510      	push	{r4, lr}
    8de2:	0001      	movs	r1, r0
    8de4:	2300      	movs	r3, #0
    8de6:	2200      	movs	r2, #0
    8de8:	2000      	movs	r0, #0
    8dea:	f000 f81f 	bl	8e2c <__register_exitproc>
    8dee:	bd10      	pop	{r4, pc}

00008df0 <__libc_fini_array>:
    8df0:	b570      	push	{r4, r5, r6, lr}
    8df2:	4b09      	ldr	r3, [pc, #36]	; (8e18 <__libc_fini_array+0x28>)
    8df4:	4c09      	ldr	r4, [pc, #36]	; (8e1c <__libc_fini_array+0x2c>)
    8df6:	1ae4      	subs	r4, r4, r3
    8df8:	10a4      	asrs	r4, r4, #2
    8dfa:	d009      	beq.n	8e10 <__libc_fini_array+0x20>
    8dfc:	4a08      	ldr	r2, [pc, #32]	; (8e20 <__libc_fini_array+0x30>)
    8dfe:	18a5      	adds	r5, r4, r2
    8e00:	00ad      	lsls	r5, r5, #2
    8e02:	18ed      	adds	r5, r5, r3
    8e04:	682b      	ldr	r3, [r5, #0]
    8e06:	3c01      	subs	r4, #1
    8e08:	4798      	blx	r3
    8e0a:	3d04      	subs	r5, #4
    8e0c:	2c00      	cmp	r4, #0
    8e0e:	d1f9      	bne.n	8e04 <__libc_fini_array+0x14>
    8e10:	f006 fd74 	bl	f8fc <_fini>
    8e14:	bd70      	pop	{r4, r5, r6, pc}
    8e16:	46c0      	nop			; (mov r8, r8)
    8e18:	0000f908 	.word	0x0000f908
    8e1c:	0000f90c 	.word	0x0000f90c
    8e20:	3fffffff 	.word	0x3fffffff

00008e24 <__retarget_lock_acquire_recursive>:
    8e24:	4770      	bx	lr
    8e26:	46c0      	nop			; (mov r8, r8)

00008e28 <__retarget_lock_release_recursive>:
    8e28:	4770      	bx	lr
    8e2a:	46c0      	nop			; (mov r8, r8)

00008e2c <__register_exitproc>:
    8e2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    8e2e:	464e      	mov	r6, r9
    8e30:	4645      	mov	r5, r8
    8e32:	46de      	mov	lr, fp
    8e34:	4657      	mov	r7, sl
    8e36:	b5e0      	push	{r5, r6, r7, lr}
    8e38:	4d36      	ldr	r5, [pc, #216]	; (8f14 <__register_exitproc+0xe8>)
    8e3a:	b083      	sub	sp, #12
    8e3c:	0006      	movs	r6, r0
    8e3e:	6828      	ldr	r0, [r5, #0]
    8e40:	4698      	mov	r8, r3
    8e42:	000f      	movs	r7, r1
    8e44:	4691      	mov	r9, r2
    8e46:	f7ff ffed 	bl	8e24 <__retarget_lock_acquire_recursive>
    8e4a:	4b33      	ldr	r3, [pc, #204]	; (8f18 <__register_exitproc+0xec>)
    8e4c:	681c      	ldr	r4, [r3, #0]
    8e4e:	23a4      	movs	r3, #164	; 0xa4
    8e50:	005b      	lsls	r3, r3, #1
    8e52:	58e0      	ldr	r0, [r4, r3]
    8e54:	2800      	cmp	r0, #0
    8e56:	d052      	beq.n	8efe <__register_exitproc+0xd2>
    8e58:	6843      	ldr	r3, [r0, #4]
    8e5a:	2b1f      	cmp	r3, #31
    8e5c:	dc13      	bgt.n	8e86 <__register_exitproc+0x5a>
    8e5e:	1c5a      	adds	r2, r3, #1
    8e60:	9201      	str	r2, [sp, #4]
    8e62:	2e00      	cmp	r6, #0
    8e64:	d128      	bne.n	8eb8 <__register_exitproc+0x8c>
    8e66:	9a01      	ldr	r2, [sp, #4]
    8e68:	3302      	adds	r3, #2
    8e6a:	009b      	lsls	r3, r3, #2
    8e6c:	6042      	str	r2, [r0, #4]
    8e6e:	501f      	str	r7, [r3, r0]
    8e70:	6828      	ldr	r0, [r5, #0]
    8e72:	f7ff ffd9 	bl	8e28 <__retarget_lock_release_recursive>
    8e76:	2000      	movs	r0, #0
    8e78:	b003      	add	sp, #12
    8e7a:	bc3c      	pop	{r2, r3, r4, r5}
    8e7c:	4690      	mov	r8, r2
    8e7e:	4699      	mov	r9, r3
    8e80:	46a2      	mov	sl, r4
    8e82:	46ab      	mov	fp, r5
    8e84:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8e86:	4b25      	ldr	r3, [pc, #148]	; (8f1c <__register_exitproc+0xf0>)
    8e88:	2b00      	cmp	r3, #0
    8e8a:	d03d      	beq.n	8f08 <__register_exitproc+0xdc>
    8e8c:	20c8      	movs	r0, #200	; 0xc8
    8e8e:	0040      	lsls	r0, r0, #1
    8e90:	e000      	b.n	8e94 <__register_exitproc+0x68>
    8e92:	bf00      	nop
    8e94:	2800      	cmp	r0, #0
    8e96:	d037      	beq.n	8f08 <__register_exitproc+0xdc>
    8e98:	22a4      	movs	r2, #164	; 0xa4
    8e9a:	2300      	movs	r3, #0
    8e9c:	0052      	lsls	r2, r2, #1
    8e9e:	58a1      	ldr	r1, [r4, r2]
    8ea0:	6043      	str	r3, [r0, #4]
    8ea2:	6001      	str	r1, [r0, #0]
    8ea4:	50a0      	str	r0, [r4, r2]
    8ea6:	3240      	adds	r2, #64	; 0x40
    8ea8:	5083      	str	r3, [r0, r2]
    8eaa:	3204      	adds	r2, #4
    8eac:	5083      	str	r3, [r0, r2]
    8eae:	3301      	adds	r3, #1
    8eb0:	9301      	str	r3, [sp, #4]
    8eb2:	2300      	movs	r3, #0
    8eb4:	2e00      	cmp	r6, #0
    8eb6:	d0d6      	beq.n	8e66 <__register_exitproc+0x3a>
    8eb8:	009a      	lsls	r2, r3, #2
    8eba:	4692      	mov	sl, r2
    8ebc:	4482      	add	sl, r0
    8ebe:	464a      	mov	r2, r9
    8ec0:	2188      	movs	r1, #136	; 0x88
    8ec2:	4654      	mov	r4, sl
    8ec4:	5062      	str	r2, [r4, r1]
    8ec6:	22c4      	movs	r2, #196	; 0xc4
    8ec8:	0052      	lsls	r2, r2, #1
    8eca:	4691      	mov	r9, r2
    8ecc:	4481      	add	r9, r0
    8ece:	464a      	mov	r2, r9
    8ed0:	3987      	subs	r1, #135	; 0x87
    8ed2:	4099      	lsls	r1, r3
    8ed4:	6812      	ldr	r2, [r2, #0]
    8ed6:	468b      	mov	fp, r1
    8ed8:	430a      	orrs	r2, r1
    8eda:	4694      	mov	ip, r2
    8edc:	464a      	mov	r2, r9
    8ede:	4661      	mov	r1, ip
    8ee0:	6011      	str	r1, [r2, #0]
    8ee2:	2284      	movs	r2, #132	; 0x84
    8ee4:	4641      	mov	r1, r8
    8ee6:	0052      	lsls	r2, r2, #1
    8ee8:	50a1      	str	r1, [r4, r2]
    8eea:	2e02      	cmp	r6, #2
    8eec:	d1bb      	bne.n	8e66 <__register_exitproc+0x3a>
    8eee:	0002      	movs	r2, r0
    8ef0:	465c      	mov	r4, fp
    8ef2:	328d      	adds	r2, #141	; 0x8d
    8ef4:	32ff      	adds	r2, #255	; 0xff
    8ef6:	6811      	ldr	r1, [r2, #0]
    8ef8:	430c      	orrs	r4, r1
    8efa:	6014      	str	r4, [r2, #0]
    8efc:	e7b3      	b.n	8e66 <__register_exitproc+0x3a>
    8efe:	0020      	movs	r0, r4
    8f00:	304d      	adds	r0, #77	; 0x4d
    8f02:	30ff      	adds	r0, #255	; 0xff
    8f04:	50e0      	str	r0, [r4, r3]
    8f06:	e7a7      	b.n	8e58 <__register_exitproc+0x2c>
    8f08:	6828      	ldr	r0, [r5, #0]
    8f0a:	f7ff ff8d 	bl	8e28 <__retarget_lock_release_recursive>
    8f0e:	2001      	movs	r0, #1
    8f10:	4240      	negs	r0, r0
    8f12:	e7b1      	b.n	8e78 <__register_exitproc+0x4c>
    8f14:	200004d8 	.word	0x200004d8
    8f18:	0000f8e0 	.word	0x0000f8e0
    8f1c:	00000000 	.word	0x00000000
    8f20:	0000189a 	.word	0x0000189a
    8f24:	00001810 	.word	0x00001810
    8f28:	0000182e 	.word	0x0000182e
    8f2c:	0000184e 	.word	0x0000184e
    8f30:	00001868 	.word	0x00001868
    8f34:	0000189a 	.word	0x0000189a
    8f38:	0000189a 	.word	0x0000189a
    8f3c:	0000189a 	.word	0x0000189a
    8f40:	0000189a 	.word	0x0000189a
    8f44:	0000189a 	.word	0x0000189a
    8f48:	0000189a 	.word	0x0000189a
    8f4c:	0000189a 	.word	0x0000189a
    8f50:	0000189a 	.word	0x0000189a
    8f54:	0000189a 	.word	0x0000189a
    8f58:	0000189a 	.word	0x0000189a
    8f5c:	0000189a 	.word	0x0000189a
    8f60:	0000189a 	.word	0x0000189a
    8f64:	0000189a 	.word	0x0000189a
    8f68:	0000189a 	.word	0x0000189a
    8f6c:	0000189a 	.word	0x0000189a
    8f70:	0000189a 	.word	0x0000189a
    8f74:	0000189a 	.word	0x0000189a
    8f78:	0000189a 	.word	0x0000189a
    8f7c:	0000189a 	.word	0x0000189a
    8f80:	0000189a 	.word	0x0000189a
    8f84:	0000189a 	.word	0x0000189a
    8f88:	0000189a 	.word	0x0000189a
    8f8c:	0000189a 	.word	0x0000189a
    8f90:	0000189a 	.word	0x0000189a
    8f94:	0000189a 	.word	0x0000189a
    8f98:	0000189a 	.word	0x0000189a
    8f9c:	0000188c 	.word	0x0000188c
    8fa0:	0000189c 	.word	0x0000189c

00008fa4 <_ZN9GDEW027W313lut_20_vcomDCE>:
    8fa4:	0f000000 0500000f 00323200 0f000200     .........22.....
    8fb4:	0500000f 00000000 00000000 00000000     ................
	...

00008fd0 <_ZN9GDEW027W39lut_21_wwE>:
    8fd0:	000f0f50 32600500 02000032 000f0fa0     P.....`22.......
    8fe0:	00000500 00000000 00000000 00000000     ................
	...

00008ffc <_ZN9GDEW027W39lut_22_bwE>:
    8ffc:	000f0f50 32600500 02000032 000f0fa0     P.....`22.......
    900c:	00000500 00000000 00000000 00000000     ................
	...

00009028 <_ZN9GDEW027W39lut_23_wbE>:
    9028:	000f0fa0 32600500 02000032 000f0f50     ......`22...P...
    9038:	00000500 00000000 00000000 00000000     ................
	...

00009054 <_ZN9GDEW027W39lut_24_bbE>:
    9054:	000f0fa0 32600500 02000032 000f0f50     ......`22...P...
    9064:	00000500 00000000 00000000 00000000     ................
	...

00009080 <_ZL4font>:
    9080:	00000000 4f5b3e00 6b3e3e5b 1c3e6b4f     .....>[O[>>kOk>.
    9090:	1c3e7c3e 3c7e3c18 7d571c18 5e1c1c57     >|>..<~<..W}W..^
    90a0:	001c5e7f 00183c18 e7c3e7ff 241800ff     .^...<.........$
    90b0:	e7ff0018 30ffe7db 0e063a48 29792926     .......0H:..&)y)
    90c0:	057f4026 7f400705 5a3f2505 5a3ce73c     &@....@..%?Z<.<Z
    90d0:	1c1c3e7f 1c1c0808 22147f3e 5f14227f     .>......>.."."._
    90e0:	5f5f005f 017f0906 8966007f 60606a95     _.__......f..j``
    90f0:	94606060 94a2ffa2 047e0408 7e201008     ```.......~... ~
    9100:	08081020 08081c2a 08082a1c 1010101e      ...*....*......
    9110:	0c1e0c10 38300c1e 0630383e 060e3e0e     ......08>80..>..
    9120:	00000000 5f000000 07000000 14000700     ......._........
    9130:	147f147f 2a7f2a24 08132312 49366264     ....$*.*.#..db6I
    9140:	00502056 00030708 41221c00 22410000     V P......."A..A"
    9150:	1c2a001c 082a1c7f 08083e08 30708000     ..*...*..>....p0
    9160:	08080800 00000808 20006060 02040810     ........``. ....
    9170:	4549513e 7f42003e 49720040 21464949     >QIE>.B.@.rIIIF!
    9180:	334d4941 7f121418 45452710 4a3c3945     AIM3.....'EEE9<J
    9190:	41314949 07091121 49494936 49494636     II1A!...6III6FII
    91a0:	00001e29 00000014 00003440 22140800     ).......@4....."
    91b0:	14141441 41001414 02081422 06095901     A......A"....Y..
    91c0:	595d413e 11127c4e 497f7c12 3e364949     >A]YN|...|.III6>
    91d0:	22414141 4141417f 49497f3e 097f4149     AAA".AAA>.IIIA..
    91e0:	3e010909 73514141 0808087f 7f41007f     ...>AAQs......A.
    91f0:	40200041 7f013f41 41221408 4040407f     A. @A?...."A.@@@
    9200:	1c027f40 047f7f02 3e7f1008 3e414141     @..........>AAA>
    9210:	0909097f 51413e06 097f5e21 26462919     .....>AQ!^...)F&
    9220:	32494949 017f0103 40403f03 201f3f40     III2.....?@@@?. 
    9230:	3f1f2040 3f403840 14081463 78040363     @ .?@8@?c...c..x
    9240:	59610304 00434d49 4141417f 10080402     ..aYIMC..AAA....
    9250:	41410020 02047f41 40040201 40404040      .AAA......@@@@@
    9260:	08070300 54542000 287f4078 38384444     ..... TTx@.(DD88
    9270:	28444444 28444438 5454387f 08001854     DDD(8DD(.8TTT...
    9280:	1802097e 789ca4a4 0404087f 7d440078     ~......x....x.D}
    9290:	40200040 7f003d40 00442810 407f4100     @. @@=...(D..A.@
    92a0:	78047c00 087c7804 38780404 38444444     .|.x.x|...x8DDD8
    92b0:	242418fc 24241818 087cfc18 48080404     ..$$..$$..|....H
    92c0:	24545454 443f0404 40403c24 201c7c20     TTT$..?D$<@@ |. 
    92d0:	3c1c2040 3c403040 28102844 90904c44     @ .<@0@<D(.(DL..
    92e0:	64447c90 00444c54 00413608 00770000     .|DdTLD..6A...w.
    92f0:	36410000 01020008 3c020402 3c262326     ..A6.......<&#&<
    9300:	61a1a11e 40403a12 54387a20 21595554     ...a.:@@ z8TTUY!
    9310:	41795555 78545422 54552142 54204078     UUyA"TTxB!UTx@ T
    9320:	0c407955 1272521e 55555539 54543959     Uy@..Rr.9UUUY9TT
    9330:	55395954 00585454 417c4500 7d450200     TY9UTTX..E|A..E}
    9340:	45010042 127d407c f07d1211 f0282528     B..E|@}...}.(%(.
    9350:	4555547c 54542000 0a7c547c 32497f09     |TUE. TT|T|...I2
    9360:	32494949 4444443a 484a323a 413a3048     III2:DDD:2JHH0:A
    9370:	3a7a2141 78204042 a0a09d00 42423d7d     A!z:B@ x....}=BB
    9380:	403d3d42 3c3d4040 2424ff24 43497e48     B==@@@=<$.$$H~IC
    9390:	fc2f2b66 09ff2b2f c020f629 03097e88     f+/./+..). ..~..
    93a0:	79545420 44000041 4830417d 38324a48      TTyA..D}A0HHJ28
    93b0:	7a224040 0a0a7a00 190d7d72 29267d31     @@"z.z..r}..1}&)
    93c0:	26282f29 26292929 404d4830 08083820     )/(&)))&0HM@ 8..
    93d0:	08080808 2f380808 baacc810 3428102f     ......8/..../.(4
    93e0:	7b0000fa 14080000 2222142a 08142a14     ...{....*."".*..
    93f0:	00550055 aa55aa55 55ffaa55 00ff55ff     U.U.U.U.U..U.U..
    9400:	00ff0000 ff101010 14141400 101000ff     ................
    9410:	10ff00ff f010f010 fc141414 f7141400     ................
    9420:	0000ff00 14ff00ff fc04f414 10171414     ................
    9430:	1f10101f 14141f10 10001f14 00f01010     ................
    9440:	1f000000 10101010 1010101f 0010f010     ................
    9450:	10ff0000 10101010 10101010 000010ff     ................
    9460:	0014ff00 ff00ff00 101f0000 fc000017     ................
    9470:	1414f404 14171017 f404f414 00ff0000     ................
    9480:	141414f7 14141414 14f700f7 14171414     ................
    9490:	101f1010 1414141f 101014f4 00f010f0     ................
    94a0:	1f101f00 1f000000 00000014 000014fc     ................
    94b0:	10f010f0 ff10ff10 ff141414 10101014     ................
    94c0:	0000001f ff10f000 ffffffff f0f0f0f0     ................
    94d0:	fffffff0 00000000 0fffff00 0f0f0f0f     ................
    94e0:	38444438 4a4afc44 027e344a 02060602     8DD8D.JJJ4~.....
    94f0:	027e027e 41495563 44443863 7e40043c     ~.~.cUIAc8DD<.@~
    9500:	06201e20 02027e02 a5e7a599 492a1c99      . ..~........*I
    9510:	724c1c2a 304c7201 304d4d4a 48784830     *.Lr.rL0JMM00HxH
    9520:	5a62bc30 493e3d46 7e004949 7e010101     0.bZF=>III.~...~
    9530:	2a2a2a2a 5f44442a 51404444 4040444a     *****DD_DD@QJD@@
    9540:	40514a44 01ff0000 ff80e003 08080000     DJQ@............
    9550:	36086b6b 36243612 0f090f06 18000006     kk.6.6$6........
    9560:	00000018 30001010 0101ff40 01011f00     .......0@.......
    9570:	1d19001e 3c001217 003c3c3c 00000000     .......<<<<.....

00009580 <_ZL18MS_Sans_Serif11x18>:
    9580:	00000006 00000000 00000000 00000000     ................
	...
    95c4:	00000002 00000000 002700fc 00000000     ..........'.....
	...
    9608:	003c0004 00000000 00000000 00000000     ..<.............
    9618:	00000000 0000003c 00000000 00000000     ....<...........
	...
    964c:	00200007 0000003c 000700e0 003c0000     .. .<.........<.
    965c:	00000004 003c0020 00e00000 00000007     .... .<.........
    966c:	0004003c 00200000 00000000 00000000     <..... .........
	...
    9690:	00300007 00000008 00100048 00840000     ..0.....H.......
    96a0:	00000020 007f00fe 00840000 00000020      ........... ...
    96b0:	00110008 00100000 0000000e 00000000     ................
	...
    96d4:	0038000b 00000020 00100044 00440000     ..8. ...D.....D.
    96e4:	00000008 00040044 00380000 00000002     ....D.....8.....
    96f4:	00010000 00800000 00000000 001c0040     ............@...
    9704:	00200000 00000022 00220010 00000000     .. .".....".....
    9714:	0000001c 0000000a 0000000e 00110038     ............8...
    9724:	00c40000 00000020 002000c4 00380000     .... ..... ...8.
    9734:	00000021 00220000 00000000 00000014     !.....".........
    9744:	00080000 00000000 00000016 00200000     .............. .
	...
    975c:	003c0001 00000000 00000000 00000000     ..<.............
	...
    97a0:	00e00003 0000001f 00e0001c 00020000     ................
    97b0:	00010000 00000000 00000000 00000000     ................
	...
    97e4:	00020003 00010000 00e0001c 00e00000     ................
    97f4:	0000001f 00000000 00000000 00000000     ................
	...
    9828:	00240005 00000000 00000018 000e0000     ..$.............
    9838:	00000000 00000018 00240000 00000000     ..........$.....
	...
    986c:	00000007 00000001 00010000 00000000     ................
    987c:	00000001 000f00e0 00000000 00000001     ................
    988c:	00010000 00000000 00000001 00000000     ................
	...
    98b0:	00000002 00000040 00200000 00000000     ....@..... .....
	...
    98f4:	00000004 00000001 00010000 00000000     ................
    9904:	00000001 00010000 00000000 00000000     ................
	...
    9938:	00000002 00000000 00200000 00000000     .......... .....
	...
    997c:	00000003 0000003c 000300c0 003c0000     ....<.........<.
	...
    99c0:	00e00007 00000007 00180018 00040000     ................
    99d0:	00000020 00200004 00040000 00000020      ..... ..... ...
    99e0:	00180018 00e00000 00000007 00000000     ................
	...
    9a04:	00000004 00000000 00000008 00080000     ................
    9a14:	00000000 003f00fc 00000000 00000000     ......?.........
	...
    9a48:	00300007 00000030 00280008 00040000     ..0.0.....(.....
    9a58:	00000024 00220004 00040000 00000021     $.....".....!...
    9a68:	00200088 00700000 00000020 00000000     .. ...p. .......
	...
    9a8c:	00300007 0000000c 00100008 00840000     ..0.............
    9a9c:	00000020 00200084 00840000 00000020      ..... ..... ...
    9aac:	00110048 00300000 0000000e 00000000     H.....0.........
	...
    9ad0:	00000007 00000006 00050000 00c00000     ................
    9ae0:	00000004 00040020 00180000 00000004     .... ...........
    9af0:	003f00fc 00000000 00000004 00000000     ..?.............
	...
    9b14:	00fc0007 0000000d 00100084 00440000     ..............D.
    9b24:	00000020 00200044 00440000 00000020      ...D. ...D. ...
    9b34:	00100084 00040000 0000000f 00000000     ................
	...
    9b58:	00f00007 0000000f 00100088 00440000     ..............D.
    9b68:	00000020 00200044 00440000 00000020      ...D. ...D. ...
    9b78:	00100088 00100000 0000000f 00000000     ................
	...
    9b9c:	00040007 00000000 00000004 00040000     ................
    9bac:	00000000 003c0004 00840000 00000003     ......<.........
    9bbc:	00000064 001c0000 00000000 00000000     d...............
	...
    9be0:	00300007 0000000e 00110048 00840000     ..0.....H.......
    9bf0:	00000020 00200084 00840000 00000020      ..... ..... ...
    9c00:	00110048 00300000 0000000e 00000000     H.....0.........
	...
    9c24:	00f00007 00000008 00110008 00040000     ................
    9c34:	00000022 00220004 00040000 00000022     "....."....."...
    9c44:	00110008 00f00000 0000000f 00000000     ................
	...
    9c68:	00000002 00000000 00200020 00000000     ........ . .....
	...
    9cac:	00000002 00000040 00200020 00000000     ....@... . .....
	...
    9cf0:	00000007 00000001 00020080 00800000     ................
    9d00:	00000002 00040040 00400000 00000004     ....@.....@.....
    9d10:	00080020 00200000 00000008 00000000      ..... .........
	...
    9d34:	00400007 00000002 00020040 00400000     ..@.....@.....@.
    9d44:	00000002 00020040 00400000 00000002     ....@.....@.....
    9d54:	00020040 00400000 00000002 00000000     @.....@.........
	...
    9d78:	00200007 00000008 00080020 00400000     .. ..... .....@.
    9d88:	00000004 00040040 00800000 00000002     ....@...........
    9d98:	00020080 00000000 00000001 00000000     ................
	...
    9dbc:	00300007 00000000 00000008 00040000     ..0.............
    9dcc:	00000000 00260004 00040000 00000001     ......&.........
    9ddc:	00000088 00700000 00000000 00000000     ......p.........
	...
    9e00:	0080000a 00000007 00080060 00100000     ........`.......
    9e10:	00000010 00100008 00880000 00000023     ............#...
    9e20:	00240044 00240000 00000024 00240024     D.$...$.$...$.$.
    9e30:	00240000 00000022 002700c4 00000000     ..$.".....'.....
    9e40:	00000000 0000000b 00000030 000c0000     ........0.......
    9e50:	00000000 00000007 000400c0 00300000     ..............0.
    9e60:	00000004 0004000c 00300000 00000004     ..........0.....
    9e70:	000400c0 00000000 00000007 000c0000     ................
    9e80:	00000000 00000030 00000009 00000000     ....0...........
    9e90:	003f00fc 00840000 00000020 00200084     ..?..... ..... .
    9ea0:	00840000 00000020 00200084 00840000     .... ..... .....
    9eb0:	00000020 00110048 00300000 0000000e      ...H.....0.....
	...
    9ecc:	00e0000a 00000007 00180018 00080000     ................
    9edc:	00000010 00200004 00040000 00000020     ...... ..... ...
    9eec:	00200004 00040000 00000020 00100008     .. ..... .......
    9efc:	00180000 00000018 00040020 00000000     ........ .......
    9f0c:	00000000 0000000a 00000000 003f00fc     ..............?.
    9f1c:	00040000 00000020 00200004 00040000     .... ..... .....
    9f2c:	00000020 00200004 00040000 00000020      ..... ..... ...
    9f3c:	00100008 00180000 00000018 000700e0     ................
	...
    9f54:	00000009 00000000 003f00fc 00840000     ..........?.....
    9f64:	00000020 00200084 00840000 00000020      ..... ..... ...
    9f74:	00200084 00840000 00000020 00200084     .. ..... ..... .
    9f84:	00040000 00000020 00000000 00000000     .... ...........
    9f94:	00000000 00000009 00000000 003f00fc     ..............?.
    9fa4:	00840000 00000000 00000084 00840000     ................
    9fb4:	00000000 00000084 00840000 00000000     ................
    9fc4:	00000084 00040000 00000000 00000000     ................
	...
    9fdc:	00e0000a 00000007 00180018 00080000     ................
    9fec:	00000010 00200004 00040000 00000020     ...... ..... ...
    9ffc:	00210004 00040000 00000021 00110008     ..!.....!.......
    a00c:	00180000 00000019 003f0020 00000000     ........ .?.....
    a01c:	00000000 00000009 00000000 003f00fc     ..............?.
    a02c:	00800000 00000000 00000080 00800000     ................
    a03c:	00000000 00000080 00800000 00000000     ................
    a04c:	00000080 00fc0000 0000003f 00000000     ........?.......
	...
    a064:	00000002 00000000 003f00fc 00000000     ..........?.....
	...
    a0a8:	00000005 00000020 00200000 00000000     .... ..... .....
    a0b8:	00000020 00200000 00fc0000 0000001f      ..... .........
	...
    a0ec:	00000009 00000000 003f00fc 00800000     ..........?.....
    a0fc:	00000000 00010040 00200000 00000002     ....@..... .....
    a10c:	00040010 00080000 00000008 00100004     ................
    a11c:	00000000 00000020 00000000 00000000     .... ...........
    a12c:	00000000 00000008 00000000 003f00fc     ..............?.
    a13c:	00000000 00000020 00200000 00000000     .... ..... .....
    a14c:	00000020 00200000 00000000 00000020      ..... ..... ...
    a15c:	00200000 00000000 00000000 00000000     .. .............
	...
    a174:	0000000a 00000000 003f00fc 00300000     ..........?...0.
    a184:	00000000 000000c0 00000000 00000003     ................
    a194:	000c0000 00000000 00000003 000000c0     ................
    a1a4:	00300000 00000000 003f00fc 00000000     ..0.......?.....
    a1b4:	00000000 00000008 00000000 003f00fc     ..............?.
    a1c4:	00180000 00000000 00000060 00800000     ........`.......
    a1d4:	00000001 00060000 00000000 00000018     ................
    a1e4:	003f00fc 00000000 00000000 00000000     ..?.............
	...
    a1fc:	00e0000a 00000007 00180018 00080000     ................
    a20c:	00000010 00200004 00040000 00000020     ...... ..... ...
    a21c:	00200004 00040000 00000020 00100008     .. ..... .......
    a22c:	00180000 00000018 000700e0 00000000     ................
    a23c:	00000000 00000009 00000000 003f00fc     ..............?.
    a24c:	00040000 00000001 00010004 00040000     ................
    a25c:	00000001 00010004 00040000 00000001     ................
    a26c:	00000088 00700000 00000000 00000000     ......p.........
	...
    a284:	00e0000a 00000007 00180018 00080000     ................
    a294:	00000010 00200004 00040000 00000020     ...... ..... ...
    a2a4:	00240004 00040000 00000028 00100008     ..$.....(.......
    a2b4:	00180000 00000038 004700e0 00000000     ....8.....G.....
    a2c4:	00000000 0000000a 00000000 003f00fc     ..............?.
    a2d4:	00040000 00000001 00010004 00040000     ................
    a2e4:	00000001 00010004 00040000 00000001     ................
    a2f4:	00020088 00700000 0000001c 00200000     ......p....... .
	...
    a30c:	00300009 00000008 00100048 00840000     ..0.....H.......
    a31c:	00000020 00200084 00840000 00000020      ..... ..... ...
    a32c:	00200084 00840000 00000020 00110008     .. ..... .......
    a33c:	00100000 0000000e 00000000 00000000     ................
    a34c:	00000000 00040008 00000000 00000004     ................
    a35c:	00040000 00000000 003f00fc 00040000     ..........?.....
    a36c:	00000000 00000004 00040000 00000000     ................
    a37c:	00000004 00000000 00000000 00000000     ................
	...
    a394:	00000009 00000000 000f00fc 00000000     ................
    a3a4:	00000010 00200000 00000000 00000020     ...... ..... ...
    a3b4:	00200000 00000000 00000020 00100000     .. ..... .......
    a3c4:	00fc0000 0000000f 00000000 00000000     ................
    a3d4:	00000000 000c000a 00000000 00000030     ............0...
    a3e4:	00c00000 00000000 00030000 00000000     ................
    a3f4:	0000000c 00300000 00000000 0000000c     ......0.........
    a404:	00030000 00c00000 00000000 00000030     ............0...
	...
    a41c:	0070000a 00000000 00010080 00000000     ..p.............
    a42c:	00000006 00380000 00000000 00000006     ......8.........
    a43c:	000100c0 00380000 00000000 000100c0     ......8.........
    a44c:	00000000 00000006 00380000 00000000     ..........8.....
    a45c:	00000000 0008000a 00000010 00080010     ................
    a46c:	00200000 00000004 00020040 00800000     .. .....@.......
    a47c:	00000001 00020040 00200000 00000004     ....@..... .....
    a48c:	00080010 00080000 00000010 00200004     .............. .
	...
    a4a4:	0008000a 00000000 00000010 00200000     .............. .
    a4b4:	00000000 00000040 00800000 0000003f     ....@.......?...
    a4c4:	00000040 00200000 00000000 00000010     @..... .........
    a4d4:	00080000 00000000 00000004 00000000     ................
    a4e4:	00000000 00040009 00000028 00240004     ........(.....$.
    a4f4:	00040000 00000022 00210004 00840000     ....".....!.....
    a504:	00000020 00200044 00240000 00000020      ...D. ...$. ...
    a514:	00200014 000c0000 00000000 00000000     .. .............
	...
    a52c:	00fc0002 000100ff 00000004 00000001     ................
	...
    a570:	00c00003 00000003 003c0000 00000000     ..........<.....
    a580:	00000040 00000000 00000000 00000000     @...............
	...
    a5b4:	00040002 00010000 00ff00fc 00000001     ................
	...
    a5f8:	00080005 00000000 00000004 00020000     ................
    a608:	00000000 00000004 00080000 00000000     ................
	...
    a63c:	00000008 00000080 00800000 00000000     ................
    a64c:	00000080 00800000 00000000 00000080     ................
    a65c:	00800000 00000000 00000080 00800000     ................
	...
    a680:	00020003 00000000 00000004 00080000     ................
	...
    a6c4:	00400008 0000001c 00220020 00200000     ..@..... ."... .
    a6d4:	00000022 00220020 00200000 00000022     "... ."... ."...
    a6e4:	00220020 00c00000 0000001f 00200000      ."........... .
	...
    a708:	00fc0007 0000003f 00100040 00200000     ....?...@..... .
    a718:	00000020 00200020 00200000 00000020      ... . ... . ...
    a728:	00100040 00800000 0000000f 00000000     @...............
	...
    a74c:	00800007 0000000f 00100040 00200000     ........@..... .
    a75c:	00000020 00200020 00200000 00000020      ... . ... . ...
    a76c:	00100040 00800000 00000008 00000000     @...............
	...
    a790:	00800007 0000000f 00100040 00200000     ........@..... .
    a7a0:	00000020 00200020 00200000 00000020      ... . ... . ...
    a7b0:	00100040 00fc0000 0000003f 00000000     @.......?.......
	...
    a7d4:	00800007 0000000f 00120040 00200000     ........@..... .
    a7e4:	00000022 00220020 00200000 00000022     "... ."... ."...
    a7f4:	00120040 00800000 0000000b 00000000     @...............
	...
    a818:	00200004 00000000 003f00f8 00240000     .. .......?...$.
    a828:	00000000 00000024 00000000 00000000     ....$...........
	...
    a85c:	00800007 0000000f 00100040 00200002     ........@..... .
    a86c:	00020020 00200020 00200002 00020020      ... . ... . ...
    a87c:	00100040 00e00001 000000ff 00000000     @...............
	...
    a8a0:	00fc0007 0000003f 00000040 00200000     ....?...@..... .
    a8b0:	00000000 00000020 00200000 00000000     .... ..... .....
    a8c0:	00000040 00800000 0000003f 00000000     @.......?.......
	...
    a8e4:	00e40001 0000003f 00000000 00000000     ....?...........
	...
    a928:	00e40001 000100ff 00000000 00000000     ................
	...
    a96c:	00fc0007 0000003f 00020000 00000000     ....?...........
    a97c:	00000003 00040080 00400000 00000008     ..........@.....
    a98c:	00100020 00000000 00000020 00000000      ....... .......
	...
    a9b0:	00fc0001 0000003f 00000000 00000000     ....?...........
	...
    a9f4:	00e0000a 0000003f 00000040 00200000     ....?...@..... .
    aa04:	00000000 00000020 00400000 00000000     .... .....@.....
    aa14:	003f0080 00400000 00000000 00000020     ..?...@..... ...
    aa24:	00200000 00000000 00000040 00000000     .. .....@.......
    aa34:	00000000 00e00007 0000003f 00000040     ........?...@...
    aa44:	00200000 00000000 00000020 00200000     .. ..... ..... .
    aa54:	00000000 00000040 00800000 0000003f     ....@.......?...
	...
    aa7c:	00800007 0000000f 00100040 00200000     ........@..... .
    aa8c:	00000020 00200020 00200000 00000020      ... . ... . ...
    aa9c:	00100040 00800000 0000000f 00000000     @...............
	...
    aac0:	00e00007 000300ff 00100040 00200000     ........@..... .
    aad0:	00000020 00200020 00200000 00000020      ... . ... . ...
    aae0:	00100040 00800000 0000000f 00000000     @...............
	...
    ab04:	00800007 0000000f 00100040 00200000     ........@..... .
    ab14:	00000020 00200020 00200000 00000020      ... . ... . ...
    ab24:	00100040 00e00000 000300ff 00000000     @...............
	...
    ab48:	00e00004 0000003f 00000040 00200000     ....?...@..... .
    ab58:	00000000 00000020 00000000 00000000     .... ...........
	...
    ab8c:	00c00006 00000011 00220020 00200000     ........ ."... .
    ab9c:	00000022 00220020 00200000 00000022     "... ."... ."...
    abac:	001c0040 00000000 00000000 00000000     @...............
	...
    abd0:	00200004 00000000 001f00fc 00200000     .. ........... .
    abe0:	00000020 00000020 00000000 00000000      ... ...........
	...
    ac14:	00e00007 0000000f 00100000 00000000     ................
    ac24:	00000020 00200000 00000000 00000020      ..... ..... ...
    ac34:	00100000 00e00000 0000003f 00000000     ........?.......
	...
    ac58:	00800006 00000001 00060000 00000000     ................
    ac68:	00000038 00060000 00800000 00000001     8...............
    ac78:	00000060 00000000 00000000 00000000     `...............
	...
    ac9c:	0080000a 00000001 00060000 00000000     ................
    acac:	00000038 00060000 00c00000 00000001     8...............
    acbc:	00060000 00000000 00000038 00060000     ........8.......
    accc:	00800000 00000001 00000060 00000000     ........`.......
    acdc:	00000000 00c00006 00000018 00050000     ................
    acec:	00000000 00000002 00050000 00c00000     ................
    acfc:	00000018 00200020 00000000 00000000     .... . .........
	...
    ad24:	00800006 00010081 00660000 00000000     ..........f.....
    ad34:	00000018 00060000 00800000 00000001     ................
    ad44:	00000060 00000000 00000000 00000000     `...............
	...
    ad68:	00200006 00000030 00280020 00200000     .. .0... .(... .
    ad78:	00000026 00210020 00a00000 00000020     &... .!..... ...
    ad88:	00200060 00000000 00000000 00000000     `. .............
	...
    adac:	00000003 00000002 00fd00f8 00040000     ................
    adbc:	00010000 00000000 00000000 00000000     ................
	...
    adf0:	00000002 00000000 007f00fc 00000000     ................
	...
    ae34:	00040003 00010000 00fd00f8 00000000     ................
    ae44:	00000002 00000000 00000000 00000000     ................
	...
    ae78:	000c0007 00000000 00000002 00020000     ................
    ae88:	00000000 00000004 00080000 00000000     ................
    ae98:	00000008 00060000 00000000 00000000     ................
	...
    aebc:	00fc0003 0000003f 003f00fc 00fc0000     ....?.....?.....
    aecc:	0000003f 00000000 00000000 00000000     ?...............
	...
    af00:	00000001 00000000 00000000 00000000     ................
	...
    af44:	00000001 00000000 00000000 00000000     ................
	...
    af88:	00000001 00000000 00000000 00000000     ................
	...
    afcc:	00000001 00000000 00000000 00000000     ................
	...
    b010:	00000001 00000000 00000000 00000000     ................
	...
    b054:	00000001 00000000 00000000 00000000     ................
	...
    b098:	00000001 00000000 00000000 00000000     ................
	...
    b0dc:	00000001 00000000 00000000 00000000     ................
	...
    b120:	00000001 00000000 00000000 00000000     ................
	...
    b164:	00000001 00000000 00000000 00000000     ................
	...
    b1a8:	00000001 00000000 00000000 00000000     ................
	...
    b1ec:	00000001 00000000 00000000 00000000     ................
	...
    b230:	00000001 00000000 00000000 00000000     ................
	...
    b274:	00000001 00000000 00000000 00000000     ................
	...
    b2b8:	00000001 00000000 00000000 00000000     ................
	...
    b2fc:	00000001 00000000 00000000 00000000     ................
	...
    b340:	00000001 00000000 00000000 00000000     ................
	...
    b384:	00000001 00000000 00000000 00000000     ................
	...
    b3c8:	00000001 00000000 00000000 00000000     ................
	...
    b40c:	00000001 00000000 00000000 00000000     ................
	...
    b450:	00000001 00000000 00000000 00000000     ................
	...
    b494:	00000001 00000000 00000000 00000000     ................
	...
    b4d8:	00000001 00000000 00000000 00000000     ................
	...
    b51c:	00000001 00000000 00000000 00000000     ................
	...
    b560:	00000001 00000000 00000000 00000000     ................
	...
    b5a4:	00000001 00000000 00000000 00000000     ................
	...
    b5e8:	00000001 00000000 00000000 00000000     ................
	...
    b62c:	00000001 00000000 00000000 00000000     ................
	...
    b670:	00000001 00000000 00000000 00000000     ................
	...
    b6b4:	00000001 00000000 00000000 00000000     ................
	...
    b6f8:	00000001 00000000 00000000 00000000     ................
	...
    b73c:	00000001 00000000 00000000 00000000     ................
	...
    b780:	00000001 00000000 00000000 00000000     ................
	...
    b7c4:	00200001 000100ff 00000000 00000000     .. .............
	...
    b808:	00800007 0000006f 00100040 00200000     ....o...@..... .
    b818:	0000002c 00220020 00a00000 00000021     ,... .".....!...
    b828:	00100040 00b00000 00000008 00000000     @...............
	...
    b84c:	00800007 00000020 003800b8 00c40000     .... .....8.....
    b85c:	00000027 00200084 00840000 00000020     '..... ..... ...
    b86c:	00200098 00000000 00000020 00000000     .. ..... .......
	...
    b890:	00080007 00000002 000100f0 00100000     ................
    b8a0:	00000001 00010010 00100000 00000001     ................
    b8b0:	000100f0 00080000 00000002 00000000     ................
	...
    b8d4:	00500008 00000002 00020060 00400000     ..P.....`.....@.
    b8e4:	00000002 003f00c0 00400000 00000002     ......?...@.....
    b8f4:	00020060 00500000 00000002 0002004c     `.....P.....L...
	...
    b918:	00000002 00000000 00fc00fc 00000000     ................
	...
    b95c:	00c00007 00000000 00210038 00240000     ........8.!...$.
    b96c:	00000042 00440044 00840000 00000048     B...D.D.....H...
    b97c:	00390008 00000000 00000006 00000000     ..9.............
	...
    b9a0:	00040003 00000000 00000000 00040000     ................
	...
    b9e4:	0018000a 00000018 00100008 00c40000     ................
    b9f4:	00000023 00240024 00240000 00000024     #...$.$...$.$...
    ba04:	00240024 00440000 00000022 00100008     $.$...D.".......
    ba14:	00180000 00000018 000f00e0 00000000     ................
    ba24:	00000000 00200004 00000001 00010054     ...... .....T...
    ba34:	00540000 00000001 00010078 00000000     ..T.....x.......
	...
    ba6c:	00000007 00000004 000a0000 00000000     ................
    ba7c:	00000011 00000000 00000000 00000004     ................
    ba8c:	000a0000 00000000 00000011 00000000     ................
	...
    bab0:	00000007 00000001 00010000 00000000     ................
    bac0:	00000001 00010000 00000000 00000001     ................
    bad0:	00010000 00000000 00000007 00000000     ................
	...
    baf4:	00000004 00000002 00020000 00000000     ................
    bb04:	00000002 00020000 00000000 00000000     ................
	...
    bb38:	000c000a 0000000c 00080004 00f20000     ................
    bb48:	00000013 00100092 00920000 00000010     ................
    bb58:	00110092 00620000 00000012 00080004     ......b.........
    bb68:	000c0000 0000000c 000300f0 00000000     ................
    bb78:	00000000 00010008 00000000 00000001     ................
    bb88:	00010000 00000000 00000001 00010000     ................
    bb98:	00000000 00000001 00010000 00000000     ................
    bba8:	00000001 00000000 00000000 00000000     ................
	...
    bbc0:	00180004 00000000 00000024 00240000     ........$.....$.
    bbd0:	00000000 00000018 00000000 00000000     ................
	...
    bc04:	00000007 00000021 00210000 00000000     ....!.....!.....
    bc14:	00000021 002f00e0 00000000 00000021     !...../.....!...
    bc24:	00210000 00000000 00000021 00000000     ..!.....!.......
	...
    bc48:	00880004 00000000 000000c4 00a40000     ................
    bc58:	00000000 00000098 00000000 00000000     ................
	...
    bc8c:	00480004 00000000 00000084 00940000     ..H.............
    bc9c:	00000000 00000068 00000000 00000000     ....h...........
	...
    bcd0:	00080003 00000000 00000004 00020000     ................
	...
    bd14:	00e00007 000100ff 00200000 00000000     .......... .....
    bd24:	00000020 00200000 00000000 00000020      ..... ..... ...
    bd34:	001f00e0 00000000 00000020 00000000     ........ .......
	...
    bd58:	00780007 00000000 000000fc 00fc0000     ..x.............
    bd68:	00000000 007f00fc 00040000 00000000     ................
    bd78:	007f00fc 00040000 00000000 00000000     ................
	...
    bd9c:	00000002 00000000 00000080 00000000     ................
	...
    bde0:	00000003 00020000 00400000 00000002     ..........@.....
    bdf0:	00010080 00000000 00000000 00000000     ................
	...
    be24:	00080002 00000000 000000fc 00000000     ................
	...
    be68:	00380004 00000001 00010044 00440000     ..8.....D.....D.
    be78:	00000001 00010038 00000000 00000000     ....8...........
	...
    beac:	00000007 00000011 000a0000 00000000     ................
    bebc:	00000004 00000000 00000000 00000011     ................
    becc:	000a0000 00000000 00000004 00000000     ................
	...
    bef0:	0008000a 00000010 000800fc 00000000     ................
    bf00:	00000004 00020000 00000000 00000001     ................
    bf10:	00000080 00400000 00000018 00140020     ......@..... ...
    bf20:	00100000 00000012 003f0008 00000000     ..........?.....
    bf30:	00000000 0008000a 00000010 000800fc     ................
    bf40:	00000000 00000004 00020000 00000000     ................
    bf50:	00000001 00000080 00400000 00000022     ..........@."...
    bf60:	00310020 00100000 00000029 00260008      .1.....).....&.
	...
    bf78:	0048000a 00000010 00080084 00940000     ..H.............
    bf88:	00000004 00020068 00000000 00000001     ....h...........
    bf98:	00000080 00400000 00000018 00140020     ......@..... ...
    bfa8:	00100000 00000012 003f0008 00000000     ..........?.....
    bfb8:	00000000                                ....

0000bfbc <_ZL17MS_Sans_Serif8x18>:
    bfbc:	00000005 00000000 00000000 00000000     ................
	...
    bfec:	00020000 00000000 00fc0000 00000027     ............'...
	...
    c020:	003c0004 00000000 00000000 00000000     ..<.............
    c030:	00000000 0000003c 00000000 00000000     ....<...........
	...
    c050:	00070000 003c0020 00e00000 00000007     .... .<.........
    c060:	0004003c 00200000 0000003c 000700e0     <..... .<.......
    c070:	003c0000 00000004 00000020 00000000     ..<..... .......
    c080:	00000000 00300007 00000008 00100048     ......0.....H...
    c090:	00840000 00000020 007f00fe 00840000     .... ...........
    c0a0:	00000020 00110008 00100000 0000000e      ...............
    c0b0:	00000000 00080000 00200038 00440000     ........8. ...D.
    c0c0:	00000010 00080044 00440000 00000004     ....D.....D.....
    c0d0:	00020038 00000000 00000001 00000080     8...............
    c0e0:	00400000 0000001c 00000008 0000000e     ..@.............
    c0f0:	00110038 00c40000 00000020 002000c4     8....... ..... .
    c100:	00380000 00000021 00220000 00000000     ..8.!.....".....
    c110:	00000014 00080000 00010000 0000003c     ............<...
	...
    c14c:	00e00003 0000001f 00e0001c 00020000     ................
    c15c:	00010000 00000000 00000000 00000000     ................
	...
    c17c:	00030000 00000002 001c0001 000000e0     ................
    c18c:	001f00e0 00000000 00000000 00000000     ................
	...
    c1b0:	00240005 00000000 00000018 000e0000     ..$.............
    c1c0:	00000000 00000018 00240000 00000000     ..........$.....
	...
    c1e0:	00070000 00010000 00000000 00000001     ................
    c1f0:	00010000 00e00000 0000000f 00010000     ................
    c200:	00000000 00000001 00010000 00000000     ................
    c210:	00000000 00000002 00000040 00200000     ........@..... .
	...
    c244:	00040000 00010000 00000000 00000001     ................
    c254:	00010000 00000000 00000001 00000000     ................
	...
    c278:	00000002 00000000 00200000 00000000     .......... .....
	...
    c2a8:	00030000 003c0000 00c00000 00000003     ......<.........
    c2b8:	0000003c 00000000 00000000 00000000     <...............
	...
    c2dc:	00e00007 00000007 00180018 00040000     ................
    c2ec:	00000020 00200004 00040000 00000020      ..... ..... ...
    c2fc:	00180018 00e00000 00000007 00000000     ................
    c30c:	00040000 00000000 00080000 00000000     ................
    c31c:	00000008 00fc0000 0000003f 00000000     ........?.......
	...
    c340:	00300007 00000030 00280008 00040000     ..0.0.....(.....
    c350:	00000024 00220004 00040000 00000021     $.....".....!...
    c360:	00200088 00700000 00000020 00000000     .. ...p. .......
    c370:	00070000 000c0030 00080000 00000010     ....0...........
    c380:	00200084 00840000 00000020 00200084     .. ..... ..... .
    c390:	00480000 00000011 000e0030 00000000     ..H.....0.......
    c3a0:	00000000 00000007 00000006 00050000     ................
    c3b0:	00c00000 00000004 00040020 00180000     ........ .......
    c3c0:	00000004 003f00fc 00000000 00000004     ......?.........
    c3d0:	00000000 00070000 000d00fc 00840000     ................
    c3e0:	00000010 00200044 00440000 00000020     ....D. ...D. ...
    c3f0:	00200044 00840000 00000010 000f0004     D. .............
	...
    c408:	00f00007 0000000f 00100088 00440000     ..............D.
    c418:	00000020 00200044 00440000 00000020      ...D. ...D. ...
    c428:	00100088 00100000 0000000f 00000000     ................
    c438:	00070000 00000004 00040000 00000000     ................
    c448:	00000004 00040000 0000003c 00030084     ........<.......
    c458:	00640000 00000000 0000001c 00000000     ..d.............
    c468:	00000000 00300007 0000000e 00110048     ......0.....H...
    c478:	00840000 00000020 00200084 00840000     .... ..... .....
    c488:	00000020 00110048 00300000 0000000e      ...H.....0.....
    c498:	00000000 00070000 000800f0 00080000     ................
    c4a8:	00000011 00220004 00040000 00000022     ......"....."...
    c4b8:	00220004 00080000 00000011 000f00f0     ..".............
	...
    c4d0:	00000002 00000000 00200020 00000000     ........ . .....
	...
    c500:	00020000 00400000 00200000 00000020     ......@... . ...
	...
    c534:	00000007 00000001 00020080 00800000     ................
    c544:	00000002 00040040 00400000 00000004     ....@.....@.....
    c554:	00080020 00200000 00000008 00000000      ..... .........
    c564:	00070000 00020040 00400000 00000002     ....@.....@.....
    c574:	00020040 00400000 00000002 00020040     @.....@.....@...
    c584:	00400000 00000002 00020040 00000000     ..@.....@.......
    c594:	00000000 00200007 00000008 00080020     ...... ..... ...
    c5a4:	00400000 00000004 00040040 00800000     ..@.....@.......
    c5b4:	00000002 00020080 00000000 00000001     ................
    c5c4:	00000000 00070000 00000030 00080000     ........0.......
    c5d4:	00000000 00000004 00040000 00000026     ............&...
    c5e4:	00010004 00880000 00000000 00000070     ............p...
	...
    c5fc:	00800008 00000007 00080060 00100000     ........`.......
    c60c:	00000010 00100008 00880000 00000023     ............#...
    c61c:	00240044 00240000 00000024 00240024     D.$...$.$...$.$.
    c62c:	00080000 00300000 00000000 0000000c     ......0.........
    c63c:	00070000 00c00000 00000004 00040030     ............0...
    c64c:	000c0000 00000004 00040030 00c00000     ........0.......
    c65c:	00000004 00000008 00000000 003f00fc     ..............?.
    c66c:	00840000 00000020 00200084 00840000     .... ..... .....
    c67c:	00000020 00200084 00840000 00000020      ..... ..... ...
    c68c:	00110048 00080000 000700e0 00180000     H...............
    c69c:	00000018 00100008 00040000 00000020     ............ ...
    c6ac:	00200004 00040000 00000020 00200004     .. ..... ..... .
    c6bc:	00080000 00000010 00000008 00000000     ................
    c6cc:	003f00fc 00040000 00000020 00200004     ..?..... ..... .
    c6dc:	00040000 00000020 00200004 00040000     .... ..... .....
    c6ec:	00000020 00100008 00080000 00000000      ...............
    c6fc:	00fc0000 0000003f 00200084 00840000     ....?..... .....
    c70c:	00000020 00200084 00840000 00000020      ..... ..... ...
    c71c:	00200084 00840000 00000020 00000008     .. ..... .......
    c72c:	00000000 003f00fc 00840000 00000000     ......?.........
    c73c:	00000084 00840000 00000000 00000084     ................
    c74c:	00840000 00000000 00000084 00080000     ................
    c75c:	000700e0 00180000 00000018 00100008     ................
    c76c:	00040000 00000020 00200004 00040000     .... ..... .....
    c77c:	00000021 00210004 00080000 00000011     !.....!.........
    c78c:	00000008 00000000 003f00fc 00800000     ..........?.....
    c79c:	00000000 00000080 00800000 00000000     ................
    c7ac:	00000080 00800000 00000000 00000080     ................
    c7bc:	00020000 00000000 00fc0000 0000003f     ............?...
	...
    c7f0:	00000005 00000020 00200000 00000000     .... ..... .....
    c800:	00000020 00200000 00fc0000 0000001f      ..... .........
	...
    c820:	00080000 00000000 00fc0000 0000003f     ............?...
    c830:	00000080 00400000 00000001 00020020     ......@..... ...
    c840:	00100000 00000004 00080008 00040000     ................
    c850:	00000010 00000008 00000000 003f00fc     ..............?.
    c860:	00000000 00000020 00200000 00000000     .... ..... .....
    c870:	00000020 00200000 00000000 00000020      ..... ..... ...
    c880:	00200000 00080000 00000000 00fc0000     .. .............
    c890:	0000003f 00000030 00c00000 00000000     ?...0...........
    c8a0:	00030000 00000000 0000000c 00030000     ................
    c8b0:	00c00000 00000000 00000008 00000000     ................
    c8c0:	003f00fc 00180000 00000000 00000060     ..?.........`...
    c8d0:	00800000 00000001 00060000 00000000     ................
    c8e0:	00000018 003f00fc 00080000 000700e0     ......?.........
    c8f0:	00180000 00000018 00100008 00040000     ................
    c900:	00000020 00200004 00040000 00000020      ..... ..... ...
    c910:	00200004 00080000 00000010 00000008     .. .............
    c920:	00000000 003f00fc 00040000 00000001     ......?.........
    c930:	00010004 00040000 00000001 00010004     ................
    c940:	00040000 00000001 00000088 00080000     ................
    c950:	000700e0 00180000 00000018 00100008     ................
    c960:	00040000 00000020 00200004 00040000     .... ..... .....
    c970:	00000024 00280004 00080000 00000010     $.....(.........
    c980:	00000008 00000000 003f00fc 00040000     ..........?.....
    c990:	00000001 00010004 00040000 00000001     ................
    c9a0:	00010004 00040000 00000001 00020088     ................
    c9b0:	00080000 00080030 00480000 00000010     ....0.....H.....
    c9c0:	00200084 00840000 00000020 00200084     .. ..... ..... .
    c9d0:	00840000 00000020 00200084 00080000     .... ..... .....
    c9e0:	00000011 00040008 00000000 00000004     ................
    c9f0:	00040000 00000000 003f00fc 00040000     ..........?.....
    ca00:	00000000 00000004 00040000 00000000     ................
    ca10:	00000004 00080000 00000000 00fc0000     ................
    ca20:	0000000f 00100000 00000000 00000020     ............ ...
    ca30:	00200000 00000000 00000020 00200000     .. ..... ..... .
    ca40:	00000000 00000010 000c0008 00000000     ................
    ca50:	00000030 00c00000 00000000 00030000     0...............
    ca60:	00000000 0000000c 00300000 00000000     ..........0.....
    ca70:	0000000c 00030000 00080000 00000070     ............p...
    ca80:	00800000 00000001 00060000 00000000     ................
    ca90:	00000038 00060000 00c00000 00000001     8...............
    caa0:	00000038 00c00000 00000001 00080008     8...............
    cab0:	00000010 00080010 00200000 00000004     .......... .....
    cac0:	00020040 00800000 00000001 00020040     @...........@...
    cad0:	00200000 00000004 00080010 00080000     .. .............
    cae0:	00000008 00100000 00000000 00000020     ............ ...
    caf0:	00400000 00000000 003f0080 00400000     ..@.......?...@.
    cb00:	00000000 00000020 00100000 00000000     .... ...........
    cb10:	00040008 00000028 00240004 00040000     ....(.....$.....
    cb20:	00000022 00210004 00840000 00000020     ".....!..... ...
    cb30:	00200044 00240000 00000020 00200014     D. ...$. ..... .
    cb40:	00020000 00ff00fc 00040001 00010000     ................
	...
    cb74:	00c00003 00000003 003c0000 00000000     ..........<.....
    cb84:	00000040 00000000 00000000 00000000     @...............
	...
    cba4:	00020000 00000004 00fc0001 000100ff     ................
	...
    cbd8:	00080005 00000000 00000004 00020000     ................
    cbe8:	00000000 00000004 00080000 00000000     ................
	...
    cc08:	00080000 00800000 00000000 00000080     ................
    cc18:	00800000 00000000 00000080 00800000     ................
    cc28:	00000000 00000080 00800000 00000000     ................
    cc38:	00000080 00020003 00000000 00000004     ................
    cc48:	00080000 00000000 00000000 00000000     ................
	...
    cc6c:	00080000 001c0040 00200000 00000022     ....@..... ."...
    cc7c:	00220020 00200000 00000022 00220020      ."... ."... .".
    cc8c:	00200000 00000022 001f00c0 00000000     .. ."...........
    cc9c:	00000020 00fc0007 0000003f 00100040      .......?...@...
    ccac:	00200000 00000020 00200020 00200000     .. . ... . ... .
    ccbc:	00000020 00100040 00800000 0000000f      ...@...........
    cccc:	00000000 00070000 000f0080 00400000     ..............@.
    ccdc:	00000010 00200020 00200000 00000020     .... . ... . ...
    ccec:	00200020 00400000 00000010 00080080      . ...@.........
	...
    cd04:	00800007 0000000f 00100040 00200000     ........@..... .
    cd14:	00000020 00200020 00200000 00000020      ... . ... . ...
    cd24:	00100040 00fc0000 0000003f 00000000     @.......?.......
    cd34:	00070000 000f0080 00400000 00000012     ..........@.....
    cd44:	00220020 00200000 00000022 00220020      ."... ."... .".
    cd54:	00400000 00000012 000b0080 00000000     ..@.............
    cd64:	00000000 00200004 00000000 003f00f8     ...... .......?.
    cd74:	00240000 00000000 00000024 00000000     ..$.....$.......
	...
    cd98:	00070000 000f0080 00400000 00020010     ..........@.....
    cda8:	00200020 00200002 00020020 00200020      . ... . ... . .
    cdb8:	00400002 00010010 00ff00e0 00000000     ..@.............
    cdc8:	00000000 00fc0007 0000003f 00000040     ........?...@...
    cdd8:	00200000 00000000 00000020 00200000     .. ..... ..... .
    cde8:	00000000 00000040 00800000 0000003f     ....@.......?...
    cdf8:	00000000 00010000 003f00e4 00000000     ..........?.....
	...
    ce30:	00e40001 000100ff 00000000 00000000     ................
	...
    ce60:	00070000 003f00fc 00000000 00000002     ......?.........
    ce70:	00030000 00800000 00000004 00080040     ............@...
    ce80:	00200000 00000010 00200000 00000000     .. ....... .....
    ce90:	00000000 00fc0001 0000003f 00000000     ........?.......
	...
    cec4:	00080000 003f00e0 00400000 00000000     ......?...@.....
    ced4:	00000020 00200000 00000000 00000040      ..... .....@...
    cee4:	00800000 0000003f 00000040 00200000     ....?...@..... .
    cef4:	00000000 00e00007 0000003f 00000040     ........?...@...
    cf04:	00200000 00000000 00000020 00200000     .. ..... ..... .
    cf14:	00000000 00000040 00800000 0000003f     ....@.......?...
    cf24:	00000000 00070000 000f0080 00400000     ..............@.
    cf34:	00000010 00200020 00200000 00000020     .... . ... . ...
    cf44:	00200020 00400000 00000010 000f0080      . ...@.........
	...
    cf5c:	00e00007 000300ff 00100040 00200000     ........@..... .
    cf6c:	00000020 00200020 00200000 00000020      ... . ... . ...
    cf7c:	00100040 00800000 0000000f 00000000     @...............
    cf8c:	00070000 000f0080 00400000 00000010     ..........@.....
    cf9c:	00200020 00200000 00000020 00200020      . ... . ... . .
    cfac:	00400000 00000010 00ff00e0 00000003     ..@.............
    cfbc:	00000000 00e00004 0000003f 00000040     ........?...@...
    cfcc:	00200000 00000000 00000020 00000000     .. ..... .......
	...
    cff0:	00060000 001100c0 00200000 00000022     .......... ."...
    d000:	00220020 00200000 00000022 00220020      ."... ."... .".
    d010:	00400000 0000001c 00000000 00000000     ..@.............
    d020:	00000000 00200004 00000000 001f00fc     ...... .........
    d030:	00200000 00000020 00000020 00000000     .. . ... .......
	...
    d054:	00070000 000f00e0 00000000 00000010     ................
    d064:	00200000 00000000 00000020 00200000     .. ..... ..... .
    d074:	00000000 00000010 003f00e0 00000000     ..........?.....
    d084:	00000000 00800006 00000001 00060000     ................
    d094:	00000000 00000038 00060000 00800000     ....8...........
    d0a4:	00000001 00000060 00000000 00000000     ....`...........
    d0b4:	00000000 00080000 00010080 00000000     ................
    d0c4:	00000006 00380000 00000000 00000006     ......8.........
    d0d4:	000100c0 00000000 00000006 00380000     ..............8.
    d0e4:	00000000 00000006 00c00006 00000018     ................
    d0f4:	00050000 00000000 00000002 00050000     ................
    d104:	00c00000 00000018 00200020 00000000     ........ . .....
	...
    d11c:	00060000 00810080 00000001 00000066     ............f...
    d12c:	00180000 00000000 00000006 00010080     ................
    d13c:	00600000 00000000 00000000 00000000     ..`.............
    d14c:	00000000 00200006 00000030 00280020     ...... .0... .(.
    d15c:	00200000 00000026 00210020 00a00000     .. .&... .!.....
    d16c:	00000020 00200060 00000000 00000000      ...`. .........
    d17c:	00000000 00030000 00020000 00f80000     ................
    d18c:	000000fd 00000004 00000001 00000000     ................
	...
    d1b4:	00000002 00000000 007f00fc 00000000     ................
	...
    d1e4:	00030000 00000004 00f80001 000000fd     ................
    d1f4:	00020000 00000000 00000000 00000000     ................
	...
    d218:	000c0007 00000000 00000002 00020000     ................
    d228:	00000000 00000004 00080000 00000000     ................
    d238:	00000008 00060000 00000000 00000000     ................
    d248:	00030000 003f00fc 00fc0000 0000003f     ......?.....?...
    d258:	003f00fc 00000000 00000000 00000000     ..?.............
	...
    d27c:	00000001 00000000 00000000 00000000     ................
	...
    d2ac:	00010000 00000000 00000000 00000000     ................
	...
    d2e0:	00000001 00000000 00000000 00000000     ................
	...
    d310:	00010000 00000000 00000000 00000000     ................
	...
    d344:	00000001 00000000 00000000 00000000     ................
	...
    d374:	00010000 00000000 00000000 00000000     ................
	...
    d3a8:	00000001 00000000 00000000 00000000     ................
	...
    d3d8:	00010000 00000000 00000000 00000000     ................
	...
    d40c:	00000001 00000000 00000000 00000000     ................
	...
    d43c:	00010000 00000000 00000000 00000000     ................
	...
    d470:	00000001 00000000 00000000 00000000     ................
	...
    d4a0:	00010000 00000000 00000000 00000000     ................
	...
    d4d4:	00000001 00000000 00000000 00000000     ................
	...
    d504:	00010000 00000000 00000000 00000000     ................
	...
    d538:	00000001 00000000 00000000 00000000     ................
	...
    d568:	00010000 00000000 00000000 00000000     ................
	...
    d59c:	00000001 00000000 00000000 00000000     ................
	...
    d5cc:	00010000 00000000 00000000 00000000     ................
	...
    d600:	00000001 00000000 00000000 00000000     ................
	...
    d630:	00010000 00000000 00000000 00000000     ................
	...
    d664:	00000001 00000000 00000000 00000000     ................
	...
    d694:	00010000 00000000 00000000 00000000     ................
	...
    d6c8:	00000001 00000000 00000000 00000000     ................
	...
    d6f8:	00010000 00000000 00000000 00000000     ................
	...
    d72c:	00000001 00000000 00000000 00000000     ................
	...
    d75c:	00010000 00000000 00000000 00000000     ................
	...
    d790:	00000001 00000000 00000000 00000000     ................
	...
    d7c0:	00010000 00000000 00000000 00000000     ................
	...
    d7f4:	00000001 00000000 00000000 00000000     ................
	...
    d824:	00010000 00000000 00000000 00000000     ................
	...
    d858:	00000001 00000000 00000000 00000000     ................
	...
    d888:	00010000 00000000 00000000 00000000     ................
	...
    d8bc:	00000001 00000000 00000000 00000000     ................
	...
    d8ec:	00010000 00ff0020 00000001 00000000     .... ...........
	...
    d920:	00800007 0000006f 00100040 00200000     ....o...@..... .
    d930:	0000002c 00220020 00a00000 00000021     ,... .".....!...
    d940:	00100040 00b00000 00000008 00000000     @...............
    d950:	00070000 00200080 00b80000 00000038     ...... .....8...
    d960:	002700c4 00840000 00000020 00200084     ..'..... ..... .
    d970:	00980000 00000020 00200000 00000000     .... ..... .....
    d980:	00000000 00080007 00000002 000100f0     ................
    d990:	00100000 00000001 00010010 00100000     ................
    d9a0:	00000001 000100f0 00080000 00000002     ................
    d9b0:	00000000 00080000 00020050 00600000     ........P.....`.
    d9c0:	00000002 00020040 00c00000 0000003f     ....@.......?...
    d9d0:	00020040 00600000 00000002 00020050     @.....`.....P...
    d9e0:	004c0000 00000002 00000002 00000000     ..L.............
    d9f0:	00fc00fc 00000000 00000000 00000000     ................
	...
    da18:	00070000 000000c0 00380000 00000021     ..........8.!...
    da28:	00420024 00440000 00000044 00480084     $.B...D.D.....H.
    da38:	00080000 00000039 00060000 00000000     ....9...........
    da48:	00000000 00040003 00000000 00000000     ................
    da58:	00040000 00000000 00000000 00000000     ................
	...
    da7c:	00080000 00180018 00080000 00000010     ................
    da8c:	002300c4 00240000 00000024 00240024     ..#...$.$...$.$.
    da9c:	00240000 00000024 00220044 00080000     ..$.$...D.".....
    daac:	00000010 00200004 00000001 00010054     ...... .....T...
    dabc:	00540000 00000001 00010078 00000000     ..T.....x.......
	...
    dae0:	00070000 00040000 00000000 0000000a     ................
    daf0:	00110000 00000000 00000000 00040000     ................
    db00:	00000000 0000000a 00110000 00000000     ................
    db10:	00000000 00000007 00000001 00010000     ................
    db20:	00000000 00000001 00010000 00000000     ................
    db30:	00000001 00010000 00000000 00000007     ................
    db40:	00000000 00040000 00020000 00000000     ................
    db50:	00000002 00020000 00000000 00000002     ................
	...
    db78:	000c0008 0000000c 00080004 00f20000     ................
    db88:	00000013 00100092 00920000 00000010     ................
    db98:	00110092 00620000 00000012 00080004     ......b.........
    dba8:	00080000 00000001 00010000 00000000     ................
    dbb8:	00000001 00010000 00000000 00000001     ................
    dbc8:	00010000 00000000 00000001 00010000     ................
    dbd8:	00000000 00180004 00000000 00000024     ............$...
    dbe8:	00240000 00000000 00000018 00000000     ..$.............
	...
    dc0c:	00070000 00210000 00000000 00000021     ......!.....!...
    dc1c:	00210000 00e00000 0000002f 00210000     ..!...../.....!.
    dc2c:	00000000 00000021 00210000 00000000     ....!.....!.....
    dc3c:	00000000 00880004 00000000 000000c4     ................
    dc4c:	00a40000 00000000 00000098 00000000     ................
	...
    dc70:	00040000 00000048 00840000 00000000     ....H...........
    dc80:	00000094 00680000 00000000 00000000     ......h.........
	...
    dca4:	00080003 00000000 00000004 00020000     ................
	...
    dcd4:	00070000 00ff00e0 00000001 00000020     ............ ...
    dce4:	00200000 00000000 00000020 00200000     .. ..... ..... .
    dcf4:	00e00000 0000001f 00200000 00000000     .......... .....
    dd04:	00000000 00780007 00000000 000000fc     ......x.........
    dd14:	00fc0000 00000000 007f00fc 00040000     ................
    dd24:	00000000 007f00fc 00040000 00000000     ................
    dd34:	00000000 00020000 00000000 00800000     ................
	...
    dd6c:	00000003 00020000 00400000 00000002     ..........@.....
    dd7c:	00010080 00000000 00000000 00000000     ................
	...
    dd9c:	00020000 00000008 00fc0000 00000000     ................
	...
    ddd0:	00380004 00000001 00010044 00440000     ..8.....D.....D.
    dde0:	00000001 00010038 00000000 00000000     ....8...........
	...
    de00:	00070000 00110000 00000000 0000000a     ................
    de10:	00040000 00000000 00000000 00110000     ................
    de20:	00000000 0000000a 00040000 00000000     ................
    de30:	00000000 00080008 00000010 000800fc     ................
    de40:	00000000 00000004 00020000 00000000     ................
    de50:	00000001 00000080 00400000 00000018     ..........@.....
    de60:	00140020 00080000 00100008 00fc0000      ...............
    de70:	00000008 00040000 00000000 00000002     ................
    de80:	00010000 00800000 00000000 00220040     ............@.".
    de90:	00200000 00000031 00480008 00000010     .. .1.....H.....
    dea0:	00080084 00940000 00000004 00020068     ............h...
    deb0:	00000000 00000001 00000080 00400000     ..............@.
    dec0:	00000018 00140020 00000000 4f435654     .... .......TVCO
    ded0:	00000000 3a4d5750 00000000 00000000     ....PWM:........
    dee0:	62726143 6d206e6f 786f6e6f 00656469     Carbon monoxide.
	...
    def8:	7274694e 6e65676f 6f696420 65646978     Nitrogen dioxide
	...

0000df10 <IMAGE_DATA>:
    df10:	ffffffff ffffffff ffff1ffe ffffffff     ................
    df20:	ffffffe1 ffffffff ffffffff 1ffeffff     ................
    df30:	ffffffff ffe1ffff ffffffff ffffffff     ................
    df40:	ffffffff ffff1ffe ffffffff ffffffe1     ................
    df50:	ffffffff ffffffff 1ffeffff ffffffff     ................
    df60:	ffe1ffff ffffffff ffffffff ffffffff     ................
    df70:	ffff1ffe ffffffff ffffffe1 ffffffff     ................
    df80:	ffffffff 1ffeffff ffffffff ffe1ffff     ................
    df90:	ffffffff ffffffff ffffffff ffff1ffe     ................
    dfa0:	ffffffff ffffffe1 ffffffff ffffffff     ................
    dfb0:	1ffeffff ffffffff ffe1ffff ffffffff     ................
    dfc0:	ffffffff ffffffff ffff1ffe ffffffff     ................
    dfd0:	ffffffe1 ffffffff ffffffff 1ffeffff     ................
    dfe0:	ffffffff ffe1ffff ffffffff ffffffff     ................
    dff0:	ffffffff 00801ffe 03000000 ffffffe1     ................
    e000:	ffffffff ffffffff 1ffeffff 00000080     ................
    e010:	ffe10300 ffffffff ffffffff ffffffff     ................
    e020:	00801ffe 03000000 ffffffe1 ffffffff     ................
    e030:	ffffffff 1ffeffff 00000080 ffe10300     ................
    e040:	ffffffff ffffffff ffffe0ff 00801ffe     ................
    e050:	03000000 ffffffe1 ffffffff 80ffffff     ................
    e060:	1ffeff1f ffffff83 ffe183ff ffffffff     ................
    e070:	ffffffff ff0f00fe ff831ffe 83ffffff     ................
    e080:	ffffffe1 ffffffff 0efcffff 1ffeff07     ................
    e090:	ffffff83 ffe183ff ffffffff ffffffff     ................
    e0a0:	ff833ff8 ff831ffe 83ffffff ffffffe1     .?..............
    e0b0:	ffffffff 7ff0ffff 1ffeffe1 ffffff83     ................
    e0c0:	ffe183ff ffffffff ffffffff fff1ffc0     ................
    e0d0:	ff831ffe 830100c0 ffffffe1 ffffffff     ................
    e0e0:	ff01ffff 1ffefff1 00000083 ffe18301     ................
    e0f0:	ffffffff fcffffff fff0ff01 00831ffe     ................
    e100:	83010000 ffffffe1 ffffffff ff03f0ff     ................
    e110:	1ffefff0 00000083 ffe18301 ffffffff     ................
    e120:	f0ffffff fff0ff7f 00831ffe 83010000     ................
    e130:	ffffffe1 ffffffff ffffe0ff 1ffefff0     ................
    e140:	ffff0183 ffe183ff ffffffff c3ffffff     ................
    e150:	fff0ffff 00831ffe 83ffff3f ffffffe1     ........?.......
    e160:	ffffffff ffffc7ff 1ffefff0 ff070083     ................
    e170:	ffe183ff ffffffff 87ffffff fff0ffff     ................
    e180:	e0831ffe 83ff7f00 ffffffe1 ffffffff     ................
    e190:	ffff8fff 1ffefff0 0f00fe83 ffe183ff     ................
    e1a0:	ffffffff 8fffffff fff0ffff ff831ffe     ................
    e1b0:	83ff03e0 ffffffe1 ffffffff ffff8fff     ................
    e1c0:	1ffefff0 03feff83 ffe183ff ffffffff     ................
    e1d0:	8fffffff fff0ffff ff831ffe 83ff03e0     ................
    e1e0:	ffffffe1 ffffffff ffff8fff 1ffefff0     ................
    e1f0:	0300fe83 ffe183ff ffffffff 8fffffff     ................
    e200:	fff0ffff e0831ffe 83ff1f00 ffffffe1     ................
    e210:	ffffffff ffff87ff 1ffefff0 ff010083     ................
    e220:	ffe183ff ffffffff 87ffffff fff0ffff     ................
    e230:	00831ffe 83ffff1f ffffffe1 ffffffff     ................
    e240:	ffffc3ff 1ffefff0 ffff0083 ffe183ff     ................
    e250:	ffffffff c1f9ffff fff0ffff 00831ffe     ................
    e260:	831f0000 ffffffe1 ffffffff ffffe0fc     ................
    e270:	1ffefff0 00000083 ffe18301 ffffffff     ................
    e280:	70fcffff fff0ff1f 00831ffe 83010000     ...p............
    e290:	ffffffe1 ffffffff ff1f38fe 1ffefff0     .........8......
    e2a0:	00000083 ffe18301 ffffffff 3effffff     ...............>
    e2b0:	fff0ff1f ff831ffe 830100c0 ffffffe1     ................
    e2c0:	ffffffff ff1fbeff 1ffefff0 ffffff83     ................
    e2d0:	ffe183ff ffffffff be3fffff fff0ff1f     ..........?.....
    e2e0:	ff831ffe 83ffffff ffffffe1 ffffffff     ................
    e2f0:	ff1f1e0f 1ffefff0 ffffff83 ffe183e1     ................
    e300:	ffffffff 0e82ffff fff0ff1f ff831ffe     ................
    e310:	8301ffff ffffffe1 ffffffff ff1f1ee0     ................
    e320:	1ffefff0 f0ffff83 ffe18301 ffffffff     ................
    e330:	3ffcffff fff0ff0f ff831ffe 830180ff     ...?............
    e340:	ffffffe1 ffffffff ff073ffc 1ffefff0     .........?......
    e350:	00f8ff83 ffe18301 ffffffff 7ffcffff     ................
    e360:	fff0ff81 ff831ffe 830100c0 ffffffe1     ................
    e370:	ffffffff 0fc07ff8 1ffefff0 0000fc83     ................
    e380:	ffe18307 ffffffff 7f00fcff fff01fe0     ................
    e390:	e0831ffe 837f0000 ffffffe1 fcffffff     ................
    e3a0:	1ffc7f00 1ffefff0 00000083 ffe1837f     ................
    e3b0:	ff3ffeff 7ffcffff fff01ffe 00831ffe     ..?.............
    e3c0:	837f7000 fcffffe1 ffffff1f 1ffe3ffc     .p...........?..
    e3d0:	1ffefff0 f0070083 ffe1837f ff1ffcff     ................
    e3e0:	1ffcffff fff11fff 00831ffe 837ff07f     ................
    e3f0:	feffffe1 ffffff3f 0fff0ff8 1ffeffe1     ....?...........
    e400:	f0ff0783 ffe1837f ffffffff 01f0ffff     ................
    e410:	ffc1830f 00831ffe 837ff07f ffffffe1     ................
    e420:	ffffffff 800780c3 1ffeff03 f00f0083     ................
    e430:	ffe1837f ffffffff c08fffff ff07c003     ................
    e440:	00831ffe 837ff000 ffffffe1 ffffffff     ................
    e450:	f019c09f 1ffeff1f 10008083 ffe1837f     ................
    e460:	ffffffff 9effffff ff7ffc7c f0831ffe     ........|.......
    e470:	837f0000 ffffffe1 ffffffff 7f7c9fff     ..............|.
    e480:	1ffeffff 0000fe83 ffe1833f ffffffff     ........?.......
    e490:	3fffffff ffff7f7e ff831ffe 830300e0     ...?~...........
    e4a0:	ffffffe1 ffffffff 3f7f3fff 1ffeffff     .........?.?....
    e4b0:	00fcff83 ffe18301 ff1f0000 7ffeffff     ................
    e4c0:	ffffbf3f ff831ffe 8301c0ff 0000ffe1     ?...............
    e4d0:	ffffff1f ff3fffff 1ffeffff f8ffff83     ......?.........
    e4e0:	ffe18301 ff7ffcf8 ffffffff ffffff3f     ............?...
    e4f0:	ff831ffe 8301ffff fef9ffe1 ffffff3f     ............?...
    e500:	ffffffff 1ffeffff ffffff83 ffe183f1     ................
    e510:	ff3ffff9 ffffffff ffffffff ff831ffe     ..?.............
    e520:	83ffffff fff9ffe1 ffffff9f ffffffff     ................
    e530:	1ffeffff ffffff83 ffe183ff ff9ffff9     ................
    e540:	ffffffff ffffffff ff831ffe 83ffffff     ................
    e550:	fffcffe1 ffffff9f ffffffff 1ffeffff     ................
    e560:	ffffff83 ffe183ff ff1f7ffc ffffffff     ................
    e570:	ffffffff 00801ffe 03000000 00feffe1     ................
    e580:	ffffff3f ffffffff 1ffeffff 00000080     ?...............
    e590:	ffe10300 ff7f00ff ffffffff ffffffff     ................
    e5a0:	00801ffe 03000000 ffffffe1 ffffffff     ................
    e5b0:	ffffffff 1ffeffff 00000080 ffe10300     ................
    e5c0:	ffffffff ffffffff ffffffff 00801ffe     ................
    e5d0:	03000000 ffffffe1 ffffffff ffffffff     ................
    e5e0:	1ffeffff ffffffff ffe1ffff ffffffff     ................
	...
    e5f8:	ffff1f00 ffffffff 07ffffe1 0000ffff     ................
    e608:	00000000 1f000000 ffffffff ffe1ffff     ................
    e618:	ffbf07fe 00000000 00000000 ffff1f00     ................
    e628:	ffffffff 67fcffe1 0000ff9f 00000000     .......g........
    e638:	1f000000 ffffffff ffe1ffff ff9fe7f8     ................
    e648:	ffffffff ffffffff ffff1ffe ffffffff     ................
    e658:	e7f9ffe1 ffffff9f ffffffff 1ffeffff     ................
    e668:	ffffffff ffe1ffff ff9fe7f9 ffffffff     ................
    e678:	ffffffff ffff1ffe ffffffff e7f9ffe1     ................
    e688:	ffffff9f ffffffff 1ffeffff ffffffff     ................
    e698:	ffe1ffff ff1fe7f9 ffffffff ffffffff     ................
    e6a8:	ffff1ffe ffffffff e7fcffe1 f8ffff3f     ............?...
    e6b8:	ffffff03 1ffeffff ffffffff ffe1ffff     ................
    e6c8:	ff3f00fc ff01f0ff ffffffff ffff1ffe     ..?.............
    e6d8:	ffffffff 00feffe1 c1ffff7f ffff3fe0     .............?..
    e6e8:	1ffeffff ffffffff ffe1ffff ffff81ff     ................
    e6f8:	1ffe0fff ffffffff ffff1ffe ffffffff     ................
    e708:	ffffffe1 3ffeffff ffff07ff 1ffeffff     .......?........
    e718:	ffffffff ffe1ffff ffffffff 836338fc     .............8c.
    e728:	ffffffff ffff1ffe ffffffff 1f80ffe1     ................
    e738:	70f8ffff ffffc131 1ffeffff ffffffff     ...p1...........
    e748:	ffe1ffff ff1f0080 c13060f0 ffffffff     .........`0.....
    e758:	fcff1ffe ffff0300 fcffffe1 60e0ff1f     ...............`
    e768:	ffff4030 1ffeffff 0000c0ff ffe1ff7f     0@..............
    e778:	ff1ffeff 603060e0 01000000 00ff1ffe     .....`0`........
    e788:	ff1f0000 f0ffffe1 70c0ff7f 00006030     ...........p0`..
    e798:	1ffe0100 000000fe ffe1ff07 ffff83ff     ................
    e7a8:	607030c0 01000000 00fc1ffe ff030000     .0p`............
    e7b8:	1ffeffe1 3f80ffff 000060e0 1ffe0100     .......?.`......
    e7c8:	fc3f00f8 ffe1ff01 ffff0ffe 00c01f80     ..?.............
    e7d8:	01000000 18f01ffe ff80ff1f c1ffffe1     ................
    e7e8:	0380ffff 00000000 1ffe0100 ff0f7ce0     .............|..
    e7f8:	ffe1ffe0 ff3ff8ff 00000080 01f0ff1f     ......?.........
    e808:	fee01ffe 7ff0ff07 ffffffe1 0080ff1f     ................
    e818:	ff1f0000 1ffe01e0 ff07ffe1 ffe17ff8     ................
    e828:	ff1f00e0 00000080 01c0ff1f ffc11ffe     ................
    e838:	7ff8ff03 0080ffe1 0780ff1f ff1f00fc     ................
    e848:	1ffe0180 ff81ffc3 ffe13ffc ffffff83     .........?......
    e858:	00ff1f80 0100ff1f ffc31ffe 3ffcffc0     ...............?
    e868:	ffffffe1 3c80ffff fe1f8067 1ffe8100     .......<g.......
    e878:	ffe0ffc3 ffe13ffc ffffffff c0213080     .....?.......0!.
    e888:	8101fc1f ffc31ffe 3ffc7fe0 ffffffe1     ...........?....
    e898:	60c0ffff f83fc030 1ffe8103 3ff0ffc3     ...`0.?........?
    e8a8:	ffe13ffc ffffffff c03060c0 810ff07f     .?.......`0.....
    e8b8:	ffe11ffe 3ff83ff8 ffffffe1 60c0ffff     .....?.?.......`
    e8c8:	e07f6030 1ffe811f 1ffcffe1 ffe17ff8     0`..............
    e8d8:	ffffffff 603060e0 813fc0ff ffe01ffe     .....`0`..?.....
    e8e8:	7ff00ffc ffffffe1 30e0ffff 80ff6070     ...........0p`..
    e8f8:	1ffe817f 07fe7ff0 ffe17fc0 ffffffff     ................
    e908:	61e038f0 81ff00fe 1ff01ffe ff8007ff     .8.a............
    e918:	ffffffe1 1ff8ffff 01fc61e0 1ffe81ff     .........a......
    e928:	00ff03f8 ffe1ff01 ffffffff 00800ffc     ................
    e938:	81ff03f8 00fc1ffe ff010000 ffffffe1     ................
    e948:	00feffff 07700000 1ffe81ff 000000fe     ......p.........
    e958:	ffe1ff07 ffffffff 000000ff 81ff0f20     ............ ...
    e968:	80ff1ffe ff0f0000 ffffffe1 80ffffff     ................
    e978:	1f006000 1ffe81ff 0000e0ff ffe1ff3f     .`..........?...
    e988:	ffffffff f00180ff 81ff3f00 fcff1ffe     .........?......
    e998:	ffff0300 ffffffe1 81ffffff ff00f8ff     ................
    e9a8:	1ffe81ff ffffffff ffe1ffff ffffffff     ................
    e9b8:	fcff81ff 81ffff01 ffff1ffe ffffffff     ................
    e9c8:	ffffffe1 81ffffff ff01feff 1ffe81ff     ................
    e9d8:	ffffffff ffe1ffff ffffffff feff81ff     ................
    e9e8:	81ffff01 ffff1ffe ffffffff c0ffffe1     ................
    e9f8:	81ffffff ff00ffff 1ffe81ff ffffffff     ................
    ea08:	ffe1ffff ff3f809f ffff81ff 81ff7f80     ......?.........
    ea18:	ffff1ffe ffffffff 9e9fffe1 81ffff3f     ............?...
    ea28:	3fc0ffff 1ffe81ff 0300fcff ffe1ffff     ...?............
    ea38:	ff1f3f9f ffff81ff 81ff1fe0 c0ff1ffe     .?..............
    ea48:	ff7f0000 3f9fffe1 81ffff9f 0ff0ffff     .......?........
    ea58:	1ffe81ff 000000ff ffe1ff1f ff9f3f9f     .............?..
    ea68:	ffff81ff 81ff0ff8 00fe1ffe ff070000     ................
    ea78:	3fcfffe1 81ffff9f 07fcffff 1ffe81ff     ...?............
    ea88:	000000fc ffe1ff03 ff9f3fcf ffff81ff     .........?......
    ea98:	81ff03fe 00f81ffe ff01fc3f 9fe3ffe1     ........?.......
    eaa8:	81ffff3f 03feffff 1ffe81ff ff1f18f0     ?...............
    eab8:	ffe1ff80 ff3f00f0 ffff81ff 81ff03fc     ......?.........
    eac8:	7ce01ffe ffe0ff0f 00f8ffe1 81ffff7f     ...|............
    ead8:	07f8ffff 1ffe81ff ff07fee0 ffe17ff0     ................
    eae8:	ffff03ff ffff81ff 81ff0ff0 ffe11ffe     ................
    eaf8:	7ff8ff07 ffffffe1 81ffffff 1fe0ffff     ................
    eb08:	1ffe81ff ff03ffc1 ffe17ff8 ffffffff     ................
    eb18:	ffff81ff 81ff3fc0 ffc31ffe 3ffcff81     .....?.........?
    eb28:	ffffffe1 81ffffff 7fc0ffff 1ffe81ff     ................
    eb38:	ffc0ffc3 ffe13ffc ff9fffff ffff81ff     .....?..........
    eb48:	81ffff80 ffc31ffe 3ffcffe0 ffffffe1     ...........?....
    eb58:	81ffff9f ff01ffff 1ffe81ff 7fe0ffc3     ................
    eb68:	ffe13ffc ff9fffff feff81ff 81ffff01     .?..............
    eb78:	ffc31ffe 3ffc3ff0 ffffffe1 81ffff9f     .....?.?........
    eb88:	ff01fcff 1ffe81ff 3ff8ffe1 ffe13ff8     ...........?.?..
    eb98:	ff1f0080 f8ff81ff 81ffff00 ffe11ffe     ................
    eba8:	7ff81ffc 0080ffe1 81ffff1f 7f00f0ff     ................
    ebb8:	1ffe81ff 0ffcffe0 ffe17ff0 ff1f0080     ................
    ebc8:	e0ff81ff 81ff3f00 7ff01ffe 7fc007fe     .....?..........
    ebd8:	ffdfffe1 81ffff9f 1f00e0ff 1ffe81ff     ................
    ebe8:	07ff1ff0 ffe1ff80 ff9fffcf c0ff81ff     ................
    ebf8:	81ff0f70 03f81ffe ff0100ff ffe7ffe1     p...............
    ec08:	81ffff9f 07f880ff 1ffe81ff 000000fc     ................
    ec18:	ffe1ff01 ff9fffe7 01ff81ff 81ff01fc     ................
    ec28:	00fe1ffe ff070000 fff7ffe1 81ffff9f     ................
    ec38:	00fe01fe 1ffe81ff 000080ff ffe1ff0f     ................
    ec48:	ffffffff 03fc81ff 817f00ff e0ff1ffe     ................
    ec58:	ff3f0000 ffffffe1 81ffffff 80ff07f8     ..?.............
    ec68:	1ffe813f 0300fcff ffe1ffff ffffffff     ?...............
    ec78:	0ff081ff 811fc0ff ffff1ffe ffffffff     ................
    ec88:	ffffffe1 81ffffff e0ff1fe0 1ffe810f     ................
    ec98:	ffffffff ffe1ffff ffffffff 3fe081ff     ...............?
    eca8:	8107f0ff ffff1ffe ffffffff ffffffe1     ................
    ecb8:	81ffffff fcff7fc0 1ffe8103 ffffffff     ................
    ecc8:	ffe1ffff ffffffff ff8081ff 8101feff     ................
    ecd8:	ffff1ffe ffffffff ffffffe1 81ffffff     ................
    ece8:	ffffff00 1ffe8100 ffffffff ffe1ffff     ................
    ecf8:	ffffffff ff0180ff 0180ffff ffff1ffe     ................
    ed08:	ffffffff ffffffe1 80ffffff ffffff03     ................
    ed18:	1ffe01c0 ffffffff ffe1ffff ffffffff     ................
    ed28:	ff0780ff 01e0ffff ffff1ffe ffffffff     ................
    ed38:	ffffffe1 80ffffff ffffff0f 1ffe01f0     ................
    ed48:	ffffffff ffe1ffff ffffffff ff0f80ff     ................
    ed58:	01f0ffff ffff1ffe ffffffff ffffffe1     ................
    ed68:	80ffffff 00000000 1ffe0100 ffffffff     ................
    ed78:	ffe1ffff ffffffff 000080ff 01000000     ................
    ed88:	ffff1ffe ffffffff ffffffe1 80ffffff     ................
    ed98:	00000000 1ffe0100 ffffffff ffe1ffff     ................
    eda8:	ffffffff 000080ff 01000000 ffff1ffe     ................
    edb8:	ffffffff ffffffe1 80ffffff 00000000     ................
    edc8:	1ffe0100 ff7ffcff ffe1fff1 ffe7fff9     ................
    edd8:	ffffffff ffffffff f0ff1ffe 7fc0ff1f     ................
    ede8:	fff9ffe1 ffffffc3 ffffffff 1ffeffff     ................
    edf8:	ff1ff0ff ffe17fc0 ff810ff8 ffffffff     ................
    ee08:	ffffffff e0ff1ffe 3f80ff0f 07f8ffe1     ...........?....
    ee18:	ffffff99 ffffffff 1ffeffff ff0fe0ff     ................
    ee28:	ffe13f80 ff9ce7f8 ffffffff ffffffff     .?..............
    ee38:	e0ff1ffe 3f80ff0f f3f9ffe1 ffffff9c     .......?........
    ee48:	ffffffff 1ffeffff ff1ff0ff ffe17fc0     ................
    ee58:	ff9cf3f9 ffffffff ffffffff f0ff1ffe     ................
    ee68:	7fc0ff1f f3f9ffe1 ffffff9c ffffffff     ................
    ee78:	1ffeffff ff7ffcff ffe1fff1 ff9cf3f9     ................
    ee88:	ffffffff ffffffff ffff1ffe ffffffff     ................
    ee98:	e7fcffe1 ffffff9c ffffffff 1ffeffff     ................
    eea8:	ffffffff ffe1ffff ff0900fc ffffffff     ................
    eeb8:	ffffffff ffff1ffe ffffffff 08feffe1     ................
    eec8:	ffffff01 ffffffff 1ffeffff ffffffff     ................
    eed8:	ffe1ffff ff61fcff ffffffff ffffffff     ......a.........
    eee8:	ffff1ffe ffffffff ffffffe1 ffffffff     ................
    eef8:	ffffffff 1ffeffff ffffffff ffe1ffff     ................
    ef08:	ffffffff 00000000 00000000 ffff1f00     ................
    ef18:	ffffffff ffffffe1 0000ffff 00000000     ................
    ef28:	1f000000 ffffffff ffe1ffff ffffffff     ................
	...
    ef40:	ffff1f00 ffffffff 00f8ffe1 0000ff1f     ................
    ef50:	00000000 1f000000 ffffffff ffe1ffff     ................
    ef60:	ff1f00f8 ffffffff ffffffff ffff1ffe     ................
    ef70:	ffffffff feffffe1 ffffff7f ffffffff     ................
    ef80:	1ffeffff ffffffff ffe1ffff ff3fffff     ..............?.
    ef90:	ffffffff ffffffff ffff1ffe ffffffff     ................
    efa0:	ffffffe1 ffffff9f ffffffff 1ffeffff     ................
    efb0:	ffffffff ffe1ffff ff9fffff ffffffff     ................
    efc0:	ffffffff ffff1ffe ffffffff ffffffe1     ................
    efd0:	ffffff9f ffffffff 1ffeffff 0300fcff     ................
    efe0:	ffe1ffff ff9fffff ffffffff ffffffff     ................
    eff0:	c0ff1ffe ff7f0000 fcffffe1 ffffff1f     ................
    f000:	ffffffff 1ffeffff 000000ff ffe1ff1f     ................
    f010:	ff3f00f8 ffffffff ffffffff 00fe1ffe     ..?.............
    f020:	ff070000 00f8ffe1 ffffffff ffffffff     ................
    f030:	1ffeffff 000000fc ffe1ff03 ffffffff     ................
    f040:	f0ffffff 01000000 00f81ffe ff01fc3f     ............?...
    f050:	ffffffe1 ffffffff 000080ff 1ffe0100     ................
    f060:	ff1f18f0 ffe1ff80 ffdfffff 00feffff     ................
    f070:	01000000 7ce01ffe ffe0ff0f feffffe1     .......|........
    f080:	ffffff1f 000000f8 1ffe0100 ff07fee0     ................
    f090:	ffe17ff0 ff1ff0ff 00f0ffff 01000000     ................
    f0a0:	ffe11ffe 7ff8ff07 80ffffe1 ffffff7f     ................
    f0b0:	800000c0 1ffe0100 ff03ffc1 ffe17ff8     ................
    f0c0:	ffff01fc 0080ffff 0100e003 ffc31ffe     ................
    f0d0:	3ffcff81 39e0ffe1 ffffffff f80f0000     ...?...9........
    f0e0:	1ffe0100 ffc0ffc3 ffe13ffc fffff981     .........?......
    f0f0:	0000feff 0100fe3f ffc31ffe 3ffcffe0     ....?..........?
    f100:	f98fffe1 fcffffff ffff0000 1ffe01e0     ................
    f110:	7fe0ffc3 ffe13ffc fffff987 0300f8ff     .....?..........
    f120:	01f00ffc ffc31ffe 3ffc3ff0 f980ffe1     .........?.?....
    f130:	f0ffffff 03f00f00 1ffe01f0 3ff8ffe1     ...............?
    f140:	ffe13ff8 ffff19f0 1f00f0ff 01f800f0     .?..............
    f150:	ffe11ffe 7ff81ffc 01feffe1 e0ffffff     ................
    f160:	00f01f00 1ffe01fc 0ffcffe0 ffe17ff0     ................
    f170:	ff3fc0ff 0f00e0ff 010000f8 7ff01ffe     ..?.............
    f180:	7fc007fe f8ffffe1 c0ffff1f 00fe0300     ................
    f190:	1ffe0100 07ff1ff0 ffe1ff80 ff9fffff     ................
    f1a0:	0000c0ff 010080ff 03f81ffe ff0100ff     ................
    f1b0:	ffffffe1 80ffffff e03f0000 1ffe0100     ..........?.....
    f1c0:	000000fc ffe1ff01 ffffffff 000080ff     ................
    f1d0:	0100fc07 00fe1ffe ff070000 ffffffe1     ................
    f1e0:	80ffffff fc030000 1ffe0100 000080ff     ................
    f1f0:	ffe1ff0f ffffffff c01f00ff 0100fc03     ................
    f200:	e0ff1ffe ff3f0000 ffffffe1 00ffffff     ......?.........
    f210:	fc03c00f 1ffe0100 0300fcff ffe1ffff     ................
    f220:	ffffffff f80700ff 0100f01f ffff1ffe     ................
    f230:	ffffffff ffffffe1 00ffffff 003ffe03     ..............?.
    f240:	1ffe0100 ffffffff ffe1ffff ffffffff     ................
    f250:	ff0100ff 010000fe ffff1ffe ffffffff     ................
    f260:	ffffffe1 00ffffff 00fe1f00 1ffe0100     ................
    f270:	ffffffff ffe1ffff ffffffff 030000ff     ................
    f280:	010000fe ffff1ffe ffffffff ffffffe1     ................
    f290:	00ffffff 80ff0000 1ffe0100 ffffffff     ................
    f2a0:	ffe1ffff ffffffff 000000ff 0100e03f     ............?...
    f2b0:	ffff1ffe 7ff0ffff ffffffe1 00ffffff     ................
    f2c0:	fc1f0000 1ffe0100 ffffffff ffe17ff0     ................
    f2d0:	ffffffff 000000ff 0100fc1f ffff1ffe     ................
    f2e0:	7ff0ffff ffffffe1 00ffffff fc1f0000     ................
    f2f0:	1ffe0100 ffffffff ffe17ff0 ffffffff     ................
    f300:	000000ff 0100e0ff ffff1ffe 7ff0ffff     ................
    f310:	ffffffe1 00ffffff 00ff0700 1ffe0100     ................
    f320:	ffffffff ffe17ff0 ffffffff 1f0000ff     ................
    f330:	010000fc ffff1ffe 7ff0ffff ffffffe1     ................
    f340:	00ffffff 00f01f00 1ffe0300 ffffffff     ................
    f350:	ffe17ff0 ffffffff 1f0000ff 030000f0     ................
    f360:	00e01ffe 7f000000 ffffffe1 00ffffff     ................
    f370:	00f00f00 1ffe0300 000000e0 ffe17f00     ................
    f380:	ffffffff 010000ff 070000fe 00e01ffe     ................
    f390:	7f000000 ffffffe1 00ffffff c03f0000     ..............?.
    f3a0:	1ffe0700 000000e0 ffe17f00 ffffffff     ................
    f3b0:	000000ff 0f00f83f 00e01ffe 7f000000     ....?...........
    f3c0:	ffffffe1 00ffffff fc3f0000 1ffe0f00     ..........?.....
    f3d0:	000000e0 ffe17f00 ffffffff 000000ff     ................
    f3e0:	1f00fc7f fff01ffe 7ff0ffff ffffffe1     ................
    f3f0:	00ffffff f8ff0300 1ffe3f00 ffff7ff8     .........?......
    f400:	ffe17ff0 ffffffff 0f0000ff 3f00c0ff     ...............?
    f410:	3ff81ffe 7ff0ffff ffffffe1 00ffffff     ...?............
    f420:	00fe1f00 1ffe7f00 ffff3ffc ffe17ff0     .........?......
    f430:	ffffffff 1f0000ff ff0000f0 1ffc1ffe     ................
    f440:	7ff0ffff ffffffe1 00ffffff 00801f00     ................
    f450:	1ffeff01 ffff0ffe ffe17ff0 ffffffff     ................
    f460:	1c0000ff ff030000 0ffe1ffe 7ff0ffff     ................
    f470:	ffffffe1 00ffffff 00000000 1ffeff07     ................
    f480:	ffff07ff ffe17ff0 ffffffff 000000ff     ................
    f490:	ff1f0000 83ff1ffe 7ff0ffff ffffffe1     ................
    f4a0:	00ffffff 00000000 1ffeff3f ffff87ff     ........?.......
    f4b0:	ffe17ff0 ffffffff 000000ff ffff0000     ................
    f4c0:	dfff1ffe ffffffff ffffffe1 00ffffff     ................
    f4d0:	03000000 1ffeffff ffffffff ffe1ffff     ................
    f4e0:	ffffffff 000000ff ffff1f00 ffff1ffe     ................
    f4f0:	ffffffff ffffffe1 ffffffff ffffffff     ................
    f500:	1ffeffff ffffffff ffe1ffff ffffffff     ................
    f510:	ffffffff ffffffff ffff1ffe ffffffff     ................
    f520:	ffffffe1 ffffffff ffffffff 1ffeffff     ................
    f530:	ffffffff ffe1ffff ffffffff ffffffff     ................
    f540:	ffffffff ffff1ffe ffffffff ffffffe1     ................
    f550:	ffffffff ffffffff 1ffeffff ffffffff     ................
    f560:	ffe1ffff ffffffff ffffffff ffffffff     ................
    f570:	ffff1ffe ffffffff ffffffe1 ffffffff     ................
    f580:	ffffffff 1ffeffff ffffffff ffe1ffff     ................
    f590:	ffffffff ffffffff ffffffff ffff1ffe     ................
    f5a0:	ffffffff ffffffe1 ffffffff ffffffff     ................
    f5b0:	1ffeffff ffffffff ffe1ffff ffffffff     ................

0000f5c0 <_ZL17AQI_INDEXES_PM2_5>:
	...
    f5cc:	40280000 00000000 00000000 00000000     ..(@............
    f5dc:	40490000 33333333 40283333 33333333     ..I@333333(@3333
    f5ec:	4041b333 00000000 40498000 00000000     3.A@......I@....
    f5fc:	40590000 00000000 4041c000 33333333     ..Y@......A@3333
    f60c:	404bb333 00000000 40594000 00000000     3.K@.....@Y@....
    f61c:	4062c000 00000000 404bc000 cccccccd     ..b@......K@....
    f62c:	4062cccc 00000000 4062e000 00000000     ..b@......b@....
    f63c:	40690000 00000000 4062d000 cccccccd     ..i@......b@....
    f64c:	406f4ccc 00000000 40692000 00000000     .Lo@..... i@....
    f65c:	4072c000 00000000 406f5000 66666666     ..r@.....Po@ffff
    f66c:	4075e666 00000000 4072d000 00000000     f.u@......r@....
    f67c:	40790000 00000000 4075e800 66666666     ..y@......u@ffff
    f68c:	407f4666 00000000 40791000 00000000     fF.@......y@....
    f69c:	407f4000                                .@.@

0000f6a0 <_ZL16AQI_INDEXES_PM10>:
    f6a0:	00360000 00320000 009a0037 00640033     ..6...2.7...3.d.
    f6b0:	00fe009b 00960065 016200ff 00c80097     ....e.....b.....
    f6c0:	01a80163 012c00c9 01f801a9 0190012d     c.....,.....-...
    f6d0:	025c01f9 01f40191                       ..\.....

0000f6d8 <_ZL12AQI_CATEGORY>:
    f6d8:	0000f79c 0000f7a4 0000f7b0 0000f7b0     ................
    f6e8:	0000f7bc 0000f71c 0000f71c 3a33484e     ............NH3:
	...
    f700:	003a4f43 00000000 00000000 3a324f4e     CO:.........NO2:
	...
    f718:	001c4d42 617a6148 756f6472 00000073     BM..Hazardous...
    f728:	696c6143 74617262 206e6f69 706d6f43     Calibration Comp
    f738:	6574656c 00000021 00006150 3a324f43     lete!...Pa..CO2:
    f748:	00000000 00004d50 3a302e31 00000000     ....PM..1.0:....
    f758:	3a352e32 00000000 50495141 0000004d     2.5:....AQIPM...
    f768:	00003a20 4f545541 00000000 4847494e      :..AUTO....NIGH
    f778:	00000054 554e414d 00004c41 3a4d5052     T...MANUAL..RPM:
    f788:	00000000 6f6d6d41 2061696e 6d707028     ....Ammonia (ppm
    f798:	00000029 646f6f47 00000000 65646f4d     )...Good....Mode
    f7a8:	65746172 00000000 65686e55 68746c61     rate....Unhealth
    f7b8:	00000079 79726556 686e5520 746c6165     y...Very Unhealt
    f7c8:	00007968 00776f70                       hy..pow.

0000f7d0 <TWO52>:
    f7d0:	00000000 43300000 00000000 c3300000     ......0C......0.
    f7e0:	000065a0 00006570 00006582 000064c4     .e..pe...e...d..
    f7f0:	00006582 00006566 00006582 000064c4     .e..fe...e...d..
    f800:	00006570 00006570 00006566 000064c4     pe..pe..fe...d..
    f810:	000064cc 000064cc 000064cc 00006588     .d...d...d...e..
    f820:	00006570 00006570 00006544 00006628     pe..pe..De..(f..
    f830:	00006544 00006566 00006544 00006628     De..fe..De..(f..
    f840:	00006570 00006570 00006566 00006628     pe..pe..fe..(f..
    f850:	000064cc 000064cc 000064cc 00006632     .d...d...d..2f..
    f860:	000072c0 000072a2 0000725c 0000717a     .r...r..\r..zq..
    f870:	0000725c 00007294 0000725c 0000717a     \r...r..\r..zq..
    f880:	000072a2 000072a2 00007294 0000717a     .r...r...r..zq..
    f890:	00007172 00007172 00007172 000074d8     rq..rq..rq...t..
    f8a0:	00007b20 000079e0 000079e0 000079dc      {...y...y...y..
    f8b0:	00007af8 00007af8 00007aea 000079dc     .z...z...z...y..
    f8c0:	00007af8 00007aea 00007af8 000079dc     .z...z...z...y..
    f8d0:	00007b00 00007b00 00007b00 00007d04     .{...{...{...}..

0000f8e0 <_global_impure_ptr>:
    f8e0:	200000b0                                ... 

0000f8e4 <_init>:
    f8e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f8e6:	46c0      	nop			; (mov r8, r8)
    f8e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    f8ea:	bc08      	pop	{r3}
    f8ec:	469e      	mov	lr, r3
    f8ee:	4770      	bx	lr

0000f8f0 <__init_array_start>:
    f8f0:	00008dc9 	.word	0x00008dc9

0000f8f4 <__frame_dummy_init_array_entry>:
    f8f4:	000000dd 0000486d                       ....mH..

0000f8fc <_fini>:
    f8fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f8fe:	46c0      	nop			; (mov r8, r8)
    f900:	bcf8      	pop	{r3, r4, r5, r6, r7}
    f902:	bc08      	pop	{r3}
    f904:	469e      	mov	lr, r3
    f906:	4770      	bx	lr

0000f908 <__fini_array_start>:
    f908:	000000b5 	.word	0x000000b5
